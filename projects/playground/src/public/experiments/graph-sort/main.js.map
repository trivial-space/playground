{"version":3,"sources":["webpack:///./shared-utils/scheduler.ts","webpack:///../libs/dist/events/keyboard.js","webpack:///../libs/dist/utils/object.js","webpack:///../painter/dist/contants.js","webpack:///../painter/dist/asset-lib.js","webpack:///../painter/dist/render-utils.js","webpack:///../painter/dist/form.js","webpack:///../libs/dist/utils/sequence.js","webpack:///../painter/dist/texture.js","webpack:///../painter/dist/render-target.js","webpack:///../libs/dist/utils/predicates.js","webpack:///../painter/dist/frame.js","webpack:///../painter/dist/layer.js","webpack:///../painter/dist/shade.js","webpack:///../painter/dist/sketch.js","webpack:///../painter/dist/painter.js","webpack:///../painter/dist/utils/context.js","webpack:///../libs/dist/events/pointer.js","webpack:///./shared-utils/painterState.ts","webpack:///./experiments/graph-sort/context.ts","webpack:///../libs/dist/events/dom.js","webpack:///../libs/dist/math/vectors.js","webpack:///../libs/dist/math/core.js","webpack:///./shared-utils/fp.ts","webpack:///../libs/dist/math/random.js","webpack:///./experiments/graph-sort/nodes.ts","webpack:///./experiments/graph-sort/geometries.ts","webpack:///./experiments/graph-sort/index.ts","webpack:///./experiments/graph-sort/shaders/point.vert","webpack:///./experiments/graph-sort/shaders/point.frag","webpack:///./experiments/graph-sort/shaders/line.vert","webpack:///./experiments/graph-sort/shaders/line.frag","webpack:///../libs/dist/graphics/colors.js"],"names":["updateOnce","updateRepeat","willUpdate","uidCounter","oldTime","processUpdates","time","tpf","id","updates","requestAnimationFrame","Keys","deepOverride","obj1","obj2","opt","ignore","Array","isArray","key","hasOwnProperty","val1","val2","undefined","defaultTextureSettings","defaultForms","renderQuad","attribs","buffer","Float32Array","storeType","drawType","itemCount","defaultShaders","vert","frag","getBindPointForSamplerType","type","typeMap","bindPoint","intSetter","gl","location","v","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","texture","activeTexture","TEXTURE0","bindTexture","_texture","samplerArraySetter","size","units","Int32Array","i","textures","index","Type","setter","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Uint32Array","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","floatAttribSetter","typeInfo","b","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","itemSize","normalize","stride","offset","intAttribSetter","vertexAttribIPointer","matAttribSetter","defaultSize","count","numComponents","rowOffset","attrTypeMap","applyDrawSettings","settings","enable","setting","disable","blendFunc","apply","depthFunc","cullFace","frontFace","lineWidth","colorMask","depthMask","clearColor","clearDepth","clearBits","clear","revertDrawSettings","Int8Array","Uint8Array","Int16Array","Uint16Array","formCounter","Form","_painter","this","data","_drawType","_itemCount","_attribs","attribData","createBuffer","bufferData","elements","_elements","glType","typedArray","Uint8ClampedArray","Error","getGLTypeForTypedArray","ELEMENT_ARRAY_BUFFER","deleteBuffer","times","fn","res","flatten","array","subarray","currentLength","length","mapcat","coll","map","textureCount","Texture","_data","createTexture","TEXTURE_2D","wrap","wrapS","wrapT","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","magFilter","TEXTURE_MAG_FILTER","minFilter","TEXTURE_MIN_FILTER","asset","texImage2D","RGBA","UNSIGNED_BYTE","isWebGL2","RGBA32F","width","height","flipY","pixelStorei","UNPACK_FLIP_Y_WEBGL","indexOf","generateMipmap","Object","assign","deleteTexture","targetCount","RenderTarget","antialias","frameBuffer","antiAliasFrameBuffer","antiAliasRenderBuffer","depthBuffer","bufferStructure","_a","every","buf","k1","keys","arr1","arr2","equalObject","createFramebuffer","createRenderbuffer","some","t","getExtension","texCount","bufferAttachments","COLOR_ATTACHMENT0","bindFramebuffer","FRAMEBUFFER","glx","attachment","COLOR_ATTACHMENT0_WEBGL","drawBuffers","drawBuffersWEBGL","gl2","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","Math","min","getParameter","MAX_SAMPLES","RGBA8","framebufferRenderbuffer","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","renderbufferStorage","update","framebufferTexture2D","err","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","console","error","deleteFramebuffer","deleteRenderbuffer","frameCount","Frame","layers","_targets","_textures","_b","_c","_d","selfReferencing","layerCount","reduce","layer","_uniforms","canvas","_destroyTargets","targetData","forEach","tex","destroy","tmp","Layer","sketches","sketch","shade","uniforms","shadeCounter","Shade","fragSource","trim","vertSource","program","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","_program","_frag","_vert","attachShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","addLineNumbers","linkProgram","getProgramParameter","LINK_STATUS","lastError","getProgramInfoLog","_uniformSetters","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","name","substr","toString","uniformSetters","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","createUniformSetters","_attributeSetters","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","createAttributeSetters","deleteProgram","deleteShader","src","split","line","join","sketchCounter","Sketch","drawSettings","_drawSettings","form","Painter","opts","maxBufferSamples","useWebGL1","getContext","sizeMultiplier","resize","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","getDefaultLayerSettings","_renderQuad","createForm","_staticSketch","createFlatSketch","multiplier","rect","getBoundingClientRect","resizeCanvas","s","createSketch","createShade","l","createLayer","globalUniforms","viewport","draw","frames","frame","renderFrame","idx","source","image","sources","useProgram","shadeForm","shadeUniforms","drawInstance","drawElements","drawArrays","value","renderLayer","target","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","clearBufferfv","COLOR","blitFramebuffer","COLOR_BUFFER_BIT","LINEAR","layerPasses","j","_swapTargets","Buttons","currentCanvas","painter","getForm","shades","getShade","getSketch","getLayer","getFrame","createFrame","effects","getEffect","createEffect","state","device","window","eventHandlers","baseEvents","FRAME","RESIZE","cancelWindow","cancelPointer","cancelKeys","document","getElementById","Q","getPainterContext","callback","innerWidth","innerHeight","addEventListener","removeEventListener","windowSize","once","emit","cb","element","enableRightButton","holdDelay","holdRadius","pressed","drag","x","y","dX","dY","xMax","yMax","dragging","holding","oX","oY","timeout","onPointerDown","e","isPrimary","button","clientX","clientY","clearTimeout","setTimeout","onPointerUp","_e","event","onPointerMove","max","abs","preventDefault","pointer","m","onKeydown","keyCode","Date","now","onKeyup","keyboard","k","get","prop","set","val","reset","listen","add","vec1","vec2","sub","mul","scalar","vec","div","sum","sqrt","PI","M","a","chain","bind","v1","v2","of","alter","int","floor","random","from","to","nodes","pos","ns","force","connections","nodeCount","i1","cs","i2","push","updateForces","dir","f","combine","pull","pointsForm","lineForm","pointsShade","linesShade","points","lines","BACK","CULL_FACE","c","n1","n2","dist","d","node","n","updateNodes","position","color","vDiff","normal","p1","p2","p3","timeToSort"],"mappings":"mBAKA,IAAIA,EAAgD,KACpD,MAAMC,EAA2C,GAEjD,IAAIC,GAAa,EAEbC,EAAa,EAEbC,EAAU,EAEd,SAASC,EAAeC,GACvB,MAAMC,EAAMH,EAAUE,EAAOF,EAAUA,EAGvC,GAFAA,EAAUE,EAENN,EAAY,CACf,IAAK,MAAMQ,KAAMR,EAChBA,EAAWQ,GAAID,GAEhBP,EAAa,KAGd,IAAIS,EAAU,EACd,IAAK,MAAMD,KAAMP,EAChBQ,IACAR,EAAaO,GAAID,GAGbE,EAIJC,sBAAsBL,IAHtBH,GAAa,EACbE,EAAU,GCjCL,IAAIO,ECqBJ,SAASC,EAAaC,EAAMC,EAAMC,GACrC,MAAMC,EAASD,GAAOA,EAAIC,OAC1B,GAAoB,iBAATH,GACS,iBAATC,IACNG,MAAMC,QAAQL,KACdI,MAAMC,QAAQJ,IACfD,IAASC,EAAM,CACf,IAAK,MAAMK,KAAON,EACd,GAAIA,EAAKO,eAAeD,MAClBH,KAAUG,KAAOH,KAA0B,IAAhBA,EAAOG,IAAgB,CACpD,MAAME,EAAOR,EAAKM,GACZG,EAAOR,EAAKK,QACLI,IAATD,IACAT,EAAKM,GAAOP,EAAaS,EAAMC,EAAM,CACjCN,OAAQA,GAAUA,EAAOG,MAKzC,OAAON,EAEX,OAAOC,GDzCX,SAAWH,GACPA,EAAKA,EAAa,OAAI,GAAK,SAC3BA,EAAKA,EAAW,KAAI,GAAK,OACzBA,EAAKA,EAAiB,WAAI,GAAK,aAC/BA,EAAKA,EAAU,IAAI,GAAK,MACxBA,EAAKA,EAAY,MAAI,IAAM,QAC3BA,EAAKA,EAAa,OAAI,IAAM,SAC5BA,EAAKA,EAAY,MAAI,IAAM,QAC3BA,EAAKA,EAAY,MAAI,IAAM,QAC3BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAU,IAAI,IAAM,MACzBA,EAAKA,EAAY,MAAI,IAAM,QAC3BA,EAAKA,EAAgB,UAAI,IAAM,YAC/BA,EAAKA,EAAa,OAAI,IAAM,SAC5BA,EAAKA,EAAY,MAAI,IAAM,QAC3BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAgB,UAAI,IAAM,YAC/BA,EAAKA,EAAU,IAAI,IAAM,MACzBA,EAAKA,EAAW,KAAI,IAAM,OAC1BA,EAAKA,EAAW,KAAI,IAAM,OAC1BA,EAAKA,EAAS,GAAI,IAAM,KACxBA,EAAKA,EAAY,MAAI,IAAM,QAC3BA,EAAKA,EAAW,KAAI,IAAM,OAC1BA,EAAKA,EAAkB,YAAI,IAAM,cACjCA,EAAKA,EAAa,OAAI,IAAM,SAC5BA,EAAKA,EAAa,OAAI,IAAM,SAC5BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAgB,UAAI,IAAM,YAC/BA,EAAKA,EAAa,OAAI,IAAM,SAC5BA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAmB,aAAI,IAAM,eAClCA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAe,SAAI,KAAO,WAC/BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAgB,UAAI,KAAO,YAChCA,EAAKA,EAAe,SAAI,KAAO,WAC/BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAa,OAAI,KAAO,SAC7BA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAe,SAAI,KAAO,WAC/BA,EAAKA,EAAkB,YAAI,KAAO,cAClCA,EAAKA,EAAY,MAAI,KAAO,QAC5BA,EAAKA,EAAa,OAAI,KAAO,SAC7BA,EAAKA,EAAY,MAAI,KAAO,QAC5BA,EAAKA,EAAiB,WAAI,KAAO,aACjCA,EAAKA,EAAmB,aAAI,KAAO,eACnCA,EAAKA,EAAiB,WAAI,KAAO,aACjCA,EAAKA,EAAoB,cAAI,KAAO,gBACpCA,EAAKA,EAAY,MAAI,KAAO,QAC5BA,EAAKA,EAAW,KAAI,KAAO,OAnH/B,CAoHGA,IAASA,EAAO,KErHZ,MAKM,EACF,KADE,EAKJ,KALI,EA6BK,KA7BL,EAyCG,KAzCH,EA0CS,MA1CT,EA2CG,MA3CH,EA4CS,MChDTa,EACH,gBAUGC,EAAe,CACxBC,WAAY,CACRC,QAAS,CACL,SAAoC,CAChCC,OAAQ,IAAIC,aAAa,EAAE,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,IACnDC,UAAW,UAEf,GAA8B,CAC1BF,OAAQ,IAAIC,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC/CC,UAAW,WAGnBC,SAAU,iBACVC,UAAW,IAGNC,EACI,CACTC,KAAM,oJAQNC,KAAM,4ICpCd,SAASC,EAA2BC,GAChC,OAAOC,EAAQD,GAAME,UA2BzB,SAASC,EAAUC,EAAIC,GACnB,OAAQC,IACJF,EAAGG,UAAUF,EAAUC,IAG/B,SAASE,EAAeJ,EAAIC,GACxB,OAAQC,IACJF,EAAGK,WAAWJ,EAAUC,IAGhC,SAASI,EAAcN,EAAIC,GACvB,OAAQC,IACJF,EAAGO,WAAWN,EAAUC,IAGhC,SAASM,EAAcR,EAAIC,GACvB,OAAQC,IACJF,EAAGS,WAAWR,EAAUC,IAGhC,SAASQ,EAAcV,EAAIC,GACvB,OAAQC,IACJF,EAAGW,WAAWV,EAAUC,IAyEhC,SAASU,EAAcZ,EAAIJ,EAAMiB,EAAMZ,GACnC,MAAMH,EAAYH,EAA2BC,GAC7C,OAAQkB,IACJd,EAAGG,UAAUF,EAAUY,GACvBb,EAAGe,cAAcf,EAAGgB,SAAWH,GAC/Bb,EAAGiB,YAAYnB,EAAWgB,EAAQI,WAG1C,SAASC,EAAmBnB,EAAIJ,EAAMiB,EAAMZ,EAAUmB,GAClD,MAAMtB,EAAYH,EAA2BC,GACvCyB,EAAQ,IAAIC,WAAWF,GAC7B,IAAK,IAAIG,EAAI,EAAGA,EAAIH,IAAQG,EACxBF,EAAME,GAAKV,EAAOU,EAEtB,OAAQC,IACJxB,EAAGK,WAAWJ,EAAUoB,GACxB,IAAK,MAAMI,KAASD,EAChBxB,EAAGe,cAAcf,EAAGgB,SAAWK,EAAMI,IACrCzB,EAAGiB,YAAYnB,EAAW0B,EAASC,GAAOP,WAOtD,MAAMrB,EAAU,CACZ,CAAC,GAAgB,CACb6B,KAAMtC,aACNgC,KAAM,EACNO,OArJR,SAAqB3B,EAAIC,GACrB,OAAQC,IACJF,EAAG4B,UAAU3B,EAAUC,KAoJvB2B,YAjJR,SAA0B7B,EAAIC,GAC1B,OAAQC,IACJF,EAAG8B,WAAW7B,EAAUC,MAiJ5B,MAAsB,CAClBwB,KAAMtC,aACNgC,KAAM,EACNO,OAjJR,SAAyB3B,EAAIC,GACzB,OAAQC,IACJF,EAAG+B,WAAW9B,EAAUC,MAiJ5B,MAAsB,CAClBwB,KAAMtC,aACNgC,KAAM,GACNO,OAjJR,SAAyB3B,EAAIC,GACzB,OAAQC,IACJF,EAAGgC,WAAW/B,EAAUC,MAiJ5B,MAAsB,CAClBwB,KAAMtC,aACNgC,KAAM,GACNO,OAjJR,SAAyB3B,EAAIC,GACzB,OAAQC,IACJF,EAAGiC,WAAWhC,EAAUC,MAiJ5B,CAAC,GAAc,CACXwB,KAAMJ,WACNF,KAAM,EACNO,OAAQ5B,EACR8B,YAAazB,GAEjB,MAAoB,CAAEsB,KAAMJ,WAAYF,KAAM,EAAGO,OAAQrB,GACzD,MAAoB,CAAEoB,KAAMJ,WAAYF,KAAM,GAAIO,OAAQnB,GAC1D,MAAoB,CAAEkB,KAAMJ,WAAYF,KAAM,GAAIO,OAAQjB,GAC1D,CAAC,GAAuB,CACpBgB,KAAMQ,YACNd,KAAM,EACNO,OAjIR,SAAoB3B,EAAIC,GACpB,OAAQC,IACJF,EAAGmC,WAAWlC,EAAUC,KAgIxB2B,YA7HR,SAAyB7B,EAAIC,GACzB,OAAQC,IACJF,EAAGoC,YAAYnC,EAAUC,MA6H7B,MAA6B,CACzBwB,KAAMQ,YACNd,KAAM,EACNO,OA7HR,SAAwB3B,EAAIC,GACxB,OAAQC,IACJF,EAAGqC,YAAYpC,EAAUC,MA6H7B,MAA6B,CACzBwB,KAAMQ,YACNd,KAAM,GACNO,OA7HR,SAAwB3B,EAAIC,GACxB,OAAQC,IACJF,EAAGsC,YAAYrC,EAAUC,MA6H7B,MAA6B,CACzBwB,KAAMQ,YACNd,KAAM,GACNO,OA7HR,SAAwB3B,EAAIC,GACxB,OAAQC,IACJF,EAAGuC,YAAYtC,EAAUC,MA6H7B,MAAgB,CACZwB,KAAMQ,YACNd,KAAM,EACNO,OAAQ5B,EACR8B,YAAazB,GAEjB,MAAqB,CAAEsB,KAAMQ,YAAad,KAAM,EAAGO,OAAQrB,GAC3D,MAAqB,CAAEoB,KAAMQ,YAAad,KAAM,GAAIO,OAAQnB,GAC5D,MAAqB,CAAEkB,KAAMQ,YAAad,KAAM,GAAIO,OAAQjB,GAC5D,MAAsB,CAClBgB,KAAMtC,aACNgC,KAAM,GACNO,OAtIR,SAAyB3B,EAAIC,GACzB,OAAQC,IACJF,EAAGwC,iBAAiBvC,GAAU,EAAOC,MAsIzC,MAAsB,CAClBwB,KAAMtC,aACNgC,KAAM,GACNO,OAtIR,SAAyB3B,EAAIC,GACzB,OAAQC,IACJF,EAAGyC,iBAAiBxC,GAAU,EAAOC,MAsIzC,MAAsB,CAClBwB,KAAMtC,aACNgC,KAAM,GACNO,OAtIR,SAAyB3B,EAAIC,GACzB,OAAQC,IACJF,EAAG0C,iBAAiBzC,GAAU,EAAOC,MAsIzC,MAAwB,CACpBwB,KAAMtC,aACNgC,KAAM,GACNO,OAtIR,SAA0B3B,EAAIC,GAC1B,OAAQC,IACJF,EAAG2C,mBAAmB1C,GAAU,EAAOC,MAsI3C,MAAwB,CACpBwB,KAAMtC,aACNgC,KAAM,GACNO,OAjIR,SAA0B3B,EAAIC,GAC1B,OAAQC,IACJF,EAAG4C,mBAAmB3C,GAAU,EAAOC,MAiI3C,MAAwB,CACpBwB,KAAMtC,aACNgC,KAAM,GACNO,OA3IR,SAA0B3B,EAAIC,GAC1B,OAAQC,IACJF,EAAG6C,mBAAmB5C,GAAU,EAAOC,MA2I3C,MAAwB,CACpBwB,KAAMtC,aACNgC,KAAM,GACNO,OAjIR,SAA0B3B,EAAIC,GAC1B,OAAQC,IACJF,EAAG8C,mBAAmB7C,GAAU,EAAOC,MAiI3C,MAAwB,CACpBwB,KAAMtC,aACNgC,KAAM,GACNO,OA3IR,SAA0B3B,EAAIC,GAC1B,OAAQC,IACJF,EAAG+C,mBAAmB9C,GAAU,EAAOC,MA2I3C,MAAwB,CACpBwB,KAAMtC,aACNgC,KAAM,GACNO,OAtIR,SAA0B3B,EAAIC,GAC1B,OAAQC,IACJF,EAAGgD,mBAAmB/C,GAAU,EAAOC,MAsI3C,MAAsB,CAClBwB,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAAwB,CACpB4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAAsB,CAClB4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAA6B,CACzB4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAA4B,CACxB4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAAmC,CAC/B4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAA+B,CAC3B4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAA0B,CACtB4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAA0B,CACtB4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAA4B,CACxB4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAAgC,CAC5B4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAAmC,CAC/B4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAAmC,CAC/B4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAAqC,CACjC4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,GAEf,MAAyC,CACrC4B,KAAM,KACNN,KAAM,EACNO,OAAQf,EACRiB,YAAaV,EACbrB,UAAW,IAGnB,SAASmD,EAAkBjD,EAAIC,EAAUiD,GACrC,OAAQC,IACJnD,EAAGoD,WAAWpD,EAAGqD,aAAcF,EAAEhE,QACjCa,EAAGsD,wBAAwBrD,GAC3BD,EAAGuD,oBAAoBtD,EAAUiD,EAASM,SAAU,EAAeL,EAAEM,YAAa,EAAON,EAAEO,QAAU,EAAGP,EAAEQ,QAAU,IAG5H,SAASC,EAAgB5D,EAAIC,EAAUiD,GACnC,OAAQC,IACJnD,EAAGoD,WAAWpD,EAAGqD,aAAcF,EAAEhE,QACjCa,EAAGsD,wBAAwBrD,GAC3BD,EAAG6D,qBAAqB5D,EAAUiD,EAASM,SAAU,EAAaL,EAAEO,QAAU,EAAGP,EAAEQ,QAAU,IAGrG,SAASG,EAAgB9D,EAAIC,EAAUiD,GACnC,MAAMa,EAAcb,EAAS9B,KACvB4C,EAAQd,EAASc,MACvB,OAAQb,IACJnD,EAAGoD,WAAWpD,EAAGqD,aAAcF,EAAEhE,QACjC,MAAM8E,EAAgBF,EAChB3C,EAAO6C,EAAgBD,EAEvBN,EADW7D,EAAQ,MACDuB,KAAO6C,EACzBR,EAAYN,EAAEM,YAAa,EAC3BE,EAASR,EAAEQ,QAAU,EACrBO,EAAYR,EAASM,EAC3B,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,IAASzC,EACzBvB,EAAGsD,wBAAwBrD,EAAWsB,GACtCvB,EAAGuD,oBAAoBtD,EAAWsB,EAAGH,EAAM,EAAeqC,EAAWC,EAAQC,EAASO,EAAY3C,IAI9G,MAAM4C,EAAc,CAChB,CAAC,GAAgB,CAAE/C,KAAM,EAAGO,OAAQsB,EAAmBO,SAAU,GACjE,MAAsB,CAAEpC,KAAM,EAAGO,OAAQsB,EAAmBO,SAAU,GACtE,MAAsB,CAAEpC,KAAM,GAAIO,OAAQsB,EAAmBO,SAAU,GACvE,MAAsB,CAAEpC,KAAM,GAAIO,OAAQsB,EAAmBO,SAAU,GACvE,CAAC,GAAc,CAAEpC,KAAM,EAAGO,OAAQiC,EAAiBJ,SAAU,GAC7D,MAAoB,CAAEpC,KAAM,EAAGO,OAAQiC,EAAiBJ,SAAU,GAClE,MAAoB,CAAEpC,KAAM,GAAIO,OAAQiC,EAAiBJ,SAAU,GACnE,MAAoB,CAAEpC,KAAM,GAAIO,OAAQiC,EAAiBJ,SAAU,GACnE,CAAC,GAAuB,CAAEpC,KAAM,EAAGO,OAAQiC,EAAiBJ,SAAU,GACtE,MAA6B,CACzBpC,KAAM,EACNO,OAAQiC,EACRJ,SAAU,GAEd,MAA6B,CACzBpC,KAAM,GACNO,OAAQiC,EACRJ,SAAU,GAEd,MAA6B,CACzBpC,KAAM,GACNO,OAAQiC,EACRJ,SAAU,GAEd,MAAgB,CAAEpC,KAAM,EAAGO,OAAQiC,EAAiBJ,SAAU,GAC9D,MAAqB,CAAEpC,KAAM,EAAGO,OAAQiC,EAAiBJ,SAAU,GACnE,MAAqB,CAAEpC,KAAM,GAAIO,OAAQiC,EAAiBJ,SAAU,GACpE,MAAqB,CAAEpC,KAAM,GAAIO,OAAQiC,EAAiBJ,SAAU,GACpE,MAAsB,CAAEpC,KAAM,EAAGO,OAAQmC,EAAiBE,MAAO,GACjE,MAAsB,CAAE5C,KAAM,EAAGO,OAAQmC,EAAiBE,MAAO,GACjE,MAAsB,CAAE5C,KAAM,GAAIO,OAAQmC,EAAiBE,MAAO,IAmJ/D,SAASI,EAAkBpE,EAAIqE,GAClC,GAAIA,EAASC,OACT,IAAK,MAAMC,KAAWF,EAASC,OAC3BtE,EAAGsE,OAAOC,GAGlB,GAAIF,EAASG,QACT,IAAK,MAAMD,KAAWF,EAASG,QAC3BxE,EAAGwE,QAAQD,GAGfF,EAASI,WACTzE,EAAGyE,UAAUC,MAAM1E,EAAIqE,EAASI,WAEV,MAAtBJ,EAASM,WACT3E,EAAG2E,UAAUN,EAASM,WAED,MAArBN,EAASO,UACT5E,EAAG4E,SAASP,EAASO,UAEC,MAAtBP,EAASQ,WACT7E,EAAG6E,UAAUR,EAASQ,WAEA,MAAtBR,EAASS,WACT9E,EAAG8E,UAAUT,EAASS,WAEtBT,EAASU,WACT/E,EAAG+E,UAAUL,MAAM1E,EAAIqE,EAASU,WAEV,MAAtBV,EAASW,WACThF,EAAGgF,UAAUX,EAASW,WAEtBX,EAASY,YACTjF,EAAGiF,WAAWP,MAAM1E,EAAIqE,EAASY,YAEV,MAAvBZ,EAASa,YACTlF,EAAGkF,WAAWb,EAASa,YAED,MAAtBb,EAASc,WACTnF,EAAGoF,MAAMf,EAASc,WAGnB,SAASE,EAAmBrF,EAAIqE,GACnC,GAAIA,EAASC,OACT,IAAK,MAAMC,KAAWF,EAASC,OAC3BtE,EAAGwE,QAAQD,GAGnB,GAAIF,EAASG,QACT,IAAK,MAAMD,KAAWF,EAASG,QAC3BxE,EAAGsE,OAAOC,GA1HFe,UACSC,WACRC,WACSC,YACXnE,WACSY,YACP9C,aACiBqG,YACAA,YACFA,YACVA,YACiBvD,YACCA,YACJA,YACMA,YACbA,YClgBjC,IAAIwD,EAAc,EACX,MAAMC,EACT,YAAYC,EAAU7H,EAAK,OAAS2H,KAChCG,KAAKD,SAAWA,EAChBC,KAAK9H,GAAKA,EAEd,OAAO+H,GACH,MAAM9F,EAAK6F,KAAKD,SAAS5F,GACrB8F,EAAKxG,WACLuG,KAAKE,UAAY/F,EAAG8F,EAAKxG,WAEzBwG,EAAKvG,YACLsG,KAAKG,WAAaF,EAAKvG,WAE3BsG,KAAKI,SAAWJ,KAAKI,UAAY,GACjC,IAAK,MAAMlI,KAAM+H,EAAK5G,QAAS,CAC3B,MAAMgH,EAAaJ,EAAK5G,QAAQnB,GACP,MAArB8H,KAAKI,SAASlI,KACd8H,KAAKI,SAASlI,GAAM,CAChBoB,OAAQa,EAAGmG,iBAGnBnG,EAAGoD,WAAWpD,EAAGqD,aAAcwC,KAAKI,SAASlI,GAAIoB,QACjDa,EAAGoG,WAAWpG,EAAGqD,aAAc6C,EAAW/G,OAAQa,GAAIkG,EAAW7G,WAAa,UAAY,UAE9F,GAAIyG,EAAKO,SAAU,CACf,MAAMlH,EAAS2G,EAAKO,SAASlH,OACP,MAAlB0G,KAAKS,YACLT,KAAKS,UAAY,CACbnH,OAAQa,EAAGmG,eACXI,OAAQ,OAGhBV,KAAKS,UAAUC,ODmepB,SAAgCC,GACnC,GAAIA,aAAsBlB,UACtB,OFrdE,KEudN,GAAIkB,aAAsBjB,WACtB,OFvdW,KEydf,GAAIiB,aAAsBC,kBACtB,OF1dW,KE4df,GAAID,aAAsBhB,WACtB,OF5dG,KE8dP,GAAIgB,aAAsBf,YACtB,OF9dY,KEgehB,GAAIe,aAAsBlF,WACtB,OAAO,EAEX,GAAIkF,aAAsBtE,YACtB,OAAO,EAEX,GAAIsE,aAAsBpH,aACtB,OAAO,EAEX,MAAM,IAAIsH,MAAM,gCC5fgBC,CAAuBxH,GAC/Ca,EAAGoD,WAAWpD,EAAG4G,qBAAsBf,KAAKS,UAAUnH,QACtDa,EAAGoG,WAAWpG,EAAG4G,qBAAsBzH,EAAQa,GAAI8F,EAAKO,SAAShH,WAAa,UAAY,UAE9F,OAAOwG,KAEX,UACI,MAAM7F,EAAK6F,KAAKD,SAAS5F,GACzB,IAAK,MAAMjC,KAAM8H,KAAKI,SAClBjG,EAAG6G,aAAahB,KAAKI,SAASlI,GAAIoB,QAEtC0G,KAAKI,SAAW,GACZJ,KAAKS,YACLtG,EAAG6G,aAAahB,KAAKS,UAAUnH,QAC/B0G,KAAKS,eAAYxH,ICvCtB,SAASgI,EAAMC,EAAI/C,EAAOgD,EAAM,IACnC,IAAK,IAAIzF,EAAI,EAAGA,EAAIyC,EAAOzC,IACvByF,EAAIzF,GAAKwF,EAAGxF,GAEhB,OAAOyF,EAeJ,SAASC,EAAQC,EAAOF,EAAM,IACjC,IAAK,MAAMG,KAAYD,EAAO,CAC1B,MAAME,EAAgBJ,EAAIK,OAC1B,IAAK,IAAI9F,EAAI,EAAGA,EAAI4F,EAASE,OAAQ9F,IACjCyF,EAAIzF,EAAI6F,GAAiBD,EAAS5F,GAG1C,OAAOyF,EAEJ,SAASM,EAAOP,EAAIG,EAAOF,EAAM,IACpC,OAAOC,EAkBJ,SAAaF,EAAIQ,EAAMP,EAAM,IAChC,IAAK,IAAIzF,EAAI,EAAGA,EAAIgG,EAAKF,OAAQ9F,IAC7ByF,EAAIzF,GAAKwF,EAAGQ,EAAKhG,GAAIA,GAEzB,OAAOyF,EAtBQQ,CAAIT,EAAIG,EAAOF,ICrClC,IAAIS,EAAe,EACZ,MAAMC,EACT,YAAY9B,EAAU7H,EAAK,UAAY0J,KACnC5B,KAAKD,SAAWA,EAChBC,KAAK9H,GAAKA,EACV8H,KAAK3E,SAAW,KAChB2E,KAAK8B,MAAQ,GAEjB,OAAO7B,GACH,MAAM9F,EAAK6F,KAAKD,SAAS5F,GAKzB,GAJqB,MAAjB6F,KAAK3E,WACL2E,KAAK3E,SAAWlB,EAAG4H,iBAEvB5H,EAAGiB,YAAYjB,EAAG6H,WAAYhC,KAAK3E,UAC9B4E,EAAKgC,MAAQhC,EAAKgC,OAASjC,KAAK8B,MAAMG,MACtChC,EAAKiC,OAASjC,EAAKiC,QAAUlC,KAAK8B,MAAMI,OACxCjC,EAAKkC,OAASlC,EAAKkC,QAAUnC,KAAK8B,MAAMK,MAAQ,CACjD,IAAID,EAAOC,EACPlC,EAAKgC,KACLC,EAAQC,EAAQlC,EAAKgC,MAGrBE,EAAQlC,EAAKkC,OAASjJ,EACtBgJ,EAAQjC,EAAKiC,OAAShJ,GAE1BiB,EAAGiI,cAAcjI,EAAG6H,WAAY7H,EAAGkI,eAAgBlI,EAAG+H,IACtD/H,EAAGiI,cAAcjI,EAAG6H,WAAY7H,EAAGmI,eAAgBnI,EAAGgI,SAE/CnC,KAAK8B,MAAMG,MAAQjC,KAAK8B,MAAMI,OAASlC,KAAK8B,MAAMK,QACzDnC,KAAK8B,MAAMG,KAAOjC,KAAK8B,MAAMK,MAAQnC,KAAK8B,MAAMI,MAAQhJ,EACxDiB,EAAGiI,cAAcjI,EAAG6H,WAAY7H,EAAGkI,eAAgBlI,EAAG6F,KAAK8B,MAAMG,OACjE9H,EAAGiI,cAAcjI,EAAG6H,WAAY7H,EAAGmI,eAAgBnI,EAAG6F,KAAK8B,MAAMG,QAiCrE,OA/BIhC,EAAKsC,WAAatC,EAAKsC,YAAcvC,KAAK8B,MAAMS,UAChDpI,EAAGiI,cAAcjI,EAAG6H,WAAY7H,EAAGqI,mBAAoBrI,EAAG8F,EAAKsC,YAEzDvC,KAAK8B,MAAMS,YACjBvC,KAAK8B,MAAMS,UJlCR,UImCHpI,EAAGiI,cAAcjI,EAAG6H,WAAY7H,EAAGqI,mBAAoBrI,EAAG6F,KAAK8B,MAAMS,aAErEtC,EAAKwC,WAAaxC,EAAKwC,YAAczC,KAAK8B,MAAMW,UAChDtI,EAAGiI,cAAcjI,EAAG6H,WAAY7H,EAAGuI,mBAAoBvI,EAAG8F,EAAKwC,YAEzDzC,KAAK8B,MAAMW,YACjBzC,KAAK8B,MAAMW,UJ1CR,SI2CHtI,EAAGiI,cAAcjI,EAAG6H,WAAY7H,EAAGuI,mBAAoBvI,EAAG6F,KAAK8B,MAAMW,aAErExC,EAAK0C,OACLxI,EAAGyI,WAAWzI,EAAG6H,WAAY,EAAG7H,EAAG0I,KAAM1I,EAAG0I,KAAM1I,EAAG2I,cAAe7C,EAAK0C,YAE3D1J,IAAdgH,EAAKA,MACL9F,EAAGyI,WAAWzI,EAAG6H,WAAY,EAAiB,UAAd/B,EAAKlG,MAAoBiG,KAAKD,SAASgD,SACjE5I,EAAG6I,QACH7I,EAAG0I,KAAM5C,EAAKgD,MACpBhD,EAAKiD,OAAQ,EAAG/I,EAAG0I,KAAM1I,EAAG8F,EAAKlG,MAAQ,iBAAkBkG,EAAKA,MAElD,MAAdA,EAAKkD,OAAiBlD,EAAKkD,QAAUnD,KAAK8B,MAAMqB,OAChDhJ,EAAGiJ,YAAYjJ,EAAGkJ,oBAAqBpD,EAAKkD,OAE5ClD,EAAKwC,WAAaxC,EAAKwC,UAAUa,QAAQ,UAAY,GACrDnJ,EAAGoJ,eAAepJ,EAAG6H,YAEzB7H,EAAGiB,YAAYjB,EAAG6H,WAAY,MAC9BwB,OAAOC,OAAOzD,KAAK8B,MAAO7B,GACnBD,KAEX,UACIA,KAAKD,SAAS5F,GAAGuJ,cAAc1D,KAAK3E,UACpC2E,KAAK8B,MAAQ,GACb9B,KAAK3E,SAAW,MCpExB,IAAIsI,EAAc,EACX,MAAMC,EACT,YAAY7D,EAAU7H,EAAK,OAASyL,KAChC3D,KAAKD,SAAWA,EAChBC,KAAK9H,GAAKA,EACV8H,KAAKiD,MAAQ,EACbjD,KAAKkD,OAAS,EACdlD,KAAK6D,WAAY,EACjB7D,KAAK8D,YAAc,KACnB9D,KAAK+D,qBAAuB,KAC5B/D,KAAKgE,sBAAwB,KAC7BhE,KAAKrE,SAAW,GAChBqE,KAAKiE,YAAc,KACnBjE,KAAKkE,gBAAkB,GACvBlE,KAAK8B,MAAQ,GAEjB,OAAO7B,GACH,IAAIkE,EACJ,MAAMhK,EAAK6F,KAAKD,SAAS5F,GACnB8I,EAAQhD,EAAKgD,OAASjD,KAAKiD,MAC3BC,EAASjD,EAAKiD,QAAUlD,KAAKkD,OACnC,IAAMD,IAASC,EACX,OAAOlD,KAEN,GAAIiD,IAAUjD,KAAKiD,OAASC,IAAWlD,KAAKkD,OAAQ,CACrD,IAAKjD,EAAKiE,gBACN,OAAOlE,KACX,GAAIC,EAAKiE,gBAAgB1C,SAAWxB,KAAKkE,gBAAgB1C,QACrDxB,KAAKkE,gBAAgBE,OAAM,CAACC,EAAK3I,ICP1C,SAAqBnD,EAAMC,GAC9B,GAAID,IAASC,EACT,OAAO,EAEX,IAAKA,EACD,OAAO,EAEX,MAAM8L,EAAKd,OAAOe,KAAKhM,GAEvB,IA1BG,SAAoBiM,EAAMC,GAC7B,GAAID,IAASC,EACT,OAAO,EAEX,IAAKA,IAASD,EACV,OAAO,EAEX,GAAIA,EAAKhD,SAAWiD,EAAKjD,OACrB,OAAO,EAEX,IAAK,IAAI9F,EAAI,EAAGA,EAAI8I,EAAKhD,OAAQ9F,IAC7B,GAAI8I,EAAK9I,KAAO+I,EAAK/I,GACjB,OAAO,EAGf,OAAO,EAWF,CAAW4I,EADLd,OAAOe,KAAK/L,IAEnB,OAAO,EAEX,IAAK,MAAMK,KAAOyL,EACd,GAAI/L,EAAKM,KAASL,EAAKK,GACnB,OAAO,EAGf,OAAO,EDV4C6L,CAAYL,EAAKpE,EAAKiE,gBAAgBxI,MAC7E,OAAOsE,KAGS,MAApBA,KAAK8D,cACL9D,KAAK8D,YAAc3J,EAAGwK,qBAEF,MAApB3E,KAAKiE,cACLjE,KAAKiE,YAAc9J,EAAGyK,sBAEtB3E,EAAKiE,iBAAmBjE,EAAKiE,gBAAgB1C,SAC7CxB,KAAKkE,gBAAkBjE,EAAKiE,gBACxBlE,KAAKkE,gBAAgBW,MAAKC,GAAgB,UAAXA,EAAE/K,SAC7BiG,KAAKD,SAASgD,SACd5I,EAAG4K,aAAa,0BAGhB5K,EAAG4K,aAAa,uBAI5B,MAAMC,EAAWhF,KAAKkE,gBAAgB1C,QAAU,EAC1CyD,EAAoB,CAAC9K,EAAG+K,mBAE9B,GADA/K,EAAGgL,gBAAgBhL,EAAGiL,YAAapF,KAAK8D,aACpCkB,EAAW,EAAG,CACd,IAAIK,EACCrF,KAAKD,SAASgD,WACfsC,EAAMlL,EAAG4K,aAAa,uBAE1B,MAAMO,EAAatF,KAAKD,SAASgD,SAC3B5I,EAAG+K,kBACHG,EAAIE,wBACV,IAAK,IAAI7J,EAAI,EAAGA,EAAIsJ,EAAUtJ,IAC1BuJ,EAAkBvJ,GAAK4J,EAAa5J,EAExCsE,KAAKD,SAASgD,SACR5I,EAAGqL,YAAYP,GACfI,EAAII,iBAAiBR,GAM/B,GAJAjF,KAAK6D,UACY,IAAbmB,GACIhF,KAAKD,SAASgD,WACb9C,EAAK4D,YAAoC,QAArBM,EAAKnE,KAAK8B,aAA0B,IAAPqC,OAAgB,EAASA,EAAGN,YAClF7D,KAAK6D,UAAW,CAChB,MAAM6B,EAAMvL,EACqB,MAA7B6F,KAAK+D,uBACL/D,KAAK+D,qBAAuB5J,EAAGwK,qBAED,MAA9B3E,KAAKgE,wBACLhE,KAAKgE,sBAAwB7J,EAAGyK,sBAEpCzK,EAAGgL,gBAAgBhL,EAAGiL,YAAapF,KAAK+D,sBACxC5J,EAAGwL,iBAAiBxL,EAAGyL,aAAc5F,KAAKgE,uBAC1C0B,EAAIG,+BAA+B1L,EAAGyL,aAAcE,KAAKC,IAAI,EAAG5L,EAAG6L,aAAaN,EAAIO,cAAeP,EAAIQ,MAAOjD,EAAOC,GACrH/I,EAAGgM,wBAAwBhM,EAAGiL,YAAajL,EAAG+K,kBAAmB/K,EAAGyL,aAAc5F,KAAKgE,uBACvF7J,EAAGwL,iBAAiBxL,EAAGyL,aAAc5F,KAAKiE,aAC1CyB,EAAIG,+BAA+B1L,EAAGyL,aAAcE,KAAKC,IAAI,EAAG5L,EAAG6L,aAAaN,EAAIO,cAAe9L,EAAGiM,kBAAmBnD,EAAOC,GAChI/I,EAAGgM,wBAAwBhM,EAAGiL,YAAajL,EAAGkM,iBAAkBlM,EAAGyL,aAAc5F,KAAKiE,aACtF9J,EAAGgL,gBAAgBhL,EAAGiL,YAAapF,KAAK8D,kBAGxC3J,EAAGwL,iBAAiBxL,EAAGyL,aAAc5F,KAAKiE,aAC1C9J,EAAGmM,oBAAoBnM,EAAGyL,aAAczL,EAAGiM,kBAAmBnD,EAAOC,GACrE/I,EAAGgM,wBAAwBhM,EAAGiL,YAAajL,EAAGkM,iBAAkBlM,EAAGyL,aAAc5F,KAAKiE,aAE1F,IAAK,IAAIvI,EAAI,EAAGA,EAAIsJ,EAAUtJ,IAAK,CAC1BsE,KAAKrE,SAASD,KACfsE,KAAKrE,SAASD,GAAK,IAAImG,EAAQ7B,KAAKD,SAAUC,KAAK9H,GAAK,WAAawD,IAEzE,MAAMT,EAAU+E,KAAKrE,SAASD,GAC9BT,EAAQsL,OAAO/C,OAAOC,OAAOD,OAAOC,OAAO,CAAEhB,UAAW,UAAWF,UAAW,WAAavC,KAAKkE,gBAAgBxI,IAAK,CAAEuE,KAAM,KAAMgD,QAC/HC,YACJ/I,EAAGqM,qBAAqBrM,EAAGiL,YAAaH,EAAkBvJ,GAAIvB,EAAG6H,WAAY/G,EAAQI,SAAU,GAEnG,GAAI2E,KAAK6D,UAAW,CAChB1J,EAAGgL,gBAAgBhL,EAAGiL,YAAapF,KAAK+D,sBACxC,MAAM0C,EAAMtM,EAAGuM,uBAAuBvM,EAAGiL,aACrCqB,IAAQtM,EAAGwM,sBACXC,QAAQC,MAAM,8BAA+BJ,EAAKxG,GAEtD9F,EAAGgL,gBAAgBhL,EAAGiL,YAAapF,KAAK8D,aAE5C,MAAM2C,EAAMtM,EAAGuM,uBAAuBvM,EAAGiL,aAUzC,OATIqB,IAAQtM,EAAGwM,sBACXC,QAAQC,MAAM,oBAAqBJ,EAAKxG,GAE5C9F,EAAGgL,gBAAgBhL,EAAGiL,YAAa,MACnCjL,EAAGiB,YAAYjB,EAAG6H,WAAY,MAC9B7H,EAAGwL,iBAAiBxL,EAAGyL,aAAc,MACrCpC,OAAOC,OAAOzD,KAAK8B,MAAO7B,GAC1BD,KAAKiD,MAAQA,EACbjD,KAAKkD,OAASA,EACPlD,KAEX,UACI,MAAM7F,EAAK6F,KAAKD,SAAS5F,GACzBA,EAAG2M,kBAAkB9G,KAAK8D,aAC1B3J,EAAG4M,mBAAmB/G,KAAKiE,aAC3B,IAAK,MAAMhJ,KAAW+E,KAAKrE,SACvBxB,EAAGuJ,cAAczI,GAEjB+E,KAAK+D,sBACL5J,EAAG2M,kBAAkB9G,KAAK+D,sBAE1B/D,KAAKgE,uBACL7J,EAAG4M,mBAAmB/G,KAAKgE,uBAE/BhE,KAAKrE,SAAW,GAChBqE,KAAK8D,YAAc,KACnB9D,KAAKiE,YAAc,KACnBjE,KAAK8B,MAAQ,GACb9B,KAAKkE,gBAAkB,GACvBlE,KAAKiD,MAAQ,EACbjD,KAAKkD,OAAS,GE5ItB,IAAI8D,EAAa,EACV,MAAMC,EACT,YAAYlH,EAAU7H,EAAK,QAAU8O,KACjChH,KAAKD,SAAWA,EAChBC,KAAK9H,GAAKA,EACV8H,KAAKiD,MAAQ,EACbjD,KAAKkD,OAAS,EACdlD,KAAKkH,OAAS,GACdlH,KAAK8B,MAAQ,GACb9B,KAAKmH,SAAW,GAChBnH,KAAKoH,UAAY,GAErB,MAAM1L,EAAI,GACN,OAASsE,KAAKmH,SAAS3F,QACnBxB,KAAKmH,SAASnH,KAAKmH,SAAS3F,OAAS,GAAG7F,SAASD,IACjDsE,KAAKoH,UAAU1L,GAEvB,OAAOuE,EAAO,IACV,IAAIkE,EAAIkD,EAAIC,EAAIC,EAChB,MAAMpN,EAAK6F,KAAKD,SAAS5F,GACnB+M,EAASvO,MAAMC,QAAQqH,EAAKiH,QAC5BjH,EAAKiH,OACLjH,EAAKiH,OACD,CAACjH,EAAKiH,QACNlH,KAAKkH,OACTM,EAAkBvH,EAAKuH,iBAAmBxH,KAAK8B,MAAM0F,gBACrDC,EAAaP,EAAOQ,QAAO,CAACvJ,EAAOwJ,IAAUxJ,GAASwJ,EAAMC,UAAUpG,QAAU,IAAI,GACpFmC,EAAc6D,GAAmBC,EAAa,EAAI,EAAIA,EACtDxE,EAAQhD,EAAKgD,QAAkC,QAAvBkB,EAAKlE,EAAKhF,eAA4B,IAAPkJ,OAAgB,EAASA,EAAGlB,QACrFjD,KAAK8B,MAAMmB,QAAwC,QAA7BoE,EAAKrH,KAAK8B,MAAM7G,eAA4B,IAAPoM,OAAgB,EAASA,EAAGpE,QACvF9I,EAAG0N,OAAO5E,MACRC,EAASjD,EAAKiD,SAAmC,QAAvBoE,EAAKrH,EAAKhF,eAA4B,IAAPqM,OAAgB,EAASA,EAAGpE,SACvFlD,KAAK8B,MAAMoB,SAAyC,QAA7BqE,EAAKvH,KAAK8B,MAAM7G,eAA4B,IAAPsM,OAAgB,EAASA,EAAGrE,SACxF/I,EAAG0N,OAAO3E,OACRW,EAAY5D,EAAK4D,WAAa7D,KAAK8B,MAAM+B,YAAa,EACxDF,IAAgB3D,KAAKmH,SAAS3F,QAC9BxB,KAAK8H,kBAET,MAAMC,EAAavE,OAAOC,OAAOD,OAAOC,OAAO,GAAIxD,GAAO,CAAEgD,QAAOC,SAAQW,cAsB3E,OArBK7D,KAAKmH,SAAS3F,QAAUmC,EAAc,EACvC3D,KAAKmH,SAAWlG,GAAMvF,GAAK,IAAIkI,EAAa5D,KAAKD,SAAUC,KAAK9H,GAAK,WAAawD,EAAI,IAAI6K,OAAOwB,IAAapE,GAEzG3D,KAAKmH,SAAS3F,QACnBxB,KAAKmH,SAASa,SAAQlD,IAClBA,EAAEyB,OAAOwB,MAGb9H,EAAKhF,UAEA+E,KAAKoH,UAAU,KAChBpH,KAAKoH,UAAU,GAAK,IAAIvF,EAAQ7B,KAAKD,SAAUC,KAAK9H,GAAK,cAE7D+H,EAAKhF,QAAQgI,MAAQA,EACrBhD,EAAKhF,QAAQiI,OAASA,EACtBlD,KAAKoH,UAAU,GAAGb,OAAOtG,EAAKhF,UAElCuI,OAAOC,OAAOzD,KAAK8B,MAAO7B,GAC1BD,KAAKkH,OAASA,EACdlH,KAAKiD,MAAQA,EACbjD,KAAKkD,OAASA,EACPlD,KAEX,UACIA,KAAK8H,kBACL9H,KAAKoH,UAAUY,SAAQC,GAAOA,EAAIC,YAClClI,KAAKoH,UAAY,GACjBpH,KAAK8B,MAAQ,GACb9B,KAAKkH,OAAS,GACdlH,KAAKiD,MAAQ,EACbjD,KAAKkD,OAAS,EAElB,kBACIlD,KAAKmH,SAASa,SAAQlD,GAAKA,EAAEoD,YAC7BlI,KAAKmH,SAAW,GAEpB,eACI,GAAInH,KAAKmH,SAAS3F,OAAS,EAAG,CAC1B,MAAM2G,EAAMnI,KAAKmH,SAAS,GAC1BnH,KAAKmH,SAAS,GAAKnH,KAAKmH,SAAS,GACjCnH,KAAKmH,SAAS,GAAKgB,IClF/B,IAAIV,EAAa,EACV,MAAMW,EACT,YAAYlQ,EAAK,eAAiBuP,KAC9BzH,KAAK9H,GAAKA,EACV8H,KAAKqI,SAAW,GAChBrI,KAAK8B,MAAQ,GACb9B,KAAK4H,UAAY,GAErB,OAAO3H,GAMH,GALIA,EAAKoI,WACLrI,KAAKqI,SAAW1P,MAAMC,QAAQqH,EAAKoI,UAC7BpI,EAAKoI,SACL,CAACpI,EAAKoI,WAEZpI,EAAKpG,KAAM,CACX,MAAMyO,EAAStI,KAAKqI,UAAYrI,KAAKqI,SAAS,GAC1CC,GACAA,EAAOC,MAAMhC,OAAO,CAAE1M,KAAMoG,EAAKpG,OASzC,OANIoG,EAAKuI,WACLxI,KAAK4H,UAAYjP,MAAMC,QAAQqH,EAAKuI,UAC9BvI,EAAKuI,SACL,CAACvI,EAAKuI,WAEhBhF,OAAOC,OAAOzD,KAAK8B,MAAO7B,GACnBD,KAEX,UACI,IAAK,MAAMsI,KAAUtI,KAAKqI,SACtBC,EAAOJ,UAEXlI,KAAK8B,MAAMuG,SAAW,GACtBrI,KAAK8B,MAAQ,GACb9B,KAAK4H,UAAY,ICjCzB,IAAIa,EAAe,EACZ,MAAMC,EACT,YAAY3I,EAAU7H,EAAK,QAAUuQ,KACjCzI,KAAKD,SAAWA,EAChBC,KAAK9H,GAAKA,EAEd,OAAO+H,GACH,MAAM9F,EAAK6F,KAAKD,SAAS5F,GACnBwO,EAAc1I,EAAKpG,MAAQoG,EAAKpG,KAAK+O,QAAW5I,KAAK2I,WACrDE,EAAc5I,EAAKrG,MAAQqG,EAAKrG,KAAKgP,QAAW5I,KAAK6I,WAC3D,IAAMF,IACFE,GACCF,IAAe3I,KAAK2I,YAAcE,IAAe7I,KAAK6I,WACvD,OAAO7I,KAEXA,KAAKkI,UACDS,EAAWrF,QAAQ,wBAA0B,GAC7CnJ,EAAG4K,aAAa,sBAEpB,MAAM+D,EAAU3O,EAAG4O,gBACblP,EAAOM,EAAG6O,aAAa7O,EAAG8O,iBAC1BrP,EAAOO,EAAG6O,aAAa7O,EAAG+O,eAChC,GAAMJ,GAAWlP,GAAQC,EAAzB,CAmBA,GAjBAmG,KAAKmJ,SAAWL,EAChB9I,KAAKoJ,MAAQvP,EACbmG,KAAKqJ,MAAQzP,EACbO,EAAGmP,aAAaR,EAASlP,GACzBO,EAAGmP,aAAaR,EAASjP,GACzBM,EAAGoP,aAAa3P,EAAMiP,GACtB1O,EAAGoP,aAAa1P,EAAM8O,GACtBxO,EAAGqP,cAAc5P,GACjBO,EAAGqP,cAAc3P,GACZM,EAAGsP,mBAAmB7P,EAAMO,EAAGuP,iBAChC9C,QAAQC,MAAM,mCAAoC1M,EAAGwP,iBAAiB/P,GAAOgQ,EAAef,IAE3F1O,EAAGsP,mBAAmB5P,EAAMM,EAAGuP,iBAChC9C,QAAQC,MAAM,qCAAsC1M,EAAGwP,iBAAiB9P,GAAO+P,EAAejB,IAElGxO,EAAG0P,YAAYf,IACA3O,EAAG2P,oBAAoBhB,EAAS3O,EAAG4P,aACrC,CACT,MAAMC,EAAY7P,EAAG8P,kBAAkBnB,GACvClC,QAAQC,MAAM,4BAA6BmD,GAM/C,OAJAhK,KAAKkK,gBR6XN,SAA8B/P,EAAI2O,GACrC,IAAIqB,EAAc,EAClB,SAASC,EAAoBtB,EAASuB,GAClC,MAAMjQ,EAAWD,EAAGmQ,mBAAmBxB,EAASuB,EAAYE,MACtD3R,EAAUyR,EAAY9O,KAAO,GAAqC,QAAhC8O,EAAYE,KAAKC,QAAQ,GAC3DzQ,EAAOsQ,EAAYtQ,KACnBsD,EAAWrD,EAAQD,GACzB,IAAKsD,EACD,MAAM,IAAIwD,MAAM,mBAAqB9G,EAAK0Q,SAAS,KAEvD,GAAgB,MAAZrQ,EACA,OAEJ,IAAI0B,EACJ,GArSiB,OAqSCuB,EArSVxB,KAqSqB,CAEzB,MAAMb,EAAOmP,EACbA,GAAeE,EAAY9O,KAEvBO,EADAlD,EACSyE,EAASrB,YAAY7B,EAAIJ,EAAMiB,EAAMZ,EAAUiQ,EAAY9O,MAG3D8B,EAASvB,OAAO3B,EAAIJ,EAAMiB,EAAMZ,QAKzC0B,EADAuB,EAASrB,aAAepD,EACfyE,EAASrB,YAAY7B,EAAIC,GAGzBiD,EAASvB,OAAO3B,EAAIC,GAGrC,MAAO,CAAE0B,SAAQ1B,YAErB,MAAMsQ,EAAiB,GACjBC,EAAcxQ,EAAG2P,oBAAoBhB,EAAS3O,EAAGyQ,iBACvD,IAAK,IAAIlP,EAAI,EAAGA,EAAIiP,IAAejP,EAAG,CAClC,MAAM2O,EAAclQ,EAAG0Q,iBAAiB/B,EAASpN,GACjD,IAAK2O,EACD,SAEJ,IAAIE,EAAOF,EAAYE,KAKvB,GAHwB,QAApBA,EAAKC,QAAQ,KACbD,EAAOA,EAAKC,OAAO,EAAGD,EAAK/I,OAAS,IAEpCsH,EAAS,CACT,MAAMhN,EAASsO,EAAoBtB,EAASuB,GACxCvO,IACA4O,EAAeH,GAAQzO,IAInC,OAAO4O,EQnboBI,CAAqB3Q,EAAI2O,GAChD9I,KAAK+K,kBRobN,SAAgC5Q,EAAI2O,GACvC,MAAMkC,EAAgB,GAChBC,EAAa9Q,EAAG2P,oBAAoBhB,EAAS3O,EAAG+Q,mBACtD,IAAK,IAAIxP,EAAI,EAAGA,EAAIuP,EAAYvP,IAAK,CACjC,MAAMyP,EAAahR,EAAGiR,gBAAgBtC,EAASpN,GAC/C,IAAKyP,EACD,MAEJ,MAAM/Q,EAAWD,EAAGkR,kBAAkBvC,EAASqC,EAAWZ,MACpDlN,EAAWiB,EAAY6M,EAAWpR,MAClC+B,EAASuB,EAASvB,OAAO3B,EAAIC,EAAUiD,GAC7C2N,EAAcG,EAAWZ,MAAQ,CAAEzO,SAAQ1B,YAE/C,OAAO4Q,EQjcsBM,CAAuBnR,EAAI2O,GACpD9I,KAAK2I,WAAaA,EAClB3I,KAAK6I,WAAaA,EACX7I,MAEX,UACI,MAAM7F,EAAK6F,KAAKD,SAAS5F,GACzBA,EAAGoR,cAAcvL,KAAKmJ,UACtBhP,EAAGqR,aAAaxL,KAAKoJ,OACrBjP,EAAGqR,aAAaxL,KAAKqJ,OACrBrJ,KAAK6I,gBAAa5P,EAClB+G,KAAK2I,gBAAa1P,EAClB+G,KAAK+K,kBAAoB,GACzB/K,KAAKkK,gBAAkB,IAG/B,SAASN,EAAe6B,GACpB,OAAOA,EACF7C,OACA8C,MAAM,MACN/J,KAAI,CAACgK,EAAMjQ,IAAMA,EAAI,EAAI,KAAOiQ,IAChCC,KAAK,MCpEd,IAAIC,EAAgB,EACb,MAAMC,EACT,YAAY5T,EAAK,SAAW2T,KACxB7L,KAAK9H,GAAKA,EACV8H,KAAK4H,UAAY,GAErB,OAAO3H,GAeH,OAdIA,EAAK8L,eACL/L,KAAKgM,cAAgB/L,EAAK8L,cAE1B9L,EAAKgM,OACLjM,KAAKiM,KAAOhM,EAAKgM,MAEjBhM,EAAKsI,QACLvI,KAAKuI,MAAQtI,EAAKsI,OAElBtI,EAAKuI,WACLxI,KAAK4H,UAAYjP,MAAMC,QAAQqH,EAAKuI,UAC9BvI,EAAKuI,SACL,CAACvI,EAAKuI,WAETxI,KAEX,UACIA,KAAKiM,MAAQjM,KAAKiM,KAAK/D,UACvBlI,KAAKuI,OAASvI,KAAKuI,MAAML,UACzBlI,KAAKgM,mBAAgB/S,EACrB+G,KAAK4H,UAAY,ICnBlB,MAAMsE,EACT,YAAYrE,EAAQsE,EAAO,IACvBnM,KAAK6H,OAASA,EACd7H,KAAK+C,UAAW,EAChB/C,KAAKoM,iBAAmB,EACxB,IAAIjS,EAAK,KAYT,GAXKgS,EAAKE,YACNlS,EACI0N,EAAOyE,WAAW,SAAUH,IACxBtE,EAAOyE,WAAW,sBAAuBH,IAE3C,MAANhS,IACA6F,KAAK+C,UAAW,EAChB5I,EACI0N,EAAOyE,WAAW,QAASH,IACvBtE,EAAOyE,WAAW,qBAAsBH,IAE1C,MAANhS,EACA,MAAM0G,MAAM,4BAEhBb,KAAK7F,GAAKA,EACV6F,KAAKuM,eAAiBJ,EAAKI,gBAAkB,EACzCvM,KAAK+C,WACL/C,KAAKoM,iBAAmBjS,EAAG6L,aAAa7L,EAAG8L,cAE/CjG,KAAKwM,SACLjO,EAAkBpE,EX5BnB,SAAiCA,GACpC,MAAO,CACHiF,WAAY,CAAC,EAAK,EAAK,EAAK,GAC5BR,UAAW,CAACzE,EAAGsS,UAAWtS,EAAGuS,sBWyBPC,CAAwBxS,IAC9C6F,KAAK4M,YAAc5M,KAAK6M,aAAatG,OAAOpN,EAAaC,YACzD4G,KAAK8M,cAAgB9M,KAAK+M,mBAE9B,SAEI,OC7BD,SAAsBlF,EAAQmF,EAAa,GAC9C,IAAI/J,EAAQ4E,EAAO5E,MACfC,EAAS2E,EAAO3E,OACpB,GAAI,gBAAiB2E,EAAQ,CACzB,MAAMoF,EAAOpF,EAAOqF,wBACpBjK,EAASgK,EAAKhK,MAAQ+J,EAAc,EACpC9J,EAAU+J,EAAK/J,OAAS8J,EAAc,GAEtCnF,EAAO5E,QAAUA,GAAS4E,EAAO3E,SAAWA,KAC5C2E,EAAO5E,MAAQA,EACf4E,EAAO3E,OAASA,GDkBhBiK,CAAanN,KAAK7F,GAAG0N,OAAQ7H,KAAKuM,gBAC3BvM,KAEX,UACIA,KAAK8M,cAAc5E,UACnBlI,KAAK4M,YAAY1E,UAErB,mBAAmB6D,GAEf,OADAxN,EAAkByB,KAAK7F,GAAIqJ,OAAOC,OAAO,GAAIsI,IACtC/L,KAEX,WAAW9H,GACP,OAAO,IAAI4H,EAAKE,KAAM9H,GAE1B,YAAYA,GACR,OAAO,IAAIwQ,EAAM1I,KAAM9H,GAE3B,aAAaA,GACT,OAAO,IAAI4T,EAAO5T,GAEtB,iBAAiBA,GACb,MAAMkV,EAAIpN,KAAKqN,aAAanV,GAC5B,OAAOkV,EAAE7G,OAAO,CACZ0F,KAAMjM,KAAK4M,YACXrE,MAAOvI,KAAKsN,YAAYF,EAAElV,GAAK,iBAAiBqO,OAAO5M,KAG/D,YAAYzB,GACR,OAAO,IAAI+O,EAAMjH,KAAM9H,GAE3B,YAAYA,GACR,OAAO,IAAIkQ,EAAMlQ,GAErB,aAAaA,GACT,MAAMqV,EAAIvN,KAAKwN,YAAYtV,GAC3B,OAAOqV,EAAEhH,OAAO,CACZ8B,SAAUrI,KAAK+M,iBAAiBQ,EAAErV,GAAK,mBAG/C,KAAKoQ,EAAQmF,GACT,MAAMtT,EAAK6F,KAAK7F,GAIhB,OAHAA,EAAGgL,gBAAgBhL,EAAGiL,YAAa,MACnCjL,EAAGuT,SAAS,EAAG,EAAGvT,EAAG0N,OAAO5E,MAAO9I,EAAG0N,OAAO3E,QAC7CyK,EAAKxT,EAAImO,EAAQmF,GACVzN,KAEX,WAAW4N,GACP,IAAK,MAAMC,KAASD,EAChBE,GAAY9N,KAAK7F,GAAI0T,GAEzB,OAAO7N,KAEX,QAAQ6N,EAAOE,EAAM,GACjB,OAAO/N,KAAK2N,KAAK3N,KAAK8M,cAAe,CAAEkB,OAAQH,EAAMI,MAAMF,MAGnE,SAASJ,EAAKxT,EAAImO,EAAQmF,EAAgBS,GACtC,MAAQ3F,MAAOA,EAAO0D,KAAMA,EAAMD,cAAeD,EAAcnE,UAAWY,GAAcF,EACxF,IAAMC,IAAS0D,EACX,MAAMpL,MAAM,+CAEhB1G,EAAGgU,WAAW5F,EAAMY,UA2BxB,SAAmBZ,EAAO0D,GACtB,IAAK,MAAM1B,KAAQ0B,EAAK7L,SAAU,CAC9B,MAAMtE,EAASyM,EAAMwC,kBAAkBR,GACnCzO,GACAA,EAAOA,OAAOmQ,EAAK7L,SAASmK,KA9BpC6D,CAAU7F,EAAO0D,GACbwB,GACAY,GAAc9F,EAAOkF,EAAgBS,GAErCnC,GACAxN,EAAkBpE,EAAI4R,GAE1B,IAAK,IAAIrQ,EAAI,EAAGA,GAAK8M,EAAShH,QAAU,GAAI9F,IACxC4S,EAAanU,EAAImO,EAAQE,EAAS9M,GAAIwS,GAEtCnC,GACAvM,EAAmBrF,EAAI4R,GAG/B,SAASuC,EAAanU,EAAImO,EAAQE,EAAU0F,GACpC1F,GACA6F,GAAc/F,EAAOC,MAAOC,EAAU0F,GAEtC5F,EAAO2D,KAAKxL,WAA6C,MAAhC6H,EAAO2D,KAAKxL,UAAUC,QAC/CvG,EAAGoD,WAAWpD,EAAG4G,qBAAsBuH,EAAO2D,KAAKxL,UAAUnH,QAC7Da,EAAGoU,aAAajG,EAAO2D,KAAK/L,UAAWoI,EAAO2D,KAAK9L,WAAYmI,EAAO2D,KAAKxL,UAAUC,OAAQ,IAG7FvG,EAAGqU,WAAWlG,EAAO2D,KAAK/L,UAAW,EAAGoI,EAAO2D,KAAK9L,YAW5D,SAASkO,GAAc9F,EAAOC,EAAU0F,GACpC,IAAK,MAAM3D,KAAQ/B,EAAU,CACzB,MAAM1M,EAASyM,EAAM2B,gBAAgBK,GACrC,GAAIzO,EAAQ,CACR,IAAI2S,EAAQjG,EAAS+B,GACA,mBAAVkE,IACPA,EAAQA,KAES,iBAAVA,GAAsBP,EAC7BpS,EAAOA,OAAOoS,EAAQO,IAGtB3S,EAAOA,OAAO2S,KAK9B,SAASC,GAAYvU,EAAIwN,EAAOa,EAAUmG,EAAQX,GAC1CW,GACAxU,EAAGgL,gBAAgBhL,EAAGiL,YAAauJ,EAAO9K,UAAY8K,EAAO5K,qBAAuB4K,EAAO7K,aAC3F3J,EAAGuT,SAAS,EAAG,EAAGiB,EAAO1L,MAAO0L,EAAOzL,UAGvC/I,EAAGgL,gBAAgBhL,EAAGiL,YAAa,MACnCjL,EAAGuT,SAAS,EAAG,EAAGvT,EAAG0N,OAAO5E,MAAO9I,EAAG0N,OAAO3E,SAE7CyE,EAAM7F,MAAMiK,cACZxN,EAAkBpE,EAAIwN,EAAM7F,MAAMiK,cAEtC,IAAK,MAAMzD,KAAUX,EAAMU,SACvBsF,EAAKxT,EAAImO,EAAQE,EAAUwF,GAE/B,GAAIW,GAAUA,EAAO9K,UAAW,CAC5B,MAAM6B,EAAMvL,EAEZA,EAAGgL,gBAAgBO,EAAIkJ,iBAAkBD,EAAO5K,sBAChD5J,EAAGgL,gBAAgBO,EAAImJ,iBAAkBF,EAAO7K,aAChD4B,EAAIoJ,cAAcpJ,EAAIqJ,MAAO,EAAG,CAAC,EAAK,EAAK,EAAK,IAChDrJ,EAAIsJ,gBAAgB,EAAG,EAAGL,EAAO1L,MAAO0L,EAAOzL,OAAQ,EAAG,EAAGyL,EAAO1L,MAAO0L,EAAOzL,OAAQ/I,EAAG8U,iBAAkB9U,EAAG+U,QAElHvH,EAAM7F,MAAMiK,cACZvM,EAAmBrF,EAAIwN,EAAM7F,MAAMiK,cAG3C,SAAS+B,GAAY3T,EAAI0T,GACrB,IAAK,IAAInS,EAAI,EAAGA,EAAImS,EAAM3G,OAAO1F,OAAQ9F,IAAK,CAC1C,MAAMiM,EAAQkG,EAAM3G,OAAOxL,GACrByT,EAAcxH,EAAMC,UAAUpG,QAAU,EAC9C,IAAK,IAAI4N,EAAI,EAAGA,EAAID,EAAaC,IAAK,CAClC,MAAMT,EAASd,EAAM1G,SAAS,GACxB+G,EAAUxS,EAAI0T,IAAM,GAAKvB,EAAMzG,UAAU5F,OACzCqM,EAAMzG,UACNyG,EAAM1G,SAAS,IAAM0G,EAAM1G,SAAS,GAAGxL,SAC7C+S,GAAYvU,EAAIwN,EAAOA,EAAMC,UAAUwH,GAAIT,EAAQT,GACnDL,EAAMwB,iBE7LX,MAAMC,GAGF,ECaX,IAAIC,GACAC,GAEJ,MAAM,GAAgC,GACtC,SAASC,GAAQvX,GAChB,OAAO,GAAMA,KAAQ,GAAMA,GAAMsX,GAAQ3C,WAAW,QAAU3U,IAG/D,MAAMwX,GAAkC,GACxC,SAASC,GAASzX,GACjB,OAAOwX,GAAOxX,KAAQwX,GAAOxX,GAAMsX,GAAQlC,YAAY,SAAWpV,IAGnE,MAAMmQ,GAAqC,GAC3C,SAASuH,GAAU1X,GAClB,OAAOmQ,GAASnQ,KAAQmQ,GAASnQ,GAAMsX,GAAQnC,aAAa,UAAYnV,IAGzE,MAAM,GAAkC,GACxC,SAAS2X,GAAS3X,GACjB,OAAO,GAAOA,KAAQ,GAAOA,GAAMsX,GAAQhC,YAAY,SAAWtV,IAGnE,MAAM,GAAkC,GACxC,SAAS4X,GAAS5X,GACjB,OAAO,GAAOA,KAAQ,GAAOA,GAAMsX,GAAQO,YAAY,SAAW7X,IAGnE,MAAM8X,GAAmC,GACzC,SAASC,GAAU/X,GAClB,OAAO8X,GAAQ9X,KAAQ8X,GAAQ9X,GAAMsX,GAAQU,aAAa,UAAYhY,IAevE,MAAMiY,GAAmB,CACxBC,OAAQ,CACPnY,IAAK,EACLsU,eAAgB,IAGhB8D,OAAeF,MAAQA,GAMzB,MAAMG,GAEF,GAESC,GAAa,CACzBC,MAAO,QACPC,OAAQ,UAKT,IAAIC,GACAC,GACAC,GCpFG,MAAM/I,GAASgJ,SAASC,eAAe,UAEjCC,GDoFN,SACNlJ,EACAsE,GAkCA,OAhCItE,IAAW0H,KACdA,GAAgB1H,EAEhB2H,GAAU,IAAItD,EAAQrE,OC3FPmJ,GD6Ffb,GAAMC,OAAOvI,OAASA,EAEtB6I,IAAgBA,KAChBC,IAAiBA,KACjBC,IAAcA,KAEdF,GEvGK,SAAoBO,GACvB,SAASzE,IACLyE,EAAS,CACLhO,MAAOoN,OAAOa,WACdhO,OAAQmN,OAAOc,cAKvB,OAFAd,OAAOe,iBAAiB,SAAU5E,GAClCA,IACO,WACH6D,OAAOgB,oBAAoB,SAAU7E,IF6F5B8E,EAAW,KACzBC,OlBjEkBrQ,EkBiEb,KACJsO,GAAQjD,eAAiB4D,GAAMC,OAAO7D,eACtCiD,GAAQhD,SACRgF,EAAKjB,GAAWE,SlBnEnBvY,GADkCA,EkBqE7B,WlBpEMgJ,EAAGqJ,MAAQ1S,IACtBH,EAAaA,GAAc,GAC3BA,EAAWQ,GAAMgJ,OAEZtJ,IACJQ,sBAAsBL,GACtBH,GAAa,IAPR,IAAcsJ,EAAchJ,KkBwEjCyY,GD1GK,SAAiBxE,EAAM8E,GAC1B,MAAMQ,EAAKR,GAAY9E,GACjB,QAAEuF,EAAUb,SAAQ,kBAAEc,EAAiB,UAAEC,EAAY,IAAG,WAAEC,EAAa,GAAO1F,EAC9EgE,EAAQ,CACV2B,QAAS,GACTC,KAAM,CAAEC,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAGC,GAAI,EAAGC,KAAM,EAAGC,KAAM,GACjDC,UAAU,EACVC,SAAS,GAEb,IAAIP,EAAI,EAAGC,EAAI,EAAGO,EAAK,EAAGC,EAAK,EAAGC,EAAU,KAC5C,SAASC,EAAcC,GACfA,EAAEC,WACF1C,EAAM2B,QAAQc,EAAEE,QAAUF,EAC1BZ,EAAIQ,EAAKI,EAAEG,QACXd,EAAIQ,EAAKG,EAAEI,QACX7C,EAAMmC,UAAW,EACN,MAAXI,GAAmBO,aAAaP,GAChCA,EAAUQ,YAAW,KACb/C,EAAM4B,KAAKK,KAAOP,GAAc1B,EAAM4B,KAAKM,KAAOR,IAClD1B,EAAMoC,SAAU,EAChBd,EAAGtB,MAERyB,IAGHzB,EAAM2B,QAAQxC,IAAiBsD,EAEnCnB,EAAGtB,GAEP,SAASgD,EAAYC,GACjBjD,EAAM2B,QAAU,UACT3B,EAAM4B,KAAKsB,MAClBlD,EAAM4B,KAAKC,EAAI,EACf7B,EAAM4B,KAAKE,EAAI,EACf9B,EAAM4B,KAAKG,GAAK,EAChB/B,EAAM4B,KAAKI,GAAK,EAChBhC,EAAM4B,KAAKK,KAAO,EAClBjC,EAAM4B,KAAKM,KAAO,EAClBlC,EAAMmC,UAAW,EACjBnC,EAAMoC,SAAU,EACL,MAAXG,GAAmBO,aAAaP,GAChCA,EAAU,KACVjB,EAAGtB,GAEP,SAASmD,EAAcV,GACfzC,EAAMmC,UAAYM,EAAEC,YACpB1C,EAAM4B,KAAKsB,MAAQT,EACnBzC,EAAM4B,KAAKC,EAAIA,EAAIY,EAAEG,QACrB5C,EAAM4B,KAAKE,EAAIA,EAAIW,EAAEI,QACrB7C,EAAM4B,KAAKG,GAAKM,EAAKI,EAAEG,QACvB5C,EAAM4B,KAAKI,GAAKM,EAAKG,EAAEI,QACvB7C,EAAM4B,KAAKK,KAAOtM,KAAKyN,IAAIzN,KAAK0N,IAAIrD,EAAM4B,KAAKC,GAAI7B,EAAM4B,KAAKK,MAC9DjC,EAAM4B,KAAKM,KAAOvM,KAAKyN,IAAIzN,KAAK0N,IAAIrD,EAAM4B,KAAKE,GAAI9B,EAAM4B,KAAKM,MAC9DG,EAAKI,EAAEG,QACPN,EAAKG,EAAEI,QACPvB,EAAGtB,IAGX,SAASsD,EAAeb,GACpBA,EAAEa,iBAWN,OATA/B,EAAQN,iBAAiB,cAAeuB,GACxC9B,SAASO,iBAAiB,cAAekC,GACzCzC,SAASO,iBAAiB,YAAa+B,GACvCtC,SAASO,iBAAiB,eAAgB+B,GAC1CtC,SAASO,iBAAiB,gBAAiB+B,GACvCxB,GACAD,EAAQN,iBAAiB,cAAeqC,GAE5ChC,EAAGtB,GACI,WACHuB,EAAQL,oBAAoB,cAAesB,GAC3C9B,SAASQ,oBAAoB,cAAeiC,GAC5CzC,SAASQ,oBAAoB,YAAa8B,GAC1CtC,SAASQ,oBAAoB,eAAgB8B,GAC7CtC,SAASQ,oBAAoB,gBAAiB8B,GAC1CxB,GACAD,EAAQL,oBAAoB,cAAeoC,IC6BrCC,CACf,CACChC,QAAS7J,EACT8J,mBAAmB,EACnBE,WAAY,EACZD,UAAW,MAEX+B,GAAOxD,GAAMC,OAAOsD,QAAUC,IAGhC/C,GjBHK,SAAkBzE,EAAM8E,GAC3B,MAAMQ,EAAKR,GAAY9E,GACjB,QAAEuF,EAAUrB,QAAWlE,EACvB2F,EAAU,GAChB,SAAS8B,EAAUP,GACfvB,EAAQuB,EAAMQ,SAAWC,KAAKC,MAC9BtC,EAAGK,GAEP,SAASkC,EAAQX,UACNvB,EAAQuB,EAAMQ,SACrBpC,EAAGK,GAKP,OAHAJ,EAAQN,iBAAiB,QAAS4C,GAAS,GAC3CtC,EAAQN,iBAAiB,UAAWwC,GAAW,GAC/CnC,EAAGK,GACI,WACHJ,EAAQL,oBAAoB,QAAS2C,GACrCtC,EAAQL,oBAAoB,UAAWuC,IiBdhCK,EAAUC,GAAO/D,GAAMC,OAAO7L,KAAO2P,KAG5C,CACN1E,WACArV,GAAIqV,GAAQrV,GACZsV,WACAE,YACAC,aACAC,YACAC,YACAG,aAEAE,MAAOA,GAEPgE,IAMD,SAA0CC,GACzC,OAAQjE,GAAYiE,IANpBC,IASD,SACCxb,EACAyb,EACAnI,GAEA,MAAMiB,EAAI+C,GACV,GAAI/C,EAAEvU,GAAM,CACX,MAAM0b,EAAQpI,GAAQA,EAAKoI,OACb,IAAVA,IACHD,EAAMhc,EAAagc,EAAKlH,EAAEvU,GAAM,CAAEH,OAAQ6b,KAG5CnH,EAAEvU,GAAOyb,GApBTE,OAuBD,SAAgBtc,EAAYmb,EAAejG,GACrCkD,GAAc+C,KAAQ/C,GAAc+C,GAAS,IAClD/C,GAAc+C,GAAOnb,GAAMkV,GAxB3BoE,QA2BD,SAASA,EAAK6B,GACb,MAAMT,EAAItC,GAAc+C,GACxB,GAAIT,EACH,IAAK,MAAM1a,KAAM0a,EAChBA,EAAE1a,GAAIiY,KCtKOa,CAAkBnJ,IEG5B,SAAS4M,GAAIC,EAAMC,EAAMxT,EAAM,IAClC,IAAK,IAAIzF,EAAI,EAAGA,EAAIgZ,EAAKlT,OAAQ9F,IAC7ByF,EAAIzF,GAAKgZ,EAAKhZ,GAAKiZ,EAAKjZ,GAE5B,OAAOyF,EAEJ,SAASyT,GAAIF,EAAMC,EAAMxT,EAAM,IAClC,IAAK,IAAIzF,EAAI,EAAGA,EAAIgZ,EAAKlT,OAAQ9F,IAC7ByF,EAAIzF,GAAKgZ,EAAKhZ,GAAKiZ,EAAKjZ,GAE5B,OAAOyF,EAEJ,SAAS0T,GAAIC,EAAQC,EAAK5T,EAAM,IACnC,IAAK,IAAIzF,EAAI,EAAGA,EAAIqZ,EAAIvT,OAAQ9F,IAC5ByF,EAAIzF,GAAKqZ,EAAIrZ,GAAKoZ,EAEtB,OAAO3T,EAEJ,SAAS6T,GAAIF,EAAQC,EAAK5T,EAAM,IACnC,IAAK,IAAIzF,EAAI,EAAGA,EAAIqZ,EAAIvT,OAAQ9F,IAC5ByF,EAAIzF,GAAKqZ,EAAIrZ,GAAKoZ,EAEtB,OAAO3T,EAEJ,SAAS,GAAO4T,GACnB,IAAIE,EAAM,EAEV,IAAK,IAAIvZ,EAAI,EAAGA,EAAIqZ,EAAIvT,OAAQ9F,IAAK,CACjC,MAAM4Y,EAAMS,EAAIrZ,GAChBuZ,GAAOX,EAAMA,EAEjB,OAAOxO,KAAKoP,KAAKD,GAEd,SAASrX,GAAUmX,EAAK5T,EAAM,IACjC,OAAO6T,GAAI,GAAOD,GAAMA,EAAK5T,GFnCX,OAAH,UACfoP,IGU6BzK,KAAKqP,GCjB/B,MAAMC,GAOZ,YAAYC,GACXrV,KAAKyO,MAAQ4G,EAPd,UAAaA,GACZ,OAAO,IAAID,GAAEC,GASd,GAAM/X,GACL,OAAO,IAAI8X,GAAE9X,GAGd,IAAO4D,GACN,OAAO,IAAIkU,GAAElU,EAAGlB,KAAKyO,QAGtB,GAAMkF,GACL,OAAOA,EAAE2B,MAAMtV,KAAK2B,IAAI4T,KAAKvV,OAG9B,MAASkB,GACR,OAAOA,EAAGlB,KAAKyO,OAGhB,QAAWvN,EAAuB5D,GACjC,OAAO0C,KAAKsV,OAAME,GAAMlY,EAAEgY,OAAMG,GAAML,GAAEM,GAAGxU,EAAGsU,EAAIC,QAGnD,KAAQvU,EAAuB5D,GAC9B,OAAO0C,KAAKsV,OAAME,GAAMJ,GAAEM,GAAGxU,EAAGsU,EAAIlY,OAU/B,SAASqY,GACfjU,EACAwS,EACAhT,GAGA,OADEQ,EAAawS,GAAKhT,EAAIQ,EAAawS,IAC9BxS,EChDD,SAAS,GAAQkU,GACpB,OAAO9P,KAAK+P,MAAM/P,KAAKgQ,SAAWF,GAE/B,SAAS,GAAeG,EAAMC,GACjC,OAAO,GAAQA,EAAKD,GAAQA,ECSzB,MAIME,GAAQhV,GACpBvF,IAAK,CACJxD,GAAIwD,EACJwa,IAAK,CAACpQ,KAAKgQ,SAAWjO,GAAO5E,MAAO6C,KAAKgQ,SAAWjO,GAAO3E,QAC3DiT,GAAI,GAPwB,GAQ5BC,MAAO,CAAC,EAAG,MATY,IAcZC,GAAcjV,EAC1BH,GAAMvF,IACL,GAAIA,EAAI4a,GAAe,CACtB,MAAMC,EAAK,GAAe7a,EAAI,EAAG4a,IAC3BE,EAAK,CAAC,CAAC9a,EAAG6a,IACVE,EAAK,GAAe/a,EAAI,EAAG4a,IAIjC,OAHIG,IAAOF,GACVC,EAAGE,KAAK,CAAChb,EAAG+a,IAEND,EAEP,MAAO,KAzBe,KA8BzB,SAASG,GAAaP,EAAkBQ,EAAkBb,EAAWC,GACpE,MAAMzP,EAAUsQ,GAAkBxc,GACjCwc,EAAEC,QAAQjC,GAAK+B,GAAKG,KAAKtC,GAAKpa,GAAGoU,MAElCkH,GAAMI,EAAM,QAASxP,EAAO6P,IAC5BT,GAAMK,EAAI,QAASzP,EAAO6P,EAAMzU,KAAIkV,IAAMA,MC1CpC,MAAMG,GAAajG,GAAEtB,QAAQ,UACvBwH,GAAWlG,GAAEtB,QAAQ,SCI5ByH,GAAcnG,GAAEpB,SAAS,SAASpJ,OAAO,CAC9C3M,KCZD,oPDaCC,KEbD,mIFgBMsd,GAAapG,GAAEpB,SAAS,QAAQpJ,OAAO,CAC5C3M,KGjBD,0JHkBCC,KIlBD,kHJuBMud,GAASrG,GAAEnB,UAAU,SAASrJ,OAAO,CAC1C0F,KAAM+K,GACNzO,MAAO2O,GACP1O,SAAU,CAAEjN,KAAM,CAACsM,GAAO5E,MAAO4E,GAAO3E,WAGnCmU,GAAQtG,GAAEnB,UAAU,SAASrJ,OAAO,CACzC0F,KAAMgL,GACN1O,MAAO4O,GACPpL,aAAc,CACb3M,WAAY,CAAC,EAAG,EAAG,EAAG,GACtBE,UAAWyR,GAAE5W,GAAG8U,iBAChBlQ,SAAUgS,GAAE5W,GAAGmd,KACf7Y,OAAQ,CAACsS,GAAE5W,GAAGod,YAEf/O,SAAU,CAAEjN,KAAM,CAACsM,GAAO5E,MAAO4E,GAAO3E,WAMzC,IAAIlL,GAAO,E3BMJ,IAAgBkJ,GAAchJ,GAAdgJ,G2BLfjJ,I3BiBD,IAAcC,E2BhBpBF,IAAQC,EFKF,SAAqBA,GAC3B,IAAK,MAAMuf,KAAKnB,GAAa,CAC5B,MAAMoB,EAAKxB,GAAMuB,EAAE,IACbE,EAAKzB,GAAMuB,EAAE,IAEbzC,EAAMK,GAAEM,GAAGgC,EAAGxB,KAAKa,KAAKnC,GAAK6C,EAAGvB,KAEhCU,EAAM7B,EAAIpT,IAAI/D,IAOpB+Y,GALc5B,EACZpT,IAAI,IACJA,KAAI4L,GAAKA,EA/CQ,MAgDjB5L,KAAItH,GAAS,EAAJA,IAESuc,EAAKa,EAAIC,GAG9B,IAAK,IAAIhc,EAAI,EAAGA,EAAIua,GAAMzU,OAAS,EAAG9F,IAAK,CAC1C,MAAM+b,EAAKxB,GAAMva,GACjB,IAAK,IAAI0T,EAAI1T,EAAI,EAAG0T,EAAI6G,GAAMzU,OAAQ4N,IAAK,CAC1C,MAAMsI,EAAKzB,GAAM7G,GAEX2F,EAAMK,GAAEM,GAAGgC,EAAGxB,KAAKa,KAAKnC,GAAK6C,EAAGvB,KAEhCU,EAAM7B,EAAIpT,IAAI/D,IACd+Z,EAAO5C,EAAIpT,IAAI,IAGrBgV,GAFcgB,EAAKhW,KAAI4L,IAAMzH,KAAKyN,IAAI,IAAMhG,EAAG,KAE3BqJ,EAAKa,EAAIC,GAEzBA,EAAGvB,KAAOsB,EAAGtB,GAEhBQ,GADcgB,EAAKhW,KAAIiW,GAAKA,EAAI,MACZhB,EAAKa,EAAIC,GAG7Bf,GADcgB,EAAKhW,KAAIiW,IAAM9R,KAAKyN,IAAI,IAAMqE,EAAG,KAC3BhB,EAAKa,EAAIC,IAKhC,IAAK,MAAMG,KAAQ5B,GAAO,CACzB,MAAMG,EAAQyB,EAAKzB,MACb7I,EAAI,GAAO6I,GAAS,EAC1B,GAAI7I,EAAI,EAAG,CACV,MAAMuK,EAAI9C,GAAIzH,EAAI,EAAG6I,GACrByB,EAAK3B,IAAMzB,GAAIoD,EAAK3B,IAAKrB,GAAItH,GAAKtV,EAAM,KAAM6f,IAC9CD,EAAKzB,MAAQ,CAAC,EAAG,KEjDnB2B,CAAY9f,GDpCZ+e,GAAWzQ,OAAO,CACjB9M,SAAU,SACVJ,QAAS,CACR2e,SAAU,CACT1e,OAAQ,IAAIC,aAAakI,GAAQqW,GAAMA,EAAE5B,KAAKD,KAC9Czc,UAAW,WAEZye,MAAO,CACN3e,OAAQ,IAAIC,aACXkI,GACEqW,GACW,CACTA,EAAE3B,GDVmB,ECUI,IACS,KAAjC2B,EAAE3B,GDXkB,ECWI,EAAI,GAAY,IACP,KAAjC2B,EAAE3B,GDZkB,ECYI,EAAI,GAAY,KMNjCxU,KAAItH,GAAKA,EAAI,ONQxB4b,KAGFzc,UAAW,YAGbE,UAAWuc,GAAMzU,SAGlByV,GAAS1Q,OAAO,CACf9M,SAAU,YACVJ,QAAS,CACR2e,SAAU,CACT1e,OAAQ,IAAIC,aACXkI,GAAQ+V,IACP,MAAMC,EAAKxB,GAAMuB,EAAE,IACbE,EAAKzB,GAAMuB,EAAE,IACbU,EAAQta,GAAUgX,GAAI8C,EAAGxB,IAAKuB,EAAGvB,MACjCiC,EAAS,CAACD,EAAM,IAAKA,EAAM,IAC3BE,EAAK3D,GAAIgD,EAAGvB,IAAKrB,GAAI5V,IAAekZ,IACpCE,EAAK5D,GAAIgD,EAAGvB,IAAKrB,IAAI,IAAgBsD,IACrCG,EAAK7D,GAAIiD,EAAGxB,IAAKrB,GAAI5V,IAAekZ,IAE1C,OAAO/W,EAAQ,CAACkX,EAAID,EAAID,EAAIC,EAAIC,EADrB7D,GAAIiD,EAAGxB,IAAKrB,IAAI,IAAgBsD,QAEzC9B,KAEJ7c,UAAW,YAGbE,UAAgC,EAArB2c,GAAY7U,SCNxBuP,GAAEvB,QAAQ7B,KAAK0J,IACftG,GAAEvB,QAAQ7B,KAAKyJ,IAEXpf,IAAQugB,M3BSM,mBADErgB,E2BRgB,Y3BUnCA,EAAKA,EAAGqS,aAEF5S,EAAaO,KAfpBA,IADoCA,G2BKlC,W3BJSgJ,GAAGqJ,MAAQ1S,IACtBF,EAAaO,IAAMgJ,GAEdtJ,IACJQ,sBAAsBL,GACtBH,GAAa,I","file":"experiments/graph-sort/main.js","sourcesContent":["// onNextTick\n// schedule actions on next animation frame\n\ntype Callback = (n: number) => void\n\nlet updateOnce: { [id: string]: Callback } | null = null\nconst updateRepeat: { [id: string]: Callback } = {}\n\nlet willUpdate = false\n\nlet uidCounter = 0\n\nlet oldTime = 0\n\nfunction processUpdates(time: number) {\n\tconst tpf = oldTime ? time - oldTime : oldTime\n\toldTime = time\n\n\tif (updateOnce) {\n\t\tfor (const id in updateOnce) {\n\t\t\tupdateOnce[id](tpf)\n\t\t}\n\t\tupdateOnce = null\n\t}\n\n\tlet updates = 0\n\tfor (const id in updateRepeat) {\n\t\tupdates++\n\t\tupdateRepeat[id](tpf)\n\t}\n\n\tif (!updates) {\n\t\twillUpdate = false\n\t\toldTime = 0\n\t} else {\n\t\trequestAnimationFrame(processUpdates)\n\t}\n}\n\nexport function once(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateOnce = updateOnce || {}\n\tupdateOnce[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n}\n\nexport function repeat(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateRepeat[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n\n\treturn id\n}\n\nexport function stop(id: Callback | string | number) {\n\tif (typeof id === 'function') {\n\t\tid = id.name\n\t}\n\tdelete updateRepeat[id]\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export var Keys;\n(function (Keys) {\n    Keys[Keys[\"CANCEL\"] = 3] = \"CANCEL\";\n    Keys[Keys[\"HELP\"] = 6] = \"HELP\";\n    Keys[Keys[\"BACK_SPACE\"] = 8] = \"BACK_SPACE\";\n    Keys[Keys[\"TAB\"] = 9] = \"TAB\";\n    Keys[Keys[\"CLEAR\"] = 12] = \"CLEAR\";\n    Keys[Keys[\"RETURN\"] = 13] = \"RETURN\";\n    Keys[Keys[\"ENTER\"] = 14] = \"ENTER\";\n    Keys[Keys[\"SHIFT\"] = 16] = \"SHIFT\";\n    Keys[Keys[\"CONTROL\"] = 17] = \"CONTROL\";\n    Keys[Keys[\"ALT\"] = 18] = \"ALT\";\n    Keys[Keys[\"PAUSE\"] = 19] = \"PAUSE\";\n    Keys[Keys[\"CAPS_LOCK\"] = 20] = \"CAPS_LOCK\";\n    Keys[Keys[\"ESCAPE\"] = 27] = \"ESCAPE\";\n    Keys[Keys[\"SPACE\"] = 32] = \"SPACE\";\n    Keys[Keys[\"PAGE_UP\"] = 33] = \"PAGE_UP\";\n    Keys[Keys[\"PAGE_DOWN\"] = 34] = \"PAGE_DOWN\";\n    Keys[Keys[\"END\"] = 35] = \"END\";\n    Keys[Keys[\"HOME\"] = 36] = \"HOME\";\n    Keys[Keys[\"LEFT\"] = 37] = \"LEFT\";\n    Keys[Keys[\"UP\"] = 38] = \"UP\";\n    Keys[Keys[\"RIGHT\"] = 39] = \"RIGHT\";\n    Keys[Keys[\"DOWN\"] = 40] = \"DOWN\";\n    Keys[Keys[\"PRINTSCREEN\"] = 44] = \"PRINTSCREEN\";\n    Keys[Keys[\"INSERT\"] = 45] = \"INSERT\";\n    Keys[Keys[\"DELETE\"] = 46] = \"DELETE\";\n    Keys[Keys[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    Keys[Keys[\"DIGIT_1\"] = 49] = \"DIGIT_1\";\n    Keys[Keys[\"DIGIT_2\"] = 50] = \"DIGIT_2\";\n    Keys[Keys[\"DIGIT_3\"] = 51] = \"DIGIT_3\";\n    Keys[Keys[\"DIGIT_4\"] = 52] = \"DIGIT_4\";\n    Keys[Keys[\"DIGIT_5\"] = 53] = \"DIGIT_5\";\n    Keys[Keys[\"DIGIT_6\"] = 54] = \"DIGIT_6\";\n    Keys[Keys[\"DIGIT_7\"] = 55] = \"DIGIT_7\";\n    Keys[Keys[\"DIGIT_8\"] = 56] = \"DIGIT_8\";\n    Keys[Keys[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    Keys[Keys[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    Keys[Keys[\"EQUALS\"] = 61] = \"EQUALS\";\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    Keys[Keys[\"CONTEXT_MENU\"] = 93] = \"CONTEXT_MENU\";\n    Keys[Keys[\"NUMPAD0\"] = 96] = \"NUMPAD0\";\n    Keys[Keys[\"NUMPAD1\"] = 97] = \"NUMPAD1\";\n    Keys[Keys[\"NUMPAD2\"] = 98] = \"NUMPAD2\";\n    Keys[Keys[\"NUMPAD3\"] = 99] = \"NUMPAD3\";\n    Keys[Keys[\"NUMPAD4\"] = 100] = \"NUMPAD4\";\n    Keys[Keys[\"NUMPAD5\"] = 101] = \"NUMPAD5\";\n    Keys[Keys[\"NUMPAD6\"] = 102] = \"NUMPAD6\";\n    Keys[Keys[\"NUMPAD7\"] = 103] = \"NUMPAD7\";\n    Keys[Keys[\"NUMPAD8\"] = 104] = \"NUMPAD8\";\n    Keys[Keys[\"NUMPAD9\"] = 105] = \"NUMPAD9\";\n    Keys[Keys[\"MULTIPLY\"] = 106] = \"MULTIPLY\";\n    Keys[Keys[\"ADD\"] = 107] = \"ADD\";\n    Keys[Keys[\"SEPARATOR\"] = 108] = \"SEPARATOR\";\n    Keys[Keys[\"SUBTRACT\"] = 109] = \"SUBTRACT\";\n    Keys[Keys[\"DECIMAL\"] = 110] = \"DECIMAL\";\n    Keys[Keys[\"DIVIDE\"] = 111] = \"DIVIDE\";\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    Keys[Keys[\"F13\"] = 124] = \"F13\";\n    Keys[Keys[\"F14\"] = 125] = \"F14\";\n    Keys[Keys[\"F15\"] = 126] = \"F15\";\n    Keys[Keys[\"F16\"] = 127] = \"F16\";\n    Keys[Keys[\"F17\"] = 128] = \"F17\";\n    Keys[Keys[\"F18\"] = 129] = \"F18\";\n    Keys[Keys[\"F19\"] = 130] = \"F19\";\n    Keys[Keys[\"F20\"] = 131] = \"F20\";\n    Keys[Keys[\"F21\"] = 132] = \"F21\";\n    Keys[Keys[\"F22\"] = 133] = \"F22\";\n    Keys[Keys[\"F23\"] = 134] = \"F23\";\n    Keys[Keys[\"F24\"] = 135] = \"F24\";\n    Keys[Keys[\"NUM_LOCK\"] = 144] = \"NUM_LOCK\";\n    Keys[Keys[\"SCROLL_LOCK\"] = 145] = \"SCROLL_LOCK\";\n    Keys[Keys[\"COMMA\"] = 188] = \"COMMA\";\n    Keys[Keys[\"PERIOD\"] = 190] = \"PERIOD\";\n    Keys[Keys[\"SLASH\"] = 191] = \"SLASH\";\n    Keys[Keys[\"BACK_QUOTE\"] = 192] = \"BACK_QUOTE\";\n    Keys[Keys[\"OPEN_BRACKET\"] = 219] = \"OPEN_BRACKET\";\n    Keys[Keys[\"BACK_SLASH\"] = 220] = \"BACK_SLASH\";\n    Keys[Keys[\"CLOSE_BRACKET\"] = 221] = \"CLOSE_BRACKET\";\n    Keys[Keys[\"QUOTE\"] = 222] = \"QUOTE\";\n    Keys[Keys[\"META\"] = 224] = \"META\";\n})(Keys || (Keys = {}));\nexport function keyboard(opts, callback) {\n    const cb = callback || opts;\n    const { element = window } = opts;\n    const pressed = {};\n    function onKeydown(event) {\n        pressed[event.keyCode] = Date.now();\n        cb(pressed);\n    }\n    function onKeyup(event) {\n        delete pressed[event.keyCode];\n        cb(pressed);\n    }\n    element.addEventListener('keyup', onKeyup, false);\n    element.addEventListener('keydown', onKeydown, false);\n    cb(pressed);\n    return function stop() {\n        element.removeEventListener('keyup', onKeyup);\n        element.removeEventListener('keydown', onKeydown);\n    };\n}\nexport function keyboardObserver(opts) {\n    const observer = {\n        Keys,\n        state: { pressed: {} },\n        destroy: () => { },\n    };\n    function callback(pressed) {\n        observer.state.pressed = pressed;\n    }\n    observer.destroy = keyboard(callback, opts);\n    return observer;\n}\n//# sourceMappingURL=keyboard.js.map","export function deepmerge(obj1, obj2) {\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        const result = Object.assign({}, obj1);\n        for (const key in obj2) {\n            const val1 = obj1[key];\n            const val2 = obj2[key];\n            if (typeof val2 !== 'undefined') {\n                result[key] = deepmerge(val1, val2);\n            }\n            else {\n                delete result[key];\n            }\n        }\n        return result;\n    }\n    return obj2;\n}\nexport function deepOverride(obj1, obj2, opt) {\n    const ignore = opt && opt.ignore;\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        for (const key in obj1) {\n            if (obj1.hasOwnProperty(key) &&\n                !(ignore && key in ignore && ignore[key] === true)) {\n                const val1 = obj1[key];\n                const val2 = obj2[key];\n                if (val2 !== undefined) {\n                    obj1[key] = deepOverride(val1, val2, {\n                        ignore: ignore && ignore[key],\n                    });\n                }\n            }\n        }\n        return obj1;\n    }\n    return obj2;\n}\nexport function mapObj(fn, coll, res = {}) {\n    for (const key in coll) {\n        res[key] = fn(coll[key], key);\n    }\n    return res;\n}\n//# sourceMappingURL=object.js.map","export const GEOMETRY_PROP_POSITION = 'position';\nexport const GEOMETRY_PROP_NORMAL = 'normal';\nexport const GEOMETRY_PROP_UV = 'uv';\nexport const UNIFORM_SOURCE_TEXTURE = 'source';\nexport const VARYING_UV_COORDS = 'coords';\nexport const GL_TYPE = {\n    FLOAT: 0x1406,\n    FLOAT_VEC2: 0x8b50,\n    FLOAT_VEC3: 0x8b51,\n    FLOAT_VEC4: 0x8b52,\n    INT: 0x1404,\n    INT_VEC2: 0x8b53,\n    INT_VEC3: 0x8b54,\n    INT_VEC4: 0x8b55,\n    BOOL: 0x8b56,\n    BOOL_VEC2: 0x8b57,\n    BOOL_VEC3: 0x8b58,\n    BOOL_VEC4: 0x8b59,\n    FLOAT_MAT2: 0x8b5a,\n    FLOAT_MAT3: 0x8b5b,\n    FLOAT_MAT4: 0x8b5c,\n    SAMPLER_2D: 0x8b5e,\n    SAMPLER_CUBE: 0x8b60,\n    SAMPLER_3D: 0x8b5f,\n    SAMPLER_2D_SHADOW: 0x8b62,\n    FLOAT_MAT2X3: 0x8b65,\n    FLOAT_MAT2X4: 0x8b66,\n    FLOAT_MAT3X2: 0x8b67,\n    FLOAT_MAT3X4: 0x8b68,\n    FLOAT_MAT4X2: 0x8b69,\n    FLOAT_MAT4X3: 0x8b6a,\n    SAMPLER_2D_ARRAY: 0x8dc1,\n    SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n    SAMPLER_CUBE_SHADOW: 0x8dc5,\n    UNSIGNED_INT: 0x1405,\n    UNSIGNED_INT_VEC2: 0x8dc6,\n    UNSIGNED_INT_VEC3: 0x8dc7,\n    UNSIGNED_INT_VEC4: 0x8dc8,\n    INT_SAMPLER_2D: 0x8dca,\n    INT_SAMPLER_3D: 0x8dcb,\n    INT_SAMPLER_CUBE: 0x8dcc,\n    INT_SAMPLER_2D_ARRAY: 0x8dcf,\n    UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n    UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n    UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n    TEXTURE_2D: 0x0de1,\n    TEXTURE_CUBE_MAP: 0x8513,\n    TEXTURE_3D: 0x806f,\n    TEXTURE_2D_ARRAY: 0x8c1a,\n    BYTE: 0x1400,\n    UNSIGNED_BYTE: 0x1401,\n    SHORT: 0x1402,\n    UNSIGNED_SHORT: 0x1403,\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\n    UNSIGNED_SHORT_5_6_5: 0x8363,\n    HALF_FLOAT: 0x140b,\n    UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n    UNSIGNED_INT_10F_11F_11F_REV: 0x8c3b,\n    UNSIGNED_INT_5_9_9_9_REV: 0x8c3e,\n    FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8dad,\n    UNSIGNED_INT_24_8: 0x84fa,\n};\nexport const TEXTURE_FORMAT = {\n    RED: 0x1903,\n    RG: 0x8227,\n    RGB: 0x1907,\n    RGBA: 0x1908,\n    RED_INTEGER: 0x8d94,\n    RG_INTEGER: 0x8228,\n    RGB_INTEGER: 0x8d98,\n    RGBA_INTEGER: 0x8d99,\n    DEPTH_COMPONENT: 0x1902,\n};\nexport const TEXTURE_FORMAT_INTERNAL = {\n    R8: 0x8229,\n    RG8: 0x822b,\n    RGB8: 0x8051,\n    RGBA8: 0x8058,\n    R16F: 0x822d,\n    RG16F: 0x822f,\n    RGB16F: 0x881b,\n    RGBA16F: 0x881a,\n    R32F: 0x822e,\n    RG32F: 0x8230,\n    RGB32F: 0x8815,\n    RGBA32F: 0x8814,\n    R8I: 0x8231,\n    RG8I: 0x8237,\n    RGB8I: 0x8d8f,\n    RGBA8I: 0x8d8e,\n    R8UI: 0x8232,\n    RG8UI: 0x8238,\n    RGB8UI: 0x8d7d,\n    RGBA8UI: 0x8d7c,\n    R16I: 0x8233,\n    RG16I: 0x8239,\n    RGB16I: 0x8d89,\n    RGBA16I: 0x8d88,\n    R16UI: 0x8234,\n    RG16UI: 0x823a,\n    RGB16UI: 0x8d77,\n    RGBA16UI: 0x8d76,\n    R32I: 0x8235,\n    RG32I: 0x823b,\n    RGB32I: 0x8d83,\n    RGBA32I: 0x8d82,\n    R32UI: 0x8236,\n    RG32UI: 0x823c,\n    RGB32UI: 0x8d71,\n    RGBA32UI: 0x8d70,\n    RGB10_A2: 0x8059,\n    RGB10_A2UI: 0x906f,\n    SRGB: 0x8c40,\n    SRGB8: 0x8c41,\n    SRGB8_ALPHA8: 0x8c43,\n    R8_SNORM: 0x8f94,\n    RG8_SNORM: 0x8f95,\n    RGB8_SNORM: 0x8f96,\n    RGBA8_SNORM: 0x8f97,\n    DEPTH_COMPONENT16: 0x81a5,\n    DEPTH_COMPONENT24: 0x81a6,\n    DEPTH_COMPONENT32F: 0x8cac,\n};\nexport const TEXTURE_FORMAT_DEFAULTS = {\n    [GL_TYPE.UNSIGNED_BYTE]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R8,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG8,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB8,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA8,\n    },\n    [GL_TYPE.UNSIGNED_SHORT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT16,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16UI,\n    },\n    [GL_TYPE.UNSIGNED_INT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT24,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R32UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG32UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB32UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA32UI,\n    },\n    [GL_TYPE.FLOAT]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16F,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16F,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16F,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16F,\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT32F,\n    },\n    COMPRESSED_TYPES: {},\n};\n//# sourceMappingURL=contants.js.map","import * as constants from './contants';\nexport const defaultTextureSettings = {\n    wrap: 'CLAMP_TO_EDGE',\n    minFilter: 'LINEAR',\n    magFilter: 'NEAREST',\n};\nexport function getDefaultLayerSettings(gl) {\n    return {\n        clearColor: [0.0, 0.0, 0.0, 1.0],\n        blendFunc: [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA],\n    };\n}\nexport const defaultForms = {\n    renderQuad: {\n        attribs: {\n            [constants.GEOMETRY_PROP_POSITION]: {\n                buffer: new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1]),\n                storeType: 'STATIC',\n            },\n            [constants.GEOMETRY_PROP_UV]: {\n                buffer: new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]),\n                storeType: 'STATIC',\n            },\n        },\n        drawType: 'TRIANGLE_STRIP',\n        itemCount: 4,\n    },\n};\nexport const defaultShaders = {\n    basicEffect: {\n        vert: `\nattribute vec2 ${constants.GEOMETRY_PROP_POSITION};\nattribute vec2 ${constants.GEOMETRY_PROP_UV};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\t${constants.VARYING_UV_COORDS} = ${constants.GEOMETRY_PROP_UV};\n\tgl_Position = vec4(${constants.GEOMETRY_PROP_POSITION}, 0.0, 1.0);\n}`,\n        frag: `precision mediump float;\nuniform sampler2D ${constants.UNIFORM_SOURCE_TEXTURE};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\tgl_FragColor = texture2D(${constants.UNIFORM_SOURCE_TEXTURE}, ${constants.VARYING_UV_COORDS});\n}`,\n    },\n};\n//# sourceMappingURL=asset-lib.js.map","import { GL_TYPE } from './contants';\n// Attrib and Uniform Setters\nfunction getBindPointForSamplerType(type) {\n    return typeMap[type].bindPoint;\n}\nfunction floatSetter(gl, location) {\n    return (v) => {\n        gl.uniform1f(location, v);\n    };\n}\nfunction floatArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1fv(location, v);\n    };\n}\nfunction floatVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2fv(location, v);\n    };\n}\nfunction floatVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3fv(location, v);\n    };\n}\nfunction floatVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4fv(location, v);\n    };\n}\nfunction intSetter(gl, location) {\n    return (v) => {\n        gl.uniform1i(location, v);\n    };\n}\nfunction intArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1iv(location, v);\n    };\n}\nfunction intVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2iv(location, v);\n    };\n}\nfunction intVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3iv(location, v);\n    };\n}\nfunction intVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4iv(location, v);\n    };\n}\nfunction uintSetter(gl, location) {\n    return (v) => {\n        gl.uniform1ui(location, v);\n    };\n}\nfunction uintArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1uiv(location, v);\n    };\n}\nfunction uintVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2uiv(location, v);\n    };\n}\nfunction uintVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3uiv(location, v);\n    };\n}\nfunction uintVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4uiv(location, v);\n    };\n}\nfunction floatMat2Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n    };\n}\nfunction floatMat3Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n    };\n}\nfunction floatMat4Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n    };\n}\nfunction floatMat23Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x3fv(location, false, v);\n    };\n}\nfunction floatMat32Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x2fv(location, false, v);\n    };\n}\nfunction floatMat24Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x4fv(location, false, v);\n    };\n}\nfunction floatMat42Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x2fv(location, false, v);\n    };\n}\nfunction floatMat34Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x4fv(location, false, v);\n    };\n}\nfunction floatMat43Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x3fv(location, false, v);\n    };\n}\nfunction samplerSetter(gl, type, unit, location) {\n    const bindPoint = getBindPointForSamplerType(type);\n    return (texture) => {\n        gl.uniform1i(location, unit);\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(bindPoint, texture._texture);\n    };\n}\nfunction samplerArraySetter(gl, type, unit, location, size) {\n    const bindPoint = getBindPointForSamplerType(type);\n    const units = new Int32Array(size);\n    for (let i = 0; i < size; ++i) {\n        units[i] = unit + i;\n    }\n    return (textures) => {\n        gl.uniform1iv(location, units);\n        for (const index in textures) {\n            gl.activeTexture(gl.TEXTURE0 + units[index]);\n            gl.bindTexture(bindPoint, textures[index]._texture);\n        }\n    };\n}\nfunction isSamplerInfo(info) {\n    return info.Type === null;\n}\nconst typeMap = {\n    [GL_TYPE.FLOAT]: {\n        Type: Float32Array,\n        size: 4,\n        setter: floatSetter,\n        arraySetter: floatArraySetter,\n    },\n    [GL_TYPE.FLOAT_VEC2]: {\n        Type: Float32Array,\n        size: 8,\n        setter: floatVec2Setter,\n    },\n    [GL_TYPE.FLOAT_VEC3]: {\n        Type: Float32Array,\n        size: 12,\n        setter: floatVec3Setter,\n    },\n    [GL_TYPE.FLOAT_VEC4]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatVec4Setter,\n    },\n    [GL_TYPE.INT]: {\n        Type: Int32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.INT_VEC2]: { Type: Int32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.INT_VEC3]: { Type: Int32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.INT_VEC4]: { Type: Int32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.UNSIGNED_INT]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: uintSetter,\n        arraySetter: uintArraySetter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        Type: Uint32Array,\n        size: 8,\n        setter: uintVec2Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        Type: Uint32Array,\n        size: 12,\n        setter: uintVec3Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        Type: Uint32Array,\n        size: 16,\n        setter: uintVec4Setter,\n    },\n    [GL_TYPE.BOOL]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.BOOL_VEC2]: { Type: Uint32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.BOOL_VEC3]: { Type: Uint32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.BOOL_VEC4]: { Type: Uint32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.FLOAT_MAT2]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatMat2Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3]: {\n        Type: Float32Array,\n        size: 36,\n        setter: floatMat3Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4]: {\n        Type: Float32Array,\n        size: 64,\n        setter: floatMat4Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X3]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat23Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X4]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat24Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X2]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat32Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X4]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat34Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X2]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat42Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X3]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat43Setter,\n    },\n    [GL_TYPE.SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.SAMPLER_2D_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_CUBE_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n};\nfunction floatAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribPointer(location, typeInfo.itemSize, GL_TYPE.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n    };\n}\nfunction intAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribIPointer(location, typeInfo.itemSize, GL_TYPE.INT, b.stride || 0, b.offset || 0);\n    };\n}\nfunction matAttribSetter(gl, location, typeInfo) {\n    const defaultSize = typeInfo.size;\n    const count = typeInfo.count;\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        const numComponents = defaultSize;\n        const size = numComponents / count;\n        const typeInfo = typeMap[GL_TYPE.FLOAT];\n        const stride = typeInfo.size * numComponents;\n        const normalize = b.normalize || false;\n        const offset = b.offset || 0;\n        const rowOffset = stride / count;\n        for (let i = 0; i < count; ++i) {\n            gl.enableVertexAttribArray(location + i);\n            gl.vertexAttribPointer(location + i, size, GL_TYPE.FLOAT, normalize, stride, offset + rowOffset * i);\n        }\n    };\n}\nconst attrTypeMap = {\n    [GL_TYPE.FLOAT]: { size: 4, setter: floatAttribSetter, itemSize: 1 },\n    [GL_TYPE.FLOAT_VEC2]: { size: 8, setter: floatAttribSetter, itemSize: 2 },\n    [GL_TYPE.FLOAT_VEC3]: { size: 12, setter: floatAttribSetter, itemSize: 3 },\n    [GL_TYPE.FLOAT_VEC4]: { size: 16, setter: floatAttribSetter, itemSize: 4 },\n    [GL_TYPE.INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.INT_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.INT_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.INT_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.UNSIGNED_INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        size: 8,\n        setter: intAttribSetter,\n        itemSize: 2,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        size: 12,\n        setter: intAttribSetter,\n        itemSize: 3,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        size: 16,\n        setter: intAttribSetter,\n        itemSize: 4,\n    },\n    [GL_TYPE.BOOL]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.BOOL_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.BOOL_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.BOOL_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.FLOAT_MAT2]: { size: 4, setter: matAttribSetter, count: 2 },\n    [GL_TYPE.FLOAT_MAT3]: { size: 9, setter: matAttribSetter, count: 3 },\n    [GL_TYPE.FLOAT_MAT4]: { size: 16, setter: matAttribSetter, count: 4 },\n};\nexport function createUniformSetters(gl, program) {\n    let textureUnit = 0;\n    function createUniformSetter(program, uniformInfo) {\n        const location = gl.getUniformLocation(program, uniformInfo.name);\n        const isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]';\n        const type = uniformInfo.type;\n        const typeInfo = typeMap[type];\n        if (!typeInfo) {\n            throw new Error('unknown type: 0x' + type.toString(16)); // we should never get here.\n        }\n        if (location == null) {\n            return;\n        }\n        let setter;\n        if (isSamplerInfo(typeInfo)) {\n            // it's a sampler\n            const unit = textureUnit;\n            textureUnit += uniformInfo.size;\n            if (isArray) {\n                setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n            }\n            else {\n                setter = typeInfo.setter(gl, type, unit, location);\n            }\n        }\n        else {\n            if (typeInfo.arraySetter && isArray) {\n                setter = typeInfo.arraySetter(gl, location);\n            }\n            else {\n                setter = typeInfo.setter(gl, location);\n            }\n        }\n        return { setter, location };\n    }\n    const uniformSetters = {};\n    const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < numUniforms; ++i) {\n        const uniformInfo = gl.getActiveUniform(program, i);\n        if (!uniformInfo) {\n            continue;\n        }\n        let name = uniformInfo.name;\n        // remove the array suffix.\n        if (name.substr(-3) === '[0]') {\n            name = name.substr(0, name.length - 3);\n        }\n        if (program) {\n            const setter = createUniformSetter(program, uniformInfo);\n            if (setter) {\n                uniformSetters[name] = setter;\n            }\n        }\n    }\n    return uniformSetters;\n}\nexport function createAttributeSetters(gl, program) {\n    const attribSetters = {};\n    const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < numAttribs; i++) {\n        const attribInfo = gl.getActiveAttrib(program, i);\n        if (!attribInfo) {\n            break;\n        }\n        const location = gl.getAttribLocation(program, attribInfo.name);\n        const typeInfo = attrTypeMap[attribInfo.type];\n        const setter = typeInfo.setter(gl, location, typeInfo);\n        attribSetters[attribInfo.name] = { setter, location };\n    }\n    return attribSetters;\n}\n// Type helpers\nexport const glTypeToTypedArray = {\n    [GL_TYPE.BYTE]: Int8Array,\n    [GL_TYPE.UNSIGNED_BYTE]: Uint8Array,\n    [GL_TYPE.SHORT]: Int16Array,\n    [GL_TYPE.UNSIGNED_SHORT]: Uint16Array,\n    [GL_TYPE.INT]: Int32Array,\n    [GL_TYPE.UNSIGNED_INT]: Uint32Array,\n    [GL_TYPE.FLOAT]: Float32Array,\n    [GL_TYPE.UNSIGNED_SHORT_4_4_4_4]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_5_5_1]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_6_5]: Uint16Array,\n    [GL_TYPE.HALF_FLOAT]: Uint16Array,\n    [GL_TYPE.UNSIGNED_INT_2_10_10_10_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_10F_11F_11F_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_5_9_9_9_REV]: Uint32Array,\n    [GL_TYPE.FLOAT_32_UNSIGNED_INT_24_8_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_24_8]: Uint32Array,\n};\nexport function getGLTypeForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArray instanceof Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArray instanceof Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArray instanceof Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArray instanceof Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArray instanceof Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\nexport function getGLTypeForTypedArrayType(typedArrayType) {\n    if (typedArrayType === Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArrayType === Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArrayType === Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArrayType === Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArrayType === Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArrayType === Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\n// Settings\nexport function applyDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.enable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.blendFunc) {\n        gl.blendFunc.apply(gl, settings.blendFunc);\n    }\n    if (settings.depthFunc != null) {\n        gl.depthFunc(settings.depthFunc);\n    }\n    if (settings.cullFace != null) {\n        gl.cullFace(settings.cullFace);\n    }\n    if (settings.frontFace != null) {\n        gl.frontFace(settings.frontFace);\n    }\n    if (settings.lineWidth != null) {\n        gl.lineWidth(settings.lineWidth);\n    }\n    if (settings.colorMask) {\n        gl.colorMask.apply(gl, settings.colorMask);\n    }\n    if (settings.depthMask != null) {\n        gl.depthMask(settings.depthMask);\n    }\n    if (settings.clearColor) {\n        gl.clearColor.apply(gl, settings.clearColor);\n    }\n    if (settings.clearDepth != null) {\n        gl.clearDepth(settings.clearDepth);\n    }\n    if (settings.clearBits != null) {\n        gl.clear(settings.clearBits);\n    }\n}\nexport function revertDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.enable(setting);\n        }\n    }\n}\n//# sourceMappingURL=render-utils.js.map","import { getGLTypeForTypedArray } from './render-utils';\nlet formCounter = 1;\nexport class Form {\n    constructor(_painter, id = 'Form' + formCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (data.drawType) {\n            this._drawType = gl[data.drawType];\n        }\n        if (data.itemCount) {\n            this._itemCount = data.itemCount;\n        }\n        this._attribs = this._attribs || {};\n        for (const id in data.attribs) {\n            const attribData = data.attribs[id];\n            if (this._attribs[id] == null) {\n                this._attribs[id] = {\n                    buffer: gl.createBuffer(),\n                };\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._attribs[id].buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, attribData.buffer, gl[(attribData.storeType || 'STATIC') + '_DRAW']);\n        }\n        if (data.elements) {\n            const buffer = data.elements.buffer;\n            if (this._elements == null) {\n                this._elements = {\n                    buffer: gl.createBuffer(),\n                    glType: null,\n                };\n            }\n            this._elements.glType = getGLTypeForTypedArray(buffer);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._elements.buffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, buffer, gl[(data.elements.storeType || 'STATIC') + '_DRAW']);\n        }\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        for (const id in this._attribs) {\n            gl.deleteBuffer(this._attribs[id].buffer);\n        }\n        this._attribs = {};\n        if (this._elements) {\n            gl.deleteBuffer(this._elements.buffer);\n            this._elements = undefined;\n        }\n    }\n}\n//# sourceMappingURL=form.js.map","import { randInt, randIntInRange } from '../math/random';\nexport function pickRandom(arr) {\n    return arr[randInt(arr.length)];\n}\nexport function doTimes(fn, count) {\n    for (let i = 0; i < count; i++) {\n        fn(i);\n    }\n}\nexport function times(fn, count, res = []) {\n    for (let i = 0; i < count; i++) {\n        res[i] = fn(i);\n    }\n    return res;\n}\nexport function repeat(count, item) {\n    return times(() => item, count);\n}\nexport function concat(arr, ...arrs) {\n    return arr.concat(...arrs);\n}\nexport function zip(fn, as, bs, res = []) {\n    const length = Math.min(as.length, bs.length);\n    for (let i = 0; i < length; i++) {\n        res[i] = fn(as[i], bs[i]);\n    }\n    return res;\n}\nexport function flatten(array, res = []) {\n    for (const subarray of array) {\n        const currentLength = res.length;\n        for (let i = 0; i < subarray.length; i++) {\n            res[i + currentLength] = subarray[i];\n        }\n    }\n    return res;\n}\nexport function mapcat(fn, array, res = []) {\n    return flatten(map(fn, array, res));\n}\nexport const flatMap = mapcat;\nexport function reverse(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        res[i] = arr[arr.length - 1 - i];\n    }\n    return res;\n}\nexport function shuffle(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        const j = randIntInRange(i, arr.length);\n        const temp = res[i] !== undefined ? res[i] : arr[i];\n        res[i] = res[j] !== undefined ? res[j] : arr[j];\n        res[j] = temp;\n    }\n    return res;\n}\nexport function map(fn, coll, res = []) {\n    for (let i = 0; i < coll.length; i++) {\n        res[i] = fn(coll[i], i);\n    }\n    return res;\n}\nexport function each(fn, coll) {\n    for (const key in coll) {\n        fn(coll[key], key);\n    }\n}\nexport function reduce(fn, start, arr) {\n    for (let i = 0; i < arr.length; i++) {\n        start = fn(start, arr[i]);\n    }\n    return start;\n}\nexport function fold(fn, arr) {\n    const [start, ...rest] = arr;\n    return reduce(fn, start, rest);\n}\nexport const last = (arr) => arr[arr.length - 1];\n//# sourceMappingURL=sequence.js.map","import { defaultTextureSettings } from './asset-lib';\nlet textureCount = 1;\nexport class Texture {\n    constructor(_painter, id = 'Texture' + textureCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this._texture = null;\n        this._data = {};\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (this._texture == null) {\n            this._texture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        if ((data.wrap && data.wrap !== this._data.wrap) ||\n            (data.wrapS && data.wrapS !== this._data.wrapS) ||\n            (data.wrapT && data.wrapT !== this._data.wrapT)) {\n            let wrapS, wrapT;\n            if (data.wrap) {\n                wrapS = wrapT = data.wrap;\n            }\n            else {\n                wrapT = data.wrapT || defaultTextureSettings.wrap;\n                wrapS = data.wrapS || defaultTextureSettings.wrap;\n            }\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n        }\n        else if (!(this._data.wrap || this._data.wrapS || this._data.wrapT)) {\n            this._data.wrap = this._data.wrapT = this._data.wrapS = defaultTextureSettings.wrap;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[this._data.wrap]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[this._data.wrap]);\n        }\n        if (data.magFilter && data.magFilter !== this._data.magFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[data.magFilter]);\n        }\n        else if (!this._data.magFilter) {\n            this._data.magFilter = defaultTextureSettings.magFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[this._data.magFilter]);\n        }\n        if (data.minFilter && data.minFilter !== this._data.minFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[data.minFilter]);\n        }\n        else if (!this._data.minFilter) {\n            this._data.minFilter = defaultTextureSettings.minFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[this._data.minFilter]);\n        }\n        if (data.asset) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data.asset);\n        }\n        if (data.data !== undefined) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, data.type === 'FLOAT' && this._painter.isWebGL2\n                ? gl.RGBA32F\n                : gl.RGBA, data.width, // width and height are required if using custom data\n            data.height, 0, gl.RGBA, gl[data.type || 'UNSIGNED_BYTE'], data.data);\n        }\n        if (data.flipY != null && data.flipY !== this._data.flipY) {\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, data.flipY);\n        }\n        if (data.minFilter && data.minFilter.indexOf('MIPMAP') > 0) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        this._painter.gl.deleteTexture(this._texture);\n        this._data = {};\n        this._texture = null;\n    }\n}\n//# sourceMappingURL=texture.js.map","import { equalObject } from 'tvs-libs/dist/utils/predicates';\nimport { Texture } from './texture';\nlet targetCount = 1;\nexport class RenderTarget {\n    constructor(_painter, id = 'Form' + targetCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.antialias = false;\n        this.frameBuffer = null;\n        this.antiAliasFrameBuffer = null;\n        this.antiAliasRenderBuffer = null;\n        this.textures = [];\n        this.depthBuffer = null;\n        this.bufferStructure = [];\n        this._data = {};\n    }\n    update(data) {\n        var _a;\n        const gl = this._painter.gl;\n        const width = data.width || this.width;\n        const height = data.height || this.height;\n        if (!(width && height)) {\n            return this;\n        }\n        else if (width === this.width && height === this.height) {\n            if (!data.bufferStructure)\n                return this;\n            if (data.bufferStructure.length === this.bufferStructure.length &&\n                this.bufferStructure.every((buf, i) => equalObject(buf, data.bufferStructure[i]))) {\n                return this;\n            }\n        }\n        if (this.frameBuffer == null) {\n            this.frameBuffer = gl.createFramebuffer();\n        }\n        if (this.depthBuffer == null) {\n            this.depthBuffer = gl.createRenderbuffer();\n        }\n        if (data.bufferStructure && data.bufferStructure.length) {\n            this.bufferStructure = data.bufferStructure;\n            if (this.bufferStructure.some(t => t.type === 'FLOAT')) {\n                if (this._painter.isWebGL2) {\n                    gl.getExtension('EXT_color_buffer_float');\n                }\n                else {\n                    gl.getExtension('OES_texture_float');\n                }\n            }\n        }\n        const texCount = this.bufferStructure.length || 1;\n        const bufferAttachments = [gl.COLOR_ATTACHMENT0];\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        if (texCount > 1) {\n            let glx;\n            if (!this._painter.isWebGL2) {\n                glx = gl.getExtension('WEBGL_draw_buffers');\n            }\n            const attachment = this._painter.isWebGL2\n                ? gl.COLOR_ATTACHMENT0\n                : glx.COLOR_ATTACHMENT0_WEBGL;\n            for (let i = 0; i < texCount; i++) {\n                bufferAttachments[i] = attachment + i;\n            }\n            this._painter.isWebGL2\n                ? gl.drawBuffers(bufferAttachments)\n                : glx.drawBuffersWEBGL(bufferAttachments);\n        }\n        this.antialias =\n            texCount === 1 &&\n                this._painter.isWebGL2 &&\n                (data.antialias || ((_a = this._data) === null || _a === void 0 ? void 0 : _a.antialias));\n        if (this.antialias) {\n            const gl2 = gl;\n            if (this.antiAliasFrameBuffer == null) {\n                this.antiAliasFrameBuffer = gl.createFramebuffer();\n            }\n            if (this.antiAliasRenderBuffer == null) {\n                this.antiAliasRenderBuffer = gl.createRenderbuffer();\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl2.RGBA8, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        else {\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n        }\n        for (let i = 0; i < texCount; i++) {\n            if (!this.textures[i]) {\n                this.textures[i] = new Texture(this._painter, this.id + '_Texture' + i);\n            }\n            const texture = this.textures[i];\n            texture.update(Object.assign(Object.assign({ minFilter: 'NEAREST', magFilter: 'NEAREST' }, this.bufferStructure[i]), { data: null, width,\n                height }));\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, bufferAttachments[i], gl.TEXTURE_2D, texture._texture, 0);\n        }\n        if (this.antialias) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n            if (err !== gl.FRAMEBUFFER_COMPLETE) {\n                console.error('antialias framebuffer error', err, data);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (err !== gl.FRAMEBUFFER_COMPLETE) {\n            console.error('framebuffer error', err, data);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        Object.assign(this._data, data);\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteFramebuffer(this.frameBuffer);\n        gl.deleteRenderbuffer(this.depthBuffer);\n        for (const texture of this.textures) {\n            gl.deleteTexture(texture);\n        }\n        if (this.antiAliasFrameBuffer) {\n            gl.deleteFramebuffer(this.antiAliasFrameBuffer);\n        }\n        if (this.antiAliasRenderBuffer) {\n            gl.deleteRenderbuffer(this.antiAliasRenderBuffer);\n        }\n        this.textures = [];\n        this.frameBuffer = null;\n        this.depthBuffer = null;\n        this._data = {};\n        this.bufferStructure = [];\n        this.width = 0;\n        this.height = 0;\n    }\n}\n//# sourceMappingURL=render-target.js.map","export const and = (p1, p2) => (a, b) => p1(a, b) && p2(a, b);\nexport const not = (p) => (...args) => !p(...args);\nexport const defined = a => a != null;\nexport const notEmpty = a => a && a.length;\nexport const unequal = (a, b) => a !== b;\nexport const equal = (a, b) => a === b;\nexport function equalArray(arr1, arr2) {\n    if (arr1 === arr2) {\n        return true;\n    }\n    if (!arr2 || !arr1) {\n        return false;\n    }\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalObject(obj1, obj2) {\n    if (obj1 === obj2) {\n        return true;\n    }\n    if (!obj2) {\n        return false;\n    }\n    const k1 = Object.keys(obj1);\n    const k2 = Object.keys(obj2);\n    if (!equalArray(k1, k2)) {\n        return false;\n    }\n    for (const key of k1) {\n        if (obj1[key] !== obj2[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=predicates.js.map","import { times } from 'tvs-libs/dist/utils/sequence';\nimport { RenderTarget } from './render-target';\nimport { Texture } from './texture';\nlet frameCount = 1;\nexport class Frame {\n    constructor(_painter, id = 'Frame' + frameCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.layers = [];\n        this._data = {};\n        this._targets = [];\n        this._textures = [];\n    }\n    image(i = 0) {\n        return ((this._targets.length &&\n            this._targets[this._targets.length - 1].textures[i]) ||\n            this._textures[i]);\n    }\n    update(data = {}) {\n        var _a, _b, _c, _d;\n        const gl = this._painter.gl;\n        const layers = Array.isArray(data.layers)\n            ? data.layers\n            : data.layers\n                ? [data.layers]\n                : this.layers;\n        const selfReferencing = data.selfReferencing || this._data.selfReferencing;\n        const layerCount = layers.reduce((count, layer) => count + (layer._uniforms.length || 1), 0);\n        const targetCount = selfReferencing || layerCount > 1 ? 2 : layerCount;\n        const width = data.width || ((_a = data.texture) === null || _a === void 0 ? void 0 : _a.width) ||\n            this._data.width || ((_b = this._data.texture) === null || _b === void 0 ? void 0 : _b.width) ||\n            gl.canvas.width;\n        const height = data.height || ((_c = data.texture) === null || _c === void 0 ? void 0 : _c.height) ||\n            this._data.height || ((_d = this._data.texture) === null || _d === void 0 ? void 0 : _d.height) ||\n            gl.canvas.height;\n        const antialias = data.antialias || this._data.antialias || true;\n        if (targetCount !== this._targets.length) {\n            this._destroyTargets();\n        }\n        const targetData = Object.assign(Object.assign({}, data), { width, height, antialias });\n        if (!this._targets.length && targetCount > 0) {\n            this._targets = times(i => new RenderTarget(this._painter, this.id + '_target' + (i + 1)).update(targetData), targetCount);\n        }\n        else if (this._targets.length) {\n            this._targets.forEach(t => {\n                t.update(targetData);\n            });\n        }\n        if (data.texture) {\n            // Hardcode to one static texture for now\n            if (!this._textures[0]) {\n                this._textures[0] = new Texture(this._painter, this.id + '_Texture0');\n            }\n            data.texture.width = width;\n            data.texture.height = height;\n            this._textures[0].update(data.texture);\n        }\n        Object.assign(this._data, data);\n        this.layers = layers;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        this._destroyTargets();\n        this._textures.forEach(tex => tex.destroy());\n        this._textures = [];\n        this._data = {};\n        this.layers = [];\n        this.width = 0;\n        this.height = 0;\n    }\n    _destroyTargets() {\n        this._targets.forEach(t => t.destroy());\n        this._targets = [];\n    }\n    _swapTargets() {\n        if (this._targets.length > 1) {\n            const tmp = this._targets[0];\n            this._targets[0] = this._targets[1];\n            this._targets[1] = tmp;\n        }\n    }\n}\n//# sourceMappingURL=frame.js.map","let layerCount = 1;\nexport class Layer {\n    constructor(id = 'DrawingLayer' + layerCount++) {\n        this.id = id;\n        this.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.sketches) {\n            this.sketches = Array.isArray(data.sketches)\n                ? data.sketches\n                : [data.sketches];\n        }\n        if (data.frag) {\n            const sketch = this.sketches && this.sketches[0];\n            if (sketch) {\n                sketch.shade.update({ frag: data.frag });\n            }\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        for (const sketch of this.sketches) {\n            sketch.destroy();\n        }\n        this._data.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=layer.js.map","import { createAttributeSetters, createUniformSetters } from './render-utils';\nlet shadeCounter = 1;\nexport class Shade {\n    constructor(_painter, id = 'Shade' + shadeCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        const fragSource = (data.frag && data.frag.trim()) || this.fragSource;\n        const vertSource = (data.vert && data.vert.trim()) || this.vertSource;\n        if (!(fragSource &&\n            vertSource &&\n            (fragSource !== this.fragSource || vertSource !== this.vertSource))) {\n            return this;\n        }\n        this.destroy();\n        if (fragSource.indexOf('GL_EXT_draw_buffers') >= 0) {\n            gl.getExtension('WEBGL_draw_buffers');\n        }\n        const program = gl.createProgram();\n        const frag = gl.createShader(gl.FRAGMENT_SHADER);\n        const vert = gl.createShader(gl.VERTEX_SHADER);\n        if (!(program && vert && frag))\n            return;\n        this._program = program;\n        this._frag = frag;\n        this._vert = vert;\n        gl.attachShader(program, vert);\n        gl.attachShader(program, frag);\n        gl.shaderSource(vert, vertSource);\n        gl.shaderSource(frag, fragSource);\n        gl.compileShader(vert);\n        gl.compileShader(frag);\n        if (!gl.getShaderParameter(vert, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Vertex Shader!\\n', gl.getShaderInfoLog(vert), addLineNumbers(vertSource));\n        }\n        if (!gl.getShaderParameter(frag, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Fragment Shader!\\n', gl.getShaderInfoLog(frag), addLineNumbers(fragSource));\n        }\n        gl.linkProgram(program);\n        const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n            const lastError = gl.getProgramInfoLog(program);\n            console.error('Error in program linking:', lastError);\n        }\n        this._uniformSetters = createUniformSetters(gl, program);\n        this._attributeSetters = createAttributeSetters(gl, program);\n        this.fragSource = fragSource;\n        this.vertSource = vertSource;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteProgram(this._program);\n        gl.deleteShader(this._frag);\n        gl.deleteShader(this._vert);\n        this.vertSource = undefined;\n        this.fragSource = undefined;\n        this._attributeSetters = {};\n        this._uniformSetters = {};\n    }\n}\nfunction addLineNumbers(src) {\n    return src\n        .trim()\n        .split('\\n')\n        .map((line, i) => i + 1 + ': ' + line)\n        .join('\\n');\n}\n//# sourceMappingURL=shade.js.map","let sketchCounter = 1;\nexport class Sketch {\n    constructor(id = 'Sketch' + sketchCounter++) {\n        this.id = id;\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.drawSettings) {\n            this._drawSettings = data.drawSettings;\n        }\n        if (data.form) {\n            this.form = data.form;\n        }\n        if (data.shade) {\n            this.shade = data.shade;\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        return this;\n    }\n    destroy() {\n        this.form && this.form.destroy();\n        this.shade && this.shade.destroy();\n        this._drawSettings = undefined;\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=sketch.js.map","import { defaultForms, defaultShaders, getDefaultLayerSettings, } from './asset-lib';\nimport { Form } from './form';\nimport { Frame } from './frame';\nimport { Layer } from './layer';\nimport { applyDrawSettings, revertDrawSettings } from './render-utils';\nimport { Shade } from './shade';\nimport { Sketch } from './sketch';\nimport { resizeCanvas } from './utils/context';\nexport class Painter {\n    constructor(canvas, opts = {}) {\n        this.canvas = canvas;\n        this.isWebGL2 = true;\n        this.maxBufferSamples = 0;\n        let gl = null;\n        if (!opts.useWebGL1) {\n            gl =\n                canvas.getContext('webgl2', opts) ||\n                    canvas.getContext('experimental-webgl2', opts);\n        }\n        if (gl == null) {\n            this.isWebGL2 = false;\n            gl =\n                canvas.getContext('webgl', opts) ||\n                    canvas.getContext('experimental-webgl', opts);\n        }\n        if (gl == null) {\n            throw Error('Cannot initialize WebGL.');\n        }\n        this.gl = gl;\n        this.sizeMultiplier = opts.sizeMultiplier || 1;\n        if (this.isWebGL2) {\n            this.maxBufferSamples = gl.getParameter(gl.MAX_SAMPLES);\n        }\n        this.resize();\n        applyDrawSettings(gl, getDefaultLayerSettings(gl));\n        this._renderQuad = this.createForm().update(defaultForms.renderQuad);\n        this._staticSketch = this.createFlatSketch();\n    }\n    resize() {\n        resizeCanvas(this.gl.canvas, this.sizeMultiplier);\n        return this;\n    }\n    destroy() {\n        this._staticSketch.destroy();\n        this._renderQuad.destroy();\n    }\n    updateDrawSettings(drawSettings) {\n        applyDrawSettings(this.gl, Object.assign({}, drawSettings));\n        return this;\n    }\n    createForm(id) {\n        return new Form(this, id);\n    }\n    createShade(id) {\n        return new Shade(this, id);\n    }\n    createSketch(id) {\n        return new Sketch(id);\n    }\n    createFlatSketch(id) {\n        const s = this.createSketch(id);\n        return s.update({\n            form: this._renderQuad,\n            shade: this.createShade(s.id + '_defaultShade').update(defaultShaders.basicEffect),\n        });\n    }\n    createFrame(id) {\n        return new Frame(this, id);\n    }\n    createLayer(id) {\n        return new Layer(id);\n    }\n    createEffect(id) {\n        const l = this.createLayer(id);\n        return l.update({\n            sketches: this.createFlatSketch(l.id + '_effectSketch'),\n        });\n    }\n    draw(sketch, globalUniforms) {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        draw(gl, sketch, globalUniforms);\n        return this;\n    }\n    compose(...frames) {\n        for (const frame of frames) {\n            renderFrame(this.gl, frame);\n        }\n        return this;\n    }\n    display(frame, idx = 0) {\n        return this.draw(this._staticSketch, { source: frame.image(idx) });\n    }\n}\nfunction draw(gl, sketch, globalUniforms, sources) {\n    const { shade: shade, form: form, _drawSettings: drawSettings, _uniforms: uniforms, } = sketch;\n    if (!(shade && form)) {\n        throw Error('cannot draw, shader or geometry are not set');\n    }\n    gl.useProgram(shade._program);\n    shadeForm(shade, form);\n    if (globalUniforms) {\n        shadeUniforms(shade, globalUniforms, sources);\n    }\n    if (drawSettings) {\n        applyDrawSettings(gl, drawSettings);\n    }\n    for (let i = 0; i < (uniforms.length || 1); i++) {\n        drawInstance(gl, sketch, uniforms[i], sources);\n    }\n    if (drawSettings) {\n        revertDrawSettings(gl, drawSettings);\n    }\n}\nfunction drawInstance(gl, sketch, uniforms, sources) {\n    if (uniforms) {\n        shadeUniforms(sketch.shade, uniforms, sources);\n    }\n    if (sketch.form._elements && sketch.form._elements.glType != null) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, sketch.form._elements.buffer);\n        gl.drawElements(sketch.form._drawType, sketch.form._itemCount, sketch.form._elements.glType, 0);\n    }\n    else {\n        gl.drawArrays(sketch.form._drawType, 0, sketch.form._itemCount);\n    }\n}\nfunction shadeForm(shade, form) {\n    for (const name in form._attribs) {\n        const setter = shade._attributeSetters[name];\n        if (setter) {\n            setter.setter(form._attribs[name]);\n        }\n    }\n}\nfunction shadeUniforms(shade, uniforms, sources) {\n    for (const name in uniforms) {\n        const setter = shade._uniformSetters[name];\n        if (setter) {\n            let value = uniforms[name];\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (typeof value === 'string' && sources) {\n                setter.setter(sources[value]);\n            }\n            else {\n                setter.setter(value);\n            }\n        }\n    }\n}\nfunction renderLayer(gl, layer, uniforms, target, source) {\n    if (target) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, target.antialias ? target.antiAliasFrameBuffer : target.frameBuffer);\n        gl.viewport(0, 0, target.width, target.height);\n    }\n    else {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    }\n    if (layer._data.drawSettings) {\n        applyDrawSettings(gl, layer._data.drawSettings);\n    }\n    for (const sketch of layer.sketches) {\n        draw(gl, sketch, uniforms, source);\n    }\n    if (target && target.antialias) {\n        const gl2 = gl;\n        // \"blit\" the cube into the color buffer, which adds antialiasing\n        gl.bindFramebuffer(gl2.READ_FRAMEBUFFER, target.antiAliasFrameBuffer);\n        gl.bindFramebuffer(gl2.DRAW_FRAMEBUFFER, target.frameBuffer);\n        gl2.clearBufferfv(gl2.COLOR, 0, [1.0, 1.0, 1.0, 1.0]);\n        gl2.blitFramebuffer(0, 0, target.width, target.height, 0, 0, target.width, target.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n    }\n    if (layer._data.drawSettings) {\n        revertDrawSettings(gl, layer._data.drawSettings);\n    }\n}\nfunction renderFrame(gl, frame) {\n    for (let i = 0; i < frame.layers.length; i++) {\n        const layer = frame.layers[i];\n        const layerPasses = layer._uniforms.length || 1;\n        for (let j = 0; j < layerPasses; j++) {\n            const target = frame._targets[0];\n            const sources = i + j === 0 && frame._textures.length\n                ? frame._textures\n                : frame._targets[1] && frame._targets[1].textures;\n            renderLayer(gl, layer, layer._uniforms[j], target, sources);\n            frame._swapTargets();\n        }\n    }\n}\n//# sourceMappingURL=painter.js.map","export function makeClear(gl, ...clearArray) {\n    return clearArray.reduce((res, item) => res | gl[item.toUpperCase() + '_BUFFER_BIT'], 0);\n}\nexport function setBlendFunc(gl, blendOpts) {\n    gl.blendFunc.apply(gl, blendOpts.map(opt => gl[opt.toUpperCase()]));\n}\n/**\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] optional `window.devicePixelRatio`.\n * @return {boolean} true if the canvas was resized.\n */\nexport function resizeCanvas(canvas, multiplier = 1) {\n    let width = canvas.width;\n    let height = canvas.height;\n    if ('clientWidth' in canvas) {\n        const rect = canvas.getBoundingClientRect();\n        width = (rect.width * multiplier) | 0;\n        height = (rect.height * multiplier) | 0;\n    }\n    if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=context.js.map","export const Buttons = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n};\nexport function pointer(opts, callback) {\n    const cb = callback || opts;\n    const { element = document, enableRightButton, holdDelay = 400, holdRadius = 5, } = opts;\n    const state = {\n        pressed: {},\n        drag: { x: 0, y: 0, dX: 0, dY: 0, xMax: 0, yMax: 0 },\n        dragging: false,\n        holding: false,\n    };\n    let x = 0, y = 0, oX = 0, oY = 0, timeout = null;\n    function onPointerDown(e) {\n        if (e.isPrimary) {\n            state.pressed[e.button] = e;\n            x = oX = e.clientX;\n            y = oY = e.clientY;\n            state.dragging = true;\n            timeout != null && clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                if (state.drag.xMax < holdRadius && state.drag.yMax < holdRadius) {\n                    state.holding = true;\n                    cb(state);\n                }\n            }, holdDelay);\n        }\n        else {\n            state.pressed[Buttons.RIGHT] = e;\n        }\n        cb(state);\n    }\n    function onPointerUp(_e) {\n        state.pressed = {};\n        delete state.drag.event;\n        state.drag.x = 0;\n        state.drag.y = 0;\n        state.drag.dX = 0;\n        state.drag.dY = 0;\n        state.drag.xMax = 0;\n        state.drag.yMax = 0;\n        state.dragging = false;\n        state.holding = false;\n        timeout != null && clearTimeout(timeout);\n        timeout = null;\n        cb(state);\n    }\n    function onPointerMove(e) {\n        if (state.dragging && e.isPrimary) {\n            state.drag.event = e;\n            state.drag.x = x - e.clientX;\n            state.drag.y = y - e.clientY;\n            state.drag.dX = oX - e.clientX;\n            state.drag.dY = oY - e.clientY;\n            state.drag.xMax = Math.max(Math.abs(state.drag.x), state.drag.xMax);\n            state.drag.yMax = Math.max(Math.abs(state.drag.y), state.drag.yMax);\n            oX = e.clientX;\n            oY = e.clientY;\n            cb(state);\n        }\n    }\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    element.addEventListener('pointerdown', onPointerDown);\n    document.addEventListener('pointermove', onPointerMove);\n    document.addEventListener('pointerup', onPointerUp);\n    document.addEventListener('pointerleave', onPointerUp);\n    document.addEventListener('pointercancel', onPointerUp);\n    if (enableRightButton) {\n        element.addEventListener('contextmenu', preventDefault);\n    }\n    cb(state);\n    return function destroy() {\n        element.removeEventListener('pointerdown', onPointerDown);\n        document.removeEventListener('pointermove', onPointerMove);\n        document.removeEventListener('pointerup', onPointerUp);\n        document.removeEventListener('pointerleave', onPointerUp);\n        document.removeEventListener('pointercancel', onPointerUp);\n        if (enableRightButton) {\n            element.removeEventListener('contextmenu', preventDefault);\n        }\n    };\n}\nexport function pointerObserver(opts = {}) {\n    const observer = {\n        Buttons,\n        state: {},\n        destroy: () => { },\n    };\n    function callback(state) {\n        observer.state = state;\n    }\n    observer.destroy = pointer(opts, callback);\n    return observer;\n}\n//# sourceMappingURL=pointer.js.map","import { once } from './scheduler'\nimport { windowSize } from 'tvs-libs/dist/events/dom'\nimport { keyboard, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { deepOverride } from 'tvs-libs/dist/utils/object'\nimport { GL, PainterOptions } from 'tvs-painter'\nimport { Form } from 'tvs-painter/dist/form'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport { Layer } from 'tvs-painter/dist/layer'\nimport { Painter } from 'tvs-painter/dist/painter'\nimport { Shade } from 'tvs-painter/dist/shade'\nimport { Sketch } from 'tvs-painter/dist/sketch'\nimport { PointerState, pointer } from 'tvs-libs/dist/events/pointer'\nimport { getPackedSettings } from 'http2'\n\n// === Painter ===\n\nlet currentCanvas: HTMLCanvasElement\nlet painter: Painter\n\nconst forms: { [id: string]: Form } = {}\nfunction getForm(id: string) {\n\treturn forms[id] || (forms[id] = painter.createForm('Form_' + id))\n}\n\nconst shades: { [id: string]: Shade } = {}\nfunction getShade(id: string) {\n\treturn shades[id] || (shades[id] = painter.createShade('Shade_' + id))\n}\n\nconst sketches: { [id: string]: Sketch } = {}\nfunction getSketch(id: string) {\n\treturn sketches[id] || (sketches[id] = painter.createSketch('Sketch_' + id))\n}\n\nconst layers: { [id: string]: Layer } = {}\nfunction getLayer(id: string) {\n\treturn layers[id] || (layers[id] = painter.createLayer('Layer_' + id))\n}\n\nconst frames: { [id: string]: Frame } = {}\nfunction getFrame(id: string) {\n\treturn frames[id] || (frames[id] = painter.createFrame('Frame_' + id))\n}\n\nconst effects: { [id: string]: Layer } = {}\nfunction getEffect(id: string) {\n\treturn effects[id] || (effects[id] = painter.createEffect('Effect_' + id))\n}\n\n// === State ===\n\nexport interface BaseState {\n\tdevice: {\n\t\ttpf: number\n\t\tcanvas: HTMLCanvasElement\n\t\tpointer: PointerState\n\t\tkeys: KeyState\n\t\tsizeMultiplier: number\n\t}\n}\n\nconst state: BaseState = {\n\tdevice: {\n\t\ttpf: 0,\n\t\tsizeMultiplier: 1,\n\t},\n} as BaseState\n;(window as any).state = state\n\n// === Events ===\n\ntype ActionHandler<S extends BaseState = BaseState> = (state: S) => void\n\nconst eventHandlers: {\n\t[event: string]: { [id: string]: ActionHandler<any> }\n} = {}\n\nexport const baseEvents = {\n\tFRAME: 'frame',\n\tRESIZE: 'resize',\n}\n\n// === Context ===\n\nlet cancelWindow: () => void\nlet cancelPointer: () => void\nlet cancelKeys: () => void\n\nexport function getPainterContext<S extends BaseState>(\n\tcanvas: HTMLCanvasElement,\n\topts?: PainterOptions,\n): PainterContext<S> {\n\tif (canvas !== currentCanvas) {\n\t\tcurrentCanvas = canvas\n\n\t\tpainter = new Painter(canvas, opts)\n\n\t\tstate.device.canvas = canvas\n\n\t\tcancelWindow && cancelWindow()\n\t\tcancelPointer && cancelPointer()\n\t\tcancelKeys && cancelKeys()\n\n\t\tcancelWindow = windowSize(() =>\n\t\t\tonce(() => {\n\t\t\t\tpainter.sizeMultiplier = state.device.sizeMultiplier\n\t\t\t\tpainter.resize()\n\t\t\t\temit(baseEvents.RESIZE)\n\t\t\t}, 'resize'),\n\t\t)\n\n\t\tcancelPointer = pointer(\n\t\t\t{\n\t\t\t\telement: canvas,\n\t\t\t\tenableRightButton: true,\n\t\t\t\tholdRadius: 7,\n\t\t\t\tholdDelay: 250,\n\t\t\t},\n\t\t\t(m) => (state.device.pointer = m),\n\t\t)\n\n\t\tcancelKeys = keyboard((k) => (state.device.keys = k))\n\t}\n\n\treturn {\n\t\tpainter,\n\t\tgl: painter.gl,\n\t\tgetForm,\n\t\tgetShade,\n\t\tgetSketch,\n\t\tgetLayer,\n\t\tgetFrame,\n\t\tgetEffect,\n\n\t\tstate: state as S,\n\n\t\tget,\n\t\tset,\n\t\tlisten,\n\t\temit,\n\t}\n\n\tfunction get<K extends keyof S = keyof S>(prop: K): S[K] {\n\t\treturn (state as S)[prop]\n\t}\n\n\tfunction set<K extends keyof S = keyof S>(\n\t\tkey: K,\n\t\tval: S[K],\n\t\topts?: { reset: any },\n\t) {\n\t\tconst s = state as S\n\t\tif (s[key]) {\n\t\t\tconst reset = opts && opts.reset\n\t\t\tif (reset !== true) {\n\t\t\t\tval = deepOverride(val, s[key], { ignore: reset })\n\t\t\t}\n\t\t}\n\t\ts[key] = val\n\t}\n\n\tfunction listen(id: string, event: string, s: ActionHandler<S>) {\n\t\tif (!eventHandlers[event]) eventHandlers[event] = {}\n\t\teventHandlers[event][id] = s\n\t}\n\n\tfunction emit(event: string) {\n\t\tconst e = eventHandlers[event]\n\t\tif (e)\n\t\t\tfor (const id in e) {\n\t\t\t\te[id](state as S)\n\t\t\t}\n\t}\n}\n\nexport interface PainterContext<S extends BaseState = BaseState> {\n\tpainter: Painter\n\tgl: GL\n\tgetForm: typeof getForm\n\tgetShade: typeof getShade\n\tgetSketch: typeof getSketch\n\tgetLayer: typeof getLayer\n\tgetFrame: typeof getFrame\n\tgetEffect: typeof getEffect\n\tstate: S\n\tget<K extends keyof S = keyof S>(prop: K): S[K]\n\tset<K extends keyof S = keyof S>(\n\t\tkey: K,\n\t\tval: S[K],\n\t\topts?: { reset: any },\n\t): void\n\tlisten(id: string, event: string, s: ActionHandler<S>): void\n\temit(event: string): void\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { baseEvents, getPainterContext } from '../../shared-utils/painterState'\n\nexport const canvas = document.getElementById('canvas') as HTMLCanvasElement\n\nexport const Q = getPainterContext(canvas)\n\nexport const events = {\n\t...baseEvents,\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function windowSize(callback) {\n    function resize() {\n        callback({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    }\n    window.addEventListener('resize', resize);\n    resize();\n    return function stop() {\n        window.removeEventListener('resize', resize);\n    };\n}\nexport function windowSizeObserver() {\n    const state = {\n        size: { width: 0, height: 0 },\n    };\n    const destroy = windowSize(s => (state.size = s));\n    return { state, destroy };\n}\n//# sourceMappingURL=dom.js.map","import { equalArray } from '../utils/predicates';\nexport function vec(v) {\n    if (typeof v === 'number') {\n        return new Float32Array(v);\n    }\n    return new Float32Array(v);\n}\nexport function add(vec1, vec2, res = []) {\n    for (let i = 0; i < vec1.length; i++) {\n        res[i] = vec1[i] + vec2[i];\n    }\n    return res;\n}\nexport function sub(vec1, vec2, res = []) {\n    for (let i = 0; i < vec1.length; i++) {\n        res[i] = vec1[i] - vec2[i];\n    }\n    return res;\n}\nexport function mul(scalar, vec, res = []) {\n    for (let i = 0; i < vec.length; i++) {\n        res[i] = vec[i] * scalar;\n    }\n    return res;\n}\nexport function div(scalar, vec, res = []) {\n    for (let i = 0; i < vec.length; i++) {\n        res[i] = vec[i] / scalar;\n    }\n    return res;\n}\nexport function length(vec) {\n    let sum = 0;\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < vec.length; i++) {\n        const val = vec[i];\n        sum += val * val;\n    }\n    return Math.sqrt(sum);\n}\nexport function normalize(vec, res = []) {\n    return div(length(vec), vec, res);\n}\nexport function limit(maxLength, vec) {\n    const l = length(vec);\n    if (maxLength < l) {\n        return mul(maxLength / l, vec);\n    }\n    else {\n        return vec;\n    }\n}\nexport function dot(v1, v2) {\n    let d = 0;\n    for (let i = 0; i < v1.length; i++) {\n        d += v1[i] * v2[i];\n    }\n    return d;\n}\nexport function cross(v1, v2, res = []) {\n    res[0] = v1[1] * v2[2] - v1[2] * v2[1];\n    res[1] = v1[2] * v2[0] - v1[0] * v2[2];\n    res[2] = v1[0] * v2[1] - v1[1] * v2[0];\n    return res;\n}\nexport function cross2D(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\nexport const isEqual = equalArray;\n//# sourceMappingURL=vectors.js.map","export function sign(num) {\n    if (num > 0) {\n        return 1;\n    }\n    else if (num < 0) {\n        return -1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function lerp(step, start, end) {\n    return start + step * (end - start);\n}\nexport function clamp(min, max, value) {\n    return Math.max(min, Math.min(value, max));\n}\nexport const DEG_TO_RAD_FACTOR = Math.PI / 180;\nexport function degToRad(degrees) {\n    return degrees * DEG_TO_RAD_FACTOR;\n}\n//# sourceMappingURL=core.js.map","export class M<A> {\n\tstatic of<A>(a: A) {\n\t\treturn new M(a)\n\t}\n\n\treadonly value: A\n\n\tconstructor(a: A) {\n\t\tthis.value = a\n\t}\n\n\tof<B>(b: B): M<B> {\n\t\treturn new M(b)\n\t}\n\n\tmap<B>(fn: (a: A) => B): M<B> {\n\t\treturn new M(fn(this.value))\n\t}\n\n\tap<B>(m: M<(a: A) => B>): M<B> {\n\t\treturn m.chain(this.map.bind(this)) as M<B> // TODO: check type error\n\t}\n\n\tchain<B>(fn: (a: A) => M<B>): M<B> {\n\t\treturn fn(this.value)\n\t}\n\n\tcombine<B>(fn: (a: A, b: B) => B, b: M<B>) {\n\t\treturn this.chain(v1 => b.chain(v2 => M.of(fn(v1, v2))))\n\t}\n\n\tpull<B>(fn: (a: A, b: B) => B, b: B) {\n\t\treturn this.chain(v1 => M.of(fn(v1, b)))\n\t}\n}\n\nexport function alter<A>(coll: A[], k: number, fn: (a: A) => A): A[]\nexport function alter<A>(\n\tcoll: { [k: string]: A },\n\tk: string,\n\tfn: (a: A) => A,\n): { [k: string]: A }\nexport function alter<A>(\n\tcoll: A[] | { [k: string]: A },\n\tk: string | number,\n\tfn: (a: A) => A,\n) {\n\t;(coll as any)[k] = fn((coll as any)[k])\n\treturn coll\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function randInt(int) {\n    return Math.floor(Math.random() * int);\n}\nexport function randIntInRange(from, to) {\n    return randInt(to - from) + from;\n}\nexport function normalRand() {\n    return (Math.random() + Math.random() + Math.random()) / 3;\n}\n//# sourceMappingURL=random.js.map","import { alter, M } from '../../shared-utils/fp'\nimport { randInt, randIntInRange } from 'tvs-libs/dist/math/random'\nimport {\n\tadd,\n\tdiv,\n\tlength,\n\tmul,\n\tnormalize,\n\tsub,\n} from 'tvs-libs/dist/math/vectors'\nimport { flatten, times } from 'tvs-libs/dist/utils/sequence'\nimport { canvas } from './context'\n\nexport const nodeCount = 40\nexport const nameSpaceCount = 6\nconst springLength = 200\n\nexport const nodes = times(\n\ti => ({\n\t\tid: i,\n\t\tpos: [Math.random() * canvas.width, Math.random() * canvas.height],\n\t\tns: randInt(nameSpaceCount),\n\t\tforce: [0, 0],\n\t}),\n\tnodeCount,\n)\n\nexport const connections = flatten(\n\ttimes(i => {\n\t\tif (i < nodeCount - 3) {\n\t\t\tconst i1 = randIntInRange(i + 1, nodeCount - 1)\n\t\t\tconst cs = [[i, i1] as [number, number]]\n\t\t\tconst i2 = randIntInRange(i + 1, nodeCount - 1)\n\t\t\tif (i2 !== i1) {\n\t\t\t\tcs.push([i, i2])\n\t\t\t}\n\t\t\treturn cs\n\t\t} else {\n\t\t\treturn []\n\t\t}\n\t}, nodeCount),\n)\n\nfunction updateForces(force: M<number>, dir: M<number[]>, from: any, to: any) {\n\tconst update = (f: M<number>) => (v: number[]) =>\n\t\tf.combine(mul, dir).pull(add, v).value\n\n\talter(from, 'force', update(force))\n\talter(to, 'force', update(force.map(f => -f)))\n}\n\nexport function updateNodes(tpf: number) {\n\tfor (const c of connections) {\n\t\tconst n1 = nodes[c[0]]\n\t\tconst n2 = nodes[c[1]]\n\n\t\tconst vec = M.of(n2.pos).pull(sub, n1.pos)\n\n\t\tconst dir = vec.map(normalize)\n\n\t\tconst force = vec\n\t\t\t.map(length)\n\t\t\t.map(l => l - springLength)\n\t\t\t.map(v => v * 2)\n\n\t\tupdateForces(force, dir, n1, n2)\n\t}\n\n\tfor (let i = 0; i < nodes.length - 1; i++) {\n\t\tconst n1 = nodes[i]\n\t\tfor (let j = i + 1; j < nodes.length; j++) {\n\t\t\tconst n2 = nodes[j]\n\n\t\t\tconst vec = M.of(n2.pos).pull(sub, n1.pos)\n\n\t\t\tconst dir = vec.map(normalize)\n\t\t\tconst dist = vec.map(length)\n\t\t\tconst force = dist.map(l => -Math.max(100 - l, 0))\n\n\t\t\tupdateForces(force, dir, n1, n2)\n\n\t\t\tif (n2.ns === n1.ns) {\n\t\t\t\tconst force = dist.map(d => d - 100)\n\t\t\t\tupdateForces(force, dir, n1, n2)\n\t\t\t} else {\n\t\t\t\tconst force = dist.map(d => -Math.max(200 - d, 0))\n\t\t\t\tupdateForces(force, dir, n1, n2)\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const node of nodes) {\n\t\tconst force = node.force\n\t\tconst l = length(force) - 3\n\t\tif (l > 0) {\n\t\t\tconst n = div(l + 3, force)\n\t\t\tnode.pos = add(node.pos, mul(l * (tpf / 500), n))\n\t\t\tnode.force = [0, 0]\n\t\t}\n\t}\n\treturn nodes\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { intToFloat } from 'tvs-libs/dist/graphics/colors'\nimport { add, mul, normalize, sub } from 'tvs-libs/dist/math/vectors'\nimport { flatten, mapcat } from 'tvs-libs/dist/utils/sequence'\nimport { Q } from './context'\nimport { connections, nameSpaceCount, nodes } from './nodes'\n\nexport const pointsForm = Q.getForm('points')\nexport const lineForm = Q.getForm('lines')\n\nconst lineWidth = 3\n\nexport function updateGeometries() {\n\tpointsForm.update({\n\t\tdrawType: 'POINTS',\n\t\tattribs: {\n\t\t\tposition: {\n\t\t\t\tbuffer: new Float32Array(mapcat((n) => n.pos, nodes)),\n\t\t\t\tstoreType: 'DYNAMIC',\n\t\t\t},\n\t\t\tcolor: {\n\t\t\t\tbuffer: new Float32Array(\n\t\t\t\t\tmapcat(\n\t\t\t\t\t\t(n) =>\n\t\t\t\t\t\t\tintToFloat([\n\t\t\t\t\t\t\t\t(n.ns / nameSpaceCount) * 255,\n\t\t\t\t\t\t\t\t((n.ns / nameSpaceCount + 1 / 3) * 255) % 255,\n\t\t\t\t\t\t\t\t((n.ns / nameSpaceCount + 2 / 3) * 255) % 255,\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tnodes,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tstoreType: 'DYNAMIC',\n\t\t\t},\n\t\t},\n\t\titemCount: nodes.length,\n\t})\n\n\tlineForm.update({\n\t\tdrawType: 'TRIANGLES',\n\t\tattribs: {\n\t\t\tposition: {\n\t\t\t\tbuffer: new Float32Array(\n\t\t\t\t\tmapcat((c) => {\n\t\t\t\t\t\tconst n1 = nodes[c[0]]\n\t\t\t\t\t\tconst n2 = nodes[c[1]]\n\t\t\t\t\t\tconst vDiff = normalize(sub(n2.pos, n1.pos))\n\t\t\t\t\t\tconst normal = [vDiff[1], -vDiff[0]]\n\t\t\t\t\t\tconst p1 = add(n1.pos, mul(lineWidth / 2, normal))\n\t\t\t\t\t\tconst p2 = add(n1.pos, mul(-lineWidth / 2, normal))\n\t\t\t\t\t\tconst p3 = add(n2.pos, mul(lineWidth / 2, normal))\n\t\t\t\t\t\tconst p4 = add(n2.pos, mul(-lineWidth / 2, normal))\n\t\t\t\t\t\treturn flatten([p3, p2, p1, p2, p3, p4])\n\t\t\t\t\t}, connections),\n\t\t\t\t),\n\t\t\t\tstoreType: 'DYNAMIC',\n\t\t\t},\n\t\t},\n\t\titemCount: connections.length * 6,\n\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { repeat, stop } from '../../shared-utils/scheduler'\nimport { canvas, Q } from './context'\nimport { lineForm, pointsForm, updateGeometries } from './geometries'\nimport { updateNodes } from './nodes'\nimport lineFrag from './shaders/line.frag'\nimport lineVert from './shaders/line.vert'\nimport pointFrag from './shaders/point.frag'\nimport pointVert from './shaders/point.vert'\n\n// ===== shaders =====\n\nconst pointsShade = Q.getShade('point').update({\n\tvert: pointVert,\n\tfrag: pointFrag,\n})\n\nconst linesShade = Q.getShade('line').update({\n\tvert: lineVert,\n\tfrag: lineFrag,\n})\n\n// ===== objects =====\n\nconst points = Q.getSketch('point').update({\n\tform: pointsForm,\n\tshade: pointsShade,\n\tuniforms: { size: [canvas.width, canvas.height] },\n})\n\nconst lines = Q.getSketch('lines').update({\n\tform: lineForm,\n\tshade: linesShade,\n\tdrawSettings: {\n\t\tclearColor: [0, 0, 0, 1],\n\t\tclearBits: Q.gl.COLOR_BUFFER_BIT,\n\t\tcullFace: Q.gl.BACK,\n\t\tenable: [Q.gl.CULL_FACE],\n\t},\n\tuniforms: { size: [canvas.width, canvas.height] },\n})\n\n// ===== render =====\n\nconst timeToSort = 10\nlet time = 0\nrepeat((tpf) => {\n\ttime += tpf\n\n\tupdateNodes(tpf)\n\tupdateGeometries()\n\n\tQ.painter.draw(lines)\n\tQ.painter.draw(points)\n\n\tif (time >= timeToSort * 1000) stop('render')\n}, 'render')\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export default \"#define GLSLIFY 1\\nattribute vec2 position;\\nattribute vec3 color;\\n\\nuniform vec2 size;\\n\\nvarying vec3 vColor;\\n\\nvoid main() {\\n\\tvColor = color;\\n\\tgl_Position = vec4((position / size) * 2.0 - 1.0, 0.0, 1.0);\\n\\tgl_PointSize = 20.0;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nvarying vec3 vColor;\\n\\nvoid main() {\\n\\tgl_FragColor = vec4(vColor, 1.0);\\n}\\n\";","export default \"#define GLSLIFY 1\\nattribute vec2 position;\\n\\nuniform vec2 size;\\n\\nvoid main() {\\n\\tgl_Position = vec4((position / size) * 2.0 - 1.0, 0.0, 1.0);\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nvoid main() {\\n\\tgl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\\n\";","import { clamp, lerp } from '../math/core';\nexport const BLACK = [0, 0, 0, 255];\nexport const WHITE = [255, 255, 255, 255];\nexport function mixColors([r1, g1, b1, a1], [r2, g2, b2, a2]) {\n    const step = a2 / 255;\n    const r = Math.floor(lerp(step, r1, r2));\n    const g = Math.floor(lerp(step, g1, g2));\n    const b = Math.floor(lerp(step, b1, b2));\n    return [r, g, b, a1];\n}\nexport function grey(scale, alpha) {\n    if (alpha == null) {\n        alpha = 255;\n    }\n    return [scale, scale, scale, alpha];\n}\nexport function colorRgbaToCSS([r, g, b, a]) {\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + a / 255 + ')';\n}\nexport function intToFloat(color) {\n    return color.map(v => v / 255);\n}\nexport function floatToInt(color) {\n    return color.map(v => Math.floor(v * 255));\n}\nexport function hexToRgb(hex) {\n    hex = Math.floor(hex);\n    const r = (hex >> 16) & 255, g = (hex >> 8) & 255, b = hex & 255;\n    return [r, g, b];\n}\nexport function rgbToHexString([r, g, b]) {\n    return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\nexport function hexStringToRgb(s) {\n    s = s.replace(/^\\s*#|\\s*$/g, '');\n    // convert 3 char codes --> 6, e.g. `E0F` --> `EE00FF`\n    if (s.length === 3) {\n        s = s.replace(/(.)/g, '$1$1');\n    }\n    return hexToRgb(parseInt(s, 16));\n}\n/**\n * @param rgb FloatColor with ranges 0 - 1\n */\nexport function rgbToHSL([r, g, b]) {\n    const cMax = Math.max(r, g, b);\n    const cMin = Math.min(r, g, b);\n    const delta = cMax - cMin;\n    const l = (cMax + cMin) / 2;\n    let h = 0, s = 0;\n    if (delta === 0) {\n        h = 0;\n    }\n    else if (cMax === r) {\n        h = (((g - b) / delta) % 6) / 6;\n    }\n    else if (cMax === g) {\n        h = ((b - r) / delta + 2) / 6;\n    }\n    else {\n        h = ((r - g) / delta + 4) / 6;\n    }\n    if (delta === 0) {\n        s = 0;\n    }\n    else {\n        s = delta / (1 - Math.abs(2 * l - 1));\n    }\n    return {\n        h: adjustHue(h),\n        s: s,\n        l: l,\n    };\n}\nexport function hslToRGB({ h, s, l }) {\n    const c = (1 - Math.abs(2 * l - 1)) * s;\n    const x = c * (1 - Math.abs(((h * 6) % 2) - 1));\n    const m = l - c / 2;\n    let r, g, b;\n    if (h < 1 / 6) {\n        r = c;\n        g = x;\n        b = 0;\n    }\n    else if (h < 2 / 6) {\n        r = x;\n        g = c;\n        b = 0;\n    }\n    else if (h < 0.5) {\n        r = 0;\n        g = c;\n        b = x;\n    }\n    else if (h < 4 / 6) {\n        r = 0;\n        g = x;\n        b = c;\n    }\n    else if (h < 5 / 6) {\n        r = x;\n        g = 0;\n        b = c;\n    }\n    else {\n        r = c;\n        g = 0;\n        b = x;\n    }\n    r = clamp(0, 1, r + m);\n    g = clamp(0, 1, g + m);\n    b = clamp(0, 1, b + m);\n    return [r, g, b];\n}\nexport function adjustHue(hue) {\n    if (hue >= 1) {\n        return hue - 1;\n    }\n    if (hue < 0) {\n        return hue + 1;\n    }\n    return hue;\n}\nexport function updateHue(hsl, degree) {\n    return Object.assign(Object.assign({}, hsl), { h: adjustHue(hsl.h + degree) });\n}\nexport function updateSaturation(hsl, delta) {\n    return Object.assign(Object.assign({}, hsl), { s: clamp(0, 1, hsl.s + delta) });\n}\nexport function updateLightness(hsl, delta) {\n    return Object.assign(Object.assign({}, hsl), { l: clamp(0, 1, hsl.l + delta) });\n}\n//# sourceMappingURL=colors.js.map"],"sourceRoot":""}