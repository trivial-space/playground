{"version":3,"sources":["webpack:///./shared-utils/scheduler.ts","webpack:///../libs/dist/utils/sequence.js","webpack:///../libs/dist/events/keyboard.js","webpack:///../libs/dist/utils/object.js","webpack:///../painter/dist/contants.js","webpack:///../painter/dist/asset-lib.js","webpack:///../painter/dist/render-utils.js","webpack:///../painter/dist/form.js","webpack:///../painter/dist/texture.js","webpack:///../painter/dist/render-target.js","webpack:///../libs/dist/utils/predicates.js","webpack:///../painter/dist/frame.js","webpack:///../painter/dist/layer.js","webpack:///../painter/dist/shade.js","webpack:///../painter/dist/sketch.js","webpack:///../painter/dist/painter.js","webpack:///../painter/dist/utils/context.js","webpack:///../libs/dist/events/pointer.js","webpack:///./shared-utils/painterState.ts","webpack:///./experiments/convex-hull/context.ts","webpack:///../libs/dist/events/dom.js","webpack:///../libs/dist/math/vectors.js","webpack:///./experiments/convex-hull/nodes.ts","webpack:///../libs/dist/math/coords.js","webpack:///../libs/dist/math/random.js","webpack:///./experiments/convex-hull/shaders/compose.frag","webpack:///./experiments/convex-hull/index.ts","webpack:///./experiments/convex-hull/shaders/point.vert","webpack:///./experiments/convex-hull/shaders/point.frag","webpack:///./experiments/convex-hull/shaders/side.frag"],"names":["updateOnce","updateRepeat","willUpdate","uidCounter","oldTime","processUpdates","time","tpf","id","updates","requestAnimationFrame","times","fn","count","res","i","Keys","deepOverride","obj1","obj2","opt","ignore","Array","isArray","key","hasOwnProperty","val1","val2","undefined","defaultTextureSettings","defaultForms","renderQuad","attribs","buffer","Float32Array","storeType","drawType","itemCount","defaultShaders","vert","frag","getBindPointForSamplerType","type","typeMap","bindPoint","intSetter","gl","location","v","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","texture","activeTexture","TEXTURE0","bindTexture","_texture","samplerArraySetter","size","units","Int32Array","textures","index","Type","setter","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Uint32Array","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","floatAttribSetter","typeInfo","b","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","itemSize","normalize","stride","offset","intAttribSetter","vertexAttribIPointer","matAttribSetter","defaultSize","numComponents","rowOffset","attrTypeMap","applyDrawSettings","settings","enable","setting","disable","blendFunc","apply","depthFunc","cullFace","frontFace","lineWidth","colorMask","depthMask","clearColor","clearDepth","clearBits","clear","revertDrawSettings","Int8Array","Uint8Array","Int16Array","Uint16Array","formCounter","Form","_painter","this","data","_drawType","_itemCount","_attribs","attribData","createBuffer","bufferData","elements","_elements","glType","typedArray","Uint8ClampedArray","Error","getGLTypeForTypedArray","ELEMENT_ARRAY_BUFFER","deleteBuffer","textureCount","Texture","_data","createTexture","TEXTURE_2D","wrap","wrapS","wrapT","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","magFilter","TEXTURE_MAG_FILTER","minFilter","TEXTURE_MIN_FILTER","asset","texImage2D","RGBA","UNSIGNED_BYTE","isWebGL2","RGBA32F","width","height","flipY","pixelStorei","UNPACK_FLIP_Y_WEBGL","indexOf","generateMipmap","Object","assign","deleteTexture","targetCount","RenderTarget","antialias","frameBuffer","antiAliasFrameBuffer","antiAliasRenderBuffer","depthBuffer","bufferStructure","_a","length","every","buf","k1","keys","arr1","arr2","equalObject","createFramebuffer","createRenderbuffer","some","t","getExtension","texCount","bufferAttachments","COLOR_ATTACHMENT0","bindFramebuffer","FRAMEBUFFER","glx","attachment","COLOR_ATTACHMENT0_WEBGL","drawBuffers","drawBuffersWEBGL","gl2","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","Math","min","getParameter","MAX_SAMPLES","RGBA8","framebufferRenderbuffer","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","renderbufferStorage","update","framebufferTexture2D","err","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","console","error","deleteFramebuffer","deleteRenderbuffer","frameCount","Frame","layers","_targets","_textures","_b","_c","_d","selfReferencing","layerCount","reduce","layer","_uniforms","canvas","_destroyTargets","targetData","forEach","tex","destroy","tmp","Layer","sketches","sketch","shade","uniforms","shadeCounter","Shade","fragSource","trim","vertSource","program","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","_program","_frag","_vert","attachShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","addLineNumbers","linkProgram","getProgramParameter","LINK_STATUS","lastError","getProgramInfoLog","_uniformSetters","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","name","substr","toString","uniformSetters","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","createUniformSetters","_attributeSetters","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","createAttributeSetters","deleteProgram","deleteShader","src","split","map","line","join","sketchCounter","Sketch","drawSettings","_drawSettings","form","Painter","opts","maxBufferSamples","useWebGL1","getContext","sizeMultiplier","resize","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","getDefaultLayerSettings","_renderQuad","createForm","_staticSketch","createFlatSketch","multiplier","rect","getBoundingClientRect","resizeCanvas","s","createSketch","createShade","l","createLayer","globalUniforms","viewport","draw","frames","frame","renderFrame","idx","source","image","sources","useProgram","shadeForm","shadeUniforms","drawInstance","drawElements","drawArrays","value","renderLayer","target","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","clearBufferfv","COLOR","blitFramebuffer","COLOR_BUFFER_BIT","LINEAR","layerPasses","j","_swapTargets","Buttons","currentCanvas","painter","getForm","shades","getShade","getSketch","getLayer","getFrame","createFrame","effects","getEffect","createEffect","state","device","window","eventHandlers","baseEvents","FRAME","RESIZE","cancelWindow","cancelPointer","cancelKeys","document","getElementById","Q","getPainterContext","callback","innerWidth","innerHeight","addEventListener","removeEventListener","windowSize","once","emit","cb","element","enableRightButton","holdDelay","holdRadius","pressed","drag","x","y","dX","dY","xMax","yMax","dragging","holding","oX","oY","timeout","onPointerDown","e","isPrimary","button","clientX","clientY","clearTimeout","setTimeout","onPointerUp","_e","event","onPointerMove","max","abs","preventDefault","pointer","m","onKeydown","keyCode","Date","now","onKeyup","keyboard","k","get","prop","set","val","reset","listen","radius","triples","nodes","vec1","vec2","add","r","phi","cos","sin","polarToCartesian2D","sqrt","random","PI","push","pointsShade","pointsForm","position","array","subarray","currentLength","flatten","pointsSketch","points","BLEND","currentTriple","current","blend","previous","main","triple","p1","p2","p3","compose","display","log"],"mappings":"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","file":"experiments/convex-hull/main.js","sourcesContent":["// onNextTick\n// schedule actions on next animation frame\n\ntype Callback = (n: number) => void\n\nlet updateOnce: { [id: string]: Callback } | null = null\nconst updateRepeat: { [id: string]: Callback } = {}\n\nlet willUpdate = false\n\nlet uidCounter = 0\n\nlet oldTime = 0\n\nfunction processUpdates(time: number) {\n\tconst tpf = oldTime ? time - oldTime : oldTime\n\toldTime = time\n\n\tif (updateOnce) {\n\t\tfor (const id in updateOnce) {\n\t\t\tupdateOnce[id](tpf)\n\t\t}\n\t\tupdateOnce = null\n\t}\n\n\tlet updates = 0\n\tfor (const id in updateRepeat) {\n\t\tupdates++\n\t\tupdateRepeat[id](tpf)\n\t}\n\n\tif (!updates) {\n\t\twillUpdate = false\n\t\toldTime = 0\n\t} else {\n\t\trequestAnimationFrame(processUpdates)\n\t}\n}\n\nexport function once(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateOnce = updateOnce || {}\n\tupdateOnce[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n}\n\nexport function repeat(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateRepeat[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n\n\treturn id\n}\n\nexport function stop(id: Callback | string | number) {\n\tif (typeof id === 'function') {\n\t\tid = id.name\n\t}\n\tdelete updateRepeat[id]\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { randInt, randIntInRange } from '../math/random';\nexport function pickRandom(arr) {\n    return arr[randInt(arr.length)];\n}\nexport function doTimes(fn, count) {\n    for (let i = 0; i < count; i++) {\n        fn(i);\n    }\n}\nexport function times(fn, count, res = []) {\n    for (let i = 0; i < count; i++) {\n        res[i] = fn(i);\n    }\n    return res;\n}\nexport function repeat(count, item) {\n    return times(() => item, count);\n}\nexport function concat(arr, ...arrs) {\n    return arr.concat(...arrs);\n}\nexport function zip(fn, as, bs, res = []) {\n    const length = Math.min(as.length, bs.length);\n    for (let i = 0; i < length; i++) {\n        res[i] = fn(as[i], bs[i]);\n    }\n    return res;\n}\nexport function flatten(array, res = []) {\n    for (const subarray of array) {\n        const currentLength = res.length;\n        for (let i = 0; i < subarray.length; i++) {\n            res[i + currentLength] = subarray[i];\n        }\n    }\n    return res;\n}\nexport function mapcat(fn, array, res = []) {\n    return flatten(map(fn, array, res));\n}\nexport const flatMap = mapcat;\nexport function reverse(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        res[i] = arr[arr.length - 1 - i];\n    }\n    return res;\n}\nexport function shuffle(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        const j = randIntInRange(i, arr.length);\n        const temp = res[i] !== undefined ? res[i] : arr[i];\n        res[i] = res[j] !== undefined ? res[j] : arr[j];\n        res[j] = temp;\n    }\n    return res;\n}\nexport function map(fn, coll, res = []) {\n    for (let i = 0; i < coll.length; i++) {\n        res[i] = fn(coll[i], i);\n    }\n    return res;\n}\nexport function each(fn, coll) {\n    for (const key in coll) {\n        fn(coll[key], key);\n    }\n}\nexport function reduce(fn, start, arr) {\n    for (let i = 0; i < arr.length; i++) {\n        start = fn(start, arr[i]);\n    }\n    return start;\n}\nexport function fold(fn, arr) {\n    const [start, ...rest] = arr;\n    return reduce(fn, start, rest);\n}\nexport const last = (arr) => arr[arr.length - 1];\n//# sourceMappingURL=sequence.js.map","export var Keys;\n(function (Keys) {\n    Keys[Keys[\"CANCEL\"] = 3] = \"CANCEL\";\n    Keys[Keys[\"HELP\"] = 6] = \"HELP\";\n    Keys[Keys[\"BACK_SPACE\"] = 8] = \"BACK_SPACE\";\n    Keys[Keys[\"TAB\"] = 9] = \"TAB\";\n    Keys[Keys[\"CLEAR\"] = 12] = \"CLEAR\";\n    Keys[Keys[\"RETURN\"] = 13] = \"RETURN\";\n    Keys[Keys[\"ENTER\"] = 14] = \"ENTER\";\n    Keys[Keys[\"SHIFT\"] = 16] = \"SHIFT\";\n    Keys[Keys[\"CONTROL\"] = 17] = \"CONTROL\";\n    Keys[Keys[\"ALT\"] = 18] = \"ALT\";\n    Keys[Keys[\"PAUSE\"] = 19] = \"PAUSE\";\n    Keys[Keys[\"CAPS_LOCK\"] = 20] = \"CAPS_LOCK\";\n    Keys[Keys[\"ESCAPE\"] = 27] = \"ESCAPE\";\n    Keys[Keys[\"SPACE\"] = 32] = \"SPACE\";\n    Keys[Keys[\"PAGE_UP\"] = 33] = \"PAGE_UP\";\n    Keys[Keys[\"PAGE_DOWN\"] = 34] = \"PAGE_DOWN\";\n    Keys[Keys[\"END\"] = 35] = \"END\";\n    Keys[Keys[\"HOME\"] = 36] = \"HOME\";\n    Keys[Keys[\"LEFT\"] = 37] = \"LEFT\";\n    Keys[Keys[\"UP\"] = 38] = \"UP\";\n    Keys[Keys[\"RIGHT\"] = 39] = \"RIGHT\";\n    Keys[Keys[\"DOWN\"] = 40] = \"DOWN\";\n    Keys[Keys[\"PRINTSCREEN\"] = 44] = \"PRINTSCREEN\";\n    Keys[Keys[\"INSERT\"] = 45] = \"INSERT\";\n    Keys[Keys[\"DELETE\"] = 46] = \"DELETE\";\n    Keys[Keys[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    Keys[Keys[\"DIGIT_1\"] = 49] = \"DIGIT_1\";\n    Keys[Keys[\"DIGIT_2\"] = 50] = \"DIGIT_2\";\n    Keys[Keys[\"DIGIT_3\"] = 51] = \"DIGIT_3\";\n    Keys[Keys[\"DIGIT_4\"] = 52] = \"DIGIT_4\";\n    Keys[Keys[\"DIGIT_5\"] = 53] = \"DIGIT_5\";\n    Keys[Keys[\"DIGIT_6\"] = 54] = \"DIGIT_6\";\n    Keys[Keys[\"DIGIT_7\"] = 55] = \"DIGIT_7\";\n    Keys[Keys[\"DIGIT_8\"] = 56] = \"DIGIT_8\";\n    Keys[Keys[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    Keys[Keys[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    Keys[Keys[\"EQUALS\"] = 61] = \"EQUALS\";\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    Keys[Keys[\"CONTEXT_MENU\"] = 93] = \"CONTEXT_MENU\";\n    Keys[Keys[\"NUMPAD0\"] = 96] = \"NUMPAD0\";\n    Keys[Keys[\"NUMPAD1\"] = 97] = \"NUMPAD1\";\n    Keys[Keys[\"NUMPAD2\"] = 98] = \"NUMPAD2\";\n    Keys[Keys[\"NUMPAD3\"] = 99] = \"NUMPAD3\";\n    Keys[Keys[\"NUMPAD4\"] = 100] = \"NUMPAD4\";\n    Keys[Keys[\"NUMPAD5\"] = 101] = \"NUMPAD5\";\n    Keys[Keys[\"NUMPAD6\"] = 102] = \"NUMPAD6\";\n    Keys[Keys[\"NUMPAD7\"] = 103] = \"NUMPAD7\";\n    Keys[Keys[\"NUMPAD8\"] = 104] = \"NUMPAD8\";\n    Keys[Keys[\"NUMPAD9\"] = 105] = \"NUMPAD9\";\n    Keys[Keys[\"MULTIPLY\"] = 106] = \"MULTIPLY\";\n    Keys[Keys[\"ADD\"] = 107] = \"ADD\";\n    Keys[Keys[\"SEPARATOR\"] = 108] = \"SEPARATOR\";\n    Keys[Keys[\"SUBTRACT\"] = 109] = \"SUBTRACT\";\n    Keys[Keys[\"DECIMAL\"] = 110] = \"DECIMAL\";\n    Keys[Keys[\"DIVIDE\"] = 111] = \"DIVIDE\";\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    Keys[Keys[\"F13\"] = 124] = \"F13\";\n    Keys[Keys[\"F14\"] = 125] = \"F14\";\n    Keys[Keys[\"F15\"] = 126] = \"F15\";\n    Keys[Keys[\"F16\"] = 127] = \"F16\";\n    Keys[Keys[\"F17\"] = 128] = \"F17\";\n    Keys[Keys[\"F18\"] = 129] = \"F18\";\n    Keys[Keys[\"F19\"] = 130] = \"F19\";\n    Keys[Keys[\"F20\"] = 131] = \"F20\";\n    Keys[Keys[\"F21\"] = 132] = \"F21\";\n    Keys[Keys[\"F22\"] = 133] = \"F22\";\n    Keys[Keys[\"F23\"] = 134] = \"F23\";\n    Keys[Keys[\"F24\"] = 135] = \"F24\";\n    Keys[Keys[\"NUM_LOCK\"] = 144] = \"NUM_LOCK\";\n    Keys[Keys[\"SCROLL_LOCK\"] = 145] = \"SCROLL_LOCK\";\n    Keys[Keys[\"COMMA\"] = 188] = \"COMMA\";\n    Keys[Keys[\"PERIOD\"] = 190] = \"PERIOD\";\n    Keys[Keys[\"SLASH\"] = 191] = \"SLASH\";\n    Keys[Keys[\"BACK_QUOTE\"] = 192] = \"BACK_QUOTE\";\n    Keys[Keys[\"OPEN_BRACKET\"] = 219] = \"OPEN_BRACKET\";\n    Keys[Keys[\"BACK_SLASH\"] = 220] = \"BACK_SLASH\";\n    Keys[Keys[\"CLOSE_BRACKET\"] = 221] = \"CLOSE_BRACKET\";\n    Keys[Keys[\"QUOTE\"] = 222] = \"QUOTE\";\n    Keys[Keys[\"META\"] = 224] = \"META\";\n})(Keys || (Keys = {}));\nexport function keyboard(opts, callback) {\n    const cb = callback || opts;\n    const { element = window } = opts;\n    const pressed = {};\n    function onKeydown(event) {\n        pressed[event.keyCode] = Date.now();\n        cb(pressed);\n    }\n    function onKeyup(event) {\n        delete pressed[event.keyCode];\n        cb(pressed);\n    }\n    element.addEventListener('keyup', onKeyup, false);\n    element.addEventListener('keydown', onKeydown, false);\n    cb(pressed);\n    return function stop() {\n        element.removeEventListener('keyup', onKeyup);\n        element.removeEventListener('keydown', onKeydown);\n    };\n}\nexport function keyboardObserver(opts) {\n    const observer = {\n        Keys,\n        state: { pressed: {} },\n        destroy: () => { },\n    };\n    function callback(pressed) {\n        observer.state.pressed = pressed;\n    }\n    observer.destroy = keyboard(callback, opts);\n    return observer;\n}\n//# sourceMappingURL=keyboard.js.map","export function deepmerge(obj1, obj2) {\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        const result = Object.assign({}, obj1);\n        for (const key in obj2) {\n            const val1 = obj1[key];\n            const val2 = obj2[key];\n            if (typeof val2 !== 'undefined') {\n                result[key] = deepmerge(val1, val2);\n            }\n            else {\n                delete result[key];\n            }\n        }\n        return result;\n    }\n    return obj2;\n}\nexport function deepOverride(obj1, obj2, opt) {\n    const ignore = opt && opt.ignore;\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        for (const key in obj1) {\n            if (obj1.hasOwnProperty(key) &&\n                !(ignore && key in ignore && ignore[key] === true)) {\n                const val1 = obj1[key];\n                const val2 = obj2[key];\n                if (val2 !== undefined) {\n                    obj1[key] = deepOverride(val1, val2, {\n                        ignore: ignore && ignore[key],\n                    });\n                }\n            }\n        }\n        return obj1;\n    }\n    return obj2;\n}\nexport function mapObj(fn, coll, res = {}) {\n    for (const key in coll) {\n        res[key] = fn(coll[key], key);\n    }\n    return res;\n}\n//# sourceMappingURL=object.js.map","export const GEOMETRY_PROP_POSITION = 'position';\nexport const GEOMETRY_PROP_NORMAL = 'normal';\nexport const GEOMETRY_PROP_UV = 'uv';\nexport const UNIFORM_SOURCE_TEXTURE = 'source';\nexport const VARYING_UV_COORDS = 'coords';\nexport const GL_TYPE = {\n    FLOAT: 0x1406,\n    FLOAT_VEC2: 0x8b50,\n    FLOAT_VEC3: 0x8b51,\n    FLOAT_VEC4: 0x8b52,\n    INT: 0x1404,\n    INT_VEC2: 0x8b53,\n    INT_VEC3: 0x8b54,\n    INT_VEC4: 0x8b55,\n    BOOL: 0x8b56,\n    BOOL_VEC2: 0x8b57,\n    BOOL_VEC3: 0x8b58,\n    BOOL_VEC4: 0x8b59,\n    FLOAT_MAT2: 0x8b5a,\n    FLOAT_MAT3: 0x8b5b,\n    FLOAT_MAT4: 0x8b5c,\n    SAMPLER_2D: 0x8b5e,\n    SAMPLER_CUBE: 0x8b60,\n    SAMPLER_3D: 0x8b5f,\n    SAMPLER_2D_SHADOW: 0x8b62,\n    FLOAT_MAT2X3: 0x8b65,\n    FLOAT_MAT2X4: 0x8b66,\n    FLOAT_MAT3X2: 0x8b67,\n    FLOAT_MAT3X4: 0x8b68,\n    FLOAT_MAT4X2: 0x8b69,\n    FLOAT_MAT4X3: 0x8b6a,\n    SAMPLER_2D_ARRAY: 0x8dc1,\n    SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n    SAMPLER_CUBE_SHADOW: 0x8dc5,\n    UNSIGNED_INT: 0x1405,\n    UNSIGNED_INT_VEC2: 0x8dc6,\n    UNSIGNED_INT_VEC3: 0x8dc7,\n    UNSIGNED_INT_VEC4: 0x8dc8,\n    INT_SAMPLER_2D: 0x8dca,\n    INT_SAMPLER_3D: 0x8dcb,\n    INT_SAMPLER_CUBE: 0x8dcc,\n    INT_SAMPLER_2D_ARRAY: 0x8dcf,\n    UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n    UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n    UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n    TEXTURE_2D: 0x0de1,\n    TEXTURE_CUBE_MAP: 0x8513,\n    TEXTURE_3D: 0x806f,\n    TEXTURE_2D_ARRAY: 0x8c1a,\n    BYTE: 0x1400,\n    UNSIGNED_BYTE: 0x1401,\n    SHORT: 0x1402,\n    UNSIGNED_SHORT: 0x1403,\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\n    UNSIGNED_SHORT_5_6_5: 0x8363,\n    HALF_FLOAT: 0x140b,\n    UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n    UNSIGNED_INT_10F_11F_11F_REV: 0x8c3b,\n    UNSIGNED_INT_5_9_9_9_REV: 0x8c3e,\n    FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8dad,\n    UNSIGNED_INT_24_8: 0x84fa,\n};\nexport const TEXTURE_FORMAT = {\n    RED: 0x1903,\n    RG: 0x8227,\n    RGB: 0x1907,\n    RGBA: 0x1908,\n    RED_INTEGER: 0x8d94,\n    RG_INTEGER: 0x8228,\n    RGB_INTEGER: 0x8d98,\n    RGBA_INTEGER: 0x8d99,\n    DEPTH_COMPONENT: 0x1902,\n};\nexport const TEXTURE_FORMAT_INTERNAL = {\n    R8: 0x8229,\n    RG8: 0x822b,\n    RGB8: 0x8051,\n    RGBA8: 0x8058,\n    R16F: 0x822d,\n    RG16F: 0x822f,\n    RGB16F: 0x881b,\n    RGBA16F: 0x881a,\n    R32F: 0x822e,\n    RG32F: 0x8230,\n    RGB32F: 0x8815,\n    RGBA32F: 0x8814,\n    R8I: 0x8231,\n    RG8I: 0x8237,\n    RGB8I: 0x8d8f,\n    RGBA8I: 0x8d8e,\n    R8UI: 0x8232,\n    RG8UI: 0x8238,\n    RGB8UI: 0x8d7d,\n    RGBA8UI: 0x8d7c,\n    R16I: 0x8233,\n    RG16I: 0x8239,\n    RGB16I: 0x8d89,\n    RGBA16I: 0x8d88,\n    R16UI: 0x8234,\n    RG16UI: 0x823a,\n    RGB16UI: 0x8d77,\n    RGBA16UI: 0x8d76,\n    R32I: 0x8235,\n    RG32I: 0x823b,\n    RGB32I: 0x8d83,\n    RGBA32I: 0x8d82,\n    R32UI: 0x8236,\n    RG32UI: 0x823c,\n    RGB32UI: 0x8d71,\n    RGBA32UI: 0x8d70,\n    RGB10_A2: 0x8059,\n    RGB10_A2UI: 0x906f,\n    SRGB: 0x8c40,\n    SRGB8: 0x8c41,\n    SRGB8_ALPHA8: 0x8c43,\n    R8_SNORM: 0x8f94,\n    RG8_SNORM: 0x8f95,\n    RGB8_SNORM: 0x8f96,\n    RGBA8_SNORM: 0x8f97,\n    DEPTH_COMPONENT16: 0x81a5,\n    DEPTH_COMPONENT24: 0x81a6,\n    DEPTH_COMPONENT32F: 0x8cac,\n};\nexport const TEXTURE_FORMAT_DEFAULTS = {\n    [GL_TYPE.UNSIGNED_BYTE]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R8,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG8,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB8,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA8,\n    },\n    [GL_TYPE.UNSIGNED_SHORT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT16,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16UI,\n    },\n    [GL_TYPE.UNSIGNED_INT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT24,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R32UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG32UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB32UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA32UI,\n    },\n    [GL_TYPE.FLOAT]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16F,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16F,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16F,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16F,\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT32F,\n    },\n    COMPRESSED_TYPES: {},\n};\n//# sourceMappingURL=contants.js.map","import * as constants from './contants';\nexport const defaultTextureSettings = {\n    wrap: 'CLAMP_TO_EDGE',\n    minFilter: 'LINEAR',\n    magFilter: 'NEAREST',\n};\nexport function getDefaultLayerSettings(gl) {\n    return {\n        clearColor: [0.0, 0.0, 0.0, 1.0],\n        blendFunc: [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA],\n    };\n}\nexport const defaultForms = {\n    renderQuad: {\n        attribs: {\n            [constants.GEOMETRY_PROP_POSITION]: {\n                buffer: new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1]),\n                storeType: 'STATIC',\n            },\n            [constants.GEOMETRY_PROP_UV]: {\n                buffer: new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]),\n                storeType: 'STATIC',\n            },\n        },\n        drawType: 'TRIANGLE_STRIP',\n        itemCount: 4,\n    },\n};\nexport const defaultShaders = {\n    basicEffect: {\n        vert: `\nattribute vec2 ${constants.GEOMETRY_PROP_POSITION};\nattribute vec2 ${constants.GEOMETRY_PROP_UV};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\t${constants.VARYING_UV_COORDS} = ${constants.GEOMETRY_PROP_UV};\n\tgl_Position = vec4(${constants.GEOMETRY_PROP_POSITION}, 0.0, 1.0);\n}`,\n        frag: `precision mediump float;\nuniform sampler2D ${constants.UNIFORM_SOURCE_TEXTURE};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\tgl_FragColor = texture2D(${constants.UNIFORM_SOURCE_TEXTURE}, ${constants.VARYING_UV_COORDS});\n}`,\n    },\n};\n//# sourceMappingURL=asset-lib.js.map","import { GL_TYPE } from './contants';\n// Attrib and Uniform Setters\nfunction getBindPointForSamplerType(type) {\n    return typeMap[type].bindPoint;\n}\nfunction floatSetter(gl, location) {\n    return (v) => {\n        gl.uniform1f(location, v);\n    };\n}\nfunction floatArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1fv(location, v);\n    };\n}\nfunction floatVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2fv(location, v);\n    };\n}\nfunction floatVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3fv(location, v);\n    };\n}\nfunction floatVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4fv(location, v);\n    };\n}\nfunction intSetter(gl, location) {\n    return (v) => {\n        gl.uniform1i(location, v);\n    };\n}\nfunction intArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1iv(location, v);\n    };\n}\nfunction intVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2iv(location, v);\n    };\n}\nfunction intVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3iv(location, v);\n    };\n}\nfunction intVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4iv(location, v);\n    };\n}\nfunction uintSetter(gl, location) {\n    return (v) => {\n        gl.uniform1ui(location, v);\n    };\n}\nfunction uintArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1uiv(location, v);\n    };\n}\nfunction uintVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2uiv(location, v);\n    };\n}\nfunction uintVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3uiv(location, v);\n    };\n}\nfunction uintVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4uiv(location, v);\n    };\n}\nfunction floatMat2Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n    };\n}\nfunction floatMat3Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n    };\n}\nfunction floatMat4Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n    };\n}\nfunction floatMat23Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x3fv(location, false, v);\n    };\n}\nfunction floatMat32Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x2fv(location, false, v);\n    };\n}\nfunction floatMat24Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x4fv(location, false, v);\n    };\n}\nfunction floatMat42Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x2fv(location, false, v);\n    };\n}\nfunction floatMat34Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x4fv(location, false, v);\n    };\n}\nfunction floatMat43Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x3fv(location, false, v);\n    };\n}\nfunction samplerSetter(gl, type, unit, location) {\n    const bindPoint = getBindPointForSamplerType(type);\n    return (texture) => {\n        gl.uniform1i(location, unit);\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(bindPoint, texture._texture);\n    };\n}\nfunction samplerArraySetter(gl, type, unit, location, size) {\n    const bindPoint = getBindPointForSamplerType(type);\n    const units = new Int32Array(size);\n    for (let i = 0; i < size; ++i) {\n        units[i] = unit + i;\n    }\n    return (textures) => {\n        gl.uniform1iv(location, units);\n        for (const index in textures) {\n            gl.activeTexture(gl.TEXTURE0 + units[index]);\n            gl.bindTexture(bindPoint, textures[index]._texture);\n        }\n    };\n}\nfunction isSamplerInfo(info) {\n    return info.Type === null;\n}\nconst typeMap = {\n    [GL_TYPE.FLOAT]: {\n        Type: Float32Array,\n        size: 4,\n        setter: floatSetter,\n        arraySetter: floatArraySetter,\n    },\n    [GL_TYPE.FLOAT_VEC2]: {\n        Type: Float32Array,\n        size: 8,\n        setter: floatVec2Setter,\n    },\n    [GL_TYPE.FLOAT_VEC3]: {\n        Type: Float32Array,\n        size: 12,\n        setter: floatVec3Setter,\n    },\n    [GL_TYPE.FLOAT_VEC4]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatVec4Setter,\n    },\n    [GL_TYPE.INT]: {\n        Type: Int32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.INT_VEC2]: { Type: Int32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.INT_VEC3]: { Type: Int32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.INT_VEC4]: { Type: Int32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.UNSIGNED_INT]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: uintSetter,\n        arraySetter: uintArraySetter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        Type: Uint32Array,\n        size: 8,\n        setter: uintVec2Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        Type: Uint32Array,\n        size: 12,\n        setter: uintVec3Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        Type: Uint32Array,\n        size: 16,\n        setter: uintVec4Setter,\n    },\n    [GL_TYPE.BOOL]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.BOOL_VEC2]: { Type: Uint32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.BOOL_VEC3]: { Type: Uint32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.BOOL_VEC4]: { Type: Uint32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.FLOAT_MAT2]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatMat2Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3]: {\n        Type: Float32Array,\n        size: 36,\n        setter: floatMat3Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4]: {\n        Type: Float32Array,\n        size: 64,\n        setter: floatMat4Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X3]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat23Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X4]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat24Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X2]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat32Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X4]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat34Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X2]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat42Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X3]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat43Setter,\n    },\n    [GL_TYPE.SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.SAMPLER_2D_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_CUBE_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n};\nfunction floatAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribPointer(location, typeInfo.itemSize, GL_TYPE.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n    };\n}\nfunction intAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribIPointer(location, typeInfo.itemSize, GL_TYPE.INT, b.stride || 0, b.offset || 0);\n    };\n}\nfunction matAttribSetter(gl, location, typeInfo) {\n    const defaultSize = typeInfo.size;\n    const count = typeInfo.count;\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        const numComponents = defaultSize;\n        const size = numComponents / count;\n        const typeInfo = typeMap[GL_TYPE.FLOAT];\n        const stride = typeInfo.size * numComponents;\n        const normalize = b.normalize || false;\n        const offset = b.offset || 0;\n        const rowOffset = stride / count;\n        for (let i = 0; i < count; ++i) {\n            gl.enableVertexAttribArray(location + i);\n            gl.vertexAttribPointer(location + i, size, GL_TYPE.FLOAT, normalize, stride, offset + rowOffset * i);\n        }\n    };\n}\nconst attrTypeMap = {\n    [GL_TYPE.FLOAT]: { size: 4, setter: floatAttribSetter, itemSize: 1 },\n    [GL_TYPE.FLOAT_VEC2]: { size: 8, setter: floatAttribSetter, itemSize: 2 },\n    [GL_TYPE.FLOAT_VEC3]: { size: 12, setter: floatAttribSetter, itemSize: 3 },\n    [GL_TYPE.FLOAT_VEC4]: { size: 16, setter: floatAttribSetter, itemSize: 4 },\n    [GL_TYPE.INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.INT_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.INT_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.INT_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.UNSIGNED_INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        size: 8,\n        setter: intAttribSetter,\n        itemSize: 2,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        size: 12,\n        setter: intAttribSetter,\n        itemSize: 3,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        size: 16,\n        setter: intAttribSetter,\n        itemSize: 4,\n    },\n    [GL_TYPE.BOOL]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.BOOL_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.BOOL_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.BOOL_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.FLOAT_MAT2]: { size: 4, setter: matAttribSetter, count: 2 },\n    [GL_TYPE.FLOAT_MAT3]: { size: 9, setter: matAttribSetter, count: 3 },\n    [GL_TYPE.FLOAT_MAT4]: { size: 16, setter: matAttribSetter, count: 4 },\n};\nexport function createUniformSetters(gl, program) {\n    let textureUnit = 0;\n    function createUniformSetter(program, uniformInfo) {\n        const location = gl.getUniformLocation(program, uniformInfo.name);\n        const isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]';\n        const type = uniformInfo.type;\n        const typeInfo = typeMap[type];\n        if (!typeInfo) {\n            throw new Error('unknown type: 0x' + type.toString(16)); // we should never get here.\n        }\n        if (location == null) {\n            return;\n        }\n        let setter;\n        if (isSamplerInfo(typeInfo)) {\n            // it's a sampler\n            const unit = textureUnit;\n            textureUnit += uniformInfo.size;\n            if (isArray) {\n                setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n            }\n            else {\n                setter = typeInfo.setter(gl, type, unit, location);\n            }\n        }\n        else {\n            if (typeInfo.arraySetter && isArray) {\n                setter = typeInfo.arraySetter(gl, location);\n            }\n            else {\n                setter = typeInfo.setter(gl, location);\n            }\n        }\n        return { setter, location };\n    }\n    const uniformSetters = {};\n    const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < numUniforms; ++i) {\n        const uniformInfo = gl.getActiveUniform(program, i);\n        if (!uniformInfo) {\n            continue;\n        }\n        let name = uniformInfo.name;\n        // remove the array suffix.\n        if (name.substr(-3) === '[0]') {\n            name = name.substr(0, name.length - 3);\n        }\n        if (program) {\n            const setter = createUniformSetter(program, uniformInfo);\n            if (setter) {\n                uniformSetters[name] = setter;\n            }\n        }\n    }\n    return uniformSetters;\n}\nexport function createAttributeSetters(gl, program) {\n    const attribSetters = {};\n    const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < numAttribs; i++) {\n        const attribInfo = gl.getActiveAttrib(program, i);\n        if (!attribInfo) {\n            break;\n        }\n        const location = gl.getAttribLocation(program, attribInfo.name);\n        const typeInfo = attrTypeMap[attribInfo.type];\n        const setter = typeInfo.setter(gl, location, typeInfo);\n        attribSetters[attribInfo.name] = { setter, location };\n    }\n    return attribSetters;\n}\n// Type helpers\nexport const glTypeToTypedArray = {\n    [GL_TYPE.BYTE]: Int8Array,\n    [GL_TYPE.UNSIGNED_BYTE]: Uint8Array,\n    [GL_TYPE.SHORT]: Int16Array,\n    [GL_TYPE.UNSIGNED_SHORT]: Uint16Array,\n    [GL_TYPE.INT]: Int32Array,\n    [GL_TYPE.UNSIGNED_INT]: Uint32Array,\n    [GL_TYPE.FLOAT]: Float32Array,\n    [GL_TYPE.UNSIGNED_SHORT_4_4_4_4]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_5_5_1]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_6_5]: Uint16Array,\n    [GL_TYPE.HALF_FLOAT]: Uint16Array,\n    [GL_TYPE.UNSIGNED_INT_2_10_10_10_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_10F_11F_11F_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_5_9_9_9_REV]: Uint32Array,\n    [GL_TYPE.FLOAT_32_UNSIGNED_INT_24_8_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_24_8]: Uint32Array,\n};\nexport function getGLTypeForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArray instanceof Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArray instanceof Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArray instanceof Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArray instanceof Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArray instanceof Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\nexport function getGLTypeForTypedArrayType(typedArrayType) {\n    if (typedArrayType === Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArrayType === Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArrayType === Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArrayType === Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArrayType === Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArrayType === Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\n// Settings\nexport function applyDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.enable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.blendFunc) {\n        gl.blendFunc.apply(gl, settings.blendFunc);\n    }\n    if (settings.depthFunc != null) {\n        gl.depthFunc(settings.depthFunc);\n    }\n    if (settings.cullFace != null) {\n        gl.cullFace(settings.cullFace);\n    }\n    if (settings.frontFace != null) {\n        gl.frontFace(settings.frontFace);\n    }\n    if (settings.lineWidth != null) {\n        gl.lineWidth(settings.lineWidth);\n    }\n    if (settings.colorMask) {\n        gl.colorMask.apply(gl, settings.colorMask);\n    }\n    if (settings.depthMask != null) {\n        gl.depthMask(settings.depthMask);\n    }\n    if (settings.clearColor) {\n        gl.clearColor.apply(gl, settings.clearColor);\n    }\n    if (settings.clearDepth != null) {\n        gl.clearDepth(settings.clearDepth);\n    }\n    if (settings.clearBits != null) {\n        gl.clear(settings.clearBits);\n    }\n}\nexport function revertDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.enable(setting);\n        }\n    }\n}\n//# sourceMappingURL=render-utils.js.map","import { getGLTypeForTypedArray } from './render-utils';\nlet formCounter = 1;\nexport class Form {\n    constructor(_painter, id = 'Form' + formCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (data.drawType) {\n            this._drawType = gl[data.drawType];\n        }\n        if (data.itemCount) {\n            this._itemCount = data.itemCount;\n        }\n        this._attribs = this._attribs || {};\n        for (const id in data.attribs) {\n            const attribData = data.attribs[id];\n            if (this._attribs[id] == null) {\n                this._attribs[id] = {\n                    buffer: gl.createBuffer(),\n                };\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._attribs[id].buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, attribData.buffer, gl[(attribData.storeType || 'STATIC') + '_DRAW']);\n        }\n        if (data.elements) {\n            const buffer = data.elements.buffer;\n            if (this._elements == null) {\n                this._elements = {\n                    buffer: gl.createBuffer(),\n                    glType: null,\n                };\n            }\n            this._elements.glType = getGLTypeForTypedArray(buffer);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._elements.buffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, buffer, gl[(data.elements.storeType || 'STATIC') + '_DRAW']);\n        }\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        for (const id in this._attribs) {\n            gl.deleteBuffer(this._attribs[id].buffer);\n        }\n        this._attribs = {};\n        if (this._elements) {\n            gl.deleteBuffer(this._elements.buffer);\n            this._elements = undefined;\n        }\n    }\n}\n//# sourceMappingURL=form.js.map","import { defaultTextureSettings } from './asset-lib';\nlet textureCount = 1;\nexport class Texture {\n    constructor(_painter, id = 'Texture' + textureCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this._texture = null;\n        this._data = {};\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (this._texture == null) {\n            this._texture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        if ((data.wrap && data.wrap !== this._data.wrap) ||\n            (data.wrapS && data.wrapS !== this._data.wrapS) ||\n            (data.wrapT && data.wrapT !== this._data.wrapT)) {\n            let wrapS, wrapT;\n            if (data.wrap) {\n                wrapS = wrapT = data.wrap;\n            }\n            else {\n                wrapT = data.wrapT || defaultTextureSettings.wrap;\n                wrapS = data.wrapS || defaultTextureSettings.wrap;\n            }\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n        }\n        else if (!(this._data.wrap || this._data.wrapS || this._data.wrapT)) {\n            this._data.wrap = this._data.wrapT = this._data.wrapS = defaultTextureSettings.wrap;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[this._data.wrap]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[this._data.wrap]);\n        }\n        if (data.magFilter && data.magFilter !== this._data.magFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[data.magFilter]);\n        }\n        else if (!this._data.magFilter) {\n            this._data.magFilter = defaultTextureSettings.magFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[this._data.magFilter]);\n        }\n        if (data.minFilter && data.minFilter !== this._data.minFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[data.minFilter]);\n        }\n        else if (!this._data.minFilter) {\n            this._data.minFilter = defaultTextureSettings.minFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[this._data.minFilter]);\n        }\n        if (data.asset) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data.asset);\n        }\n        if (data.data !== undefined) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, data.type === 'FLOAT' && this._painter.isWebGL2\n                ? gl.RGBA32F\n                : gl.RGBA, data.width, // width and height are required if using custom data\n            data.height, 0, gl.RGBA, gl[data.type || 'UNSIGNED_BYTE'], data.data);\n        }\n        if (data.flipY != null && data.flipY !== this._data.flipY) {\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, data.flipY);\n        }\n        if (data.minFilter && data.minFilter.indexOf('MIPMAP') > 0) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        this._painter.gl.deleteTexture(this._texture);\n        this._data = {};\n        this._texture = null;\n    }\n}\n//# sourceMappingURL=texture.js.map","import { equalObject } from 'tvs-libs/dist/utils/predicates';\nimport { Texture } from './texture';\nlet targetCount = 1;\nexport class RenderTarget {\n    constructor(_painter, id = 'Form' + targetCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.antialias = false;\n        this.frameBuffer = null;\n        this.antiAliasFrameBuffer = null;\n        this.antiAliasRenderBuffer = null;\n        this.textures = [];\n        this.depthBuffer = null;\n        this.bufferStructure = [];\n        this._data = {};\n    }\n    update(data) {\n        var _a;\n        const gl = this._painter.gl;\n        const width = data.width || this.width;\n        const height = data.height || this.height;\n        if (!(width && height)) {\n            return this;\n        }\n        else if (width === this.width && height === this.height) {\n            if (!data.bufferStructure)\n                return this;\n            if (data.bufferStructure.length === this.bufferStructure.length &&\n                this.bufferStructure.every((buf, i) => equalObject(buf, data.bufferStructure[i]))) {\n                return this;\n            }\n        }\n        if (this.frameBuffer == null) {\n            this.frameBuffer = gl.createFramebuffer();\n        }\n        if (this.depthBuffer == null) {\n            this.depthBuffer = gl.createRenderbuffer();\n        }\n        if (data.bufferStructure && data.bufferStructure.length) {\n            this.bufferStructure = data.bufferStructure;\n            if (this.bufferStructure.some(t => t.type === 'FLOAT')) {\n                if (this._painter.isWebGL2) {\n                    gl.getExtension('EXT_color_buffer_float');\n                }\n                else {\n                    gl.getExtension('OES_texture_float');\n                }\n            }\n        }\n        const texCount = this.bufferStructure.length || 1;\n        const bufferAttachments = [gl.COLOR_ATTACHMENT0];\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        if (texCount > 1) {\n            let glx;\n            if (!this._painter.isWebGL2) {\n                glx = gl.getExtension('WEBGL_draw_buffers');\n            }\n            const attachment = this._painter.isWebGL2\n                ? gl.COLOR_ATTACHMENT0\n                : glx.COLOR_ATTACHMENT0_WEBGL;\n            for (let i = 0; i < texCount; i++) {\n                bufferAttachments[i] = attachment + i;\n            }\n            this._painter.isWebGL2\n                ? gl.drawBuffers(bufferAttachments)\n                : glx.drawBuffersWEBGL(bufferAttachments);\n        }\n        this.antialias =\n            texCount === 1 &&\n                this._painter.isWebGL2 &&\n                (data.antialias || ((_a = this._data) === null || _a === void 0 ? void 0 : _a.antialias));\n        if (this.antialias) {\n            const gl2 = gl;\n            if (this.antiAliasFrameBuffer == null) {\n                this.antiAliasFrameBuffer = gl.createFramebuffer();\n            }\n            if (this.antiAliasRenderBuffer == null) {\n                this.antiAliasRenderBuffer = gl.createRenderbuffer();\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl2.RGBA8, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        else {\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n        }\n        for (let i = 0; i < texCount; i++) {\n            if (!this.textures[i]) {\n                this.textures[i] = new Texture(this._painter, this.id + '_Texture' + i);\n            }\n            const texture = this.textures[i];\n            texture.update(Object.assign(Object.assign({ minFilter: 'NEAREST', magFilter: 'NEAREST' }, this.bufferStructure[i]), { data: null, width,\n                height }));\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, bufferAttachments[i], gl.TEXTURE_2D, texture._texture, 0);\n        }\n        if (this.antialias) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n            if (err !== gl.FRAMEBUFFER_COMPLETE) {\n                console.error('antialias framebuffer error', err, data);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (err !== gl.FRAMEBUFFER_COMPLETE) {\n            console.error('framebuffer error', err, data);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        Object.assign(this._data, data);\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteFramebuffer(this.frameBuffer);\n        gl.deleteRenderbuffer(this.depthBuffer);\n        for (const texture of this.textures) {\n            gl.deleteTexture(texture);\n        }\n        if (this.antiAliasFrameBuffer) {\n            gl.deleteFramebuffer(this.antiAliasFrameBuffer);\n        }\n        if (this.antiAliasRenderBuffer) {\n            gl.deleteRenderbuffer(this.antiAliasRenderBuffer);\n        }\n        this.textures = [];\n        this.frameBuffer = null;\n        this.depthBuffer = null;\n        this._data = {};\n        this.bufferStructure = [];\n        this.width = 0;\n        this.height = 0;\n    }\n}\n//# sourceMappingURL=render-target.js.map","export const and = (p1, p2) => (a, b) => p1(a, b) && p2(a, b);\nexport const not = (p) => (...args) => !p(...args);\nexport const defined = a => a != null;\nexport const notEmpty = a => a && a.length;\nexport const unequal = (a, b) => a !== b;\nexport const equal = (a, b) => a === b;\nexport function equalArray(arr1, arr2) {\n    if (arr1 === arr2) {\n        return true;\n    }\n    if (!arr2 || !arr1) {\n        return false;\n    }\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalObject(obj1, obj2) {\n    if (obj1 === obj2) {\n        return true;\n    }\n    if (!obj2) {\n        return false;\n    }\n    const k1 = Object.keys(obj1);\n    const k2 = Object.keys(obj2);\n    if (!equalArray(k1, k2)) {\n        return false;\n    }\n    for (const key of k1) {\n        if (obj1[key] !== obj2[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=predicates.js.map","import { times } from 'tvs-libs/dist/utils/sequence';\nimport { RenderTarget } from './render-target';\nimport { Texture } from './texture';\nlet frameCount = 1;\nexport class Frame {\n    constructor(_painter, id = 'Frame' + frameCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.layers = [];\n        this._data = {};\n        this._targets = [];\n        this._textures = [];\n    }\n    image(i = 0) {\n        return ((this._targets.length &&\n            this._targets[this._targets.length - 1].textures[i]) ||\n            this._textures[i]);\n    }\n    update(data = {}) {\n        var _a, _b, _c, _d;\n        const gl = this._painter.gl;\n        const layers = Array.isArray(data.layers)\n            ? data.layers\n            : data.layers\n                ? [data.layers]\n                : this.layers;\n        const selfReferencing = data.selfReferencing || this._data.selfReferencing;\n        const layerCount = layers.reduce((count, layer) => count + (layer._uniforms.length || 1), 0);\n        const targetCount = selfReferencing || layerCount > 1 ? 2 : layerCount;\n        const width = data.width || ((_a = data.texture) === null || _a === void 0 ? void 0 : _a.width) ||\n            this._data.width || ((_b = this._data.texture) === null || _b === void 0 ? void 0 : _b.width) ||\n            gl.canvas.width;\n        const height = data.height || ((_c = data.texture) === null || _c === void 0 ? void 0 : _c.height) ||\n            this._data.height || ((_d = this._data.texture) === null || _d === void 0 ? void 0 : _d.height) ||\n            gl.canvas.height;\n        const antialias = data.antialias || this._data.antialias || true;\n        if (targetCount !== this._targets.length) {\n            this._destroyTargets();\n        }\n        const targetData = Object.assign(Object.assign({}, data), { width, height, antialias });\n        if (!this._targets.length && targetCount > 0) {\n            this._targets = times(i => new RenderTarget(this._painter, this.id + '_target' + (i + 1)).update(targetData), targetCount);\n        }\n        else if (this._targets.length) {\n            this._targets.forEach(t => {\n                t.update(targetData);\n            });\n        }\n        if (data.texture) {\n            // Hardcode to one static texture for now\n            if (!this._textures[0]) {\n                this._textures[0] = new Texture(this._painter, this.id + '_Texture0');\n            }\n            data.texture.width = width;\n            data.texture.height = height;\n            this._textures[0].update(data.texture);\n        }\n        Object.assign(this._data, data);\n        this.layers = layers;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        this._destroyTargets();\n        this._textures.forEach(tex => tex.destroy());\n        this._textures = [];\n        this._data = {};\n        this.layers = [];\n        this.width = 0;\n        this.height = 0;\n    }\n    _destroyTargets() {\n        this._targets.forEach(t => t.destroy());\n        this._targets = [];\n    }\n    _swapTargets() {\n        if (this._targets.length > 1) {\n            const tmp = this._targets[0];\n            this._targets[0] = this._targets[1];\n            this._targets[1] = tmp;\n        }\n    }\n}\n//# sourceMappingURL=frame.js.map","let layerCount = 1;\nexport class Layer {\n    constructor(id = 'DrawingLayer' + layerCount++) {\n        this.id = id;\n        this.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.sketches) {\n            this.sketches = Array.isArray(data.sketches)\n                ? data.sketches\n                : [data.sketches];\n        }\n        if (data.frag) {\n            const sketch = this.sketches && this.sketches[0];\n            if (sketch) {\n                sketch.shade.update({ frag: data.frag });\n            }\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        for (const sketch of this.sketches) {\n            sketch.destroy();\n        }\n        this._data.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=layer.js.map","import { createAttributeSetters, createUniformSetters } from './render-utils';\nlet shadeCounter = 1;\nexport class Shade {\n    constructor(_painter, id = 'Shade' + shadeCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        const fragSource = (data.frag && data.frag.trim()) || this.fragSource;\n        const vertSource = (data.vert && data.vert.trim()) || this.vertSource;\n        if (!(fragSource &&\n            vertSource &&\n            (fragSource !== this.fragSource || vertSource !== this.vertSource))) {\n            return this;\n        }\n        this.destroy();\n        if (fragSource.indexOf('GL_EXT_draw_buffers') >= 0) {\n            gl.getExtension('WEBGL_draw_buffers');\n        }\n        const program = gl.createProgram();\n        const frag = gl.createShader(gl.FRAGMENT_SHADER);\n        const vert = gl.createShader(gl.VERTEX_SHADER);\n        if (!(program && vert && frag))\n            return;\n        this._program = program;\n        this._frag = frag;\n        this._vert = vert;\n        gl.attachShader(program, vert);\n        gl.attachShader(program, frag);\n        gl.shaderSource(vert, vertSource);\n        gl.shaderSource(frag, fragSource);\n        gl.compileShader(vert);\n        gl.compileShader(frag);\n        if (!gl.getShaderParameter(vert, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Vertex Shader!\\n', gl.getShaderInfoLog(vert), addLineNumbers(vertSource));\n        }\n        if (!gl.getShaderParameter(frag, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Fragment Shader!\\n', gl.getShaderInfoLog(frag), addLineNumbers(fragSource));\n        }\n        gl.linkProgram(program);\n        const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n            const lastError = gl.getProgramInfoLog(program);\n            console.error('Error in program linking:', lastError);\n        }\n        this._uniformSetters = createUniformSetters(gl, program);\n        this._attributeSetters = createAttributeSetters(gl, program);\n        this.fragSource = fragSource;\n        this.vertSource = vertSource;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteProgram(this._program);\n        gl.deleteShader(this._frag);\n        gl.deleteShader(this._vert);\n        this.vertSource = undefined;\n        this.fragSource = undefined;\n        this._attributeSetters = {};\n        this._uniformSetters = {};\n    }\n}\nfunction addLineNumbers(src) {\n    return src\n        .trim()\n        .split('\\n')\n        .map((line, i) => i + 1 + ': ' + line)\n        .join('\\n');\n}\n//# sourceMappingURL=shade.js.map","let sketchCounter = 1;\nexport class Sketch {\n    constructor(id = 'Sketch' + sketchCounter++) {\n        this.id = id;\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.drawSettings) {\n            this._drawSettings = data.drawSettings;\n        }\n        if (data.form) {\n            this.form = data.form;\n        }\n        if (data.shade) {\n            this.shade = data.shade;\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        return this;\n    }\n    destroy() {\n        this.form && this.form.destroy();\n        this.shade && this.shade.destroy();\n        this._drawSettings = undefined;\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=sketch.js.map","import { defaultForms, defaultShaders, getDefaultLayerSettings, } from './asset-lib';\nimport { Form } from './form';\nimport { Frame } from './frame';\nimport { Layer } from './layer';\nimport { applyDrawSettings, revertDrawSettings } from './render-utils';\nimport { Shade } from './shade';\nimport { Sketch } from './sketch';\nimport { resizeCanvas } from './utils/context';\nexport class Painter {\n    constructor(canvas, opts = {}) {\n        this.canvas = canvas;\n        this.isWebGL2 = true;\n        this.maxBufferSamples = 0;\n        let gl = null;\n        if (!opts.useWebGL1) {\n            gl =\n                canvas.getContext('webgl2', opts) ||\n                    canvas.getContext('experimental-webgl2', opts);\n        }\n        if (gl == null) {\n            this.isWebGL2 = false;\n            gl =\n                canvas.getContext('webgl', opts) ||\n                    canvas.getContext('experimental-webgl', opts);\n        }\n        if (gl == null) {\n            throw Error('Cannot initialize WebGL.');\n        }\n        this.gl = gl;\n        this.sizeMultiplier = opts.sizeMultiplier || 1;\n        if (this.isWebGL2) {\n            this.maxBufferSamples = gl.getParameter(gl.MAX_SAMPLES);\n        }\n        this.resize();\n        applyDrawSettings(gl, getDefaultLayerSettings(gl));\n        this._renderQuad = this.createForm().update(defaultForms.renderQuad);\n        this._staticSketch = this.createFlatSketch();\n    }\n    resize() {\n        resizeCanvas(this.gl.canvas, this.sizeMultiplier);\n        return this;\n    }\n    destroy() {\n        this._staticSketch.destroy();\n        this._renderQuad.destroy();\n    }\n    updateDrawSettings(drawSettings) {\n        applyDrawSettings(this.gl, Object.assign({}, drawSettings));\n        return this;\n    }\n    createForm(id) {\n        return new Form(this, id);\n    }\n    createShade(id) {\n        return new Shade(this, id);\n    }\n    createSketch(id) {\n        return new Sketch(id);\n    }\n    createFlatSketch(id) {\n        const s = this.createSketch(id);\n        return s.update({\n            form: this._renderQuad,\n            shade: this.createShade(s.id + '_defaultShade').update(defaultShaders.basicEffect),\n        });\n    }\n    createFrame(id) {\n        return new Frame(this, id);\n    }\n    createLayer(id) {\n        return new Layer(id);\n    }\n    createEffect(id) {\n        const l = this.createLayer(id);\n        return l.update({\n            sketches: this.createFlatSketch(l.id + '_effectSketch'),\n        });\n    }\n    draw(sketch, globalUniforms) {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        draw(gl, sketch, globalUniforms);\n        return this;\n    }\n    compose(...frames) {\n        for (const frame of frames) {\n            renderFrame(this.gl, frame);\n        }\n        return this;\n    }\n    display(frame, idx = 0) {\n        return this.draw(this._staticSketch, { source: frame.image(idx) });\n    }\n}\nfunction draw(gl, sketch, globalUniforms, sources) {\n    const { shade: shade, form: form, _drawSettings: drawSettings, _uniforms: uniforms, } = sketch;\n    if (!(shade && form)) {\n        throw Error('cannot draw, shader or geometry are not set');\n    }\n    gl.useProgram(shade._program);\n    shadeForm(shade, form);\n    if (globalUniforms) {\n        shadeUniforms(shade, globalUniforms, sources);\n    }\n    if (drawSettings) {\n        applyDrawSettings(gl, drawSettings);\n    }\n    for (let i = 0; i < (uniforms.length || 1); i++) {\n        drawInstance(gl, sketch, uniforms[i], sources);\n    }\n    if (drawSettings) {\n        revertDrawSettings(gl, drawSettings);\n    }\n}\nfunction drawInstance(gl, sketch, uniforms, sources) {\n    if (uniforms) {\n        shadeUniforms(sketch.shade, uniforms, sources);\n    }\n    if (sketch.form._elements && sketch.form._elements.glType != null) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, sketch.form._elements.buffer);\n        gl.drawElements(sketch.form._drawType, sketch.form._itemCount, sketch.form._elements.glType, 0);\n    }\n    else {\n        gl.drawArrays(sketch.form._drawType, 0, sketch.form._itemCount);\n    }\n}\nfunction shadeForm(shade, form) {\n    for (const name in form._attribs) {\n        const setter = shade._attributeSetters[name];\n        if (setter) {\n            setter.setter(form._attribs[name]);\n        }\n    }\n}\nfunction shadeUniforms(shade, uniforms, sources) {\n    for (const name in uniforms) {\n        const setter = shade._uniformSetters[name];\n        if (setter) {\n            let value = uniforms[name];\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (typeof value === 'string' && sources) {\n                setter.setter(sources[value]);\n            }\n            else {\n                setter.setter(value);\n            }\n        }\n    }\n}\nfunction renderLayer(gl, layer, uniforms, target, source) {\n    if (target) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, target.antialias ? target.antiAliasFrameBuffer : target.frameBuffer);\n        gl.viewport(0, 0, target.width, target.height);\n    }\n    else {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    }\n    if (layer._data.drawSettings) {\n        applyDrawSettings(gl, layer._data.drawSettings);\n    }\n    for (const sketch of layer.sketches) {\n        draw(gl, sketch, uniforms, source);\n    }\n    if (target && target.antialias) {\n        const gl2 = gl;\n        // \"blit\" the cube into the color buffer, which adds antialiasing\n        gl.bindFramebuffer(gl2.READ_FRAMEBUFFER, target.antiAliasFrameBuffer);\n        gl.bindFramebuffer(gl2.DRAW_FRAMEBUFFER, target.frameBuffer);\n        gl2.clearBufferfv(gl2.COLOR, 0, [1.0, 1.0, 1.0, 1.0]);\n        gl2.blitFramebuffer(0, 0, target.width, target.height, 0, 0, target.width, target.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n    }\n    if (layer._data.drawSettings) {\n        revertDrawSettings(gl, layer._data.drawSettings);\n    }\n}\nfunction renderFrame(gl, frame) {\n    for (let i = 0; i < frame.layers.length; i++) {\n        const layer = frame.layers[i];\n        const layerPasses = layer._uniforms.length || 1;\n        for (let j = 0; j < layerPasses; j++) {\n            const target = frame._targets[0];\n            const sources = i + j === 0 && frame._textures.length\n                ? frame._textures\n                : frame._targets[1] && frame._targets[1].textures;\n            renderLayer(gl, layer, layer._uniforms[j], target, sources);\n            frame._swapTargets();\n        }\n    }\n}\n//# sourceMappingURL=painter.js.map","export function makeClear(gl, ...clearArray) {\n    return clearArray.reduce((res, item) => res | gl[item.toUpperCase() + '_BUFFER_BIT'], 0);\n}\nexport function setBlendFunc(gl, blendOpts) {\n    gl.blendFunc.apply(gl, blendOpts.map(opt => gl[opt.toUpperCase()]));\n}\n/**\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] optional `window.devicePixelRatio`.\n * @return {boolean} true if the canvas was resized.\n */\nexport function resizeCanvas(canvas, multiplier = 1) {\n    let width = canvas.width;\n    let height = canvas.height;\n    if ('clientWidth' in canvas) {\n        const rect = canvas.getBoundingClientRect();\n        width = (rect.width * multiplier) | 0;\n        height = (rect.height * multiplier) | 0;\n    }\n    if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=context.js.map","export const Buttons = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n};\nexport function pointer(opts, callback) {\n    const cb = callback || opts;\n    const { element = document, enableRightButton, holdDelay = 400, holdRadius = 5, } = opts;\n    const state = {\n        pressed: {},\n        drag: { x: 0, y: 0, dX: 0, dY: 0, xMax: 0, yMax: 0 },\n        dragging: false,\n        holding: false,\n    };\n    let x = 0, y = 0, oX = 0, oY = 0, timeout = null;\n    function onPointerDown(e) {\n        if (e.isPrimary) {\n            state.pressed[e.button] = e;\n            x = oX = e.clientX;\n            y = oY = e.clientY;\n            state.dragging = true;\n            timeout != null && clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                if (state.drag.xMax < holdRadius && state.drag.yMax < holdRadius) {\n                    state.holding = true;\n                    cb(state);\n                }\n            }, holdDelay);\n        }\n        else {\n            state.pressed[Buttons.RIGHT] = e;\n        }\n        cb(state);\n    }\n    function onPointerUp(_e) {\n        state.pressed = {};\n        delete state.drag.event;\n        state.drag.x = 0;\n        state.drag.y = 0;\n        state.drag.dX = 0;\n        state.drag.dY = 0;\n        state.drag.xMax = 0;\n        state.drag.yMax = 0;\n        state.dragging = false;\n        state.holding = false;\n        timeout != null && clearTimeout(timeout);\n        timeout = null;\n        cb(state);\n    }\n    function onPointerMove(e) {\n        if (state.dragging && e.isPrimary) {\n            state.drag.event = e;\n            state.drag.x = x - e.clientX;\n            state.drag.y = y - e.clientY;\n            state.drag.dX = oX - e.clientX;\n            state.drag.dY = oY - e.clientY;\n            state.drag.xMax = Math.max(Math.abs(state.drag.x), state.drag.xMax);\n            state.drag.yMax = Math.max(Math.abs(state.drag.y), state.drag.yMax);\n            oX = e.clientX;\n            oY = e.clientY;\n            cb(state);\n        }\n    }\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    element.addEventListener('pointerdown', onPointerDown);\n    document.addEventListener('pointermove', onPointerMove);\n    document.addEventListener('pointerup', onPointerUp);\n    document.addEventListener('pointerleave', onPointerUp);\n    document.addEventListener('pointercancel', onPointerUp);\n    if (enableRightButton) {\n        element.addEventListener('contextmenu', preventDefault);\n    }\n    cb(state);\n    return function destroy() {\n        element.removeEventListener('pointerdown', onPointerDown);\n        document.removeEventListener('pointermove', onPointerMove);\n        document.removeEventListener('pointerup', onPointerUp);\n        document.removeEventListener('pointerleave', onPointerUp);\n        document.removeEventListener('pointercancel', onPointerUp);\n        if (enableRightButton) {\n            element.removeEventListener('contextmenu', preventDefault);\n        }\n    };\n}\nexport function pointerObserver(opts = {}) {\n    const observer = {\n        Buttons,\n        state: {},\n        destroy: () => { },\n    };\n    function callback(state) {\n        observer.state = state;\n    }\n    observer.destroy = pointer(opts, callback);\n    return observer;\n}\n//# sourceMappingURL=pointer.js.map","import { once } from './scheduler'\nimport { windowSize } from 'tvs-libs/dist/events/dom'\nimport { keyboard, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { deepOverride } from 'tvs-libs/dist/utils/object'\nimport { GL, PainterOptions } from 'tvs-painter'\nimport { Form } from 'tvs-painter/dist/form'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport { Layer } from 'tvs-painter/dist/layer'\nimport { Painter } from 'tvs-painter/dist/painter'\nimport { Shade } from 'tvs-painter/dist/shade'\nimport { Sketch } from 'tvs-painter/dist/sketch'\nimport { PointerState, pointer } from 'tvs-libs/dist/events/pointer'\nimport { getPackedSettings } from 'http2'\n\n// === Painter ===\n\nlet currentCanvas: HTMLCanvasElement\nlet painter: Painter\n\nconst forms: { [id: string]: Form } = {}\nfunction getForm(id: string) {\n\treturn forms[id] || (forms[id] = painter.createForm('Form_' + id))\n}\n\nconst shades: { [id: string]: Shade } = {}\nfunction getShade(id: string) {\n\treturn shades[id] || (shades[id] = painter.createShade('Shade_' + id))\n}\n\nconst sketches: { [id: string]: Sketch } = {}\nfunction getSketch(id: string) {\n\treturn sketches[id] || (sketches[id] = painter.createSketch('Sketch_' + id))\n}\n\nconst layers: { [id: string]: Layer } = {}\nfunction getLayer(id: string) {\n\treturn layers[id] || (layers[id] = painter.createLayer('Layer_' + id))\n}\n\nconst frames: { [id: string]: Frame } = {}\nfunction getFrame(id: string) {\n\treturn frames[id] || (frames[id] = painter.createFrame('Frame_' + id))\n}\n\nconst effects: { [id: string]: Layer } = {}\nfunction getEffect(id: string) {\n\treturn effects[id] || (effects[id] = painter.createEffect('Effect_' + id))\n}\n\n// === State ===\n\nexport interface BaseState {\n\tdevice: {\n\t\ttpf: number\n\t\tcanvas: HTMLCanvasElement\n\t\tpointer: PointerState\n\t\tkeys: KeyState\n\t\tsizeMultiplier: number\n\t}\n}\n\nconst state: BaseState = {\n\tdevice: {\n\t\ttpf: 0,\n\t\tsizeMultiplier: 1,\n\t},\n} as BaseState\n;(window as any).state = state\n\n// === Events ===\n\ntype ActionHandler<S extends BaseState = BaseState> = (state: S) => void\n\nconst eventHandlers: {\n\t[event: string]: { [id: string]: ActionHandler<any> }\n} = {}\n\nexport const baseEvents = {\n\tFRAME: 'frame',\n\tRESIZE: 'resize',\n}\n\n// === Context ===\n\nlet cancelWindow: () => void\nlet cancelPointer: () => void\nlet cancelKeys: () => void\n\nexport function getPainterContext<S extends BaseState>(\n\tcanvas: HTMLCanvasElement,\n\topts?: PainterOptions,\n): PainterContext<S> {\n\tif (canvas !== currentCanvas) {\n\t\tcurrentCanvas = canvas\n\n\t\tpainter = new Painter(canvas, opts)\n\n\t\tstate.device.canvas = canvas\n\n\t\tcancelWindow && cancelWindow()\n\t\tcancelPointer && cancelPointer()\n\t\tcancelKeys && cancelKeys()\n\n\t\tcancelWindow = windowSize(() =>\n\t\t\tonce(() => {\n\t\t\t\tpainter.sizeMultiplier = state.device.sizeMultiplier\n\t\t\t\tpainter.resize()\n\t\t\t\temit(baseEvents.RESIZE)\n\t\t\t}, 'resize'),\n\t\t)\n\n\t\tcancelPointer = pointer(\n\t\t\t{\n\t\t\t\telement: canvas,\n\t\t\t\tenableRightButton: true,\n\t\t\t\tholdRadius: 7,\n\t\t\t\tholdDelay: 250,\n\t\t\t},\n\t\t\t(m) => (state.device.pointer = m),\n\t\t)\n\n\t\tcancelKeys = keyboard((k) => (state.device.keys = k))\n\t}\n\n\treturn {\n\t\tpainter,\n\t\tgl: painter.gl,\n\t\tgetForm,\n\t\tgetShade,\n\t\tgetSketch,\n\t\tgetLayer,\n\t\tgetFrame,\n\t\tgetEffect,\n\n\t\tstate: state as S,\n\n\t\tget,\n\t\tset,\n\t\tlisten,\n\t\temit,\n\t}\n\n\tfunction get<K extends keyof S = keyof S>(prop: K): S[K] {\n\t\treturn (state as S)[prop]\n\t}\n\n\tfunction set<K extends keyof S = keyof S>(\n\t\tkey: K,\n\t\tval: S[K],\n\t\topts?: { reset: any },\n\t) {\n\t\tconst s = state as S\n\t\tif (s[key]) {\n\t\t\tconst reset = opts && opts.reset\n\t\t\tif (reset !== true) {\n\t\t\t\tval = deepOverride(val, s[key], { ignore: reset })\n\t\t\t}\n\t\t}\n\t\ts[key] = val\n\t}\n\n\tfunction listen(id: string, event: string, s: ActionHandler<S>) {\n\t\tif (!eventHandlers[event]) eventHandlers[event] = {}\n\t\teventHandlers[event][id] = s\n\t}\n\n\tfunction emit(event: string) {\n\t\tconst e = eventHandlers[event]\n\t\tif (e)\n\t\t\tfor (const id in e) {\n\t\t\t\te[id](state as S)\n\t\t\t}\n\t}\n}\n\nexport interface PainterContext<S extends BaseState = BaseState> {\n\tpainter: Painter\n\tgl: GL\n\tgetForm: typeof getForm\n\tgetShade: typeof getShade\n\tgetSketch: typeof getSketch\n\tgetLayer: typeof getLayer\n\tgetFrame: typeof getFrame\n\tgetEffect: typeof getEffect\n\tstate: S\n\tget<K extends keyof S = keyof S>(prop: K): S[K]\n\tset<K extends keyof S = keyof S>(\n\t\tkey: K,\n\t\tval: S[K],\n\t\topts?: { reset: any },\n\t): void\n\tlisten(id: string, event: string, s: ActionHandler<S>): void\n\temit(event: string): void\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { baseEvents, getPainterContext } from '../../shared-utils/painterState'\n\nexport const canvas = document.getElementById('canvas') as HTMLCanvasElement\n\nexport const Q = getPainterContext(canvas)\n\nexport const events = {\n\t...baseEvents,\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function windowSize(callback) {\n    function resize() {\n        callback({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    }\n    window.addEventListener('resize', resize);\n    resize();\n    return function stop() {\n        window.removeEventListener('resize', resize);\n    };\n}\nexport function windowSizeObserver() {\n    const state = {\n        size: { width: 0, height: 0 },\n    };\n    const destroy = windowSize(s => (state.size = s));\n    return { state, destroy };\n}\n//# sourceMappingURL=dom.js.map","import { equalArray } from '../utils/predicates';\nexport function vec(v) {\n    if (typeof v === 'number') {\n        return new Float32Array(v);\n    }\n    return new Float32Array(v);\n}\nexport function add(vec1, vec2, res = []) {\n    for (let i = 0; i < vec1.length; i++) {\n        res[i] = vec1[i] + vec2[i];\n    }\n    return res;\n}\nexport function sub(vec1, vec2, res = []) {\n    for (let i = 0; i < vec1.length; i++) {\n        res[i] = vec1[i] - vec2[i];\n    }\n    return res;\n}\nexport function mul(scalar, vec, res = []) {\n    for (let i = 0; i < vec.length; i++) {\n        res[i] = vec[i] * scalar;\n    }\n    return res;\n}\nexport function div(scalar, vec, res = []) {\n    for (let i = 0; i < vec.length; i++) {\n        res[i] = vec[i] / scalar;\n    }\n    return res;\n}\nexport function length(vec) {\n    let sum = 0;\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < vec.length; i++) {\n        const val = vec[i];\n        sum += val * val;\n    }\n    return Math.sqrt(sum);\n}\nexport function normalize(vec, res = []) {\n    return div(length(vec), vec, res);\n}\nexport function limit(maxLength, vec) {\n    const l = length(vec);\n    if (maxLength < l) {\n        return mul(maxLength / l, vec);\n    }\n    else {\n        return vec;\n    }\n}\nexport function dot(v1, v2) {\n    let d = 0;\n    for (let i = 0; i < v1.length; i++) {\n        d += v1[i] * v2[i];\n    }\n    return d;\n}\nexport function cross(v1, v2, res = []) {\n    res[0] = v1[1] * v2[2] - v1[2] * v2[1];\n    res[1] = v1[2] * v2[0] - v1[0] * v2[2];\n    res[2] = v1[0] * v2[1] - v1[1] * v2[0];\n    return res;\n}\nexport function cross2D(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\nexport const isEqual = equalArray;\n//# sourceMappingURL=vectors.js.map","import { polarToCartesian2D } from 'tvs-libs/dist/math/coords'\nimport { normalRand } from 'tvs-libs/dist/math/random'\nimport { add } from 'tvs-libs/dist/math/vectors'\nimport { times } from 'tvs-libs/dist/utils/sequence'\nimport { canvas } from './context'\n\nconst pointCount = 40\nconst radius = Math.min(canvas.height, canvas.width) * 0.4\n\nexport const triples: number[][][] = []\n\nexport const nodes = times(\n\t() =>\n\t\tadd(\n\t\t\tpolarToCartesian2D([\n\t\t\t\tMath.sqrt(Math.abs(normalRand() * 2 - 1)) * radius,\n\t\t\t\tMath.random() * 2 * Math.PI,\n\t\t\t]),\n\t\t\t[canvas.width / 2, canvas.height / 2],\n\t\t),\n\tpointCount,\n)\n\nfor (let i = 0; i < nodes.length - 1; i++) {\n\tfor (let j = i + 1; j < nodes.length; j++) {\n\t\ttriples.push([nodes[i], nodes[j], nodes[(j + 1) % nodes.length]])\n\t}\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { length } from './vectors';\n// === polar coordinates ===\n/**\n * @param radius distance from origin\n * @param angle counter clockwise\n */\nexport function polarCoord(radius, angle) {\n    return [radius, angle];\n}\nexport function cartesianToPolar2D(v) {\n    return polarCoord(length(v), Math.atan2(v[1], v[0]));\n}\nexport function polarToCartesian2D([r, phi]) {\n    return [r * Math.cos(phi), r * Math.sin(phi)];\n}\n// === sphere coordinates ===\n/**\n * Sphere coordinate vector.\n *\n * Angles rotate counterclockwise. Sphere coordinate [1, 0, 0] corresponds to cartesian coord [0, 0, 1].\n *\n * @param radius distance from origin\n * @param angleY polar angle, rotating around y axis, 0 - PI (0° - 180°)\n * @param angleZ azimuth angle, rotating around z axis, 0 - 2*PI (0° - 360°)\n */\nexport function sphereCoord(radius, angleY, angleZ) {\n    return [radius, angleY, angleZ];\n}\nexport function cartesianToSphere3D([x, y, z]) {\n    const radius = Math.sqrt(x * x + y * y + z * z);\n    if (radius === 0) {\n        return sphereCoord(0, 0, 0);\n    }\n    let azimuthAngleZ = x === 0 ? (y >= 0 ? 0 : Math.PI) : Math.atan2(y, x);\n    let polarAngleY = Math.acos(z / radius);\n    if (azimuthAngleZ < 0)\n        azimuthAngleZ += Math.PI * 2;\n    return sphereCoord(radius, polarAngleY, azimuthAngleZ);\n}\nexport function sphereToCartesian3D(vec) {\n    const radius = vec[0], polar = vec[1], azimuth = vec[2];\n    if (radius === 0) {\n        return [0, 0, 0];\n    }\n    return [\n        radius * Math.sin(polar) * Math.cos(azimuth),\n        radius * Math.sin(polar) * Math.sin(azimuth),\n        radius * Math.cos(polar),\n    ];\n}\n//# sourceMappingURL=coords.js.map","export function randInt(int) {\n    return Math.floor(Math.random() * int);\n}\nexport function randIntInRange(from, to) {\n    return randInt(to - from) + from;\n}\nexport function normalRand() {\n    return (Math.random() + Math.random() + Math.random()) / 3;\n}\n//# sourceMappingURL=random.js.map","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D previous;\\nuniform sampler2D current;\\n\\nvarying vec2 coords;\\n\\nvoid main() {\\n\\tvec4 p = texture2D(previous, coords);\\n\\tvec4 c = texture2D(current, coords);\\n\\tvec3 color = max(p.rgb, c.rgb);\\n\\tgl_FragColor = vec4(color, 1.0);\\n}\\n\\n\";","import { repeat, stop } from '../../shared-utils/scheduler'\nimport { flatten } from 'tvs-libs/dist/utils/sequence'\nimport { canvas, Q } from './context'\nimport { nodes, triples } from './nodes'\nimport blendFrag from './shaders/compose.frag'\nimport pointFrag from './shaders/point.frag'\nimport pointVert from './shaders/point.vert'\nimport sideFrag from './shaders/side.frag'\n\nconst { gl } = Q\n\n// ===== shaders =====\n\nconst pointsShade = Q.getShade('point').update({\n\tvert: pointVert,\n\tfrag: pointFrag,\n})\n\n// ===== geometries =====\n\nconst pointsForm = Q.getForm('points').update({\n\tdrawType: 'POINTS',\n\tattribs: {\n\t\tposition: {\n\t\t\tbuffer: new Float32Array(flatten(nodes)),\n\t\t\tstoreType: 'DYNAMIC',\n\t\t},\n\t},\n\titemCount: nodes.length,\n})\n\n// ===== objects =====\n\nconst pointsSketch = Q.getSketch('points').update({\n\tform: pointsForm,\n\tshade: pointsShade,\n})\n\n// ===== layers =====\n\nconst points = Q.getLayer('points').update({\n\tsketches: [pointsSketch],\n\tuniforms: { size: () => [canvas.width, canvas.height] },\n\tdrawSettings: {\n\t\tclearColor: [0, 0, 0, 1],\n\t\tclearBits: gl.COLOR_BUFFER_BIT,\n\t\tenable: [gl.BLEND],\n\t\tblendFunc: [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA],\n\t},\n})\n\nconst currentTriple = Q.getEffect('sides').update({\n\tfrag: sideFrag,\n})\n\nconst current = Q.getFrame('current').update({\n\tlayers: [points, currentTriple],\n})\n\nconst blend = Q.getEffect('blend').update({\n\tfrag: blendFrag,\n\tuniforms: {\n\t\tprevious: '0',\n\t\tcurrent: () => current.image(),\n\t},\n})\n\nconst main = Q.getFrame('main').update({\n\tlayers: blend,\n\tselfReferencing: true,\n})\n\n// ===== render =====\n\nlet i = 0\nrepeat(() => {\n\tconst triple = triples[i]\n\n\tcurrentTriple.update({\n\t\tuniforms: {\n\t\t\t// triples.map(triple => ({\n\t\t\tsize: [canvas.width, canvas.height],\n\t\t\tp1: triple[0],\n\t\t\tp2: triple[1],\n\t\t\tp3: triple[2],\n\t\t\tsource: '0',\n\t\t}, // ))\n\t})\n\n\tQ.painter.compose(current, main).display(main)\n\n\tconsole.log(i++)\n\n\tif (i === triples.length) stop('render')\n}, 'render')\n\nconsole.log(triples.length)\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export default \"#define GLSLIFY 1\\nattribute vec2 position;\\n\\nuniform vec2 size;\\n\\nvoid main() {\\n\\tgl_Position = vec4((position / size) * 2.0 - 1.0, 0.0, 1.0);\\n\\tgl_PointSize = 10.0;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nconst float r = 0.5;\\n\\nvoid main() {\\n\\tvec2 pos = gl_PointCoord.xy;\\n\\tpos -= r;\\n\\tfloat x = pos.x;\\n\\tfloat y = pos.y;\\n\\tfloat light = x * x + y * y - r * r;\\n \\tlight = clamp(-(light * 4.0), 0.0, 1.0);\\n\\n\\tgl_FragColor = vec4(vec3(light) * 0.7, light);\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform vec2 p1;\\nuniform vec2 p2;\\nuniform vec2 p3;\\nuniform vec2 size;\\nuniform sampler2D source;\\n\\nvarying vec2 coords;\\n\\nvoid main() {\\n\\tvec2 v = p2 - p1;\\n\\tvec2 p = p3 - p1;\\n\\tvec2 pos = coords * size;\\n\\tvec2 f = pos - p1;\\n\\n\\t// f - (f * v) * v\\n\\n\\t// 2D Cross product\\n\\tfloat directionPoint = v.x * p.y - v.y * p.x;\\n\\tfloat directionFrag = v.x * f.y - v.y * f.x;\\n\\n\\tfloat vLength = length(v);\\n\\tvec2 vn = v / vLength;\\n\\tfloat dist = length(pos - (p1 + vn * clamp(dot(f, vn), 0.0, vLength)));\\n\\tvec3 color = vec3(1.0, coords) * max(100.0 - dist, 0.0) / 100.0;\\n\\tif (\\n\\t\\tdirectionPoint == 0.0\\n\\t\\t|| sign(directionFrag) != sign(directionPoint)\\n\\t\\t|| vLength < length(f)\\n\\t\\t|| vLength < length(pos - p2)\\n\\t) {\\n\\t\\tcolor = vec3(0.0);\\n\\t}\\n\\n\\tfloat alpha = 0.4;\\n\\tvec4 old = texture2D(source, coords);\\n\\tcolor = pow(color, vec3(2.0));\\n\\tgl_FragColor = vec4(mix(color, old.rgb, 1.0 - alpha), 1.0);\\n}\\n\\n\";"],"sourceRoot":""}