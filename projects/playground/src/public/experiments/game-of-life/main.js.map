{"version":3,"sources":["webpack:///./shared-utils/scheduler.ts","webpack:///../libs/dist/events/keyboard.js","webpack:///../libs/dist/utils/object.js","webpack:///../painter/dist/contants.js","webpack:///../painter/dist/asset-lib.js","webpack:///../painter/dist/render-utils.js","webpack:///../painter/dist/form.js","webpack:///../painter/dist/texture.js","webpack:///../painter/dist/render-target.js","webpack:///../libs/dist/utils/predicates.js","webpack:///../painter/dist/frame.js","webpack:///../libs/dist/utils/sequence.js","webpack:///../painter/dist/layer.js","webpack:///../painter/dist/shade.js","webpack:///../painter/dist/sketch.js","webpack:///../painter/dist/painter.js","webpack:///../painter/dist/utils/context.js","webpack:///../libs/dist/events/pointer.js","webpack:///./shared-utils/painterState.ts","webpack:///./experiments/game-of-life/context.ts","webpack:///../libs/dist/events/dom.js","webpack:///./experiments/game-of-life/paint.ts","webpack:///../node_modules/gl-matrix/esm/common.js","webpack:///../node_modules/gl-matrix/esm/mat4.js","webpack:///./experiments/game-of-life/glsl/base.frag","webpack:///./experiments/game-of-life/renderer.ts","webpack:///../painter/dist/utils/geometry/plane.js","webpack:///./experiments/game-of-life/glsl/plane-material.vert","webpack:///./experiments/game-of-life/glsl/plane-material.frag","webpack:///./experiments/game-of-life/index.ts"],"names":["updateOnce","updateRepeat","willUpdate","uidCounter","oldTime","processUpdates","time","tpf","id","updates","requestAnimationFrame","Keys","deepOverride","obj1","obj2","opt","ignore","Array","isArray","key","hasOwnProperty","val1","val2","undefined","defaultTextureSettings","defaultForms","renderQuad","attribs","buffer","Float32Array","storeType","drawType","itemCount","defaultShaders","vert","frag","getBindPointForSamplerType","type","typeMap","bindPoint","intSetter","gl","location","v","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","texture","activeTexture","TEXTURE0","bindTexture","_texture","samplerArraySetter","size","units","Int32Array","i","textures","index","Type","setter","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Uint32Array","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","floatAttribSetter","typeInfo","b","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","itemSize","normalize","stride","offset","intAttribSetter","vertexAttribIPointer","matAttribSetter","defaultSize","count","numComponents","rowOffset","attrTypeMap","applyDrawSettings","settings","enable","setting","disable","blendFunc","apply","depthFunc","cullFace","frontFace","lineWidth","colorMask","depthMask","clearColor","clearDepth","clearBits","clear","revertDrawSettings","Int8Array","Uint8Array","Int16Array","Uint16Array","formCounter","Form","_painter","this","data","_drawType","_itemCount","_attribs","attribData","createBuffer","bufferData","elements","_elements","glType","typedArray","Uint8ClampedArray","Error","getGLTypeForTypedArray","ELEMENT_ARRAY_BUFFER","deleteBuffer","textureCount","Texture","_data","createTexture","TEXTURE_2D","wrap","wrapS","wrapT","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","magFilter","TEXTURE_MAG_FILTER","minFilter","TEXTURE_MIN_FILTER","asset","texImage2D","RGBA","UNSIGNED_BYTE","isWebGL2","RGBA32F","width","height","flipY","pixelStorei","UNPACK_FLIP_Y_WEBGL","indexOf","generateMipmap","Object","assign","deleteTexture","targetCount","RenderTarget","antialias","frameBuffer","antiAliasFrameBuffer","antiAliasRenderBuffer","depthBuffer","bufferStructure","_a","length","every","buf","k1","keys","arr1","arr2","equalArray","equalObject","createFramebuffer","createRenderbuffer","some","t","getExtension","texCount","bufferAttachments","COLOR_ATTACHMENT0","bindFramebuffer","FRAMEBUFFER","glx","attachment","COLOR_ATTACHMENT0_WEBGL","drawBuffers","drawBuffersWEBGL","gl2","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","Math","min","getParameter","MAX_SAMPLES","RGBA8","framebufferRenderbuffer","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","renderbufferStorage","update","framebufferTexture2D","err","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","console","error","deleteFramebuffer","deleteRenderbuffer","frameCount","Frame","layers","_targets","_textures","_b","_c","_d","selfReferencing","layerCount","reduce","layer","_uniforms","canvas","_destroyTargets","targetData","fn","res","times","forEach","tex","destroy","tmp","Layer","sketches","sketch","shade","uniforms","shadeCounter","Shade","fragSource","trim","vertSource","program","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","_program","_frag","_vert","attachShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","addLineNumbers","linkProgram","getProgramParameter","LINK_STATUS","lastError","getProgramInfoLog","_uniformSetters","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","name","substr","toString","uniformSetters","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","createUniformSetters","_attributeSetters","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","createAttributeSetters","deleteProgram","deleteShader","src","split","map","line","join","sketchCounter","Sketch","drawSettings","_drawSettings","form","Painter","opts","maxBufferSamples","useWebGL1","getContext","sizeMultiplier","resize","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","getDefaultLayerSettings","_renderQuad","createForm","_staticSketch","createFlatSketch","multiplier","rect","getBoundingClientRect","resizeCanvas","s","createSketch","createShade","l","createLayer","globalUniforms","viewport","draw","frames","frame","renderFrame","idx","source","image","sources","useProgram","shadeForm","shadeUniforms","drawInstance","drawElements","drawArrays","value","renderLayer","target","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","clearBufferfv","COLOR","blitFramebuffer","COLOR_BUFFER_BIT","LINEAR","layerPasses","j","_swapTargets","Buttons","currentCanvas","painter","getForm","shades","getShade","getSketch","getLayer","getFrame","createFrame","effects","getEffect","createEffect","state","device","window","eventHandlers","baseEvents","FRAME","RESIZE","cancelWindow","cancelPointer","cancelKeys","document","getElementById","paint","Q","getPainterContext","callback","innerWidth","innerHeight","addEventListener","removeEventListener","windowSize","once","emit","cb","element","enableRightButton","holdDelay","holdRadius","pressed","drag","x","y","dX","dY","xMax","yMax","dragging","holding","oX","oY","timeout","onPointerDown","e","isPrimary","button","clientX","clientY","clearTimeout","setTimeout","onPointerUp","_e","event","onPointerMove","max","abs","preventDefault","pointer","m","onKeydown","keyCode","Date","now","onKeyup","keyboard","k","get","prop","set","val","reset","listen","events","PROCESS_PAINT","CLEANUP_PAINT","ctx","getImageData","random","putImageData","fillStyle","fillRect","d","floor","ARRAY_TYPE","create","out","PI","hypot","arguments","sqrt","paintFrame","effect","previous","automaton","planMat","projection","fovy","aspect","near","far","nf","f","tan","widthSegments","heightSegments","vertices","gridX1","normals","uvs","iy","ix","offset2","gridY","gridX","indices","a","c","position","normal","uv","plane","transform","rad","sin","cos","a00","a01","a02","a03","a20","a21","a22","a23","clearArray","item","toUpperCase","makeClear","compose"],"mappings":"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","file":"experiments/game-of-life/main.js","sourcesContent":["// onNextTick\n// schedule actions on next animation frame\n\ntype Callback = (n: number) => void\n\nlet updateOnce: { [id: string]: Callback } | null = null\nconst updateRepeat: { [id: string]: Callback } = {}\n\nlet willUpdate = false\n\nlet uidCounter = 0\n\nlet oldTime = 0\n\nfunction processUpdates(time: number) {\n\tconst tpf = oldTime ? time - oldTime : oldTime\n\toldTime = time\n\n\tif (updateOnce) {\n\t\tfor (const id in updateOnce) {\n\t\t\tupdateOnce[id](tpf)\n\t\t}\n\t\tupdateOnce = null\n\t}\n\n\tlet updates = 0\n\tfor (const id in updateRepeat) {\n\t\tupdates++\n\t\tupdateRepeat[id](tpf)\n\t}\n\n\tif (!updates) {\n\t\twillUpdate = false\n\t\toldTime = 0\n\t} else {\n\t\trequestAnimationFrame(processUpdates)\n\t}\n}\n\nexport function once(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateOnce = updateOnce || {}\n\tupdateOnce[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n}\n\nexport function repeat(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateRepeat[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n\n\treturn id\n}\n\nexport function stop(id: Callback | string | number) {\n\tif (typeof id === 'function') {\n\t\tid = id.name\n\t}\n\tdelete updateRepeat[id]\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export var Keys;\n(function (Keys) {\n    Keys[Keys[\"CANCEL\"] = 3] = \"CANCEL\";\n    Keys[Keys[\"HELP\"] = 6] = \"HELP\";\n    Keys[Keys[\"BACK_SPACE\"] = 8] = \"BACK_SPACE\";\n    Keys[Keys[\"TAB\"] = 9] = \"TAB\";\n    Keys[Keys[\"CLEAR\"] = 12] = \"CLEAR\";\n    Keys[Keys[\"RETURN\"] = 13] = \"RETURN\";\n    Keys[Keys[\"ENTER\"] = 14] = \"ENTER\";\n    Keys[Keys[\"SHIFT\"] = 16] = \"SHIFT\";\n    Keys[Keys[\"CONTROL\"] = 17] = \"CONTROL\";\n    Keys[Keys[\"ALT\"] = 18] = \"ALT\";\n    Keys[Keys[\"PAUSE\"] = 19] = \"PAUSE\";\n    Keys[Keys[\"CAPS_LOCK\"] = 20] = \"CAPS_LOCK\";\n    Keys[Keys[\"ESCAPE\"] = 27] = \"ESCAPE\";\n    Keys[Keys[\"SPACE\"] = 32] = \"SPACE\";\n    Keys[Keys[\"PAGE_UP\"] = 33] = \"PAGE_UP\";\n    Keys[Keys[\"PAGE_DOWN\"] = 34] = \"PAGE_DOWN\";\n    Keys[Keys[\"END\"] = 35] = \"END\";\n    Keys[Keys[\"HOME\"] = 36] = \"HOME\";\n    Keys[Keys[\"LEFT\"] = 37] = \"LEFT\";\n    Keys[Keys[\"UP\"] = 38] = \"UP\";\n    Keys[Keys[\"RIGHT\"] = 39] = \"RIGHT\";\n    Keys[Keys[\"DOWN\"] = 40] = \"DOWN\";\n    Keys[Keys[\"PRINTSCREEN\"] = 44] = \"PRINTSCREEN\";\n    Keys[Keys[\"INSERT\"] = 45] = \"INSERT\";\n    Keys[Keys[\"DELETE\"] = 46] = \"DELETE\";\n    Keys[Keys[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    Keys[Keys[\"DIGIT_1\"] = 49] = \"DIGIT_1\";\n    Keys[Keys[\"DIGIT_2\"] = 50] = \"DIGIT_2\";\n    Keys[Keys[\"DIGIT_3\"] = 51] = \"DIGIT_3\";\n    Keys[Keys[\"DIGIT_4\"] = 52] = \"DIGIT_4\";\n    Keys[Keys[\"DIGIT_5\"] = 53] = \"DIGIT_5\";\n    Keys[Keys[\"DIGIT_6\"] = 54] = \"DIGIT_6\";\n    Keys[Keys[\"DIGIT_7\"] = 55] = \"DIGIT_7\";\n    Keys[Keys[\"DIGIT_8\"] = 56] = \"DIGIT_8\";\n    Keys[Keys[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    Keys[Keys[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    Keys[Keys[\"EQUALS\"] = 61] = \"EQUALS\";\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    Keys[Keys[\"CONTEXT_MENU\"] = 93] = \"CONTEXT_MENU\";\n    Keys[Keys[\"NUMPAD0\"] = 96] = \"NUMPAD0\";\n    Keys[Keys[\"NUMPAD1\"] = 97] = \"NUMPAD1\";\n    Keys[Keys[\"NUMPAD2\"] = 98] = \"NUMPAD2\";\n    Keys[Keys[\"NUMPAD3\"] = 99] = \"NUMPAD3\";\n    Keys[Keys[\"NUMPAD4\"] = 100] = \"NUMPAD4\";\n    Keys[Keys[\"NUMPAD5\"] = 101] = \"NUMPAD5\";\n    Keys[Keys[\"NUMPAD6\"] = 102] = \"NUMPAD6\";\n    Keys[Keys[\"NUMPAD7\"] = 103] = \"NUMPAD7\";\n    Keys[Keys[\"NUMPAD8\"] = 104] = \"NUMPAD8\";\n    Keys[Keys[\"NUMPAD9\"] = 105] = \"NUMPAD9\";\n    Keys[Keys[\"MULTIPLY\"] = 106] = \"MULTIPLY\";\n    Keys[Keys[\"ADD\"] = 107] = \"ADD\";\n    Keys[Keys[\"SEPARATOR\"] = 108] = \"SEPARATOR\";\n    Keys[Keys[\"SUBTRACT\"] = 109] = \"SUBTRACT\";\n    Keys[Keys[\"DECIMAL\"] = 110] = \"DECIMAL\";\n    Keys[Keys[\"DIVIDE\"] = 111] = \"DIVIDE\";\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    Keys[Keys[\"F13\"] = 124] = \"F13\";\n    Keys[Keys[\"F14\"] = 125] = \"F14\";\n    Keys[Keys[\"F15\"] = 126] = \"F15\";\n    Keys[Keys[\"F16\"] = 127] = \"F16\";\n    Keys[Keys[\"F17\"] = 128] = \"F17\";\n    Keys[Keys[\"F18\"] = 129] = \"F18\";\n    Keys[Keys[\"F19\"] = 130] = \"F19\";\n    Keys[Keys[\"F20\"] = 131] = \"F20\";\n    Keys[Keys[\"F21\"] = 132] = \"F21\";\n    Keys[Keys[\"F22\"] = 133] = \"F22\";\n    Keys[Keys[\"F23\"] = 134] = \"F23\";\n    Keys[Keys[\"F24\"] = 135] = \"F24\";\n    Keys[Keys[\"NUM_LOCK\"] = 144] = \"NUM_LOCK\";\n    Keys[Keys[\"SCROLL_LOCK\"] = 145] = \"SCROLL_LOCK\";\n    Keys[Keys[\"COMMA\"] = 188] = \"COMMA\";\n    Keys[Keys[\"PERIOD\"] = 190] = \"PERIOD\";\n    Keys[Keys[\"SLASH\"] = 191] = \"SLASH\";\n    Keys[Keys[\"BACK_QUOTE\"] = 192] = \"BACK_QUOTE\";\n    Keys[Keys[\"OPEN_BRACKET\"] = 219] = \"OPEN_BRACKET\";\n    Keys[Keys[\"BACK_SLASH\"] = 220] = \"BACK_SLASH\";\n    Keys[Keys[\"CLOSE_BRACKET\"] = 221] = \"CLOSE_BRACKET\";\n    Keys[Keys[\"QUOTE\"] = 222] = \"QUOTE\";\n    Keys[Keys[\"META\"] = 224] = \"META\";\n})(Keys || (Keys = {}));\nexport function keyboard(opts, callback) {\n    const cb = callback || opts;\n    const { element = window } = opts;\n    const pressed = {};\n    function onKeydown(event) {\n        pressed[event.keyCode] = Date.now();\n        cb(pressed);\n    }\n    function onKeyup(event) {\n        delete pressed[event.keyCode];\n        cb(pressed);\n    }\n    element.addEventListener('keyup', onKeyup, false);\n    element.addEventListener('keydown', onKeydown, false);\n    cb(pressed);\n    return function stop() {\n        element.removeEventListener('keyup', onKeyup);\n        element.removeEventListener('keydown', onKeydown);\n    };\n}\nexport function keyboardObserver(opts) {\n    const observer = {\n        Keys,\n        state: { pressed: {} },\n        destroy: () => { },\n    };\n    function callback(pressed) {\n        observer.state.pressed = pressed;\n    }\n    observer.destroy = keyboard(callback, opts);\n    return observer;\n}\n//# sourceMappingURL=keyboard.js.map","export function deepmerge(obj1, obj2) {\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        const result = Object.assign({}, obj1);\n        for (const key in obj2) {\n            const val1 = obj1[key];\n            const val2 = obj2[key];\n            if (typeof val2 !== 'undefined') {\n                result[key] = deepmerge(val1, val2);\n            }\n            else {\n                delete result[key];\n            }\n        }\n        return result;\n    }\n    return obj2;\n}\nexport function deepOverride(obj1, obj2, opt) {\n    const ignore = opt && opt.ignore;\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        for (const key in obj1) {\n            if (obj1.hasOwnProperty(key) &&\n                !(ignore && key in ignore && ignore[key] === true)) {\n                const val1 = obj1[key];\n                const val2 = obj2[key];\n                if (val2 !== undefined) {\n                    obj1[key] = deepOverride(val1, val2, {\n                        ignore: ignore && ignore[key],\n                    });\n                }\n            }\n        }\n        return obj1;\n    }\n    return obj2;\n}\nexport function mapObj(fn, coll, res = {}) {\n    for (const key in coll) {\n        res[key] = fn(coll[key], key);\n    }\n    return res;\n}\n//# sourceMappingURL=object.js.map","export const GEOMETRY_PROP_POSITION = 'position';\nexport const GEOMETRY_PROP_NORMAL = 'normal';\nexport const GEOMETRY_PROP_UV = 'uv';\nexport const UNIFORM_SOURCE_TEXTURE = 'source';\nexport const VARYING_UV_COORDS = 'coords';\nexport const GL_TYPE = {\n    FLOAT: 0x1406,\n    FLOAT_VEC2: 0x8b50,\n    FLOAT_VEC3: 0x8b51,\n    FLOAT_VEC4: 0x8b52,\n    INT: 0x1404,\n    INT_VEC2: 0x8b53,\n    INT_VEC3: 0x8b54,\n    INT_VEC4: 0x8b55,\n    BOOL: 0x8b56,\n    BOOL_VEC2: 0x8b57,\n    BOOL_VEC3: 0x8b58,\n    BOOL_VEC4: 0x8b59,\n    FLOAT_MAT2: 0x8b5a,\n    FLOAT_MAT3: 0x8b5b,\n    FLOAT_MAT4: 0x8b5c,\n    SAMPLER_2D: 0x8b5e,\n    SAMPLER_CUBE: 0x8b60,\n    SAMPLER_3D: 0x8b5f,\n    SAMPLER_2D_SHADOW: 0x8b62,\n    FLOAT_MAT2X3: 0x8b65,\n    FLOAT_MAT2X4: 0x8b66,\n    FLOAT_MAT3X2: 0x8b67,\n    FLOAT_MAT3X4: 0x8b68,\n    FLOAT_MAT4X2: 0x8b69,\n    FLOAT_MAT4X3: 0x8b6a,\n    SAMPLER_2D_ARRAY: 0x8dc1,\n    SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n    SAMPLER_CUBE_SHADOW: 0x8dc5,\n    UNSIGNED_INT: 0x1405,\n    UNSIGNED_INT_VEC2: 0x8dc6,\n    UNSIGNED_INT_VEC3: 0x8dc7,\n    UNSIGNED_INT_VEC4: 0x8dc8,\n    INT_SAMPLER_2D: 0x8dca,\n    INT_SAMPLER_3D: 0x8dcb,\n    INT_SAMPLER_CUBE: 0x8dcc,\n    INT_SAMPLER_2D_ARRAY: 0x8dcf,\n    UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n    UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n    UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n    TEXTURE_2D: 0x0de1,\n    TEXTURE_CUBE_MAP: 0x8513,\n    TEXTURE_3D: 0x806f,\n    TEXTURE_2D_ARRAY: 0x8c1a,\n    BYTE: 0x1400,\n    UNSIGNED_BYTE: 0x1401,\n    SHORT: 0x1402,\n    UNSIGNED_SHORT: 0x1403,\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\n    UNSIGNED_SHORT_5_6_5: 0x8363,\n    HALF_FLOAT: 0x140b,\n    UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n    UNSIGNED_INT_10F_11F_11F_REV: 0x8c3b,\n    UNSIGNED_INT_5_9_9_9_REV: 0x8c3e,\n    FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8dad,\n    UNSIGNED_INT_24_8: 0x84fa,\n};\nexport const TEXTURE_FORMAT = {\n    RED: 0x1903,\n    RG: 0x8227,\n    RGB: 0x1907,\n    RGBA: 0x1908,\n    RED_INTEGER: 0x8d94,\n    RG_INTEGER: 0x8228,\n    RGB_INTEGER: 0x8d98,\n    RGBA_INTEGER: 0x8d99,\n    DEPTH_COMPONENT: 0x1902,\n};\nexport const TEXTURE_FORMAT_INTERNAL = {\n    R8: 0x8229,\n    RG8: 0x822b,\n    RGB8: 0x8051,\n    RGBA8: 0x8058,\n    R16F: 0x822d,\n    RG16F: 0x822f,\n    RGB16F: 0x881b,\n    RGBA16F: 0x881a,\n    R32F: 0x822e,\n    RG32F: 0x8230,\n    RGB32F: 0x8815,\n    RGBA32F: 0x8814,\n    R8I: 0x8231,\n    RG8I: 0x8237,\n    RGB8I: 0x8d8f,\n    RGBA8I: 0x8d8e,\n    R8UI: 0x8232,\n    RG8UI: 0x8238,\n    RGB8UI: 0x8d7d,\n    RGBA8UI: 0x8d7c,\n    R16I: 0x8233,\n    RG16I: 0x8239,\n    RGB16I: 0x8d89,\n    RGBA16I: 0x8d88,\n    R16UI: 0x8234,\n    RG16UI: 0x823a,\n    RGB16UI: 0x8d77,\n    RGBA16UI: 0x8d76,\n    R32I: 0x8235,\n    RG32I: 0x823b,\n    RGB32I: 0x8d83,\n    RGBA32I: 0x8d82,\n    R32UI: 0x8236,\n    RG32UI: 0x823c,\n    RGB32UI: 0x8d71,\n    RGBA32UI: 0x8d70,\n    RGB10_A2: 0x8059,\n    RGB10_A2UI: 0x906f,\n    SRGB: 0x8c40,\n    SRGB8: 0x8c41,\n    SRGB8_ALPHA8: 0x8c43,\n    R8_SNORM: 0x8f94,\n    RG8_SNORM: 0x8f95,\n    RGB8_SNORM: 0x8f96,\n    RGBA8_SNORM: 0x8f97,\n    DEPTH_COMPONENT16: 0x81a5,\n    DEPTH_COMPONENT24: 0x81a6,\n    DEPTH_COMPONENT32F: 0x8cac,\n};\nexport const TEXTURE_FORMAT_DEFAULTS = {\n    [GL_TYPE.UNSIGNED_BYTE]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R8,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG8,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB8,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA8,\n    },\n    [GL_TYPE.UNSIGNED_SHORT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT16,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16UI,\n    },\n    [GL_TYPE.UNSIGNED_INT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT24,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R32UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG32UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB32UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA32UI,\n    },\n    [GL_TYPE.FLOAT]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16F,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16F,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16F,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16F,\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT32F,\n    },\n    COMPRESSED_TYPES: {},\n};\n//# sourceMappingURL=contants.js.map","import * as constants from './contants';\nexport const defaultTextureSettings = {\n    wrap: 'CLAMP_TO_EDGE',\n    minFilter: 'LINEAR',\n    magFilter: 'NEAREST',\n};\nexport function getDefaultLayerSettings(gl) {\n    return {\n        clearColor: [0.0, 0.0, 0.0, 1.0],\n        blendFunc: [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA],\n    };\n}\nexport const defaultForms = {\n    renderQuad: {\n        attribs: {\n            [constants.GEOMETRY_PROP_POSITION]: {\n                buffer: new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1]),\n                storeType: 'STATIC',\n            },\n            [constants.GEOMETRY_PROP_UV]: {\n                buffer: new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]),\n                storeType: 'STATIC',\n            },\n        },\n        drawType: 'TRIANGLE_STRIP',\n        itemCount: 4,\n    },\n};\nexport const defaultShaders = {\n    basicEffect: {\n        vert: `\nattribute vec2 ${constants.GEOMETRY_PROP_POSITION};\nattribute vec2 ${constants.GEOMETRY_PROP_UV};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\t${constants.VARYING_UV_COORDS} = ${constants.GEOMETRY_PROP_UV};\n\tgl_Position = vec4(${constants.GEOMETRY_PROP_POSITION}, 0.0, 1.0);\n}`,\n        frag: `precision mediump float;\nuniform sampler2D ${constants.UNIFORM_SOURCE_TEXTURE};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\tgl_FragColor = texture2D(${constants.UNIFORM_SOURCE_TEXTURE}, ${constants.VARYING_UV_COORDS});\n}`,\n    },\n};\n//# sourceMappingURL=asset-lib.js.map","import { GL_TYPE } from './contants';\n// Attrib and Uniform Setters\nfunction getBindPointForSamplerType(type) {\n    return typeMap[type].bindPoint;\n}\nfunction floatSetter(gl, location) {\n    return (v) => {\n        gl.uniform1f(location, v);\n    };\n}\nfunction floatArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1fv(location, v);\n    };\n}\nfunction floatVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2fv(location, v);\n    };\n}\nfunction floatVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3fv(location, v);\n    };\n}\nfunction floatVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4fv(location, v);\n    };\n}\nfunction intSetter(gl, location) {\n    return (v) => {\n        gl.uniform1i(location, v);\n    };\n}\nfunction intArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1iv(location, v);\n    };\n}\nfunction intVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2iv(location, v);\n    };\n}\nfunction intVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3iv(location, v);\n    };\n}\nfunction intVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4iv(location, v);\n    };\n}\nfunction uintSetter(gl, location) {\n    return (v) => {\n        gl.uniform1ui(location, v);\n    };\n}\nfunction uintArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1uiv(location, v);\n    };\n}\nfunction uintVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2uiv(location, v);\n    };\n}\nfunction uintVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3uiv(location, v);\n    };\n}\nfunction uintVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4uiv(location, v);\n    };\n}\nfunction floatMat2Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n    };\n}\nfunction floatMat3Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n    };\n}\nfunction floatMat4Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n    };\n}\nfunction floatMat23Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x3fv(location, false, v);\n    };\n}\nfunction floatMat32Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x2fv(location, false, v);\n    };\n}\nfunction floatMat24Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x4fv(location, false, v);\n    };\n}\nfunction floatMat42Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x2fv(location, false, v);\n    };\n}\nfunction floatMat34Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x4fv(location, false, v);\n    };\n}\nfunction floatMat43Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x3fv(location, false, v);\n    };\n}\nfunction samplerSetter(gl, type, unit, location) {\n    const bindPoint = getBindPointForSamplerType(type);\n    return (texture) => {\n        gl.uniform1i(location, unit);\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(bindPoint, texture._texture);\n    };\n}\nfunction samplerArraySetter(gl, type, unit, location, size) {\n    const bindPoint = getBindPointForSamplerType(type);\n    const units = new Int32Array(size);\n    for (let i = 0; i < size; ++i) {\n        units[i] = unit + i;\n    }\n    return (textures) => {\n        gl.uniform1iv(location, units);\n        for (const index in textures) {\n            gl.activeTexture(gl.TEXTURE0 + units[index]);\n            gl.bindTexture(bindPoint, textures[index]._texture);\n        }\n    };\n}\nfunction isSamplerInfo(info) {\n    return info.Type === null;\n}\nconst typeMap = {\n    [GL_TYPE.FLOAT]: {\n        Type: Float32Array,\n        size: 4,\n        setter: floatSetter,\n        arraySetter: floatArraySetter,\n    },\n    [GL_TYPE.FLOAT_VEC2]: {\n        Type: Float32Array,\n        size: 8,\n        setter: floatVec2Setter,\n    },\n    [GL_TYPE.FLOAT_VEC3]: {\n        Type: Float32Array,\n        size: 12,\n        setter: floatVec3Setter,\n    },\n    [GL_TYPE.FLOAT_VEC4]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatVec4Setter,\n    },\n    [GL_TYPE.INT]: {\n        Type: Int32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.INT_VEC2]: { Type: Int32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.INT_VEC3]: { Type: Int32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.INT_VEC4]: { Type: Int32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.UNSIGNED_INT]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: uintSetter,\n        arraySetter: uintArraySetter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        Type: Uint32Array,\n        size: 8,\n        setter: uintVec2Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        Type: Uint32Array,\n        size: 12,\n        setter: uintVec3Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        Type: Uint32Array,\n        size: 16,\n        setter: uintVec4Setter,\n    },\n    [GL_TYPE.BOOL]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.BOOL_VEC2]: { Type: Uint32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.BOOL_VEC3]: { Type: Uint32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.BOOL_VEC4]: { Type: Uint32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.FLOAT_MAT2]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatMat2Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3]: {\n        Type: Float32Array,\n        size: 36,\n        setter: floatMat3Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4]: {\n        Type: Float32Array,\n        size: 64,\n        setter: floatMat4Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X3]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat23Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X4]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat24Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X2]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat32Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X4]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat34Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X2]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat42Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X3]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat43Setter,\n    },\n    [GL_TYPE.SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.SAMPLER_2D_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_CUBE_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n};\nfunction floatAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribPointer(location, typeInfo.itemSize, GL_TYPE.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n    };\n}\nfunction intAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribIPointer(location, typeInfo.itemSize, GL_TYPE.INT, b.stride || 0, b.offset || 0);\n    };\n}\nfunction matAttribSetter(gl, location, typeInfo) {\n    const defaultSize = typeInfo.size;\n    const count = typeInfo.count;\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        const numComponents = defaultSize;\n        const size = numComponents / count;\n        const typeInfo = typeMap[GL_TYPE.FLOAT];\n        const stride = typeInfo.size * numComponents;\n        const normalize = b.normalize || false;\n        const offset = b.offset || 0;\n        const rowOffset = stride / count;\n        for (let i = 0; i < count; ++i) {\n            gl.enableVertexAttribArray(location + i);\n            gl.vertexAttribPointer(location + i, size, GL_TYPE.FLOAT, normalize, stride, offset + rowOffset * i);\n        }\n    };\n}\nconst attrTypeMap = {\n    [GL_TYPE.FLOAT]: { size: 4, setter: floatAttribSetter, itemSize: 1 },\n    [GL_TYPE.FLOAT_VEC2]: { size: 8, setter: floatAttribSetter, itemSize: 2 },\n    [GL_TYPE.FLOAT_VEC3]: { size: 12, setter: floatAttribSetter, itemSize: 3 },\n    [GL_TYPE.FLOAT_VEC4]: { size: 16, setter: floatAttribSetter, itemSize: 4 },\n    [GL_TYPE.INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.INT_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.INT_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.INT_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.UNSIGNED_INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        size: 8,\n        setter: intAttribSetter,\n        itemSize: 2,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        size: 12,\n        setter: intAttribSetter,\n        itemSize: 3,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        size: 16,\n        setter: intAttribSetter,\n        itemSize: 4,\n    },\n    [GL_TYPE.BOOL]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.BOOL_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.BOOL_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.BOOL_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.FLOAT_MAT2]: { size: 4, setter: matAttribSetter, count: 2 },\n    [GL_TYPE.FLOAT_MAT3]: { size: 9, setter: matAttribSetter, count: 3 },\n    [GL_TYPE.FLOAT_MAT4]: { size: 16, setter: matAttribSetter, count: 4 },\n};\nexport function createUniformSetters(gl, program) {\n    let textureUnit = 0;\n    function createUniformSetter(program, uniformInfo) {\n        const location = gl.getUniformLocation(program, uniformInfo.name);\n        const isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]';\n        const type = uniformInfo.type;\n        const typeInfo = typeMap[type];\n        if (!typeInfo) {\n            throw new Error('unknown type: 0x' + type.toString(16)); // we should never get here.\n        }\n        if (location == null) {\n            return;\n        }\n        let setter;\n        if (isSamplerInfo(typeInfo)) {\n            // it's a sampler\n            const unit = textureUnit;\n            textureUnit += uniformInfo.size;\n            if (isArray) {\n                setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n            }\n            else {\n                setter = typeInfo.setter(gl, type, unit, location);\n            }\n        }\n        else {\n            if (typeInfo.arraySetter && isArray) {\n                setter = typeInfo.arraySetter(gl, location);\n            }\n            else {\n                setter = typeInfo.setter(gl, location);\n            }\n        }\n        return { setter, location };\n    }\n    const uniformSetters = {};\n    const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < numUniforms; ++i) {\n        const uniformInfo = gl.getActiveUniform(program, i);\n        if (!uniformInfo) {\n            continue;\n        }\n        let name = uniformInfo.name;\n        // remove the array suffix.\n        if (name.substr(-3) === '[0]') {\n            name = name.substr(0, name.length - 3);\n        }\n        if (program) {\n            const setter = createUniformSetter(program, uniformInfo);\n            if (setter) {\n                uniformSetters[name] = setter;\n            }\n        }\n    }\n    return uniformSetters;\n}\nexport function createAttributeSetters(gl, program) {\n    const attribSetters = {};\n    const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < numAttribs; i++) {\n        const attribInfo = gl.getActiveAttrib(program, i);\n        if (!attribInfo) {\n            break;\n        }\n        const location = gl.getAttribLocation(program, attribInfo.name);\n        const typeInfo = attrTypeMap[attribInfo.type];\n        const setter = typeInfo.setter(gl, location, typeInfo);\n        attribSetters[attribInfo.name] = { setter, location };\n    }\n    return attribSetters;\n}\n// Type helpers\nexport const glTypeToTypedArray = {\n    [GL_TYPE.BYTE]: Int8Array,\n    [GL_TYPE.UNSIGNED_BYTE]: Uint8Array,\n    [GL_TYPE.SHORT]: Int16Array,\n    [GL_TYPE.UNSIGNED_SHORT]: Uint16Array,\n    [GL_TYPE.INT]: Int32Array,\n    [GL_TYPE.UNSIGNED_INT]: Uint32Array,\n    [GL_TYPE.FLOAT]: Float32Array,\n    [GL_TYPE.UNSIGNED_SHORT_4_4_4_4]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_5_5_1]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_6_5]: Uint16Array,\n    [GL_TYPE.HALF_FLOAT]: Uint16Array,\n    [GL_TYPE.UNSIGNED_INT_2_10_10_10_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_10F_11F_11F_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_5_9_9_9_REV]: Uint32Array,\n    [GL_TYPE.FLOAT_32_UNSIGNED_INT_24_8_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_24_8]: Uint32Array,\n};\nexport function getGLTypeForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArray instanceof Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArray instanceof Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArray instanceof Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArray instanceof Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArray instanceof Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\nexport function getGLTypeForTypedArrayType(typedArrayType) {\n    if (typedArrayType === Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArrayType === Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArrayType === Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArrayType === Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArrayType === Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArrayType === Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\n// Settings\nexport function applyDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.enable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.blendFunc) {\n        gl.blendFunc.apply(gl, settings.blendFunc);\n    }\n    if (settings.depthFunc != null) {\n        gl.depthFunc(settings.depthFunc);\n    }\n    if (settings.cullFace != null) {\n        gl.cullFace(settings.cullFace);\n    }\n    if (settings.frontFace != null) {\n        gl.frontFace(settings.frontFace);\n    }\n    if (settings.lineWidth != null) {\n        gl.lineWidth(settings.lineWidth);\n    }\n    if (settings.colorMask) {\n        gl.colorMask.apply(gl, settings.colorMask);\n    }\n    if (settings.depthMask != null) {\n        gl.depthMask(settings.depthMask);\n    }\n    if (settings.clearColor) {\n        gl.clearColor.apply(gl, settings.clearColor);\n    }\n    if (settings.clearDepth != null) {\n        gl.clearDepth(settings.clearDepth);\n    }\n    if (settings.clearBits != null) {\n        gl.clear(settings.clearBits);\n    }\n}\nexport function revertDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.enable(setting);\n        }\n    }\n}\n//# sourceMappingURL=render-utils.js.map","import { getGLTypeForTypedArray } from './render-utils';\nlet formCounter = 1;\nexport class Form {\n    constructor(_painter, id = 'Form' + formCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (data.drawType) {\n            this._drawType = gl[data.drawType];\n        }\n        if (data.itemCount) {\n            this._itemCount = data.itemCount;\n        }\n        this._attribs = this._attribs || {};\n        for (const id in data.attribs) {\n            const attribData = data.attribs[id];\n            if (this._attribs[id] == null) {\n                this._attribs[id] = {\n                    buffer: gl.createBuffer(),\n                };\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._attribs[id].buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, attribData.buffer, gl[(attribData.storeType || 'STATIC') + '_DRAW']);\n        }\n        if (data.elements) {\n            const buffer = data.elements.buffer;\n            if (this._elements == null) {\n                this._elements = {\n                    buffer: gl.createBuffer(),\n                    glType: null,\n                };\n            }\n            this._elements.glType = getGLTypeForTypedArray(buffer);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._elements.buffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, buffer, gl[(data.elements.storeType || 'STATIC') + '_DRAW']);\n        }\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        for (const id in this._attribs) {\n            gl.deleteBuffer(this._attribs[id].buffer);\n        }\n        this._attribs = {};\n        if (this._elements) {\n            gl.deleteBuffer(this._elements.buffer);\n            this._elements = undefined;\n        }\n    }\n}\n//# sourceMappingURL=form.js.map","import { defaultTextureSettings } from './asset-lib';\nlet textureCount = 1;\nexport class Texture {\n    constructor(_painter, id = 'Texture' + textureCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this._texture = null;\n        this._data = {};\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (this._texture == null) {\n            this._texture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        if ((data.wrap && data.wrap !== this._data.wrap) ||\n            (data.wrapS && data.wrapS !== this._data.wrapS) ||\n            (data.wrapT && data.wrapT !== this._data.wrapT)) {\n            let wrapS, wrapT;\n            if (data.wrap) {\n                wrapS = wrapT = data.wrap;\n            }\n            else {\n                wrapT = data.wrapT || defaultTextureSettings.wrap;\n                wrapS = data.wrapS || defaultTextureSettings.wrap;\n            }\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n        }\n        else if (!(this._data.wrap || this._data.wrapS || this._data.wrapT)) {\n            this._data.wrap = this._data.wrapT = this._data.wrapS = defaultTextureSettings.wrap;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[this._data.wrap]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[this._data.wrap]);\n        }\n        if (data.magFilter && data.magFilter !== this._data.magFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[data.magFilter]);\n        }\n        else if (!this._data.magFilter) {\n            this._data.magFilter = defaultTextureSettings.magFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[this._data.magFilter]);\n        }\n        if (data.minFilter && data.minFilter !== this._data.minFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[data.minFilter]);\n        }\n        else if (!this._data.minFilter) {\n            this._data.minFilter = defaultTextureSettings.minFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[this._data.minFilter]);\n        }\n        if (data.asset) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data.asset);\n        }\n        if (data.data !== undefined) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, data.type === 'FLOAT' && this._painter.isWebGL2\n                ? gl.RGBA32F\n                : gl.RGBA, data.width, // width and height are required if using custom data\n            data.height, 0, gl.RGBA, gl[data.type || 'UNSIGNED_BYTE'], data.data);\n        }\n        if (data.flipY != null && data.flipY !== this._data.flipY) {\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, data.flipY);\n        }\n        if (data.minFilter && data.minFilter.indexOf('MIPMAP') > 0) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        this._painter.gl.deleteTexture(this._texture);\n        this._data = {};\n        this._texture = null;\n    }\n}\n//# sourceMappingURL=texture.js.map","import { equalObject } from 'tvs-libs/dist/utils/predicates';\nimport { Texture } from './texture';\nlet targetCount = 1;\nexport class RenderTarget {\n    constructor(_painter, id = 'Form' + targetCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.antialias = false;\n        this.frameBuffer = null;\n        this.antiAliasFrameBuffer = null;\n        this.antiAliasRenderBuffer = null;\n        this.textures = [];\n        this.depthBuffer = null;\n        this.bufferStructure = [];\n        this._data = {};\n    }\n    update(data) {\n        var _a;\n        const gl = this._painter.gl;\n        const width = data.width || this.width;\n        const height = data.height || this.height;\n        if (!(width && height)) {\n            return this;\n        }\n        else if (width === this.width && height === this.height) {\n            if (!data.bufferStructure)\n                return this;\n            if (data.bufferStructure.length === this.bufferStructure.length &&\n                this.bufferStructure.every((buf, i) => equalObject(buf, data.bufferStructure[i]))) {\n                return this;\n            }\n        }\n        if (this.frameBuffer == null) {\n            this.frameBuffer = gl.createFramebuffer();\n        }\n        if (this.depthBuffer == null) {\n            this.depthBuffer = gl.createRenderbuffer();\n        }\n        if (data.bufferStructure && data.bufferStructure.length) {\n            this.bufferStructure = data.bufferStructure;\n            if (this.bufferStructure.some(t => t.type === 'FLOAT')) {\n                if (this._painter.isWebGL2) {\n                    gl.getExtension('EXT_color_buffer_float');\n                }\n                else {\n                    gl.getExtension('OES_texture_float');\n                }\n            }\n        }\n        const texCount = this.bufferStructure.length || 1;\n        const bufferAttachments = [gl.COLOR_ATTACHMENT0];\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        if (texCount > 1) {\n            let glx;\n            if (!this._painter.isWebGL2) {\n                glx = gl.getExtension('WEBGL_draw_buffers');\n            }\n            const attachment = this._painter.isWebGL2\n                ? gl.COLOR_ATTACHMENT0\n                : glx.COLOR_ATTACHMENT0_WEBGL;\n            for (let i = 0; i < texCount; i++) {\n                bufferAttachments[i] = attachment + i;\n            }\n            this._painter.isWebGL2\n                ? gl.drawBuffers(bufferAttachments)\n                : glx.drawBuffersWEBGL(bufferAttachments);\n        }\n        this.antialias =\n            texCount === 1 &&\n                this._painter.isWebGL2 &&\n                (data.antialias || ((_a = this._data) === null || _a === void 0 ? void 0 : _a.antialias));\n        if (this.antialias) {\n            const gl2 = gl;\n            if (this.antiAliasFrameBuffer == null) {\n                this.antiAliasFrameBuffer = gl.createFramebuffer();\n            }\n            if (this.antiAliasRenderBuffer == null) {\n                this.antiAliasRenderBuffer = gl.createRenderbuffer();\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl2.RGBA8, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        else {\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n        }\n        for (let i = 0; i < texCount; i++) {\n            if (!this.textures[i]) {\n                this.textures[i] = new Texture(this._painter, this.id + '_Texture' + i);\n            }\n            const texture = this.textures[i];\n            texture.update(Object.assign(Object.assign({ minFilter: 'NEAREST', magFilter: 'NEAREST' }, this.bufferStructure[i]), { data: null, width,\n                height }));\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, bufferAttachments[i], gl.TEXTURE_2D, texture._texture, 0);\n        }\n        if (this.antialias) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n            if (err !== gl.FRAMEBUFFER_COMPLETE) {\n                console.error('antialias framebuffer error', err, data);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (err !== gl.FRAMEBUFFER_COMPLETE) {\n            console.error('framebuffer error', err, data);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        Object.assign(this._data, data);\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteFramebuffer(this.frameBuffer);\n        gl.deleteRenderbuffer(this.depthBuffer);\n        for (const texture of this.textures) {\n            gl.deleteTexture(texture);\n        }\n        if (this.antiAliasFrameBuffer) {\n            gl.deleteFramebuffer(this.antiAliasFrameBuffer);\n        }\n        if (this.antiAliasRenderBuffer) {\n            gl.deleteRenderbuffer(this.antiAliasRenderBuffer);\n        }\n        this.textures = [];\n        this.frameBuffer = null;\n        this.depthBuffer = null;\n        this._data = {};\n        this.bufferStructure = [];\n        this.width = 0;\n        this.height = 0;\n    }\n}\n//# sourceMappingURL=render-target.js.map","export const and = (p1, p2) => (a, b) => p1(a, b) && p2(a, b);\nexport const not = (p) => (...args) => !p(...args);\nexport const defined = a => a != null;\nexport const notEmpty = a => a && a.length;\nexport const unequal = (a, b) => a !== b;\nexport const equal = (a, b) => a === b;\nexport function equalArray(arr1, arr2) {\n    if (arr1 === arr2) {\n        return true;\n    }\n    if (!arr2 || !arr1) {\n        return false;\n    }\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalObject(obj1, obj2) {\n    if (obj1 === obj2) {\n        return true;\n    }\n    if (!obj2) {\n        return false;\n    }\n    const k1 = Object.keys(obj1);\n    const k2 = Object.keys(obj2);\n    if (!equalArray(k1, k2)) {\n        return false;\n    }\n    for (const key of k1) {\n        if (obj1[key] !== obj2[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=predicates.js.map","import { times } from 'tvs-libs/dist/utils/sequence';\nimport { RenderTarget } from './render-target';\nimport { Texture } from './texture';\nlet frameCount = 1;\nexport class Frame {\n    constructor(_painter, id = 'Frame' + frameCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.layers = [];\n        this._data = {};\n        this._targets = [];\n        this._textures = [];\n    }\n    image(i = 0) {\n        return ((this._targets.length &&\n            this._targets[this._targets.length - 1].textures[i]) ||\n            this._textures[i]);\n    }\n    update(data = {}) {\n        var _a, _b, _c, _d;\n        const gl = this._painter.gl;\n        const layers = Array.isArray(data.layers)\n            ? data.layers\n            : data.layers\n                ? [data.layers]\n                : this.layers;\n        const selfReferencing = data.selfReferencing || this._data.selfReferencing;\n        const layerCount = layers.reduce((count, layer) => count + (layer._uniforms.length || 1), 0);\n        const targetCount = selfReferencing || layerCount > 1 ? 2 : layerCount;\n        const width = data.width || ((_a = data.texture) === null || _a === void 0 ? void 0 : _a.width) ||\n            this._data.width || ((_b = this._data.texture) === null || _b === void 0 ? void 0 : _b.width) ||\n            gl.canvas.width;\n        const height = data.height || ((_c = data.texture) === null || _c === void 0 ? void 0 : _c.height) ||\n            this._data.height || ((_d = this._data.texture) === null || _d === void 0 ? void 0 : _d.height) ||\n            gl.canvas.height;\n        const antialias = data.antialias || this._data.antialias || true;\n        if (targetCount !== this._targets.length) {\n            this._destroyTargets();\n        }\n        const targetData = Object.assign(Object.assign({}, data), { width, height, antialias });\n        if (!this._targets.length && targetCount > 0) {\n            this._targets = times(i => new RenderTarget(this._painter, this.id + '_target' + (i + 1)).update(targetData), targetCount);\n        }\n        else if (this._targets.length) {\n            this._targets.forEach(t => {\n                t.update(targetData);\n            });\n        }\n        if (data.texture) {\n            // Hardcode to one static texture for now\n            if (!this._textures[0]) {\n                this._textures[0] = new Texture(this._painter, this.id + '_Texture0');\n            }\n            data.texture.width = width;\n            data.texture.height = height;\n            this._textures[0].update(data.texture);\n        }\n        Object.assign(this._data, data);\n        this.layers = layers;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        this._destroyTargets();\n        this._textures.forEach(tex => tex.destroy());\n        this._textures = [];\n        this._data = {};\n        this.layers = [];\n        this.width = 0;\n        this.height = 0;\n    }\n    _destroyTargets() {\n        this._targets.forEach(t => t.destroy());\n        this._targets = [];\n    }\n    _swapTargets() {\n        if (this._targets.length > 1) {\n            const tmp = this._targets[0];\n            this._targets[0] = this._targets[1];\n            this._targets[1] = tmp;\n        }\n    }\n}\n//# sourceMappingURL=frame.js.map","import { randInt, randIntInRange } from '../math/random';\nexport function pickRandom(arr) {\n    return arr[randInt(arr.length)];\n}\nexport function doTimes(fn, count) {\n    for (let i = 0; i < count; i++) {\n        fn(i);\n    }\n}\nexport function times(fn, count, res = []) {\n    for (let i = 0; i < count; i++) {\n        res[i] = fn(i);\n    }\n    return res;\n}\nexport function repeat(count, item) {\n    return times(() => item, count);\n}\nexport function concat(arr, ...arrs) {\n    return arr.concat(...arrs);\n}\nexport function zip(fn, as, bs, res = []) {\n    const length = Math.min(as.length, bs.length);\n    for (let i = 0; i < length; i++) {\n        res[i] = fn(as[i], bs[i]);\n    }\n    return res;\n}\nexport function flatten(array, res = []) {\n    for (const subarray of array) {\n        const currentLength = res.length;\n        for (let i = 0; i < subarray.length; i++) {\n            res[i + currentLength] = subarray[i];\n        }\n    }\n    return res;\n}\nexport function mapcat(fn, array, res = []) {\n    return flatten(map(fn, array, res));\n}\nexport const flatMap = mapcat;\nexport function reverse(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        res[i] = arr[arr.length - 1 - i];\n    }\n    return res;\n}\nexport function shuffle(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        const j = randIntInRange(i, arr.length);\n        const temp = res[i] !== undefined ? res[i] : arr[i];\n        res[i] = res[j] !== undefined ? res[j] : arr[j];\n        res[j] = temp;\n    }\n    return res;\n}\nexport function map(fn, coll, res = []) {\n    for (let i = 0; i < coll.length; i++) {\n        res[i] = fn(coll[i], i);\n    }\n    return res;\n}\nexport function each(fn, coll) {\n    for (const key in coll) {\n        fn(coll[key], key);\n    }\n}\nexport function reduce(fn, start, arr) {\n    for (let i = 0; i < arr.length; i++) {\n        start = fn(start, arr[i]);\n    }\n    return start;\n}\nexport function fold(fn, arr) {\n    const [start, ...rest] = arr;\n    return reduce(fn, start, rest);\n}\nexport const last = (arr) => arr[arr.length - 1];\n//# sourceMappingURL=sequence.js.map","let layerCount = 1;\nexport class Layer {\n    constructor(id = 'DrawingLayer' + layerCount++) {\n        this.id = id;\n        this.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.sketches) {\n            this.sketches = Array.isArray(data.sketches)\n                ? data.sketches\n                : [data.sketches];\n        }\n        if (data.frag) {\n            const sketch = this.sketches && this.sketches[0];\n            if (sketch) {\n                sketch.shade.update({ frag: data.frag });\n            }\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        for (const sketch of this.sketches) {\n            sketch.destroy();\n        }\n        this._data.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=layer.js.map","import { createAttributeSetters, createUniformSetters } from './render-utils';\nlet shadeCounter = 1;\nexport class Shade {\n    constructor(_painter, id = 'Shade' + shadeCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        const fragSource = (data.frag && data.frag.trim()) || this.fragSource;\n        const vertSource = (data.vert && data.vert.trim()) || this.vertSource;\n        if (!(fragSource &&\n            vertSource &&\n            (fragSource !== this.fragSource || vertSource !== this.vertSource))) {\n            return this;\n        }\n        this.destroy();\n        if (fragSource.indexOf('GL_EXT_draw_buffers') >= 0) {\n            gl.getExtension('WEBGL_draw_buffers');\n        }\n        const program = gl.createProgram();\n        const frag = gl.createShader(gl.FRAGMENT_SHADER);\n        const vert = gl.createShader(gl.VERTEX_SHADER);\n        if (!(program && vert && frag))\n            return;\n        this._program = program;\n        this._frag = frag;\n        this._vert = vert;\n        gl.attachShader(program, vert);\n        gl.attachShader(program, frag);\n        gl.shaderSource(vert, vertSource);\n        gl.shaderSource(frag, fragSource);\n        gl.compileShader(vert);\n        gl.compileShader(frag);\n        if (!gl.getShaderParameter(vert, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Vertex Shader!\\n', gl.getShaderInfoLog(vert), addLineNumbers(vertSource));\n        }\n        if (!gl.getShaderParameter(frag, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Fragment Shader!\\n', gl.getShaderInfoLog(frag), addLineNumbers(fragSource));\n        }\n        gl.linkProgram(program);\n        const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n            const lastError = gl.getProgramInfoLog(program);\n            console.error('Error in program linking:', lastError);\n        }\n        this._uniformSetters = createUniformSetters(gl, program);\n        this._attributeSetters = createAttributeSetters(gl, program);\n        this.fragSource = fragSource;\n        this.vertSource = vertSource;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteProgram(this._program);\n        gl.deleteShader(this._frag);\n        gl.deleteShader(this._vert);\n        this.vertSource = undefined;\n        this.fragSource = undefined;\n        this._attributeSetters = {};\n        this._uniformSetters = {};\n    }\n}\nfunction addLineNumbers(src) {\n    return src\n        .trim()\n        .split('\\n')\n        .map((line, i) => i + 1 + ': ' + line)\n        .join('\\n');\n}\n//# sourceMappingURL=shade.js.map","let sketchCounter = 1;\nexport class Sketch {\n    constructor(id = 'Sketch' + sketchCounter++) {\n        this.id = id;\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.drawSettings) {\n            this._drawSettings = data.drawSettings;\n        }\n        if (data.form) {\n            this.form = data.form;\n        }\n        if (data.shade) {\n            this.shade = data.shade;\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        return this;\n    }\n    destroy() {\n        this.form && this.form.destroy();\n        this.shade && this.shade.destroy();\n        this._drawSettings = undefined;\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=sketch.js.map","import { defaultForms, defaultShaders, getDefaultLayerSettings, } from './asset-lib';\nimport { Form } from './form';\nimport { Frame } from './frame';\nimport { Layer } from './layer';\nimport { applyDrawSettings, revertDrawSettings } from './render-utils';\nimport { Shade } from './shade';\nimport { Sketch } from './sketch';\nimport { resizeCanvas } from './utils/context';\nexport class Painter {\n    constructor(canvas, opts = {}) {\n        this.canvas = canvas;\n        this.isWebGL2 = true;\n        this.maxBufferSamples = 0;\n        let gl = null;\n        if (!opts.useWebGL1) {\n            gl =\n                canvas.getContext('webgl2', opts) ||\n                    canvas.getContext('experimental-webgl2', opts);\n        }\n        if (gl == null) {\n            this.isWebGL2 = false;\n            gl =\n                canvas.getContext('webgl', opts) ||\n                    canvas.getContext('experimental-webgl', opts);\n        }\n        if (gl == null) {\n            throw Error('Cannot initialize WebGL.');\n        }\n        this.gl = gl;\n        this.sizeMultiplier = opts.sizeMultiplier || 1;\n        if (this.isWebGL2) {\n            this.maxBufferSamples = gl.getParameter(gl.MAX_SAMPLES);\n        }\n        this.resize();\n        applyDrawSettings(gl, getDefaultLayerSettings(gl));\n        this._renderQuad = this.createForm().update(defaultForms.renderQuad);\n        this._staticSketch = this.createFlatSketch();\n    }\n    resize() {\n        resizeCanvas(this.gl.canvas, this.sizeMultiplier);\n        return this;\n    }\n    destroy() {\n        this._staticSketch.destroy();\n        this._renderQuad.destroy();\n    }\n    updateDrawSettings(drawSettings) {\n        applyDrawSettings(this.gl, Object.assign({}, drawSettings));\n        return this;\n    }\n    createForm(id) {\n        return new Form(this, id);\n    }\n    createShade(id) {\n        return new Shade(this, id);\n    }\n    createSketch(id) {\n        return new Sketch(id);\n    }\n    createFlatSketch(id) {\n        const s = this.createSketch(id);\n        return s.update({\n            form: this._renderQuad,\n            shade: this.createShade(s.id + '_defaultShade').update(defaultShaders.basicEffect),\n        });\n    }\n    createFrame(id) {\n        return new Frame(this, id);\n    }\n    createLayer(id) {\n        return new Layer(id);\n    }\n    createEffect(id) {\n        const l = this.createLayer(id);\n        return l.update({\n            sketches: this.createFlatSketch(l.id + '_effectSketch'),\n        });\n    }\n    draw(sketch, globalUniforms) {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        draw(gl, sketch, globalUniforms);\n        return this;\n    }\n    compose(...frames) {\n        for (const frame of frames) {\n            renderFrame(this.gl, frame);\n        }\n        return this;\n    }\n    display(frame, idx = 0) {\n        return this.draw(this._staticSketch, { source: frame.image(idx) });\n    }\n}\nfunction draw(gl, sketch, globalUniforms, sources) {\n    const { shade: shade, form: form, _drawSettings: drawSettings, _uniforms: uniforms, } = sketch;\n    if (!(shade && form)) {\n        throw Error('cannot draw, shader or geometry are not set');\n    }\n    gl.useProgram(shade._program);\n    shadeForm(shade, form);\n    if (globalUniforms) {\n        shadeUniforms(shade, globalUniforms, sources);\n    }\n    if (drawSettings) {\n        applyDrawSettings(gl, drawSettings);\n    }\n    for (let i = 0; i < (uniforms.length || 1); i++) {\n        drawInstance(gl, sketch, uniforms[i], sources);\n    }\n    if (drawSettings) {\n        revertDrawSettings(gl, drawSettings);\n    }\n}\nfunction drawInstance(gl, sketch, uniforms, sources) {\n    if (uniforms) {\n        shadeUniforms(sketch.shade, uniforms, sources);\n    }\n    if (sketch.form._elements && sketch.form._elements.glType != null) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, sketch.form._elements.buffer);\n        gl.drawElements(sketch.form._drawType, sketch.form._itemCount, sketch.form._elements.glType, 0);\n    }\n    else {\n        gl.drawArrays(sketch.form._drawType, 0, sketch.form._itemCount);\n    }\n}\nfunction shadeForm(shade, form) {\n    for (const name in form._attribs) {\n        const setter = shade._attributeSetters[name];\n        if (setter) {\n            setter.setter(form._attribs[name]);\n        }\n    }\n}\nfunction shadeUniforms(shade, uniforms, sources) {\n    for (const name in uniforms) {\n        const setter = shade._uniformSetters[name];\n        if (setter) {\n            let value = uniforms[name];\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (typeof value === 'string' && sources) {\n                setter.setter(sources[value]);\n            }\n            else {\n                setter.setter(value);\n            }\n        }\n    }\n}\nfunction renderLayer(gl, layer, uniforms, target, source) {\n    if (target) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, target.antialias ? target.antiAliasFrameBuffer : target.frameBuffer);\n        gl.viewport(0, 0, target.width, target.height);\n    }\n    else {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    }\n    if (layer._data.drawSettings) {\n        applyDrawSettings(gl, layer._data.drawSettings);\n    }\n    for (const sketch of layer.sketches) {\n        draw(gl, sketch, uniforms, source);\n    }\n    if (target && target.antialias) {\n        const gl2 = gl;\n        // \"blit\" the cube into the color buffer, which adds antialiasing\n        gl.bindFramebuffer(gl2.READ_FRAMEBUFFER, target.antiAliasFrameBuffer);\n        gl.bindFramebuffer(gl2.DRAW_FRAMEBUFFER, target.frameBuffer);\n        gl2.clearBufferfv(gl2.COLOR, 0, [1.0, 1.0, 1.0, 1.0]);\n        gl2.blitFramebuffer(0, 0, target.width, target.height, 0, 0, target.width, target.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n    }\n    if (layer._data.drawSettings) {\n        revertDrawSettings(gl, layer._data.drawSettings);\n    }\n}\nfunction renderFrame(gl, frame) {\n    for (let i = 0; i < frame.layers.length; i++) {\n        const layer = frame.layers[i];\n        const layerPasses = layer._uniforms.length || 1;\n        for (let j = 0; j < layerPasses; j++) {\n            const target = frame._targets[0];\n            const sources = i + j === 0 && frame._textures.length\n                ? frame._textures\n                : frame._targets[1] && frame._targets[1].textures;\n            renderLayer(gl, layer, layer._uniforms[j], target, sources);\n            frame._swapTargets();\n        }\n    }\n}\n//# sourceMappingURL=painter.js.map","export function makeClear(gl, ...clearArray) {\n    return clearArray.reduce((res, item) => res | gl[item.toUpperCase() + '_BUFFER_BIT'], 0);\n}\nexport function setBlendFunc(gl, blendOpts) {\n    gl.blendFunc.apply(gl, blendOpts.map(opt => gl[opt.toUpperCase()]));\n}\n/**\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] optional `window.devicePixelRatio`.\n * @return {boolean} true if the canvas was resized.\n */\nexport function resizeCanvas(canvas, multiplier = 1) {\n    let width = canvas.width;\n    let height = canvas.height;\n    if ('clientWidth' in canvas) {\n        const rect = canvas.getBoundingClientRect();\n        width = (rect.width * multiplier) | 0;\n        height = (rect.height * multiplier) | 0;\n    }\n    if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=context.js.map","export const Buttons = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n};\nexport function pointer(opts, callback) {\n    const cb = callback || opts;\n    const { element = document, enableRightButton, holdDelay = 400, holdRadius = 5, } = opts;\n    const state = {\n        pressed: {},\n        drag: { x: 0, y: 0, dX: 0, dY: 0, xMax: 0, yMax: 0 },\n        dragging: false,\n        holding: false,\n    };\n    let x = 0, y = 0, oX = 0, oY = 0, timeout = null;\n    function onPointerDown(e) {\n        if (e.isPrimary) {\n            state.pressed[e.button] = e;\n            x = oX = e.clientX;\n            y = oY = e.clientY;\n            state.dragging = true;\n            timeout != null && clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                if (state.drag.xMax < holdRadius && state.drag.yMax < holdRadius) {\n                    state.holding = true;\n                    cb(state);\n                }\n            }, holdDelay);\n        }\n        else {\n            state.pressed[Buttons.RIGHT] = e;\n        }\n        cb(state);\n    }\n    function onPointerUp(_e) {\n        state.pressed = {};\n        delete state.drag.event;\n        state.drag.x = 0;\n        state.drag.y = 0;\n        state.drag.dX = 0;\n        state.drag.dY = 0;\n        state.drag.xMax = 0;\n        state.drag.yMax = 0;\n        state.dragging = false;\n        state.holding = false;\n        timeout != null && clearTimeout(timeout);\n        timeout = null;\n        cb(state);\n    }\n    function onPointerMove(e) {\n        if (state.dragging && e.isPrimary) {\n            state.drag.event = e;\n            state.drag.x = x - e.clientX;\n            state.drag.y = y - e.clientY;\n            state.drag.dX = oX - e.clientX;\n            state.drag.dY = oY - e.clientY;\n            state.drag.xMax = Math.max(Math.abs(state.drag.x), state.drag.xMax);\n            state.drag.yMax = Math.max(Math.abs(state.drag.y), state.drag.yMax);\n            oX = e.clientX;\n            oY = e.clientY;\n            cb(state);\n        }\n    }\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    element.addEventListener('pointerdown', onPointerDown);\n    document.addEventListener('pointermove', onPointerMove);\n    document.addEventListener('pointerup', onPointerUp);\n    document.addEventListener('pointerleave', onPointerUp);\n    document.addEventListener('pointercancel', onPointerUp);\n    if (enableRightButton) {\n        element.addEventListener('contextmenu', preventDefault);\n    }\n    cb(state);\n    return function destroy() {\n        element.removeEventListener('pointerdown', onPointerDown);\n        document.removeEventListener('pointermove', onPointerMove);\n        document.removeEventListener('pointerup', onPointerUp);\n        document.removeEventListener('pointerleave', onPointerUp);\n        document.removeEventListener('pointercancel', onPointerUp);\n        if (enableRightButton) {\n            element.removeEventListener('contextmenu', preventDefault);\n        }\n    };\n}\nexport function pointerObserver(opts = {}) {\n    const observer = {\n        Buttons,\n        state: {},\n        destroy: () => { },\n    };\n    function callback(state) {\n        observer.state = state;\n    }\n    observer.destroy = pointer(opts, callback);\n    return observer;\n}\n//# sourceMappingURL=pointer.js.map","import { once } from './scheduler'\nimport { windowSize } from 'tvs-libs/dist/events/dom'\nimport { keyboard, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { deepOverride } from 'tvs-libs/dist/utils/object'\nimport { GL, PainterOptions } from 'tvs-painter'\nimport { Form } from 'tvs-painter/dist/form'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport { Layer } from 'tvs-painter/dist/layer'\nimport { Painter } from 'tvs-painter/dist/painter'\nimport { Shade } from 'tvs-painter/dist/shade'\nimport { Sketch } from 'tvs-painter/dist/sketch'\nimport { PointerState, pointer } from 'tvs-libs/dist/events/pointer'\nimport { getPackedSettings } from 'http2'\n\n// === Painter ===\n\nlet currentCanvas: HTMLCanvasElement\nlet painter: Painter\n\nconst forms: { [id: string]: Form } = {}\nfunction getForm(id: string) {\n\treturn forms[id] || (forms[id] = painter.createForm('Form_' + id))\n}\n\nconst shades: { [id: string]: Shade } = {}\nfunction getShade(id: string) {\n\treturn shades[id] || (shades[id] = painter.createShade('Shade_' + id))\n}\n\nconst sketches: { [id: string]: Sketch } = {}\nfunction getSketch(id: string) {\n\treturn sketches[id] || (sketches[id] = painter.createSketch('Sketch_' + id))\n}\n\nconst layers: { [id: string]: Layer } = {}\nfunction getLayer(id: string) {\n\treturn layers[id] || (layers[id] = painter.createLayer('Layer_' + id))\n}\n\nconst frames: { [id: string]: Frame } = {}\nfunction getFrame(id: string) {\n\treturn frames[id] || (frames[id] = painter.createFrame('Frame_' + id))\n}\n\nconst effects: { [id: string]: Layer } = {}\nfunction getEffect(id: string) {\n\treturn effects[id] || (effects[id] = painter.createEffect('Effect_' + id))\n}\n\n// === State ===\n\nexport interface BaseState {\n\tdevice: {\n\t\ttpf: number\n\t\tcanvas: HTMLCanvasElement\n\t\tpointer: PointerState\n\t\tkeys: KeyState\n\t\tsizeMultiplier: number\n\t}\n}\n\nconst state: BaseState = {\n\tdevice: {\n\t\ttpf: 0,\n\t\tsizeMultiplier: 1,\n\t},\n} as BaseState\n;(window as any).state = state\n\n// === Events ===\n\ntype ActionHandler<S extends BaseState = BaseState> = (state: S) => void\n\nconst eventHandlers: {\n\t[event: string]: { [id: string]: ActionHandler<any> }\n} = {}\n\nexport const baseEvents = {\n\tFRAME: 'frame',\n\tRESIZE: 'resize',\n}\n\n// === Context ===\n\nlet cancelWindow: () => void\nlet cancelPointer: () => void\nlet cancelKeys: () => void\n\nexport function getPainterContext<S extends BaseState>(\n\tcanvas: HTMLCanvasElement,\n\topts?: PainterOptions,\n): PainterContext<S> {\n\tif (canvas !== currentCanvas) {\n\t\tcurrentCanvas = canvas\n\n\t\tpainter = new Painter(canvas, opts)\n\n\t\tstate.device.canvas = canvas\n\n\t\tcancelWindow && cancelWindow()\n\t\tcancelPointer && cancelPointer()\n\t\tcancelKeys && cancelKeys()\n\n\t\tcancelWindow = windowSize(() =>\n\t\t\tonce(() => {\n\t\t\t\tpainter.sizeMultiplier = state.device.sizeMultiplier\n\t\t\t\tpainter.resize()\n\t\t\t\temit(baseEvents.RESIZE)\n\t\t\t}, 'resize'),\n\t\t)\n\n\t\tcancelPointer = pointer(\n\t\t\t{\n\t\t\t\telement: canvas,\n\t\t\t\tenableRightButton: true,\n\t\t\t\tholdRadius: 7,\n\t\t\t\tholdDelay: 250,\n\t\t\t},\n\t\t\t(m) => (state.device.pointer = m),\n\t\t)\n\n\t\tcancelKeys = keyboard((k) => (state.device.keys = k))\n\t}\n\n\treturn {\n\t\tpainter,\n\t\tgl: painter.gl,\n\t\tgetForm,\n\t\tgetShade,\n\t\tgetSketch,\n\t\tgetLayer,\n\t\tgetFrame,\n\t\tgetEffect,\n\n\t\tstate: state as S,\n\n\t\tget,\n\t\tset,\n\t\tlisten,\n\t\temit,\n\t}\n\n\tfunction get<K extends keyof S = keyof S>(prop: K): S[K] {\n\t\treturn (state as S)[prop]\n\t}\n\n\tfunction set<K extends keyof S = keyof S>(\n\t\tkey: K,\n\t\tval: S[K],\n\t\topts?: { reset: any },\n\t) {\n\t\tconst s = state as S\n\t\tif (s[key]) {\n\t\t\tconst reset = opts && opts.reset\n\t\t\tif (reset !== true) {\n\t\t\t\tval = deepOverride(val, s[key], { ignore: reset })\n\t\t\t}\n\t\t}\n\t\ts[key] = val\n\t}\n\n\tfunction listen(id: string, event: string, s: ActionHandler<S>) {\n\t\tif (!eventHandlers[event]) eventHandlers[event] = {}\n\t\teventHandlers[event][id] = s\n\t}\n\n\tfunction emit(event: string) {\n\t\tconst e = eventHandlers[event]\n\t\tif (e)\n\t\t\tfor (const id in e) {\n\t\t\t\te[id](state as S)\n\t\t\t}\n\t}\n}\n\nexport interface PainterContext<S extends BaseState = BaseState> {\n\tpainter: Painter\n\tgl: GL\n\tgetForm: typeof getForm\n\tgetShade: typeof getShade\n\tgetSketch: typeof getSketch\n\tgetLayer: typeof getLayer\n\tgetFrame: typeof getFrame\n\tgetEffect: typeof getEffect\n\tstate: S\n\tget<K extends keyof S = keyof S>(prop: K): S[K]\n\tset<K extends keyof S = keyof S>(\n\t\tkey: K,\n\t\tval: S[K],\n\t\topts?: { reset: any },\n\t): void\n\tlisten(id: string, event: string, s: ActionHandler<S>): void\n\temit(event: string): void\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { baseEvents, getPainterContext } from '../../shared-utils/painterState'\n\nexport const canvas = document.getElementById('canvas') as HTMLCanvasElement\nexport const paint = document.getElementById('paint') as HTMLCanvasElement\n\nexport const Q = getPainterContext(canvas)\n\nexport const events = {\n\t...baseEvents,\n\tPROCESS_PAINT: 'process_paint',\n\tCLEANUP_PAINT: 'cleanup_paint',\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function windowSize(callback) {\n    function resize() {\n        callback({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    }\n    window.addEventListener('resize', resize);\n    resize();\n    return function stop() {\n        window.removeEventListener('resize', resize);\n    };\n}\nexport function windowSizeObserver() {\n    const state = {\n        size: { width: 0, height: 0 },\n    };\n    const destroy = windowSize(s => (state.size = s));\n    return { state, destroy };\n}\n//# sourceMappingURL=dom.js.map","import { events, paint, Q } from './context'\n\nconst ctx = paint.getContext('2d')\nif (!ctx) throw Error('unable to initialize 2d context')\n\nconst data = ctx.getImageData(0, 0, paint.width, paint.height)\n\nfor (let i = 0; i < data.data.length; i += 4) {\n\tdata.data[i] = Math.random() > 0.5 ? 255 : 0\n\tdata.data[i + 3] = 255\n}\n\nctx.putImageData(data, 0, 0)\n\nQ.listen('paint', events.CLEANUP_PAINT, () => {\n\tctx.fillStyle = 'black'\n\tctx.fillRect(0, 0, paint.width, paint.height)\n})\n\nQ.listen('paint', events.PROCESS_PAINT, ({ device: d }) => {\n\tif (d.pointer.dragging && d.pointer.drag.event) {\n\t\tconst { clientX, clientY } = d.pointer.drag.event\n\t\tconst x = Math.floor((clientX / window.innerWidth) * paint.width)\n\t\tconst y = Math.floor((clientY / window.innerHeight) * paint.height)\n\t\tctx.fillStyle = 'white'\n\t\tctx.fillRect(x, y, 1, 1)\n\t}\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D paint;\\nuniform sampler2D previous;\\nuniform float size;\\nvarying vec2 coords;\\n\\nint getCell(vec2 uv) {\\n\\tvec4 paintTex = texture2D(paint, uv);\\n\\tvec4 prevTex = texture2D(previous, uv);\\n\\tif (paintTex.r > 0.0 || prevTex.r > 0.0) {\\n\\t\\treturn 1;\\n\\t} else {\\n\\t\\treturn 0;\\n\\t}\\n}\\n\\nvoid main() {\\n\\tfloat one = 1.0 / size;\\n\\tvec2 uvR = vec2(coords.x + one, coords.y);\\n\\tvec2 uvL = vec2(coords.x - one, coords.y);\\n\\tvec2 uvRT = vec2(coords.x + one, coords.y - one);\\n\\tvec2 uvLT = vec2(coords.x - one, coords.y - one);\\n\\tvec2 uvRB = vec2(coords.x + one, coords.y + one);\\n\\tvec2 uvLB = vec2(coords.x - one, coords.y + one);\\n\\tvec2 uvT = vec2(coords.x, coords.y - one);\\n\\tvec2 uvB = vec2(coords.x, coords.y + one);\\n\\n\\tvec4 paintTex = texture2D(paint, coords);\\n\\tvec4 prevTex = texture2D(previous, coords);\\n\\n\\tint cellL = getCell(uvL);\\n\\tint cellR = getCell(uvR);\\n\\tint cellT = getCell(uvT);\\n\\tint cellB = getCell(uvB);\\n\\tint cellTL = getCell(uvLT);\\n\\tint cellTR = getCell(uvRT);\\n\\tint cellBL = getCell(uvLB);\\n\\tint cellBR = getCell(uvRB);\\n\\n\\tint neighbours = cellL + cellR + cellT + cellB + cellTL + cellTR + cellBL + cellBR;\\n\\n\\tvec4 color = vec4(vec3(0.0), 1.0);\\n\\tif (neighbours == 3 || (neighbours == 2 && prevTex.r > 0.0) || paintTex.r > 0.0) {\\n\\t\\tcolor = vec4(1.0, 0.0, 1.0, 1.0);\\n\\t}\\n\\n\\tgl_FragColor = color;\\n}\\n\";","import { mat4 } from 'gl-matrix'\nimport { makeClear } from 'tvs-painter/dist/utils/context'\nimport { plane } from 'tvs-painter/dist/utils/geometry/plane'\nimport { events, Q, paint } from './context'\nimport base from './glsl/base.frag'\nimport planeFrag from './glsl/plane-material.frag'\nimport planeVert from './glsl/plane-material.vert'\n\n// ===== gof layers =====\n\nconst paintFrame = Q.getFrame('paint')\n\nconst bufferSize = 256\n\nconst effect = Q.getEffect('layer').update({\n\tfrag: base,\n\tuniforms: {\n\t\tsize: bufferSize,\n\t\tpaint: () => paintFrame.image(),\n\t\tprevious: '0',\n\t},\n})\n\nexport const automaton = Q.getFrame('automaton').update({\n\tlayers: effect,\n\tselfReferencing: true,\n\twidth: bufferSize,\n\theight: bufferSize,\n\tbufferStructure: [\n\t\t{\n\t\t\tflipY: true,\n\t\t\twrap: 'REPEAT',\n\t\t},\n\t],\n})\n\n// ===== scene =====\n\nconst planMat = mat4.fromTranslation(mat4.create(), [0, 0, -3])\nconst rotation = 0.001\nconst projection = mat4.perspective(mat4.create(), 45, 1, 0.01, 10)\n\nconst form = Q.getForm('plane').update(plane(2, 2))\n\nconst shade = Q.getShade('plane').update({\n\tvert: planeVert,\n\tfrag: planeFrag,\n})\n\nexport const sketch = Q.getSketch('plane').update({\n\tform,\n\tshade,\n\tuniforms: {\n\t\tprojection,\n\t\ttransform: () => mat4.rotateY(planMat, planMat, rotation),\n\t\ttex: () => automaton.image(),\n\t},\n\tdrawSettings: {\n\t\tclearColor: [0.0, 1.0, 0.0, 1.0],\n\t\tclearBits: makeClear(Q.gl, 'color'),\n\t},\n})\n\n// ===== state =====\n\nQ.listen('renderer', events.FRAME, () => {\n\tpaintFrame.update({ texture: { asset: paint } })\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function plane(width, height, widthSegments, heightSegments) {\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    const gridX = widthSegments || 1;\n    const gridY = heightSegments || 1;\n    const gridX1 = gridX + 1;\n    const gridY1 = gridY + 1;\n    const segmentWidth = width / gridX;\n    const segmentHeight = height / gridY;\n    const vertices = new Float32Array(gridX1 * gridY1 * 3);\n    const normals = new Float32Array(gridX1 * gridY1 * 3);\n    const uvs = new Float32Array(gridX1 * gridY1 * 2);\n    let iy, ix;\n    let offset = 0;\n    let offset2 = 0;\n    for (iy = 0; iy < gridY1; iy++) {\n        const y = iy * segmentHeight - heightHalf;\n        for (ix = 0; ix < gridX1; ix++) {\n            const x = ix * segmentWidth - widthHalf;\n            vertices[offset] = x;\n            vertices[offset + 1] = -y;\n            normals[offset + 2] = 1;\n            uvs[offset2] = ix / gridX;\n            uvs[offset2 + 1] = 1 - iy / gridY;\n            offset += 3;\n            offset2 += 2;\n        }\n    }\n    offset = 0;\n    const indices = new (vertices.length / 3 > 65535 ? Uint32Array : Uint16Array)(gridX * gridY * 6);\n    for (iy = 0; iy < gridY; iy++) {\n        for (ix = 0; ix < gridX; ix++) {\n            const a = ix + gridX1 * iy;\n            const b = ix + gridX1 * (iy + 1);\n            const c = ix + 1 + gridX1 * (iy + 1);\n            const d = ix + 1 + gridX1 * iy;\n            indices[offset] = a;\n            indices[offset + 1] = b;\n            indices[offset + 2] = d;\n            indices[offset + 3] = b;\n            indices[offset + 4] = c;\n            indices[offset + 5] = d;\n            offset += 6;\n        }\n    }\n    return {\n        attribs: {\n            position: {\n                buffer: vertices,\n            },\n            normal: {\n                buffer: normals,\n            },\n            uv: {\n                buffer: uvs,\n            },\n        },\n        elements: {\n            buffer: indices,\n        },\n        drawType: 'TRIANGLES',\n        itemCount: indices.length,\n    };\n}\n//# sourceMappingURL=plane.js.map","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\nattribute vec2 uv;\\nuniform mat4 projection;\\nuniform mat4 transform;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = projection * transform * vec4(position, 1.0);\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\nuniform sampler2D tex;\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\tgl_FragColor = texture2D(tex, vUv);\\n}\\n\";","import { repeat } from '../../shared-utils/scheduler'\nimport { events, Q } from './context'\nimport './paint'\nimport { automaton, sketch } from './renderer'\n\nrepeat((tpf) => {\n\tQ.get('device').tpf = tpf\n\tQ.emit(events.PROCESS_PAINT)\n\tQ.emit(events.FRAME)\n\tQ.painter.compose(automaton)\n\tQ.painter.draw(sketch)\n\tQ.emit(events.CLEANUP_PAINT)\n}, 'loop')\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n"],"sourceRoot":""}