{"version":3,"sources":["webpack:///../node_modules/gl-matrix/esm/common.js","webpack:///../node_modules/gl-matrix/esm/mat4.js","webpack:///./shared-utils/scheduler.ts","webpack:///../libs/dist/events/keyboard.js","webpack:///../libs/dist/utils/object.js","webpack:///../painter/dist/contants.js","webpack:///../painter/dist/asset-lib.js","webpack:///../painter/dist/render-utils.js","webpack:///../painter/dist/form.js","webpack:///../painter/dist/texture.js","webpack:///../painter/dist/render-target.js","webpack:///../libs/dist/utils/predicates.js","webpack:///../painter/dist/frame.js","webpack:///../libs/dist/utils/sequence.js","webpack:///../painter/dist/layer.js","webpack:///../painter/dist/shade.js","webpack:///../painter/dist/sketch.js","webpack:///../painter/dist/utils/context.js","webpack:///../painter/dist/painter.js","webpack:///../libs/dist/events/pointer.js","webpack:///./shared-utils/painterState.ts","webpack:///./experiments/area-light/context.ts","webpack:///../libs/dist/events/dom.js","webpack:///../node_modules/gl-matrix/esm/vec3.js","webpack:///./experiments/area-light/state.ts","webpack:///./shared-utils/vr/camera.ts","webpack:///./shared-utils/vr/perspectiveViewport.ts","webpack:///./experiments/area-light/renderer.ts","webpack:///../painter/dist/utils/geometry/plane.js","webpack:///./experiments/area-light/shaders/geo-frag.glsl","webpack:///./experiments/area-light/shaders/geo-vert.glsl","webpack:///./experiments/area-light/shaders/light-frag.glsl","webpack:///./experiments/area-light/index.ts"],"names":["ARRAY_TYPE","Float32Array","Array","create","out","multiply","a","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","rotateX","rad","s","Math","sin","c","cos","fromTranslation","v","random","PI","hypot","y","i","arguments","length","sqrt","updateOnce","updateRepeat","willUpdate","uidCounter","oldTime","processUpdates","time","tpf","id","updates","requestAnimationFrame","Keys","deepOverride","obj1","obj2","opt","ignore","isArray","key","hasOwnProperty","val1","val2","undefined","defaultTextureSettings","defaultForms","renderQuad","attribs","buffer","storeType","drawType","itemCount","defaultShaders","vert","frag","getBindPointForSamplerType","type","typeMap","bindPoint","intSetter","gl","location","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","texture","activeTexture","TEXTURE0","bindTexture","_texture","samplerArraySetter","size","units","Int32Array","textures","index","Type","setter","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Uint32Array","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","floatAttribSetter","typeInfo","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","itemSize","normalize","stride","offset","intAttribSetter","vertexAttribIPointer","matAttribSetter","defaultSize","count","numComponents","rowOffset","attrTypeMap","applyDrawSettings","settings","enable","setting","disable","blendFunc","apply","depthFunc","cullFace","frontFace","lineWidth","colorMask","depthMask","clearColor","clearDepth","clearBits","clear","revertDrawSettings","Int8Array","Uint8Array","Int16Array","Uint16Array","formCounter","Form","_painter","this","data","_drawType","_itemCount","_attribs","attribData","createBuffer","bufferData","elements","_elements","glType","typedArray","Uint8ClampedArray","Error","getGLTypeForTypedArray","ELEMENT_ARRAY_BUFFER","deleteBuffer","textureCount","Texture","_data","createTexture","TEXTURE_2D","wrap","wrapS","wrapT","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","magFilter","TEXTURE_MAG_FILTER","minFilter","TEXTURE_MIN_FILTER","asset","texImage2D","RGBA","UNSIGNED_BYTE","isWebGL2","RGBA32F","width","height","flipY","pixelStorei","UNPACK_FLIP_Y_WEBGL","indexOf","generateMipmap","Object","assign","deleteTexture","targetCount","RenderTarget","antialias","frameBuffer","antiAliasFrameBuffer","antiAliasRenderBuffer","depthBuffer","bufferStructure","_a","every","buf","k1","keys","arr1","arr2","equalArray","equalObject","createFramebuffer","createRenderbuffer","some","t","getExtension","texCount","bufferAttachments","COLOR_ATTACHMENT0","bindFramebuffer","FRAMEBUFFER","glx","attachment","COLOR_ATTACHMENT0_WEBGL","drawBuffers","drawBuffersWEBGL","gl2","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","min","getParameter","MAX_SAMPLES","RGBA8","framebufferRenderbuffer","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","renderbufferStorage","update","framebufferTexture2D","err","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","console","error","deleteFramebuffer","deleteRenderbuffer","frameCount","Frame","layers","_targets","_textures","_b","_c","_d","selfReferencing","layerCount","reduce","layer","_uniforms","canvas","_destroyTargets","targetData","fn","res","times","forEach","tex","destroy","tmp","Layer","sketches","sketch","shade","uniforms","shadeCounter","Shade","fragSource","trim","vertSource","program","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","_program","_frag","_vert","attachShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","addLineNumbers","linkProgram","getProgramParameter","LINK_STATUS","lastError","getProgramInfoLog","_uniformSetters","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","name","substr","toString","uniformSetters","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","createUniformSetters","_attributeSetters","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","createAttributeSetters","deleteProgram","deleteShader","src","split","map","line","join","sketchCounter","Sketch","drawSettings","_drawSettings","form","makeClear","clearArray","item","toUpperCase","Painter","opts","maxBufferSamples","useWebGL1","getContext","sizeMultiplier","resize","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","getDefaultLayerSettings","_renderQuad","createForm","_staticSketch","createFlatSketch","multiplier","rect","getBoundingClientRect","resizeCanvas","createSketch","createShade","l","createLayer","globalUniforms","viewport","draw","frames","frame","renderFrame","idx","source","image","sources","useProgram","shadeForm","shadeUniforms","drawInstance","drawElements","drawArrays","value","renderLayer","target","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","clearBufferfv","COLOR","blitFramebuffer","COLOR_BUFFER_BIT","LINEAR","layerPasses","j","_swapTargets","Buttons","currentCanvas","painter","getForm","shades","getShade","getSketch","getLayer","getFrame","createFrame","effects","getEffect","createEffect","state","device","window","eventHandlers","baseEvents","FRAME","RESIZE","cancelWindow","cancelPointer","cancelKeys","document","getElementById","events","Q","getPainterContext","callback","innerWidth","innerHeight","addEventListener","removeEventListener","windowSize","once","emit","cb","element","enableRightButton","holdDelay","holdRadius","pressed","drag","x","dX","dY","xMax","yMax","dragging","holding","oX","oY","timeout","onPointerDown","e","isPrimary","button","clientX","clientY","clearTimeout","setTimeout","onPointerUp","_e","event","onPointerMove","max","abs","preventDefault","pointer","m","onKeydown","keyCode","Date","now","onKeyup","keyboard","k","get","prop","set","val","reset","listen","z","scene","groundColor","groundTransform","rotationSpeed","lightRotation","lightPosition","lightColor","lightBackColor","lightTransforms","PerspectiveCamera","props","position","rotationX","rotationY","rotationXMat","rotationYMat","projectionMat","viewMat","needsUpdateView","updateRotationX","updateRotationY","amount","dist","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","super","fovy","aspect","near","far","needsUpdateProjection","nf","f","tan","Infinity","ViewPort","Cam","moveSpeed","lookSpeed","camera","speed","UP","W","moveForward","DOWN","S","LEFT","A","moveLeft","RIGHT","D","_oldMouse","deltaX","deltaY","ctx","d","viewPort","updatePosFromInput","p","dragInfo","updateRotFromPointer","initPerspectiveViewport","geometry","widthSegments","heightSegments","vertices","gridX1","normals","uvs","iy","ix","offset2","gridY","gridX","indices","normal","uv","plane","planeForm","geoShade","img","Image","onload","groundSketch","transform","color","lightSketch","CULL_FACE","sceneLayer","view","projection","DEPTH_TEST","bufferSpec","lightLayer","eyePosition","lightMat","positions","colors","BLEND","light","compose","display"],"mappings":"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","file":"experiments/area-light/main.js","sourcesContent":["/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","// onNextTick\n// schedule actions on next animation frame\n\ntype Callback = (n: number) => void\n\nlet updateOnce: { [id: string]: Callback } | null = null\nconst updateRepeat: { [id: string]: Callback } = {}\n\nlet willUpdate = false\n\nlet uidCounter = 0\n\nlet oldTime = 0\n\nfunction processUpdates(time: number) {\n\tconst tpf = oldTime ? time - oldTime : oldTime\n\toldTime = time\n\n\tif (updateOnce) {\n\t\tfor (const id in updateOnce) {\n\t\t\tupdateOnce[id](tpf)\n\t\t}\n\t\tupdateOnce = null\n\t}\n\n\tlet updates = 0\n\tfor (const id in updateRepeat) {\n\t\tupdates++\n\t\tupdateRepeat[id](tpf)\n\t}\n\n\tif (!updates) {\n\t\twillUpdate = false\n\t\toldTime = 0\n\t} else {\n\t\trequestAnimationFrame(processUpdates)\n\t}\n}\n\nexport function once(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateOnce = updateOnce || {}\n\tupdateOnce[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n}\n\nexport function repeat(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateRepeat[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n\n\treturn id\n}\n\nexport function stop(id: Callback | string | number) {\n\tif (typeof id === 'function') {\n\t\tid = id.name\n\t}\n\tdelete updateRepeat[id]\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export var Keys;\n(function (Keys) {\n    Keys[Keys[\"CANCEL\"] = 3] = \"CANCEL\";\n    Keys[Keys[\"HELP\"] = 6] = \"HELP\";\n    Keys[Keys[\"BACK_SPACE\"] = 8] = \"BACK_SPACE\";\n    Keys[Keys[\"TAB\"] = 9] = \"TAB\";\n    Keys[Keys[\"CLEAR\"] = 12] = \"CLEAR\";\n    Keys[Keys[\"RETURN\"] = 13] = \"RETURN\";\n    Keys[Keys[\"ENTER\"] = 14] = \"ENTER\";\n    Keys[Keys[\"SHIFT\"] = 16] = \"SHIFT\";\n    Keys[Keys[\"CONTROL\"] = 17] = \"CONTROL\";\n    Keys[Keys[\"ALT\"] = 18] = \"ALT\";\n    Keys[Keys[\"PAUSE\"] = 19] = \"PAUSE\";\n    Keys[Keys[\"CAPS_LOCK\"] = 20] = \"CAPS_LOCK\";\n    Keys[Keys[\"ESCAPE\"] = 27] = \"ESCAPE\";\n    Keys[Keys[\"SPACE\"] = 32] = \"SPACE\";\n    Keys[Keys[\"PAGE_UP\"] = 33] = \"PAGE_UP\";\n    Keys[Keys[\"PAGE_DOWN\"] = 34] = \"PAGE_DOWN\";\n    Keys[Keys[\"END\"] = 35] = \"END\";\n    Keys[Keys[\"HOME\"] = 36] = \"HOME\";\n    Keys[Keys[\"LEFT\"] = 37] = \"LEFT\";\n    Keys[Keys[\"UP\"] = 38] = \"UP\";\n    Keys[Keys[\"RIGHT\"] = 39] = \"RIGHT\";\n    Keys[Keys[\"DOWN\"] = 40] = \"DOWN\";\n    Keys[Keys[\"PRINTSCREEN\"] = 44] = \"PRINTSCREEN\";\n    Keys[Keys[\"INSERT\"] = 45] = \"INSERT\";\n    Keys[Keys[\"DELETE\"] = 46] = \"DELETE\";\n    Keys[Keys[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    Keys[Keys[\"DIGIT_1\"] = 49] = \"DIGIT_1\";\n    Keys[Keys[\"DIGIT_2\"] = 50] = \"DIGIT_2\";\n    Keys[Keys[\"DIGIT_3\"] = 51] = \"DIGIT_3\";\n    Keys[Keys[\"DIGIT_4\"] = 52] = \"DIGIT_4\";\n    Keys[Keys[\"DIGIT_5\"] = 53] = \"DIGIT_5\";\n    Keys[Keys[\"DIGIT_6\"] = 54] = \"DIGIT_6\";\n    Keys[Keys[\"DIGIT_7\"] = 55] = \"DIGIT_7\";\n    Keys[Keys[\"DIGIT_8\"] = 56] = \"DIGIT_8\";\n    Keys[Keys[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    Keys[Keys[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    Keys[Keys[\"EQUALS\"] = 61] = \"EQUALS\";\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    Keys[Keys[\"CONTEXT_MENU\"] = 93] = \"CONTEXT_MENU\";\n    Keys[Keys[\"NUMPAD0\"] = 96] = \"NUMPAD0\";\n    Keys[Keys[\"NUMPAD1\"] = 97] = \"NUMPAD1\";\n    Keys[Keys[\"NUMPAD2\"] = 98] = \"NUMPAD2\";\n    Keys[Keys[\"NUMPAD3\"] = 99] = \"NUMPAD3\";\n    Keys[Keys[\"NUMPAD4\"] = 100] = \"NUMPAD4\";\n    Keys[Keys[\"NUMPAD5\"] = 101] = \"NUMPAD5\";\n    Keys[Keys[\"NUMPAD6\"] = 102] = \"NUMPAD6\";\n    Keys[Keys[\"NUMPAD7\"] = 103] = \"NUMPAD7\";\n    Keys[Keys[\"NUMPAD8\"] = 104] = \"NUMPAD8\";\n    Keys[Keys[\"NUMPAD9\"] = 105] = \"NUMPAD9\";\n    Keys[Keys[\"MULTIPLY\"] = 106] = \"MULTIPLY\";\n    Keys[Keys[\"ADD\"] = 107] = \"ADD\";\n    Keys[Keys[\"SEPARATOR\"] = 108] = \"SEPARATOR\";\n    Keys[Keys[\"SUBTRACT\"] = 109] = \"SUBTRACT\";\n    Keys[Keys[\"DECIMAL\"] = 110] = \"DECIMAL\";\n    Keys[Keys[\"DIVIDE\"] = 111] = \"DIVIDE\";\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    Keys[Keys[\"F13\"] = 124] = \"F13\";\n    Keys[Keys[\"F14\"] = 125] = \"F14\";\n    Keys[Keys[\"F15\"] = 126] = \"F15\";\n    Keys[Keys[\"F16\"] = 127] = \"F16\";\n    Keys[Keys[\"F17\"] = 128] = \"F17\";\n    Keys[Keys[\"F18\"] = 129] = \"F18\";\n    Keys[Keys[\"F19\"] = 130] = \"F19\";\n    Keys[Keys[\"F20\"] = 131] = \"F20\";\n    Keys[Keys[\"F21\"] = 132] = \"F21\";\n    Keys[Keys[\"F22\"] = 133] = \"F22\";\n    Keys[Keys[\"F23\"] = 134] = \"F23\";\n    Keys[Keys[\"F24\"] = 135] = \"F24\";\n    Keys[Keys[\"NUM_LOCK\"] = 144] = \"NUM_LOCK\";\n    Keys[Keys[\"SCROLL_LOCK\"] = 145] = \"SCROLL_LOCK\";\n    Keys[Keys[\"COMMA\"] = 188] = \"COMMA\";\n    Keys[Keys[\"PERIOD\"] = 190] = \"PERIOD\";\n    Keys[Keys[\"SLASH\"] = 191] = \"SLASH\";\n    Keys[Keys[\"BACK_QUOTE\"] = 192] = \"BACK_QUOTE\";\n    Keys[Keys[\"OPEN_BRACKET\"] = 219] = \"OPEN_BRACKET\";\n    Keys[Keys[\"BACK_SLASH\"] = 220] = \"BACK_SLASH\";\n    Keys[Keys[\"CLOSE_BRACKET\"] = 221] = \"CLOSE_BRACKET\";\n    Keys[Keys[\"QUOTE\"] = 222] = \"QUOTE\";\n    Keys[Keys[\"META\"] = 224] = \"META\";\n})(Keys || (Keys = {}));\nexport function keyboard(opts, callback) {\n    const cb = callback || opts;\n    const { element = window } = opts;\n    const pressed = {};\n    function onKeydown(event) {\n        pressed[event.keyCode] = Date.now();\n        cb(pressed);\n    }\n    function onKeyup(event) {\n        delete pressed[event.keyCode];\n        cb(pressed);\n    }\n    element.addEventListener('keyup', onKeyup, false);\n    element.addEventListener('keydown', onKeydown, false);\n    cb(pressed);\n    return function stop() {\n        element.removeEventListener('keyup', onKeyup);\n        element.removeEventListener('keydown', onKeydown);\n    };\n}\nexport function keyboardObserver(opts) {\n    const observer = {\n        Keys,\n        state: { pressed: {} },\n        destroy: () => { },\n    };\n    function callback(pressed) {\n        observer.state.pressed = pressed;\n    }\n    observer.destroy = keyboard(callback, opts);\n    return observer;\n}\n//# sourceMappingURL=keyboard.js.map","export function deepmerge(obj1, obj2) {\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        const result = Object.assign({}, obj1);\n        for (const key in obj2) {\n            const val1 = obj1[key];\n            const val2 = obj2[key];\n            if (typeof val2 !== 'undefined') {\n                result[key] = deepmerge(val1, val2);\n            }\n            else {\n                delete result[key];\n            }\n        }\n        return result;\n    }\n    return obj2;\n}\nexport function deepOverride(obj1, obj2, opt) {\n    const ignore = opt && opt.ignore;\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        for (const key in obj1) {\n            if (obj1.hasOwnProperty(key) &&\n                !(ignore && key in ignore && ignore[key] === true)) {\n                const val1 = obj1[key];\n                const val2 = obj2[key];\n                if (val2 !== undefined) {\n                    obj1[key] = deepOverride(val1, val2, {\n                        ignore: ignore && ignore[key],\n                    });\n                }\n            }\n        }\n        return obj1;\n    }\n    return obj2;\n}\nexport function mapObj(fn, coll, res = {}) {\n    for (const key in coll) {\n        res[key] = fn(coll[key], key);\n    }\n    return res;\n}\n//# sourceMappingURL=object.js.map","export const GEOMETRY_PROP_POSITION = 'position';\nexport const GEOMETRY_PROP_NORMAL = 'normal';\nexport const GEOMETRY_PROP_UV = 'uv';\nexport const UNIFORM_SOURCE_TEXTURE = 'source';\nexport const VARYING_UV_COORDS = 'coords';\nexport const GL_TYPE = {\n    FLOAT: 0x1406,\n    FLOAT_VEC2: 0x8b50,\n    FLOAT_VEC3: 0x8b51,\n    FLOAT_VEC4: 0x8b52,\n    INT: 0x1404,\n    INT_VEC2: 0x8b53,\n    INT_VEC3: 0x8b54,\n    INT_VEC4: 0x8b55,\n    BOOL: 0x8b56,\n    BOOL_VEC2: 0x8b57,\n    BOOL_VEC3: 0x8b58,\n    BOOL_VEC4: 0x8b59,\n    FLOAT_MAT2: 0x8b5a,\n    FLOAT_MAT3: 0x8b5b,\n    FLOAT_MAT4: 0x8b5c,\n    SAMPLER_2D: 0x8b5e,\n    SAMPLER_CUBE: 0x8b60,\n    SAMPLER_3D: 0x8b5f,\n    SAMPLER_2D_SHADOW: 0x8b62,\n    FLOAT_MAT2X3: 0x8b65,\n    FLOAT_MAT2X4: 0x8b66,\n    FLOAT_MAT3X2: 0x8b67,\n    FLOAT_MAT3X4: 0x8b68,\n    FLOAT_MAT4X2: 0x8b69,\n    FLOAT_MAT4X3: 0x8b6a,\n    SAMPLER_2D_ARRAY: 0x8dc1,\n    SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n    SAMPLER_CUBE_SHADOW: 0x8dc5,\n    UNSIGNED_INT: 0x1405,\n    UNSIGNED_INT_VEC2: 0x8dc6,\n    UNSIGNED_INT_VEC3: 0x8dc7,\n    UNSIGNED_INT_VEC4: 0x8dc8,\n    INT_SAMPLER_2D: 0x8dca,\n    INT_SAMPLER_3D: 0x8dcb,\n    INT_SAMPLER_CUBE: 0x8dcc,\n    INT_SAMPLER_2D_ARRAY: 0x8dcf,\n    UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n    UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n    UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n    TEXTURE_2D: 0x0de1,\n    TEXTURE_CUBE_MAP: 0x8513,\n    TEXTURE_3D: 0x806f,\n    TEXTURE_2D_ARRAY: 0x8c1a,\n    BYTE: 0x1400,\n    UNSIGNED_BYTE: 0x1401,\n    SHORT: 0x1402,\n    UNSIGNED_SHORT: 0x1403,\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\n    UNSIGNED_SHORT_5_6_5: 0x8363,\n    HALF_FLOAT: 0x140b,\n    UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n    UNSIGNED_INT_10F_11F_11F_REV: 0x8c3b,\n    UNSIGNED_INT_5_9_9_9_REV: 0x8c3e,\n    FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8dad,\n    UNSIGNED_INT_24_8: 0x84fa,\n};\nexport const TEXTURE_FORMAT = {\n    RED: 0x1903,\n    RG: 0x8227,\n    RGB: 0x1907,\n    RGBA: 0x1908,\n    RED_INTEGER: 0x8d94,\n    RG_INTEGER: 0x8228,\n    RGB_INTEGER: 0x8d98,\n    RGBA_INTEGER: 0x8d99,\n    DEPTH_COMPONENT: 0x1902,\n};\nexport const TEXTURE_FORMAT_INTERNAL = {\n    R8: 0x8229,\n    RG8: 0x822b,\n    RGB8: 0x8051,\n    RGBA8: 0x8058,\n    R16F: 0x822d,\n    RG16F: 0x822f,\n    RGB16F: 0x881b,\n    RGBA16F: 0x881a,\n    R32F: 0x822e,\n    RG32F: 0x8230,\n    RGB32F: 0x8815,\n    RGBA32F: 0x8814,\n    R8I: 0x8231,\n    RG8I: 0x8237,\n    RGB8I: 0x8d8f,\n    RGBA8I: 0x8d8e,\n    R8UI: 0x8232,\n    RG8UI: 0x8238,\n    RGB8UI: 0x8d7d,\n    RGBA8UI: 0x8d7c,\n    R16I: 0x8233,\n    RG16I: 0x8239,\n    RGB16I: 0x8d89,\n    RGBA16I: 0x8d88,\n    R16UI: 0x8234,\n    RG16UI: 0x823a,\n    RGB16UI: 0x8d77,\n    RGBA16UI: 0x8d76,\n    R32I: 0x8235,\n    RG32I: 0x823b,\n    RGB32I: 0x8d83,\n    RGBA32I: 0x8d82,\n    R32UI: 0x8236,\n    RG32UI: 0x823c,\n    RGB32UI: 0x8d71,\n    RGBA32UI: 0x8d70,\n    RGB10_A2: 0x8059,\n    RGB10_A2UI: 0x906f,\n    SRGB: 0x8c40,\n    SRGB8: 0x8c41,\n    SRGB8_ALPHA8: 0x8c43,\n    R8_SNORM: 0x8f94,\n    RG8_SNORM: 0x8f95,\n    RGB8_SNORM: 0x8f96,\n    RGBA8_SNORM: 0x8f97,\n    DEPTH_COMPONENT16: 0x81a5,\n    DEPTH_COMPONENT24: 0x81a6,\n    DEPTH_COMPONENT32F: 0x8cac,\n};\nexport const TEXTURE_FORMAT_DEFAULTS = {\n    [GL_TYPE.UNSIGNED_BYTE]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R8,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG8,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB8,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA8,\n    },\n    [GL_TYPE.UNSIGNED_SHORT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT16,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16UI,\n    },\n    [GL_TYPE.UNSIGNED_INT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT24,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R32UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG32UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB32UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA32UI,\n    },\n    [GL_TYPE.FLOAT]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16F,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16F,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16F,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16F,\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT32F,\n    },\n    COMPRESSED_TYPES: {},\n};\n//# sourceMappingURL=contants.js.map","import * as constants from './contants';\nexport const defaultTextureSettings = {\n    wrap: 'CLAMP_TO_EDGE',\n    minFilter: 'LINEAR',\n    magFilter: 'NEAREST',\n};\nexport function getDefaultLayerSettings(gl) {\n    return {\n        clearColor: [0.0, 0.0, 0.0, 1.0],\n        blendFunc: [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA],\n    };\n}\nexport const defaultForms = {\n    renderQuad: {\n        attribs: {\n            [constants.GEOMETRY_PROP_POSITION]: {\n                buffer: new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1]),\n                storeType: 'STATIC',\n            },\n            [constants.GEOMETRY_PROP_UV]: {\n                buffer: new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]),\n                storeType: 'STATIC',\n            },\n        },\n        drawType: 'TRIANGLE_STRIP',\n        itemCount: 4,\n    },\n};\nexport const defaultShaders = {\n    basicEffect: {\n        vert: `\nattribute vec2 ${constants.GEOMETRY_PROP_POSITION};\nattribute vec2 ${constants.GEOMETRY_PROP_UV};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\t${constants.VARYING_UV_COORDS} = ${constants.GEOMETRY_PROP_UV};\n\tgl_Position = vec4(${constants.GEOMETRY_PROP_POSITION}, 0.0, 1.0);\n}`,\n        frag: `precision mediump float;\nuniform sampler2D ${constants.UNIFORM_SOURCE_TEXTURE};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\tgl_FragColor = texture2D(${constants.UNIFORM_SOURCE_TEXTURE}, ${constants.VARYING_UV_COORDS});\n}`,\n    },\n};\n//# sourceMappingURL=asset-lib.js.map","import { GL_TYPE } from './contants';\n// Attrib and Uniform Setters\nfunction getBindPointForSamplerType(type) {\n    return typeMap[type].bindPoint;\n}\nfunction floatSetter(gl, location) {\n    return (v) => {\n        gl.uniform1f(location, v);\n    };\n}\nfunction floatArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1fv(location, v);\n    };\n}\nfunction floatVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2fv(location, v);\n    };\n}\nfunction floatVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3fv(location, v);\n    };\n}\nfunction floatVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4fv(location, v);\n    };\n}\nfunction intSetter(gl, location) {\n    return (v) => {\n        gl.uniform1i(location, v);\n    };\n}\nfunction intArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1iv(location, v);\n    };\n}\nfunction intVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2iv(location, v);\n    };\n}\nfunction intVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3iv(location, v);\n    };\n}\nfunction intVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4iv(location, v);\n    };\n}\nfunction uintSetter(gl, location) {\n    return (v) => {\n        gl.uniform1ui(location, v);\n    };\n}\nfunction uintArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1uiv(location, v);\n    };\n}\nfunction uintVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2uiv(location, v);\n    };\n}\nfunction uintVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3uiv(location, v);\n    };\n}\nfunction uintVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4uiv(location, v);\n    };\n}\nfunction floatMat2Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n    };\n}\nfunction floatMat3Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n    };\n}\nfunction floatMat4Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n    };\n}\nfunction floatMat23Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x3fv(location, false, v);\n    };\n}\nfunction floatMat32Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x2fv(location, false, v);\n    };\n}\nfunction floatMat24Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x4fv(location, false, v);\n    };\n}\nfunction floatMat42Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x2fv(location, false, v);\n    };\n}\nfunction floatMat34Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x4fv(location, false, v);\n    };\n}\nfunction floatMat43Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x3fv(location, false, v);\n    };\n}\nfunction samplerSetter(gl, type, unit, location) {\n    const bindPoint = getBindPointForSamplerType(type);\n    return (texture) => {\n        gl.uniform1i(location, unit);\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(bindPoint, texture._texture);\n    };\n}\nfunction samplerArraySetter(gl, type, unit, location, size) {\n    const bindPoint = getBindPointForSamplerType(type);\n    const units = new Int32Array(size);\n    for (let i = 0; i < size; ++i) {\n        units[i] = unit + i;\n    }\n    return (textures) => {\n        gl.uniform1iv(location, units);\n        for (const index in textures) {\n            gl.activeTexture(gl.TEXTURE0 + units[index]);\n            gl.bindTexture(bindPoint, textures[index]._texture);\n        }\n    };\n}\nfunction isSamplerInfo(info) {\n    return info.Type === null;\n}\nconst typeMap = {\n    [GL_TYPE.FLOAT]: {\n        Type: Float32Array,\n        size: 4,\n        setter: floatSetter,\n        arraySetter: floatArraySetter,\n    },\n    [GL_TYPE.FLOAT_VEC2]: {\n        Type: Float32Array,\n        size: 8,\n        setter: floatVec2Setter,\n    },\n    [GL_TYPE.FLOAT_VEC3]: {\n        Type: Float32Array,\n        size: 12,\n        setter: floatVec3Setter,\n    },\n    [GL_TYPE.FLOAT_VEC4]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatVec4Setter,\n    },\n    [GL_TYPE.INT]: {\n        Type: Int32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.INT_VEC2]: { Type: Int32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.INT_VEC3]: { Type: Int32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.INT_VEC4]: { Type: Int32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.UNSIGNED_INT]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: uintSetter,\n        arraySetter: uintArraySetter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        Type: Uint32Array,\n        size: 8,\n        setter: uintVec2Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        Type: Uint32Array,\n        size: 12,\n        setter: uintVec3Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        Type: Uint32Array,\n        size: 16,\n        setter: uintVec4Setter,\n    },\n    [GL_TYPE.BOOL]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.BOOL_VEC2]: { Type: Uint32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.BOOL_VEC3]: { Type: Uint32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.BOOL_VEC4]: { Type: Uint32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.FLOAT_MAT2]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatMat2Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3]: {\n        Type: Float32Array,\n        size: 36,\n        setter: floatMat3Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4]: {\n        Type: Float32Array,\n        size: 64,\n        setter: floatMat4Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X3]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat23Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X4]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat24Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X2]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat32Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X4]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat34Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X2]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat42Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X3]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat43Setter,\n    },\n    [GL_TYPE.SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.SAMPLER_2D_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_CUBE_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n};\nfunction floatAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribPointer(location, typeInfo.itemSize, GL_TYPE.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n    };\n}\nfunction intAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribIPointer(location, typeInfo.itemSize, GL_TYPE.INT, b.stride || 0, b.offset || 0);\n    };\n}\nfunction matAttribSetter(gl, location, typeInfo) {\n    const defaultSize = typeInfo.size;\n    const count = typeInfo.count;\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        const numComponents = defaultSize;\n        const size = numComponents / count;\n        const typeInfo = typeMap[GL_TYPE.FLOAT];\n        const stride = typeInfo.size * numComponents;\n        const normalize = b.normalize || false;\n        const offset = b.offset || 0;\n        const rowOffset = stride / count;\n        for (let i = 0; i < count; ++i) {\n            gl.enableVertexAttribArray(location + i);\n            gl.vertexAttribPointer(location + i, size, GL_TYPE.FLOAT, normalize, stride, offset + rowOffset * i);\n        }\n    };\n}\nconst attrTypeMap = {\n    [GL_TYPE.FLOAT]: { size: 4, setter: floatAttribSetter, itemSize: 1 },\n    [GL_TYPE.FLOAT_VEC2]: { size: 8, setter: floatAttribSetter, itemSize: 2 },\n    [GL_TYPE.FLOAT_VEC3]: { size: 12, setter: floatAttribSetter, itemSize: 3 },\n    [GL_TYPE.FLOAT_VEC4]: { size: 16, setter: floatAttribSetter, itemSize: 4 },\n    [GL_TYPE.INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.INT_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.INT_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.INT_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.UNSIGNED_INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        size: 8,\n        setter: intAttribSetter,\n        itemSize: 2,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        size: 12,\n        setter: intAttribSetter,\n        itemSize: 3,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        size: 16,\n        setter: intAttribSetter,\n        itemSize: 4,\n    },\n    [GL_TYPE.BOOL]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.BOOL_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.BOOL_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.BOOL_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.FLOAT_MAT2]: { size: 4, setter: matAttribSetter, count: 2 },\n    [GL_TYPE.FLOAT_MAT3]: { size: 9, setter: matAttribSetter, count: 3 },\n    [GL_TYPE.FLOAT_MAT4]: { size: 16, setter: matAttribSetter, count: 4 },\n};\nexport function createUniformSetters(gl, program) {\n    let textureUnit = 0;\n    function createUniformSetter(program, uniformInfo) {\n        const location = gl.getUniformLocation(program, uniformInfo.name);\n        const isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]';\n        const type = uniformInfo.type;\n        const typeInfo = typeMap[type];\n        if (!typeInfo) {\n            throw new Error('unknown type: 0x' + type.toString(16)); // we should never get here.\n        }\n        if (location == null) {\n            return;\n        }\n        let setter;\n        if (isSamplerInfo(typeInfo)) {\n            // it's a sampler\n            const unit = textureUnit;\n            textureUnit += uniformInfo.size;\n            if (isArray) {\n                setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n            }\n            else {\n                setter = typeInfo.setter(gl, type, unit, location);\n            }\n        }\n        else {\n            if (typeInfo.arraySetter && isArray) {\n                setter = typeInfo.arraySetter(gl, location);\n            }\n            else {\n                setter = typeInfo.setter(gl, location);\n            }\n        }\n        return { setter, location };\n    }\n    const uniformSetters = {};\n    const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < numUniforms; ++i) {\n        const uniformInfo = gl.getActiveUniform(program, i);\n        if (!uniformInfo) {\n            continue;\n        }\n        let name = uniformInfo.name;\n        // remove the array suffix.\n        if (name.substr(-3) === '[0]') {\n            name = name.substr(0, name.length - 3);\n        }\n        if (program) {\n            const setter = createUniformSetter(program, uniformInfo);\n            if (setter) {\n                uniformSetters[name] = setter;\n            }\n        }\n    }\n    return uniformSetters;\n}\nexport function createAttributeSetters(gl, program) {\n    const attribSetters = {};\n    const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < numAttribs; i++) {\n        const attribInfo = gl.getActiveAttrib(program, i);\n        if (!attribInfo) {\n            break;\n        }\n        const location = gl.getAttribLocation(program, attribInfo.name);\n        const typeInfo = attrTypeMap[attribInfo.type];\n        const setter = typeInfo.setter(gl, location, typeInfo);\n        attribSetters[attribInfo.name] = { setter, location };\n    }\n    return attribSetters;\n}\n// Type helpers\nexport const glTypeToTypedArray = {\n    [GL_TYPE.BYTE]: Int8Array,\n    [GL_TYPE.UNSIGNED_BYTE]: Uint8Array,\n    [GL_TYPE.SHORT]: Int16Array,\n    [GL_TYPE.UNSIGNED_SHORT]: Uint16Array,\n    [GL_TYPE.INT]: Int32Array,\n    [GL_TYPE.UNSIGNED_INT]: Uint32Array,\n    [GL_TYPE.FLOAT]: Float32Array,\n    [GL_TYPE.UNSIGNED_SHORT_4_4_4_4]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_5_5_1]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_6_5]: Uint16Array,\n    [GL_TYPE.HALF_FLOAT]: Uint16Array,\n    [GL_TYPE.UNSIGNED_INT_2_10_10_10_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_10F_11F_11F_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_5_9_9_9_REV]: Uint32Array,\n    [GL_TYPE.FLOAT_32_UNSIGNED_INT_24_8_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_24_8]: Uint32Array,\n};\nexport function getGLTypeForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArray instanceof Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArray instanceof Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArray instanceof Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArray instanceof Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArray instanceof Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\nexport function getGLTypeForTypedArrayType(typedArrayType) {\n    if (typedArrayType === Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArrayType === Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArrayType === Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArrayType === Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArrayType === Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArrayType === Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\n// Settings\nexport function applyDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.enable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.blendFunc) {\n        gl.blendFunc.apply(gl, settings.blendFunc);\n    }\n    if (settings.depthFunc != null) {\n        gl.depthFunc(settings.depthFunc);\n    }\n    if (settings.cullFace != null) {\n        gl.cullFace(settings.cullFace);\n    }\n    if (settings.frontFace != null) {\n        gl.frontFace(settings.frontFace);\n    }\n    if (settings.lineWidth != null) {\n        gl.lineWidth(settings.lineWidth);\n    }\n    if (settings.colorMask) {\n        gl.colorMask.apply(gl, settings.colorMask);\n    }\n    if (settings.depthMask != null) {\n        gl.depthMask(settings.depthMask);\n    }\n    if (settings.clearColor) {\n        gl.clearColor.apply(gl, settings.clearColor);\n    }\n    if (settings.clearDepth != null) {\n        gl.clearDepth(settings.clearDepth);\n    }\n    if (settings.clearBits != null) {\n        gl.clear(settings.clearBits);\n    }\n}\nexport function revertDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.enable(setting);\n        }\n    }\n}\n//# sourceMappingURL=render-utils.js.map","import { getGLTypeForTypedArray } from './render-utils';\nlet formCounter = 1;\nexport class Form {\n    constructor(_painter, id = 'Form' + formCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (data.drawType) {\n            this._drawType = gl[data.drawType];\n        }\n        if (data.itemCount) {\n            this._itemCount = data.itemCount;\n        }\n        this._attribs = this._attribs || {};\n        for (const id in data.attribs) {\n            const attribData = data.attribs[id];\n            if (this._attribs[id] == null) {\n                this._attribs[id] = {\n                    buffer: gl.createBuffer(),\n                };\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._attribs[id].buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, attribData.buffer, gl[(attribData.storeType || 'STATIC') + '_DRAW']);\n        }\n        if (data.elements) {\n            const buffer = data.elements.buffer;\n            if (this._elements == null) {\n                this._elements = {\n                    buffer: gl.createBuffer(),\n                    glType: null,\n                };\n            }\n            this._elements.glType = getGLTypeForTypedArray(buffer);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._elements.buffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, buffer, gl[(data.elements.storeType || 'STATIC') + '_DRAW']);\n        }\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        for (const id in this._attribs) {\n            gl.deleteBuffer(this._attribs[id].buffer);\n        }\n        this._attribs = {};\n        if (this._elements) {\n            gl.deleteBuffer(this._elements.buffer);\n            this._elements = undefined;\n        }\n    }\n}\n//# sourceMappingURL=form.js.map","import { defaultTextureSettings } from './asset-lib';\nlet textureCount = 1;\nexport class Texture {\n    constructor(_painter, id = 'Texture' + textureCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this._texture = null;\n        this._data = {};\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (this._texture == null) {\n            this._texture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        if ((data.wrap && data.wrap !== this._data.wrap) ||\n            (data.wrapS && data.wrapS !== this._data.wrapS) ||\n            (data.wrapT && data.wrapT !== this._data.wrapT)) {\n            let wrapS, wrapT;\n            if (data.wrap) {\n                wrapS = wrapT = data.wrap;\n            }\n            else {\n                wrapT = data.wrapT || defaultTextureSettings.wrap;\n                wrapS = data.wrapS || defaultTextureSettings.wrap;\n            }\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n        }\n        else if (!(this._data.wrap || this._data.wrapS || this._data.wrapT)) {\n            this._data.wrap = this._data.wrapT = this._data.wrapS = defaultTextureSettings.wrap;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[this._data.wrap]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[this._data.wrap]);\n        }\n        if (data.magFilter && data.magFilter !== this._data.magFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[data.magFilter]);\n        }\n        else if (!this._data.magFilter) {\n            this._data.magFilter = defaultTextureSettings.magFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[this._data.magFilter]);\n        }\n        if (data.minFilter && data.minFilter !== this._data.minFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[data.minFilter]);\n        }\n        else if (!this._data.minFilter) {\n            this._data.minFilter = defaultTextureSettings.minFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[this._data.minFilter]);\n        }\n        if (data.asset) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data.asset);\n        }\n        if (data.data !== undefined) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, data.type === 'FLOAT' && this._painter.isWebGL2\n                ? gl.RGBA32F\n                : gl.RGBA, data.width, // width and height are required if using custom data\n            data.height, 0, gl.RGBA, gl[data.type || 'UNSIGNED_BYTE'], data.data);\n        }\n        if (data.flipY != null && data.flipY !== this._data.flipY) {\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, data.flipY);\n        }\n        if (data.minFilter && data.minFilter.indexOf('MIPMAP') > 0) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        this._painter.gl.deleteTexture(this._texture);\n        this._data = {};\n        this._texture = null;\n    }\n}\n//# sourceMappingURL=texture.js.map","import { equalObject } from 'tvs-libs/dist/utils/predicates';\nimport { Texture } from './texture';\nlet targetCount = 1;\nexport class RenderTarget {\n    constructor(_painter, id = 'Form' + targetCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.antialias = false;\n        this.frameBuffer = null;\n        this.antiAliasFrameBuffer = null;\n        this.antiAliasRenderBuffer = null;\n        this.textures = [];\n        this.depthBuffer = null;\n        this.bufferStructure = [];\n        this._data = {};\n    }\n    update(data) {\n        var _a;\n        const gl = this._painter.gl;\n        const width = data.width || this.width;\n        const height = data.height || this.height;\n        if (!(width && height)) {\n            return this;\n        }\n        else if (width === this.width && height === this.height) {\n            if (!data.bufferStructure)\n                return this;\n            if (data.bufferStructure.length === this.bufferStructure.length &&\n                this.bufferStructure.every((buf, i) => equalObject(buf, data.bufferStructure[i]))) {\n                return this;\n            }\n        }\n        if (this.frameBuffer == null) {\n            this.frameBuffer = gl.createFramebuffer();\n        }\n        if (this.depthBuffer == null) {\n            this.depthBuffer = gl.createRenderbuffer();\n        }\n        if (data.bufferStructure && data.bufferStructure.length) {\n            this.bufferStructure = data.bufferStructure;\n            if (this.bufferStructure.some(t => t.type === 'FLOAT')) {\n                if (this._painter.isWebGL2) {\n                    gl.getExtension('EXT_color_buffer_float');\n                }\n                else {\n                    gl.getExtension('OES_texture_float');\n                }\n            }\n        }\n        const texCount = this.bufferStructure.length || 1;\n        const bufferAttachments = [gl.COLOR_ATTACHMENT0];\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        if (texCount > 1) {\n            let glx;\n            if (!this._painter.isWebGL2) {\n                glx = gl.getExtension('WEBGL_draw_buffers');\n            }\n            const attachment = this._painter.isWebGL2\n                ? gl.COLOR_ATTACHMENT0\n                : glx.COLOR_ATTACHMENT0_WEBGL;\n            for (let i = 0; i < texCount; i++) {\n                bufferAttachments[i] = attachment + i;\n            }\n            this._painter.isWebGL2\n                ? gl.drawBuffers(bufferAttachments)\n                : glx.drawBuffersWEBGL(bufferAttachments);\n        }\n        this.antialias =\n            texCount === 1 &&\n                this._painter.isWebGL2 &&\n                (data.antialias || ((_a = this._data) === null || _a === void 0 ? void 0 : _a.antialias));\n        if (this.antialias) {\n            const gl2 = gl;\n            if (this.antiAliasFrameBuffer == null) {\n                this.antiAliasFrameBuffer = gl.createFramebuffer();\n            }\n            if (this.antiAliasRenderBuffer == null) {\n                this.antiAliasRenderBuffer = gl.createRenderbuffer();\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl2.RGBA8, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        else {\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n        }\n        for (let i = 0; i < texCount; i++) {\n            if (!this.textures[i]) {\n                this.textures[i] = new Texture(this._painter, this.id + '_Texture' + i);\n            }\n            const texture = this.textures[i];\n            texture.update(Object.assign(Object.assign({ minFilter: 'NEAREST', magFilter: 'NEAREST' }, this.bufferStructure[i]), { data: null, width,\n                height }));\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, bufferAttachments[i], gl.TEXTURE_2D, texture._texture, 0);\n        }\n        if (this.antialias) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n            if (err !== gl.FRAMEBUFFER_COMPLETE) {\n                console.error('antialias framebuffer error', err, data);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (err !== gl.FRAMEBUFFER_COMPLETE) {\n            console.error('framebuffer error', err, data);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        Object.assign(this._data, data);\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteFramebuffer(this.frameBuffer);\n        gl.deleteRenderbuffer(this.depthBuffer);\n        for (const texture of this.textures) {\n            gl.deleteTexture(texture);\n        }\n        if (this.antiAliasFrameBuffer) {\n            gl.deleteFramebuffer(this.antiAliasFrameBuffer);\n        }\n        if (this.antiAliasRenderBuffer) {\n            gl.deleteRenderbuffer(this.antiAliasRenderBuffer);\n        }\n        this.textures = [];\n        this.frameBuffer = null;\n        this.depthBuffer = null;\n        this._data = {};\n        this.bufferStructure = [];\n        this.width = 0;\n        this.height = 0;\n    }\n}\n//# sourceMappingURL=render-target.js.map","export const and = (p1, p2) => (a, b) => p1(a, b) && p2(a, b);\nexport const not = (p) => (...args) => !p(...args);\nexport const defined = a => a != null;\nexport const notEmpty = a => a && a.length;\nexport const unequal = (a, b) => a !== b;\nexport const equal = (a, b) => a === b;\nexport function equalArray(arr1, arr2) {\n    if (arr1 === arr2) {\n        return true;\n    }\n    if (!arr2 || !arr1) {\n        return false;\n    }\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalObject(obj1, obj2) {\n    if (obj1 === obj2) {\n        return true;\n    }\n    if (!obj2) {\n        return false;\n    }\n    const k1 = Object.keys(obj1);\n    const k2 = Object.keys(obj2);\n    if (!equalArray(k1, k2)) {\n        return false;\n    }\n    for (const key of k1) {\n        if (obj1[key] !== obj2[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=predicates.js.map","import { times } from 'tvs-libs/dist/utils/sequence';\nimport { RenderTarget } from './render-target';\nimport { Texture } from './texture';\nlet frameCount = 1;\nexport class Frame {\n    constructor(_painter, id = 'Frame' + frameCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.layers = [];\n        this._data = {};\n        this._targets = [];\n        this._textures = [];\n    }\n    image(i = 0) {\n        return ((this._targets.length &&\n            this._targets[this._targets.length - 1].textures[i]) ||\n            this._textures[i]);\n    }\n    update(data = {}) {\n        var _a, _b, _c, _d;\n        const gl = this._painter.gl;\n        const layers = Array.isArray(data.layers)\n            ? data.layers\n            : data.layers\n                ? [data.layers]\n                : this.layers;\n        const selfReferencing = data.selfReferencing || this._data.selfReferencing;\n        const layerCount = layers.reduce((count, layer) => count + (layer._uniforms.length || 1), 0);\n        const targetCount = selfReferencing || layerCount > 1 ? 2 : layerCount;\n        const width = data.width || ((_a = data.texture) === null || _a === void 0 ? void 0 : _a.width) ||\n            this._data.width || ((_b = this._data.texture) === null || _b === void 0 ? void 0 : _b.width) ||\n            gl.canvas.width;\n        const height = data.height || ((_c = data.texture) === null || _c === void 0 ? void 0 : _c.height) ||\n            this._data.height || ((_d = this._data.texture) === null || _d === void 0 ? void 0 : _d.height) ||\n            gl.canvas.height;\n        const antialias = data.antialias || this._data.antialias || true;\n        if (targetCount !== this._targets.length) {\n            this._destroyTargets();\n        }\n        const targetData = Object.assign(Object.assign({}, data), { width, height, antialias });\n        if (!this._targets.length && targetCount > 0) {\n            this._targets = times(i => new RenderTarget(this._painter, this.id + '_target' + (i + 1)).update(targetData), targetCount);\n        }\n        else if (this._targets.length) {\n            this._targets.forEach(t => {\n                t.update(targetData);\n            });\n        }\n        if (data.texture) {\n            // Hardcode to one static texture for now\n            if (!this._textures[0]) {\n                this._textures[0] = new Texture(this._painter, this.id + '_Texture0');\n            }\n            data.texture.width = width;\n            data.texture.height = height;\n            this._textures[0].update(data.texture);\n        }\n        Object.assign(this._data, data);\n        this.layers = layers;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        this._destroyTargets();\n        this._textures.forEach(tex => tex.destroy());\n        this._textures = [];\n        this._data = {};\n        this.layers = [];\n        this.width = 0;\n        this.height = 0;\n    }\n    _destroyTargets() {\n        this._targets.forEach(t => t.destroy());\n        this._targets = [];\n    }\n    _swapTargets() {\n        if (this._targets.length > 1) {\n            const tmp = this._targets[0];\n            this._targets[0] = this._targets[1];\n            this._targets[1] = tmp;\n        }\n    }\n}\n//# sourceMappingURL=frame.js.map","import { randInt, randIntInRange } from '../math/random';\nexport function pickRandom(arr) {\n    return arr[randInt(arr.length)];\n}\nexport function doTimes(fn, count) {\n    for (let i = 0; i < count; i++) {\n        fn(i);\n    }\n}\nexport function times(fn, count, res = []) {\n    for (let i = 0; i < count; i++) {\n        res[i] = fn(i);\n    }\n    return res;\n}\nexport function repeat(count, item) {\n    return times(() => item, count);\n}\nexport function concat(arr, ...arrs) {\n    return arr.concat(...arrs);\n}\nexport function zip(fn, as, bs, res = []) {\n    const length = Math.min(as.length, bs.length);\n    for (let i = 0; i < length; i++) {\n        res[i] = fn(as[i], bs[i]);\n    }\n    return res;\n}\nexport function flatten(array, res = []) {\n    for (const subarray of array) {\n        const currentLength = res.length;\n        for (let i = 0; i < subarray.length; i++) {\n            res[i + currentLength] = subarray[i];\n        }\n    }\n    return res;\n}\nexport function mapcat(fn, array, res = []) {\n    return flatten(map(fn, array, res));\n}\nexport const flatMap = mapcat;\nexport function reverse(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        res[i] = arr[arr.length - 1 - i];\n    }\n    return res;\n}\nexport function shuffle(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        const j = randIntInRange(i, arr.length);\n        const temp = res[i] !== undefined ? res[i] : arr[i];\n        res[i] = res[j] !== undefined ? res[j] : arr[j];\n        res[j] = temp;\n    }\n    return res;\n}\nexport function map(fn, coll, res = []) {\n    for (let i = 0; i < coll.length; i++) {\n        res[i] = fn(coll[i], i);\n    }\n    return res;\n}\nexport function each(fn, coll) {\n    for (const key in coll) {\n        fn(coll[key], key);\n    }\n}\nexport function reduce(fn, start, arr) {\n    for (let i = 0; i < arr.length; i++) {\n        start = fn(start, arr[i]);\n    }\n    return start;\n}\nexport function fold(fn, arr) {\n    const [start, ...rest] = arr;\n    return reduce(fn, start, rest);\n}\nexport const last = (arr) => arr[arr.length - 1];\n//# sourceMappingURL=sequence.js.map","let layerCount = 1;\nexport class Layer {\n    constructor(id = 'DrawingLayer' + layerCount++) {\n        this.id = id;\n        this.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.sketches) {\n            this.sketches = Array.isArray(data.sketches)\n                ? data.sketches\n                : [data.sketches];\n        }\n        if (data.frag) {\n            const sketch = this.sketches && this.sketches[0];\n            if (sketch) {\n                sketch.shade.update({ frag: data.frag });\n            }\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        for (const sketch of this.sketches) {\n            sketch.destroy();\n        }\n        this._data.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=layer.js.map","import { createAttributeSetters, createUniformSetters } from './render-utils';\nlet shadeCounter = 1;\nexport class Shade {\n    constructor(_painter, id = 'Shade' + shadeCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        const fragSource = (data.frag && data.frag.trim()) || this.fragSource;\n        const vertSource = (data.vert && data.vert.trim()) || this.vertSource;\n        if (!(fragSource &&\n            vertSource &&\n            (fragSource !== this.fragSource || vertSource !== this.vertSource))) {\n            return this;\n        }\n        this.destroy();\n        if (fragSource.indexOf('GL_EXT_draw_buffers') >= 0) {\n            gl.getExtension('WEBGL_draw_buffers');\n        }\n        const program = gl.createProgram();\n        const frag = gl.createShader(gl.FRAGMENT_SHADER);\n        const vert = gl.createShader(gl.VERTEX_SHADER);\n        if (!(program && vert && frag))\n            return;\n        this._program = program;\n        this._frag = frag;\n        this._vert = vert;\n        gl.attachShader(program, vert);\n        gl.attachShader(program, frag);\n        gl.shaderSource(vert, vertSource);\n        gl.shaderSource(frag, fragSource);\n        gl.compileShader(vert);\n        gl.compileShader(frag);\n        if (!gl.getShaderParameter(vert, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Vertex Shader!\\n', gl.getShaderInfoLog(vert), addLineNumbers(vertSource));\n        }\n        if (!gl.getShaderParameter(frag, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Fragment Shader!\\n', gl.getShaderInfoLog(frag), addLineNumbers(fragSource));\n        }\n        gl.linkProgram(program);\n        const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n            const lastError = gl.getProgramInfoLog(program);\n            console.error('Error in program linking:', lastError);\n        }\n        this._uniformSetters = createUniformSetters(gl, program);\n        this._attributeSetters = createAttributeSetters(gl, program);\n        this.fragSource = fragSource;\n        this.vertSource = vertSource;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteProgram(this._program);\n        gl.deleteShader(this._frag);\n        gl.deleteShader(this._vert);\n        this.vertSource = undefined;\n        this.fragSource = undefined;\n        this._attributeSetters = {};\n        this._uniformSetters = {};\n    }\n}\nfunction addLineNumbers(src) {\n    return src\n        .trim()\n        .split('\\n')\n        .map((line, i) => i + 1 + ': ' + line)\n        .join('\\n');\n}\n//# sourceMappingURL=shade.js.map","let sketchCounter = 1;\nexport class Sketch {\n    constructor(id = 'Sketch' + sketchCounter++) {\n        this.id = id;\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.drawSettings) {\n            this._drawSettings = data.drawSettings;\n        }\n        if (data.form) {\n            this.form = data.form;\n        }\n        if (data.shade) {\n            this.shade = data.shade;\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        return this;\n    }\n    destroy() {\n        this.form && this.form.destroy();\n        this.shade && this.shade.destroy();\n        this._drawSettings = undefined;\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=sketch.js.map","export function makeClear(gl, ...clearArray) {\n    return clearArray.reduce((res, item) => res | gl[item.toUpperCase() + '_BUFFER_BIT'], 0);\n}\nexport function setBlendFunc(gl, blendOpts) {\n    gl.blendFunc.apply(gl, blendOpts.map(opt => gl[opt.toUpperCase()]));\n}\n/**\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] optional `window.devicePixelRatio`.\n * @return {boolean} true if the canvas was resized.\n */\nexport function resizeCanvas(canvas, multiplier = 1) {\n    let width = canvas.width;\n    let height = canvas.height;\n    if ('clientWidth' in canvas) {\n        const rect = canvas.getBoundingClientRect();\n        width = (rect.width * multiplier) | 0;\n        height = (rect.height * multiplier) | 0;\n    }\n    if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=context.js.map","import { defaultForms, defaultShaders, getDefaultLayerSettings, } from './asset-lib';\nimport { Form } from './form';\nimport { Frame } from './frame';\nimport { Layer } from './layer';\nimport { applyDrawSettings, revertDrawSettings } from './render-utils';\nimport { Shade } from './shade';\nimport { Sketch } from './sketch';\nimport { resizeCanvas } from './utils/context';\nexport class Painter {\n    constructor(canvas, opts = {}) {\n        this.canvas = canvas;\n        this.isWebGL2 = true;\n        this.maxBufferSamples = 0;\n        let gl = null;\n        if (!opts.useWebGL1) {\n            gl =\n                canvas.getContext('webgl2', opts) ||\n                    canvas.getContext('experimental-webgl2', opts);\n        }\n        if (gl == null) {\n            this.isWebGL2 = false;\n            gl =\n                canvas.getContext('webgl', opts) ||\n                    canvas.getContext('experimental-webgl', opts);\n        }\n        if (gl == null) {\n            throw Error('Cannot initialize WebGL.');\n        }\n        this.gl = gl;\n        this.sizeMultiplier = opts.sizeMultiplier || 1;\n        if (this.isWebGL2) {\n            this.maxBufferSamples = gl.getParameter(gl.MAX_SAMPLES);\n        }\n        this.resize();\n        applyDrawSettings(gl, getDefaultLayerSettings(gl));\n        this._renderQuad = this.createForm().update(defaultForms.renderQuad);\n        this._staticSketch = this.createFlatSketch();\n    }\n    resize() {\n        resizeCanvas(this.gl.canvas, this.sizeMultiplier);\n        return this;\n    }\n    destroy() {\n        this._staticSketch.destroy();\n        this._renderQuad.destroy();\n    }\n    updateDrawSettings(drawSettings) {\n        applyDrawSettings(this.gl, Object.assign({}, drawSettings));\n        return this;\n    }\n    createForm(id) {\n        return new Form(this, id);\n    }\n    createShade(id) {\n        return new Shade(this, id);\n    }\n    createSketch(id) {\n        return new Sketch(id);\n    }\n    createFlatSketch(id) {\n        const s = this.createSketch(id);\n        return s.update({\n            form: this._renderQuad,\n            shade: this.createShade(s.id + '_defaultShade').update(defaultShaders.basicEffect),\n        });\n    }\n    createFrame(id) {\n        return new Frame(this, id);\n    }\n    createLayer(id) {\n        return new Layer(id);\n    }\n    createEffect(id) {\n        const l = this.createLayer(id);\n        return l.update({\n            sketches: this.createFlatSketch(l.id + '_effectSketch'),\n        });\n    }\n    draw(sketch, globalUniforms) {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        draw(gl, sketch, globalUniforms);\n        return this;\n    }\n    compose(...frames) {\n        for (const frame of frames) {\n            renderFrame(this.gl, frame);\n        }\n        return this;\n    }\n    display(frame, idx = 0) {\n        return this.draw(this._staticSketch, { source: frame.image(idx) });\n    }\n}\nfunction draw(gl, sketch, globalUniforms, sources) {\n    const { shade: shade, form: form, _drawSettings: drawSettings, _uniforms: uniforms, } = sketch;\n    if (!(shade && form)) {\n        throw Error('cannot draw, shader or geometry are not set');\n    }\n    gl.useProgram(shade._program);\n    shadeForm(shade, form);\n    if (globalUniforms) {\n        shadeUniforms(shade, globalUniforms, sources);\n    }\n    if (drawSettings) {\n        applyDrawSettings(gl, drawSettings);\n    }\n    for (let i = 0; i < (uniforms.length || 1); i++) {\n        drawInstance(gl, sketch, uniforms[i], sources);\n    }\n    if (drawSettings) {\n        revertDrawSettings(gl, drawSettings);\n    }\n}\nfunction drawInstance(gl, sketch, uniforms, sources) {\n    if (uniforms) {\n        shadeUniforms(sketch.shade, uniforms, sources);\n    }\n    if (sketch.form._elements && sketch.form._elements.glType != null) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, sketch.form._elements.buffer);\n        gl.drawElements(sketch.form._drawType, sketch.form._itemCount, sketch.form._elements.glType, 0);\n    }\n    else {\n        gl.drawArrays(sketch.form._drawType, 0, sketch.form._itemCount);\n    }\n}\nfunction shadeForm(shade, form) {\n    for (const name in form._attribs) {\n        const setter = shade._attributeSetters[name];\n        if (setter) {\n            setter.setter(form._attribs[name]);\n        }\n    }\n}\nfunction shadeUniforms(shade, uniforms, sources) {\n    for (const name in uniforms) {\n        const setter = shade._uniformSetters[name];\n        if (setter) {\n            let value = uniforms[name];\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (typeof value === 'string' && sources) {\n                setter.setter(sources[value]);\n            }\n            else {\n                setter.setter(value);\n            }\n        }\n    }\n}\nfunction renderLayer(gl, layer, uniforms, target, source) {\n    if (target) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, target.antialias ? target.antiAliasFrameBuffer : target.frameBuffer);\n        gl.viewport(0, 0, target.width, target.height);\n    }\n    else {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    }\n    if (layer._data.drawSettings) {\n        applyDrawSettings(gl, layer._data.drawSettings);\n    }\n    for (const sketch of layer.sketches) {\n        draw(gl, sketch, uniforms, source);\n    }\n    if (target && target.antialias) {\n        const gl2 = gl;\n        // \"blit\" the cube into the color buffer, which adds antialiasing\n        gl.bindFramebuffer(gl2.READ_FRAMEBUFFER, target.antiAliasFrameBuffer);\n        gl.bindFramebuffer(gl2.DRAW_FRAMEBUFFER, target.frameBuffer);\n        gl2.clearBufferfv(gl2.COLOR, 0, [1.0, 1.0, 1.0, 1.0]);\n        gl2.blitFramebuffer(0, 0, target.width, target.height, 0, 0, target.width, target.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n    }\n    if (layer._data.drawSettings) {\n        revertDrawSettings(gl, layer._data.drawSettings);\n    }\n}\nfunction renderFrame(gl, frame) {\n    for (let i = 0; i < frame.layers.length; i++) {\n        const layer = frame.layers[i];\n        const layerPasses = layer._uniforms.length || 1;\n        for (let j = 0; j < layerPasses; j++) {\n            const target = frame._targets[0];\n            const sources = i + j === 0 && frame._textures.length\n                ? frame._textures\n                : frame._targets[1] && frame._targets[1].textures;\n            renderLayer(gl, layer, layer._uniforms[j], target, sources);\n            frame._swapTargets();\n        }\n    }\n}\n//# sourceMappingURL=painter.js.map","export const Buttons = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n};\nexport function pointer(opts, callback) {\n    const cb = callback || opts;\n    const { element = document, enableRightButton, holdDelay = 400, holdRadius = 5, } = opts;\n    const state = {\n        pressed: {},\n        drag: { x: 0, y: 0, dX: 0, dY: 0, xMax: 0, yMax: 0 },\n        dragging: false,\n        holding: false,\n    };\n    let x = 0, y = 0, oX = 0, oY = 0, timeout = null;\n    function onPointerDown(e) {\n        if (e.isPrimary) {\n            state.pressed[e.button] = e;\n            x = oX = e.clientX;\n            y = oY = e.clientY;\n            state.dragging = true;\n            timeout != null && clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                if (state.drag.xMax < holdRadius && state.drag.yMax < holdRadius) {\n                    state.holding = true;\n                    cb(state);\n                }\n            }, holdDelay);\n        }\n        else {\n            state.pressed[Buttons.RIGHT] = e;\n        }\n        cb(state);\n    }\n    function onPointerUp(_e) {\n        state.pressed = {};\n        delete state.drag.event;\n        state.drag.x = 0;\n        state.drag.y = 0;\n        state.drag.dX = 0;\n        state.drag.dY = 0;\n        state.drag.xMax = 0;\n        state.drag.yMax = 0;\n        state.dragging = false;\n        state.holding = false;\n        timeout != null && clearTimeout(timeout);\n        timeout = null;\n        cb(state);\n    }\n    function onPointerMove(e) {\n        if (state.dragging && e.isPrimary) {\n            state.drag.event = e;\n            state.drag.x = x - e.clientX;\n            state.drag.y = y - e.clientY;\n            state.drag.dX = oX - e.clientX;\n            state.drag.dY = oY - e.clientY;\n            state.drag.xMax = Math.max(Math.abs(state.drag.x), state.drag.xMax);\n            state.drag.yMax = Math.max(Math.abs(state.drag.y), state.drag.yMax);\n            oX = e.clientX;\n            oY = e.clientY;\n            cb(state);\n        }\n    }\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    element.addEventListener('pointerdown', onPointerDown);\n    document.addEventListener('pointermove', onPointerMove);\n    document.addEventListener('pointerup', onPointerUp);\n    document.addEventListener('pointerleave', onPointerUp);\n    document.addEventListener('pointercancel', onPointerUp);\n    if (enableRightButton) {\n        element.addEventListener('contextmenu', preventDefault);\n    }\n    cb(state);\n    return function destroy() {\n        element.removeEventListener('pointerdown', onPointerDown);\n        document.removeEventListener('pointermove', onPointerMove);\n        document.removeEventListener('pointerup', onPointerUp);\n        document.removeEventListener('pointerleave', onPointerUp);\n        document.removeEventListener('pointercancel', onPointerUp);\n        if (enableRightButton) {\n            element.removeEventListener('contextmenu', preventDefault);\n        }\n    };\n}\nexport function pointerObserver(opts = {}) {\n    const observer = {\n        Buttons,\n        state: {},\n        destroy: () => { },\n    };\n    function callback(state) {\n        observer.state = state;\n    }\n    observer.destroy = pointer(opts, callback);\n    return observer;\n}\n//# sourceMappingURL=pointer.js.map","import { once } from './scheduler'\nimport { windowSize } from 'tvs-libs/dist/events/dom'\nimport { keyboard, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { deepOverride } from 'tvs-libs/dist/utils/object'\nimport { GL, PainterOptions } from 'tvs-painter'\nimport { Form } from 'tvs-painter/dist/form'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport { Layer } from 'tvs-painter/dist/layer'\nimport { Painter } from 'tvs-painter/dist/painter'\nimport { Shade } from 'tvs-painter/dist/shade'\nimport { Sketch } from 'tvs-painter/dist/sketch'\nimport { PointerState, pointer } from 'tvs-libs/dist/events/pointer'\nimport { getPackedSettings } from 'http2'\n\n// === Painter ===\n\nlet currentCanvas: HTMLCanvasElement\nlet painter: Painter\n\nconst forms: { [id: string]: Form } = {}\nfunction getForm(id: string) {\n\treturn forms[id] || (forms[id] = painter.createForm('Form_' + id))\n}\n\nconst shades: { [id: string]: Shade } = {}\nfunction getShade(id: string) {\n\treturn shades[id] || (shades[id] = painter.createShade('Shade_' + id))\n}\n\nconst sketches: { [id: string]: Sketch } = {}\nfunction getSketch(id: string) {\n\treturn sketches[id] || (sketches[id] = painter.createSketch('Sketch_' + id))\n}\n\nconst layers: { [id: string]: Layer } = {}\nfunction getLayer(id: string) {\n\treturn layers[id] || (layers[id] = painter.createLayer('Layer_' + id))\n}\n\nconst frames: { [id: string]: Frame } = {}\nfunction getFrame(id: string) {\n\treturn frames[id] || (frames[id] = painter.createFrame('Frame_' + id))\n}\n\nconst effects: { [id: string]: Layer } = {}\nfunction getEffect(id: string) {\n\treturn effects[id] || (effects[id] = painter.createEffect('Effect_' + id))\n}\n\n// === State ===\n\nexport interface BaseState {\n\tdevice: {\n\t\ttpf: number\n\t\tcanvas: HTMLCanvasElement\n\t\tpointer: PointerState\n\t\tkeys: KeyState\n\t\tsizeMultiplier: number\n\t}\n}\n\nconst state: BaseState = {\n\tdevice: {\n\t\ttpf: 0,\n\t\tsizeMultiplier: 1,\n\t},\n} as BaseState\n;(window as any).state = state\n\n// === Events ===\n\ntype ActionHandler<S extends BaseState = BaseState> = (state: S) => void\n\nconst eventHandlers: {\n\t[event: string]: { [id: string]: ActionHandler<any> }\n} = {}\n\nexport const baseEvents = {\n\tFRAME: 'frame',\n\tRESIZE: 'resize',\n}\n\n// === Context ===\n\nlet cancelWindow: () => void\nlet cancelPointer: () => void\nlet cancelKeys: () => void\n\nexport function getPainterContext<S extends BaseState>(\n\tcanvas: HTMLCanvasElement,\n\topts?: PainterOptions,\n): PainterContext<S> {\n\tif (canvas !== currentCanvas) {\n\t\tcurrentCanvas = canvas\n\n\t\tpainter = new Painter(canvas, opts)\n\n\t\tstate.device.canvas = canvas\n\n\t\tcancelWindow && cancelWindow()\n\t\tcancelPointer && cancelPointer()\n\t\tcancelKeys && cancelKeys()\n\n\t\tcancelWindow = windowSize(() =>\n\t\t\tonce(() => {\n\t\t\t\tpainter.sizeMultiplier = state.device.sizeMultiplier\n\t\t\t\tpainter.resize()\n\t\t\t\temit(baseEvents.RESIZE)\n\t\t\t}, 'resize'),\n\t\t)\n\n\t\tcancelPointer = pointer(\n\t\t\t{\n\t\t\t\telement: canvas,\n\t\t\t\tenableRightButton: true,\n\t\t\t\tholdRadius: 7,\n\t\t\t\tholdDelay: 250,\n\t\t\t},\n\t\t\t(m) => (state.device.pointer = m),\n\t\t)\n\n\t\tcancelKeys = keyboard((k) => (state.device.keys = k))\n\t}\n\n\treturn {\n\t\tpainter,\n\t\tgl: painter.gl,\n\t\tgetForm,\n\t\tgetShade,\n\t\tgetSketch,\n\t\tgetLayer,\n\t\tgetFrame,\n\t\tgetEffect,\n\n\t\tstate: state as S,\n\n\t\tget,\n\t\tset,\n\t\tlisten,\n\t\temit,\n\t}\n\n\tfunction get<K extends keyof S = keyof S>(prop: K): S[K] {\n\t\treturn (state as S)[prop]\n\t}\n\n\tfunction set<K extends keyof S = keyof S>(\n\t\tkey: K,\n\t\tval: S[K],\n\t\topts?: { reset: any },\n\t) {\n\t\tconst s = state as S\n\t\tif (s[key]) {\n\t\t\tconst reset = opts && opts.reset\n\t\t\tif (reset !== true) {\n\t\t\t\tval = deepOverride(val, s[key], { ignore: reset })\n\t\t\t}\n\t\t}\n\t\ts[key] = val\n\t}\n\n\tfunction listen(id: string, event: string, s: ActionHandler<S>) {\n\t\tif (!eventHandlers[event]) eventHandlers[event] = {}\n\t\teventHandlers[event][id] = s\n\t}\n\n\tfunction emit(event: string) {\n\t\tconst e = eventHandlers[event]\n\t\tif (e)\n\t\t\tfor (const id in e) {\n\t\t\t\te[id](state as S)\n\t\t\t}\n\t}\n}\n\nexport interface PainterContext<S extends BaseState = BaseState> {\n\tpainter: Painter\n\tgl: GL\n\tgetForm: typeof getForm\n\tgetShade: typeof getShade\n\tgetSketch: typeof getSketch\n\tgetLayer: typeof getLayer\n\tgetFrame: typeof getFrame\n\tgetEffect: typeof getEffect\n\tstate: S\n\tget<K extends keyof S = keyof S>(prop: K): S[K]\n\tset<K extends keyof S = keyof S>(\n\t\tkey: K,\n\t\tval: S[K],\n\t\topts?: { reset: any },\n\t): void\n\tlisten(id: string, event: string, s: ActionHandler<S>): void\n\temit(event: string): void\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { baseEvents, getPainterContext } from '../../shared-utils/painterState'\nimport { SceneState } from './state'\nimport { PerspectiveViewportState } from '../../shared-utils/vr/perspectiveViewport'\n\nexport interface State extends PerspectiveViewportState {\n\tscene: SceneState\n}\n\nexport const canvas = document.getElementById('canvas') as HTMLCanvasElement\n\nexport const events = {\n\t...baseEvents,\n}\n\nexport const Q = getPainterContext<State>(canvas)\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function windowSize(callback) {\n    function resize() {\n        callback({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    }\n    window.addEventListener('resize', resize);\n    resize();\n    return function stop() {\n        window.removeEventListener('resize', resize);\n    };\n}\nexport function windowSizeObserver() {\n    const state = {\n        size: { width: 0, height: 0 },\n    };\n    const destroy = windowSize(s => (state.size = s));\n    return { state, destroy };\n}\n//# sourceMappingURL=dom.js.map","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import { mat4, vec3 } from 'gl-matrix'\nimport { events, Q } from './context'\n\nexport class SceneState {\n\ttime = 0\n\n\tgroundColor = [0.7, 0.6, 0.9, 1]\n\tgroundTransform = mat4.create()\n\n\trotationSpeed = 0.0002\n\tlightRotation = -Math.PI * 0.8\n\tlightPosition: vec3 = [0, 3.5, 0]\n\tlightColor = [1.0, 1.0, 1.0, 0.0]\n\tlightBackColor = [0.0, 0.0, 0.2, 0.0]\n\tlightTransforms = [mat4.create(), mat4.create()]\n\n\tconstructor() {\n\t\tmat4.rotateX(this.groundTransform, this.groundTransform, Math.PI / 2)\n\t\tmat4.scale(this.groundTransform, this.groundTransform, [10, 10, 10])\n\t\tthis.update(0)\n\t}\n\n\tupdate(tpf: number) {\n\t\tthis.time += tpf\n\t\tthis.lightRotation += this.rotationSpeed * tpf\n\n\t\tthis.lightPosition[1] += Math.sin(this.time / 2000) * 0.05\n\n\t\tmat4.fromTranslation(this.lightTransforms[0], this.lightPosition)\n\t\tmat4.rotateX(\n\t\t\tthis.lightTransforms[0],\n\t\t\tthis.lightTransforms[0],\n\t\t\tthis.lightRotation,\n\t\t)\n\t\tmat4.rotateX(this.lightTransforms[1], this.lightTransforms[0], Math.PI)\n\t}\n}\n\nQ.listen('entities', events.FRAME, (s) => {\n\ts.scene.update(s.device.tpf)\n})\n\nQ.set('scene', new SceneState())\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { mat4, vec3 } from 'gl-matrix'\nimport { Keys, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { Constructor } from 'tvs-libs/lib/oop/mixins'\nimport { PointerState, Buttons } from 'tvs-libs/dist/events/pointer'\n\nexport class Camera {\n\tposition: vec3 = [0, 0, 0]\n\trotationX = 0\n\trotationY = 0\n\trotationXMat = mat4.create()\n\trotationYMat = mat4.create()\n\tprojectionMat = mat4.create()\n\tviewMat = mat4.create()\n\tneedsUpdateView = true\n\n\tconstructor(props?: Partial<Camera>) {\n\t\tObject.assign(this, props)\n\t\tthis.updateRotationX()\n\t\tthis.updateRotationY()\n\t}\n\n\tupdateRotationX(amount: number = 0) {\n\t\tthis.rotationX += amount\n\t\tmat4.fromXRotation(this.rotationXMat, this.rotationX)\n\t\tthis.needsUpdateView = true\n\t}\n\n\tupdateRotationY(amount: number = 0) {\n\t\tthis.rotationY += amount\n\t\tmat4.fromYRotation(this.rotationYMat, this.rotationY)\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveForward(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[8],\n\t\t\tthis.rotationYMat[9],\n\t\t\tthis.rotationYMat[10],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, -dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveLeft(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[0],\n\t\t\tthis.rotationYMat[1],\n\t\t\tthis.rotationYMat[2],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, -dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveUp(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[4],\n\t\t\tthis.rotationYMat[5],\n\t\t\tthis.rotationYMat[6],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tupdate() {\n\t\tif (this.needsUpdateView) {\n\t\t\tmat4.fromTranslation(this.viewMat, this.position)\n\t\t\tmat4.multiply(this.viewMat, this.viewMat, this.rotationYMat)\n\t\t\tmat4.multiply(this.viewMat, this.viewMat, this.rotationXMat)\n\t\t\tmat4.invert(this.viewMat, this.viewMat)\n\t\t\tthis.needsUpdateView = false\n\t\t}\n\t}\n}\n\nexport class PerspectiveCamera extends Camera {\n\tfovy = Math.PI * 0.6\n\taspect = 1\n\tnear = 0.1\n\tfar = 1000\n\tneedsUpdateProjection = true\n\n\tconstructor(props?: Partial<PerspectiveCamera>) {\n\t\tsuper(props)\n\t\tObject.assign(this, props)\n\t\tthis.update()\n\t}\n\n\tupdate() {\n\t\tsuper.update()\n\n\t\tif (this.needsUpdateProjection) {\n\t\t\tmat4.perspective(\n\t\t\t\tthis.projectionMat,\n\t\t\t\tthis.fovy,\n\t\t\t\tthis.aspect,\n\t\t\t\tthis.near,\n\t\t\t\tthis.far,\n\t\t\t)\n\t\t\tthis.needsUpdateProjection = false\n\t\t}\n\t}\n}\n\nexport function WithInputNavigation<T extends Constructor<Camera>>(Cam: T) {\n\treturn class extends Cam {\n\t\tupdatePosFromInput(speed: number, keys?: KeyState, pointer?: PointerState) {\n\t\t\tif (!(keys || pointer)) return\n\t\t\tif (\n\t\t\t\tkeys?.[Keys.UP] ||\n\t\t\t\tkeys?.[Keys.W] ||\n\t\t\t\t(pointer?.holding && !pointer.pressed[Buttons.RIGHT])\n\t\t\t) {\n\t\t\t\tthis.moveForward(speed)\n\t\t\t}\n\t\t\tif (\n\t\t\t\tkeys?.[Keys.DOWN] ||\n\t\t\t\tkeys?.[Keys.S] ||\n\t\t\t\tpointer?.pressed[Buttons.RIGHT]\n\t\t\t) {\n\t\t\t\tthis.moveForward(-speed)\n\t\t\t}\n\t\t\tif (keys?.[Keys.LEFT] || keys?.[Keys.A]) {\n\t\t\t\tthis.moveLeft(speed)\n\t\t\t}\n\t\t\tif (keys?.[Keys.RIGHT] || keys?.[Keys.D]) {\n\t\t\t\tthis.moveLeft(-speed)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function WithInputRotation<T extends Constructor<Camera>>(Cam: T) {\n\treturn class extends Cam {\n\t\t_oldMouse = { x: 0, y: 0 }\n\n\t\tupdateRotFromPointer(\n\t\t\tspeed: number,\n\t\t\tm: { dragging: boolean; drag: { x: number; y: number } },\n\t\t) {\n\t\t\tif (m.dragging) {\n\t\t\t\tconst deltaX = this._oldMouse.x - m.drag.x\n\t\t\t\tconst deltaY = this._oldMouse.y - m.drag.y\n\t\t\t\tthis._oldMouse.x = m.drag.x\n\t\t\t\tthis._oldMouse.y = m.drag.y\n\t\t\t\tdeltaY && this.updateRotationX(deltaY * speed)\n\t\t\t\tdeltaX && this.updateRotationY(deltaX * speed)\n\t\t\t} else {\n\t\t\t\tthis._oldMouse.x && (this._oldMouse.x = 0)\n\t\t\t\tthis._oldMouse.y && (this._oldMouse.y = 0)\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { BaseState, baseEvents, PainterContext } from '../painterState'\nimport {\n\tPerspectiveCamera,\n\tWithInputNavigation,\n\tWithInputRotation,\n} from './camera'\n\nexport interface PerspectiveViewportState extends BaseState {\n\tviewPort: ViewPort\n}\n\nexport class ViewPort {\n\tmoveSpeed = 2\n\tlookSpeed = 2\n\tcamera = new (WithInputNavigation(WithInputRotation(PerspectiveCamera)))({\n\t\tfovy: Math.PI * 0.3,\n\t\tposition: [0, 0, 5],\n\t})\n}\n\ninterface InitOpts {\n\tmoveSpeed?: number\n\tlookSpeed?: number\n\tfovy?: number\n\tposition?: [number, number, number]\n\trotationY?: number\n\trotationX?: number\n}\n\nexport function initPerspectiveViewport(\n\tctx: PainterContext<PerspectiveViewportState>,\n\t{ lookSpeed, moveSpeed, position, rotationY, rotationX, fovy }: InitOpts = {},\n) {\n\tconst v = new ViewPort()\n\tif (lookSpeed) {\n\t\tv.lookSpeed = lookSpeed\n\t}\n\tif (moveSpeed) {\n\t\tv.moveSpeed = moveSpeed\n\t}\n\tif (fovy) {\n\t\tv.camera.fovy = fovy\n\t\tv.camera.needsUpdateProjection = true\n\t}\n\tif (position) {\n\t\tv.camera.position = position\n\t\tv.camera.needsUpdateView = true\n\t}\n\tif (rotationX) {\n\t\tv.camera.rotationX = rotationX\n\t\tv.camera.updateRotationX()\n\t}\n\tif (rotationY) {\n\t\tv.camera.rotationY = rotationY\n\t\tv.camera.updateRotationY()\n\t}\n\n\tctx.set('viewPort', v, {\n\t\treset: { moveSpeed: true, lookSpeed: true },\n\t})\n\n\tctx.listen('viewPort', baseEvents.FRAME, ({ device: d, viewPort: v }) => {\n\t\tconst tpf = d.tpf / 1000\n\n\t\tv.camera.updatePosFromInput(v.moveSpeed * tpf, d.keys, d.pointer)\n\n\t\tconst p = d.pointer\n\t\tconst dragInfo = {\n\t\t\tdragging: p.dragging,\n\t\t\tdrag: {\n\t\t\t\tx: (d.sizeMultiplier * p.drag.x) / d.canvas.width,\n\t\t\t\ty: (d.sizeMultiplier * p.drag.y) / d.canvas.height,\n\t\t\t},\n\t\t}\n\t\tv.camera.updateRotFromPointer(v.lookSpeed, dragInfo)\n\t\tv.camera.update()\n\t\treturn\n\t})\n\n\tctx.listen('viewPort', baseEvents.RESIZE, ({ device: d, viewPort: v }) => {\n\t\tv.camera.aspect = d.canvas.width / d.canvas.height\n\t\tv.camera.needsUpdateProjection = true\n\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { TextureData } from 'tvs-painter'\nimport { makeClear } from 'tvs-painter/dist/utils/context'\nimport { plane } from 'tvs-painter/dist/utils/geometry/plane'\nimport { events, Q } from './context'\nimport frag from './shaders/geo-frag.glsl'\nimport vert from './shaders/geo-vert.glsl'\nimport lightFrag from './shaders/light-frag.glsl'\nimport { initPerspectiveViewport } from '../../shared-utils/vr/perspectiveViewport'\n\nconst { state: s, gl } = Q\n\ninitPerspectiveViewport(Q, {\n\tfovy: Math.PI * 0.3,\n\tposition: [11, 2, -9],\n\trotationY: 2,\n})\n\n// Forms\n\nconst geometry = plane(10, 10, 0, 0)\nconst planeForm = Q.getForm('plane').update(geometry)\n\n// Shades\n\nconst geoShade = Q.getShade('geo').update({\n\tfrag,\n\tvert,\n})\n\n// Textures\n\nconst texture = Q.getFrame('tex').update({ texture: {} })\n\nconst img = new Image()\nimg.onload = () => {\n\ttexture.update({\n\t\ttexture: {\n\t\t\tasset: img,\n\t\t\tminFilter: 'LINEAR_MIPMAP_LINEAR',\n\t\t\tmagFilter: 'LINEAR',\n\t\t},\n\t})\n}\nimg.src = 'tree.jpg'\n\n// Sketches\n\nconst groundSketch = Q.getSketch('ground').update({\n\tform: planeForm,\n\tshade: geoShade,\n\tuniforms: {\n\t\ttransform: () => s.scene.groundTransform,\n\t\tcolor: () => s.scene.groundColor,\n\t},\n})\n\nconst lightSketch = Q.getSketch('light').update({\n\tform: planeForm,\n\tshade: geoShade,\n\tuniforms: [\n\t\t{\n\t\t\ttransform: () => s.scene.lightTransforms[0],\n\t\t\tcolor: () => s.scene.lightColor,\n\t\t},\n\t\t{\n\t\t\ttransform: () => s.scene.lightTransforms[1],\n\t\t\tcolor: () => s.scene.lightBackColor,\n\t\t},\n\t],\n\tdrawSettings: {\n\t\tenable: [gl.CULL_FACE],\n\t},\n})\n\n// Layers\n\nconst sceneLayer = Q.getLayer('scene').update({\n\tsketches: [lightSketch, groundSketch],\n\tuniforms: {\n\t\tview: () => s.viewPort.camera.viewMat,\n\t\tprojection: () => s.viewPort.camera.projectionMat,\n\t},\n\tdrawSettings: {\n\t\tenable: [gl.DEPTH_TEST],\n\t\tclearBits: makeClear(gl, 'color', 'depth'),\n\t},\n})\n\nconst bufferSpec: TextureData = { type: 'FLOAT' }\nexport const scene = Q.getFrame('scene').update({\n\tlayers: sceneLayer,\n\tbufferStructure: [bufferSpec, bufferSpec, bufferSpec, bufferSpec],\n})\n\nconst lightLayer = Q.getEffect('light').update({\n\tfrag: lightFrag,\n\tuniforms: {\n\t\teyePosition: () => s.viewPort.camera.position,\n\t\tlightMat: () => s.scene.lightTransforms[0],\n\t\tview: () => s.viewPort.camera.viewMat,\n\t\ttex: () => texture.image(),\n\t\tpositions: scene.image(0),\n\t\tnormals: scene.image(1),\n\t\tuvs: scene.image(2),\n\t\tcolors: scene.image(3),\n\t},\n\tdrawSettings: {\n\t\tenable: [gl.BLEND],\n\t\tclearBits: makeClear(gl, 'color'),\n\t},\n})\n\nexport const light = Q.getFrame('light').update({\n\tlayers: lightLayer,\n})\n\nQ.listen('renderer', events.RESIZE, () => {\n\tscene.update()\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function plane(width, height, widthSegments, heightSegments) {\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    const gridX = widthSegments || 1;\n    const gridY = heightSegments || 1;\n    const gridX1 = gridX + 1;\n    const gridY1 = gridY + 1;\n    const segmentWidth = width / gridX;\n    const segmentHeight = height / gridY;\n    const vertices = new Float32Array(gridX1 * gridY1 * 3);\n    const normals = new Float32Array(gridX1 * gridY1 * 3);\n    const uvs = new Float32Array(gridX1 * gridY1 * 2);\n    let iy, ix;\n    let offset = 0;\n    let offset2 = 0;\n    for (iy = 0; iy < gridY1; iy++) {\n        const y = iy * segmentHeight - heightHalf;\n        for (ix = 0; ix < gridX1; ix++) {\n            const x = ix * segmentWidth - widthHalf;\n            vertices[offset] = x;\n            vertices[offset + 1] = -y;\n            normals[offset + 2] = 1;\n            uvs[offset2] = ix / gridX;\n            uvs[offset2 + 1] = 1 - iy / gridY;\n            offset += 3;\n            offset2 += 2;\n        }\n    }\n    offset = 0;\n    const indices = new (vertices.length / 3 > 65535 ? Uint32Array : Uint16Array)(gridX * gridY * 6);\n    for (iy = 0; iy < gridY; iy++) {\n        for (ix = 0; ix < gridX; ix++) {\n            const a = ix + gridX1 * iy;\n            const b = ix + gridX1 * (iy + 1);\n            const c = ix + 1 + gridX1 * (iy + 1);\n            const d = ix + 1 + gridX1 * iy;\n            indices[offset] = a;\n            indices[offset + 1] = b;\n            indices[offset + 2] = d;\n            indices[offset + 3] = b;\n            indices[offset + 4] = c;\n            indices[offset + 5] = d;\n            offset += 6;\n        }\n    }\n    return {\n        attribs: {\n            position: {\n                buffer: vertices,\n            },\n            normal: {\n                buffer: normals,\n            },\n            uv: {\n                buffer: uvs,\n            },\n        },\n        elements: {\n            buffer: indices,\n        },\n        drawType: 'TRIANGLES',\n        itemCount: indices.length,\n    };\n}\n//# sourceMappingURL=plane.js.map","export default \"#version 300 es\\nprecision highp float;\\n#define GLSLIFY 1\\n\\nuniform vec4 color;\\n\\nin vec4 vPosition;\\nin vec4 vNormal;\\nin vec4 vUv;\\n\\nlayout(location=0) out vec4 fragPosition;\\nlayout(location=1) out vec4 fragNormal;\\nlayout(location=2) out vec4 fragUV;\\nlayout(location=3) out vec4 fragColor;\\n\\nvoid main() {\\n\\tfragPosition = vPosition;\\n\\tfragNormal = vNormal;\\n\\tfragUV = vUv;\\n\\tfragColor = color;\\n}\\n\";","export default \"#version 300 es\\n#define GLSLIFY 1\\nin vec3 position;\\nin vec3 normal;\\nin vec2 uv;\\n\\nuniform mat4 transform;\\nuniform mat4 projection;\\nuniform mat4 view;\\n\\nout vec4 vPosition;\\nout vec4 vNormal;\\nout vec4 vUv;\\n\\nvoid main() {\\n\\tvPosition = transform * vec4(position, 1.0);\\n\\tvNormal = transform * vec4(normal, 0.0);\\n\\tvUv = vec4(uv, 0.0, 0.0);\\n\\tgl_Position = projection * view * vPosition;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\nvec4 diffuseAreaLight(sampler2D tex, mat4 lightMat, vec3 V, vec3 N, vec2 areaSize) {\\n\\tfloat width = areaSize.x / 2.0;\\n\\tfloat height = areaSize.y / 2.0;\\n\\n\\tvec3 right = normalize(lightMat[0].xyz);\\n\\tvec3 up = normalize(lightMat[1].xyz);\\n\\tvec3 normal = normalize(lightMat[2].xyz);\\n\\tvec3 pos = lightMat[3].xyz;\\n\\n\\t/*project onto plane and calculate direction from center to the projection*/\\n\\tfloat dis = dot(normal, V - pos);\\n\\tvec3 projection = V - dis * normal;\\n\\tvec3 dir = projection - pos;\\n\\n\\t/*calculate distance from area*/\\n\\tvec2 diagonal = vec2(dot(dir, right), dot(dir, up));\\n\\tvec2 nearest2D = vec2(clamp(diagonal.x, -width, width), clamp(diagonal.y, -height, height));\\n\\tvec3 nearestPointInside = pos + (right * nearest2D.x + up * nearest2D.y);\\n\\n\\tvec3 L = normalize(nearestPointInside - V);\\n\\n\\tfloat nDotL = dot(-normal, L);\\n\\n\\tfloat d = distance(V, nearestPointInside); //real distance to area rectangle\\n\\n\\tvec4 diff = vec4(0.0);\\n\\n\\tif (nDotL > 0.0) {\\n\\t\\tfloat lod = pow(d, 0.03) * 6.0;\\n\\n\\t\\tvec2 co = ((diagonal.xy / (d + 1.0)) + vec2(width, height)) / areaSize;\\n\\t\\t//co.x = 1.0 - co.x;\\n\\n\\t\\tvec4 t00 = texture2D(tex, co, lod);\\n\\t\\tvec4 t01 = texture2D(tex, co, lod + 1.0);\\n\\n\\t\\tdiff = mix(t00, t01, fract(lod + 1.5));\\n\\n\\t\\tfloat NDotL = clamp(dot(-N, L), 0.0, 1.0);\\n\\t\\tnDotL *= NDotL * 0.5 + 0.5; //distribute over hemisphere, looks better. Should be dependant of area size.\\n\\n\\t\\tfloat attenuation = 1.0 / (1.0 + d);\\n\\n\\t\\tdiff *= nDotL * attenuation;\\n\\t}\\n\\n\\tdiff.a = 1.0;\\n\\treturn diff;\\n}\\n\\nfloat specularAreaLight(mat4 lightMat, vec3 V, vec3 N, vec3 eyePosition, vec2 areaSize, float gloss) {\\n\\n\\tvec3 pos = lightMat[3].xyz;\\n\\tvec3 normal = normalize(lightMat[2].xyz);\\n\\n\\tvec3 direction = eyePosition - V;\\n\\n\\tvec3 R = reflect(normalize(direction), -N);\\n\\tfloat rDotN = dot(normal, R);\\n\\n\\tif (rDotN > 0.0) {\\n\\t\\tvec3 E = V + R * (dot(normal, pos - V) / rDotN); // line-plane intersection\\n\\t\\tvec3 dir = E - pos;\\n\\n\\t\\tfloat width = areaSize.x / 2.0;\\n\\t\\tfloat height = areaSize.y / 2.0;\\n\\n\\t\\tvec3 right = normalize(lightMat[0].xyz);\\n\\t\\tvec3 up = normalize(lightMat[1].xyz);\\n\\n\\t\\t/*calculate distance from area*/\\n\\t\\tvec2 diagonal = vec2(dot(dir, right), dot(dir, up));\\n\\t\\tvec2 nearest2D = vec2(clamp(diagonal.x, -width, width), clamp(diagonal.y, -height, height));\\n\\t\\tvec3 nearestPointInside = pos + (right * nearest2D.x + up * nearest2D.y);\\n\\n\\t\\tfloat dist = distance(V, nearestPointInside); //real distance to area rectangle\\n\\n\\t\\tfloat rDotL = max(0.0, dot(R, normalize(V - nearestPointInside)));\\n\\n\\t\\t// reduce glow of reflected points that are fare outside of the light area\\n\\t\\tfloat falloff = min(1.0, length(vec2(width, height)) / length(diagonal));\\n\\n\\t\\t// remove artefact when intersection point is close to the vertex\\n\\t\\tfloat closeness = clamp(distance(E, V) / dist, 0.0, 1.0);\\n\\t\\t//float closeness = 1.0;\\n\\n\\t\\tfloat attenuation = 1.0 / (pow(dist, 0.5));\\n\\n\\t\\treturn pow(max(rDotL, 0.0), gloss) * falloff * closeness * attenuation;\\n\\t} else {\\n\\t\\treturn 0.0;\\n\\t}\\n}\\n\\nuniform sampler2D colors;\\nuniform sampler2D positions;\\nuniform sampler2D normals;\\nuniform sampler2D uvs;\\nuniform sampler2D tex;\\n\\nuniform vec3 eyePosition;\\nuniform mat4 lightMat;\\nuniform mat4 view;\\n\\nvarying vec2 coords;\\n\\nconst vec2 lightSize = vec2(10.0);\\n\\nvoid main() {\\n\\n\\tvec3 position = texture2D(positions, coords).xyz;\\n\\tvec3 normal = normalize(texture2D(normals, coords).xyz);\\n\\tvec4 uv = texture2D(uvs, coords);\\n\\tvec4 color = texture2D(colors, coords);\\n\\n\\tif (color.a < 1.0) {\\n\\t\\tvec4 texColor = texture2D(tex, uv.xy);\\n\\t\\tgl_FragColor = vec4(texColor.rgb * color.rgb, 1.0);\\n\\t} else {\\n\\t\\t// paint ground grid\\n\\t\\tfloat vertical = fract(uv.x * 100.0);\\n\\t\\tfloat horizontal = fract(uv.y * 100.0);\\n\\t\\tif (vertical >= 0.95 || horizontal >= 0.95) gl_FragColor.b += 0.3;\\n\\n\\t\\t// light calculation\\n\\t\\tvec4 diffuseColor = diffuseAreaLight(tex, lightMat, position, normal, lightSize);\\n\\t\\tdiffuseColor = vec4(\\n\\t\\t\\tpow(diffuseColor.r, 0.7),\\n\\t\\t\\tpow(diffuseColor.g, 0.7),\\n\\t\\t\\tpow(diffuseColor.b, 0.7),\\n\\t\\t\\t1.0\\n\\t\\t);\\n\\t\\tdiffuseColor *= color * 4.0;\\n\\n\\t\\tfloat specularPower = specularAreaLight(lightMat, position, normal, eyePosition, lightSize, 100.0);\\n\\n\\t\\tvec3 specularColor = vec3(0.9) * specularPower * color.xyz;\\n\\t\\t// gl_FragColor += vec4(specularColor / 2.0, 1.0);\\n\\t\\tgl_FragColor += diffuseColor / 1.5;\\n\\t}\\n}\\n\";","import './state'\n\nimport { repeat } from '../../shared-utils/scheduler'\nimport { events, Q } from './context'\nimport { light, scene } from './renderer'\n\nrepeat((tpf) => {\n\tQ.get('device').tpf = tpf\n\tQ.emit(events.FRAME)\n\tQ.painter.compose(scene, light).display(light)\n}, 'loop')\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n"],"sourceRoot":""}