{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/contants.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/dom.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/asset-lib.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/render-utils.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/form.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/texture.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/render-target.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/frame.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/layer.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/shade.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/sketch.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/painter.js","webpack:///./shared-utils/painterState.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/object.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/predicates.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/utils/context.js","webpack:///./shared-utils/vr/camera.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/common.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/mat4.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/vec3.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/vec4.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/quat.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/mat3.js","webpack:///./shared-utils/vr/perspectiveViewport.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/sequence.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/utils/stackgl.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/utils/geometry/plane.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/keyboard.js","webpack:///./shared-utils/shaders/effects/blur.ts","webpack:///./shared-utils/shaders/effects/blur_with_alpha.glsl","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/math/geometry.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/math/coords.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/math/vectors.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/geo-3d-box/box.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/math/random.js","webpack:///./homage/state/ground.ts","webpack:///./homage/context.ts","webpack:///./homage/geometries.ts","webpack:///./homage/state/videos.ts","webpack:///./homage/state/screens.ts","webpack:///./homage/shaders.ts","webpack:///./homage/glsl/ground-vert.glsl","webpack:///./homage/glsl/ground-frag.glsl","webpack:///./homage/glsl/object-vert.glsl","webpack:///./homage/glsl/object-frag.glsl","webpack:///./homage/glsl/screen-vert.glsl","webpack:///./homage/glsl/screen-frag.glsl","webpack:///./homage/renderer.ts","webpack:///./homage/index.ts","webpack:///./shared-utils/scheduler.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/pointer.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GEOMETRY_PROP_POSITION","GEOMETRY_PROP_NORMAL","GEOMETRY_PROP_UV","UNIFORM_SOURCE_TEXTURE","VARYING_UV_COORDS","GL_TYPE","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","FLOAT_MAT2X3","FLOAT_MAT2X4","FLOAT_MAT3X2","FLOAT_MAT3X4","FLOAT_MAT4X2","FLOAT_MAT4X3","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_3D","TEXTURE_2D_ARRAY","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","FLOAT_32_UNSIGNED_INT_24_8_REV","UNSIGNED_INT_24_8","TEXTURE_FORMAT","TEXTURE_FORMAT_INTERNAL","windowSize","callback","resize","width","window","innerWidth","height","innerHeight","addEventListener","removeEventListener","defaultTextureSettings","defaultForms","renderQuad","attribs","buffer","Float32Array","storeType","drawType","itemCount","defaultShaders","basicEffect","vert","frag","getBindPointForSamplerType","type","typeMap","bindPoint","intSetter","gl","location","v","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","texture","activeTexture","TEXTURE0","bindTexture","_texture","samplerArraySetter","size","units","Int32Array","textures","index","Type","setter","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Uint32Array","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","floatAttribSetter","typeInfo","b","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","itemSize","normalize","stride","offset","intAttribSetter","vertexAttribIPointer","matAttribSetter","defaultSize","count","numComponents","rowOffset","attrTypeMap","Int8Array","Uint8Array","Int16Array","Uint16Array","applyDrawSettings","settings","enable","setting","disable","blendFunc","apply","depthFunc","cullFace","frontFace","lineWidth","colorMask","depthMask","clearColor","clearDepth","clearBits","clear","revertDrawSettings","formCounter","_painter","id","this","data","_drawType","_itemCount","_attribs","attribData","createBuffer","bufferData","elements","_elements","glType","typedArray","Uint8ClampedArray","Error","getGLTypeForTypedArray","ELEMENT_ARRAY_BUFFER","deleteBuffer","undefined","textureCount","_data","createTexture","wrap","wrapS","wrapT","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","magFilter","TEXTURE_MAG_FILTER","minFilter","TEXTURE_MIN_FILTER","asset","texImage2D","RGBA","isWebGL2","RGBA32F","flipY","pixelStorei","UNPACK_FLIP_Y_WEBGL","indexOf","generateMipmap","assign","deleteTexture","antialias","frameBuffer","antiAliasFrameBuffer","antiAliasRenderBuffer","depthBuffer","bufferStructure","_a","length","every","buf","createFramebuffer","createRenderbuffer","some","getExtension","texCount","bufferAttachments","COLOR_ATTACHMENT0","bindFramebuffer","FRAMEBUFFER","glx","attachment","COLOR_ATTACHMENT0_WEBGL","drawBuffers","drawBuffersWEBGL","gl2","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","Math","min","getParameter","MAX_SAMPLES","RGBA8","framebufferRenderbuffer","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","renderbufferStorage","update","framebufferTexture2D","err","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","console","error","deleteFramebuffer","deleteRenderbuffer","frameCount","layers","_targets","_textures","_b","_c","_d","Array","isArray","selfReferencing","layerCount","reduce","layer","_uniforms","targetCount","drawingBufferWidth","drawingBufferHeight","_destroyTargets","targetData","forEach","tex","destroy","tmp","Layer","sketches","sketch","shade","uniforms","shadeCounter","fragSource","trim","vertSource","program","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","_program","_frag","_vert","attachShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","addLineNumbers","linkProgram","getProgramParameter","LINK_STATUS","lastError","getProgramInfoLog","_uniformSetters","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","substr","toString","uniformSetters","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","createUniformSetters","_attributeSetters","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","createAttributeSetters","deleteProgram","deleteShader","src","split","map","line","join","sketchCounter","Sketch","drawSettings","_drawSettings","form","canvas","opts","maxBufferSamples","useWebGL1","getContext","sizeMultiplier","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","getDefaultLayerSettings","_renderQuad","createForm","_staticSketch","createFlatSketch","createSketch","createShade","createLayer","globalUniforms","viewport","draw","frames","frame","renderFrame","idx","source","image","sources","useProgram","shadeForm","shadeUniforms","drawInstance","drawElements","drawArrays","renderLayer","target","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","clearBufferfv","COLOR","blitFramebuffer","COLOR_BUFFER_BIT","LINEAR","layerPasses","j","_swapTargets","currentCanvas","painter","getPainter","state","device","cancelWindow","cancelPointer","cancelKeys","dispatch","baseEvents","RESIZE","pointer","element","enableRightButton","holdRadius","holdDelay","keyboard","k","keys","init","getForm","shades","getShade","getSketch","getLayer","getFrame","createFrame","effects","getEffect","createEffect","tpf","prop","set","val","reset","deepOverride","obj1","obj2","opt","ignore","val1","val2","getState","systems","addSystem","event","FRAME","equalArray","arr1","arr2","equalObject","k1","makeClear","clearArray","res","item","toUpperCase","resizeCanvas","multiplier","clientWidth","clientHeight","PerspectiveCamera","props","position","rotationX","rotationY","rotationXMat","rotationYMat","projectionMat","viewMat","needsUpdateView","updateRotationX","updateRotationY","amount","fromXRotation","fromYRotation","dist","fromValues","add","scale","fromTranslation","multiply","invert","super","fovy","PI","aspect","near","far","needsUpdateProjection","perspective","WithKeyNavigation","Cam","speed","UP","W","holding","pressed","RIGHT","moveForward","DOWN","S","LEFT","A","moveLeft","D","WithMouseRotation","_oldMouse","x","y","dragging","deltaX","drag","deltaY","EPSILON","ARRAY_TYPE","RANDOM","random","out","clone","a","copy","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","identity","transpose","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","b0","b1","b2","b3","translate","z","rotate","rad","axis","b12","b20","b21","b22","len","hypot","sin","cos","rotateX","rotateY","rotateZ","fromScaling","fromRotation","fromZRotation","fromRotationTranslation","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","sqrt","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","left","right","bottom","top","rl","tb","nf","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","targetTo","str","frob","subtract","multiplyScalar","multiplyScalarAndAdd","exactEquals","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","max","arguments","mul","sub","divide","ceil","floor","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","mag","cosine","acos","zero","vec","div","sqrDist","sqrLen","fn","arg","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","dot","invDot","conjugate","fromMat3","fRoot","fTrace","fromEuler","halfToRad","cx","cy","cz","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","rotationTo","sqlerp","setAxes","view","ViewPort","moveSpeed","lookSpeed","camera","initPerspectiveViewport","e","viewPort","updatePosFromInput","dragInfo","updateRotFromPointer","pickRandom","arr","doTimes","times","zip","as","bs","flatten","array","subarray","currentLength","mapcat","flatMap","coll","result","iterator","obj","each","convertStackGLGeometry","stackglGeometry","geometry","plane","widthSegments","heightSegments","widthHalf","heightHalf","gridX","gridY","gridX1","gridY1","segmentWidth","segmentHeight","vertices","normals","uvs","iy","ix","offset2","indices","normal","uv","Keys","cb","onKeydown","keyCode","Date","now","onKeyup","getBlurByAlphaEffect","strength","layerOpts","startFrame","startLayer","strengthOffset","blurRatioVertical","scaleFactor","passData","push","direction","DEPTH_TEST","planeFromNormalAndCoplanarPoint","point","mirrorMatrixFromPlane","getYawQuat","rotYAngle","getRollQuat","rotZAngle","polarToCartesian2D","phi","vec1","vec2","scalar","sum","v1","v2","cross2D","_flatten","results","_generatePanel","config","rows","step","halfY","grid","_generateRow","_generateGrid","cells","_generateCells","positions","_generateUvs","vertexCount","halfX","row","_clonePanel","panel","_makeNormals","slice","_generateBox","panels","segs","segments","zp","xp","yp","zm","xm","ym","_generateBoxPanels","offsetCells","cell","_offsetCellIndices","properties","_createConfig","randInt","int","randIntInRange","from","to","normalRand","transform","groundMirrorView","planeEquation","mirrorMatrix","document","getElementById","events","planeSize","planeForm","boxForm","names","videos","Promise","all","video","createElement","crossOrigin","loop","playsinline","autoplay","source1","source2","appendChild","createVideo","rej","setTimeout","clearTimeout","radius","rotations","_","rot","coords","screenTransforms","pos","pedestalTransforms","lights","lightSize","groundShade","objectShade","screenShade","updateDrawSettings","videoTextureData","videoTextures","videoLights","groundSketch","reflection","mirrorScene","ground","screens","lightTex","screenSketch","pedestalSketch","sceneLayer","projection","withDistance","mirrorSceneLayer","groundHeight","blurEffect","scene","then","vs","startVideos","play","compose","display","updateOnce","updateRepeat","willUpdate","uidCounter","oldTime","processUpdates","time","updates","requestAnimationFrame","once","repeat","stop","Buttons","MIDDLE","dX","dY","xMax","yMax","oX","oY","timeout","onPointerDown","isPrimary","button","clientX","clientY","onPointerUp","_e","onPointerMove","preventDefault"],"mappings":"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","file":"homage/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 64);\n","export const GEOMETRY_PROP_POSITION = 'position';\nexport const GEOMETRY_PROP_NORMAL = 'normal';\nexport const GEOMETRY_PROP_UV = 'uv';\nexport const UNIFORM_SOURCE_TEXTURE = 'source';\nexport const VARYING_UV_COORDS = 'coords';\nexport const GL_TYPE = {\n    FLOAT: 0x1406,\n    FLOAT_VEC2: 0x8b50,\n    FLOAT_VEC3: 0x8b51,\n    FLOAT_VEC4: 0x8b52,\n    INT: 0x1404,\n    INT_VEC2: 0x8b53,\n    INT_VEC3: 0x8b54,\n    INT_VEC4: 0x8b55,\n    BOOL: 0x8b56,\n    BOOL_VEC2: 0x8b57,\n    BOOL_VEC3: 0x8b58,\n    BOOL_VEC4: 0x8b59,\n    FLOAT_MAT2: 0x8b5a,\n    FLOAT_MAT3: 0x8b5b,\n    FLOAT_MAT4: 0x8b5c,\n    SAMPLER_2D: 0x8b5e,\n    SAMPLER_CUBE: 0x8b60,\n    SAMPLER_3D: 0x8b5f,\n    SAMPLER_2D_SHADOW: 0x8b62,\n    FLOAT_MAT2X3: 0x8b65,\n    FLOAT_MAT2X4: 0x8b66,\n    FLOAT_MAT3X2: 0x8b67,\n    FLOAT_MAT3X4: 0x8b68,\n    FLOAT_MAT4X2: 0x8b69,\n    FLOAT_MAT4X3: 0x8b6a,\n    SAMPLER_2D_ARRAY: 0x8dc1,\n    SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n    SAMPLER_CUBE_SHADOW: 0x8dc5,\n    UNSIGNED_INT: 0x1405,\n    UNSIGNED_INT_VEC2: 0x8dc6,\n    UNSIGNED_INT_VEC3: 0x8dc7,\n    UNSIGNED_INT_VEC4: 0x8dc8,\n    INT_SAMPLER_2D: 0x8dca,\n    INT_SAMPLER_3D: 0x8dcb,\n    INT_SAMPLER_CUBE: 0x8dcc,\n    INT_SAMPLER_2D_ARRAY: 0x8dcf,\n    UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n    UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n    UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n    TEXTURE_2D: 0x0de1,\n    TEXTURE_CUBE_MAP: 0x8513,\n    TEXTURE_3D: 0x806f,\n    TEXTURE_2D_ARRAY: 0x8c1a,\n    BYTE: 0x1400,\n    UNSIGNED_BYTE: 0x1401,\n    SHORT: 0x1402,\n    UNSIGNED_SHORT: 0x1403,\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\n    UNSIGNED_SHORT_5_6_5: 0x8363,\n    HALF_FLOAT: 0x140b,\n    UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n    UNSIGNED_INT_10F_11F_11F_REV: 0x8c3b,\n    UNSIGNED_INT_5_9_9_9_REV: 0x8c3e,\n    FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8dad,\n    UNSIGNED_INT_24_8: 0x84fa,\n};\nexport const TEXTURE_FORMAT = {\n    RED: 0x1903,\n    RG: 0x8227,\n    RGB: 0x1907,\n    RGBA: 0x1908,\n    RED_INTEGER: 0x8d94,\n    RG_INTEGER: 0x8228,\n    RGB_INTEGER: 0x8d98,\n    RGBA_INTEGER: 0x8d99,\n    DEPTH_COMPONENT: 0x1902,\n};\nexport const TEXTURE_FORMAT_INTERNAL = {\n    R8: 0x8229,\n    RG8: 0x822b,\n    RGB8: 0x8051,\n    RGBA8: 0x8058,\n    R16F: 0x822d,\n    RG16F: 0x822f,\n    RGB16F: 0x881b,\n    RGBA16F: 0x881a,\n    R32F: 0x822e,\n    RG32F: 0x8230,\n    RGB32F: 0x8815,\n    RGBA32F: 0x8814,\n    R8I: 0x8231,\n    RG8I: 0x8237,\n    RGB8I: 0x8d8f,\n    RGBA8I: 0x8d8e,\n    R8UI: 0x8232,\n    RG8UI: 0x8238,\n    RGB8UI: 0x8d7d,\n    RGBA8UI: 0x8d7c,\n    R16I: 0x8233,\n    RG16I: 0x8239,\n    RGB16I: 0x8d89,\n    RGBA16I: 0x8d88,\n    R16UI: 0x8234,\n    RG16UI: 0x823a,\n    RGB16UI: 0x8d77,\n    RGBA16UI: 0x8d76,\n    R32I: 0x8235,\n    RG32I: 0x823b,\n    RGB32I: 0x8d83,\n    RGBA32I: 0x8d82,\n    R32UI: 0x8236,\n    RG32UI: 0x823c,\n    RGB32UI: 0x8d71,\n    RGBA32UI: 0x8d70,\n    RGB10_A2: 0x8059,\n    RGB10_A2UI: 0x906f,\n    SRGB: 0x8c40,\n    SRGB8: 0x8c41,\n    SRGB8_ALPHA8: 0x8c43,\n    R8_SNORM: 0x8f94,\n    RG8_SNORM: 0x8f95,\n    RGB8_SNORM: 0x8f96,\n    RGBA8_SNORM: 0x8f97,\n    DEPTH_COMPONENT16: 0x81a5,\n    DEPTH_COMPONENT24: 0x81a6,\n    DEPTH_COMPONENT32F: 0x8cac,\n};\nexport const TEXTURE_FORMAT_DEFAULTS = {\n    [GL_TYPE.UNSIGNED_BYTE]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R8,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG8,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB8,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA8,\n    },\n    [GL_TYPE.UNSIGNED_SHORT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT16,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16UI,\n    },\n    [GL_TYPE.UNSIGNED_INT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT24,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R32UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG32UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB32UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA32UI,\n    },\n    [GL_TYPE.FLOAT]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16F,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16F,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16F,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16F,\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT32F,\n    },\n    COMPRESSED_TYPES: {},\n};\n//# sourceMappingURL=contants.js.map","export function windowSize(callback) {\n    function resize() {\n        callback({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    }\n    window.addEventListener('resize', resize);\n    resize();\n    return function stop() {\n        window.removeEventListener('resize', resize);\n    };\n}\nexport function windowSizeObserver() {\n    const state = {\n        size: { width: 0, height: 0 },\n    };\n    const destroy = windowSize(s => (state.size = s));\n    return { state, destroy };\n}\n//# sourceMappingURL=dom.js.map","import * as constants from './contants';\nexport const defaultTextureSettings = {\n    wrap: 'CLAMP_TO_EDGE',\n    minFilter: 'LINEAR',\n    magFilter: 'NEAREST',\n};\nexport function getDefaultLayerSettings(gl) {\n    return {\n        clearColor: [0.0, 0.0, 0.0, 1.0],\n        blendFunc: [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA],\n    };\n}\nexport const defaultForms = {\n    renderQuad: {\n        attribs: {\n            [constants.GEOMETRY_PROP_POSITION]: {\n                buffer: new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1]),\n                storeType: 'STATIC',\n            },\n            [constants.GEOMETRY_PROP_UV]: {\n                buffer: new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]),\n                storeType: 'STATIC',\n            },\n        },\n        drawType: 'TRIANGLE_STRIP',\n        itemCount: 4,\n    },\n};\nexport const defaultShaders = {\n    basicEffect: {\n        vert: `\nattribute vec2 ${constants.GEOMETRY_PROP_POSITION};\nattribute vec2 ${constants.GEOMETRY_PROP_UV};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\t${constants.VARYING_UV_COORDS} = ${constants.GEOMETRY_PROP_UV};\n\tgl_Position = vec4(${constants.GEOMETRY_PROP_POSITION}, 0.0, 1.0);\n}`,\n        frag: `precision mediump float;\nuniform sampler2D ${constants.UNIFORM_SOURCE_TEXTURE};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\tgl_FragColor = texture2D(${constants.UNIFORM_SOURCE_TEXTURE}, ${constants.VARYING_UV_COORDS});\n}`,\n    },\n};\n//# sourceMappingURL=asset-lib.js.map","import { GL_TYPE } from './contants';\n// Attrib and Uniform Setters\nfunction getBindPointForSamplerType(type) {\n    return typeMap[type].bindPoint;\n}\nfunction floatSetter(gl, location) {\n    return (v) => {\n        gl.uniform1f(location, v);\n    };\n}\nfunction floatArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1fv(location, v);\n    };\n}\nfunction floatVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2fv(location, v);\n    };\n}\nfunction floatVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3fv(location, v);\n    };\n}\nfunction floatVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4fv(location, v);\n    };\n}\nfunction intSetter(gl, location) {\n    return (v) => {\n        gl.uniform1i(location, v);\n    };\n}\nfunction intArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1iv(location, v);\n    };\n}\nfunction intVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2iv(location, v);\n    };\n}\nfunction intVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3iv(location, v);\n    };\n}\nfunction intVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4iv(location, v);\n    };\n}\nfunction uintSetter(gl, location) {\n    return (v) => {\n        gl.uniform1ui(location, v);\n    };\n}\nfunction uintArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1uiv(location, v);\n    };\n}\nfunction uintVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2uiv(location, v);\n    };\n}\nfunction uintVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3uiv(location, v);\n    };\n}\nfunction uintVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4uiv(location, v);\n    };\n}\nfunction floatMat2Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n    };\n}\nfunction floatMat3Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n    };\n}\nfunction floatMat4Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n    };\n}\nfunction floatMat23Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x3fv(location, false, v);\n    };\n}\nfunction floatMat32Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x2fv(location, false, v);\n    };\n}\nfunction floatMat24Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x4fv(location, false, v);\n    };\n}\nfunction floatMat42Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x2fv(location, false, v);\n    };\n}\nfunction floatMat34Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x4fv(location, false, v);\n    };\n}\nfunction floatMat43Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x3fv(location, false, v);\n    };\n}\nfunction samplerSetter(gl, type, unit, location) {\n    const bindPoint = getBindPointForSamplerType(type);\n    return (texture) => {\n        gl.uniform1i(location, unit);\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(bindPoint, texture._texture);\n    };\n}\nfunction samplerArraySetter(gl, type, unit, location, size) {\n    const bindPoint = getBindPointForSamplerType(type);\n    const units = new Int32Array(size);\n    for (let i = 0; i < size; ++i) {\n        units[i] = unit + i;\n    }\n    return (textures) => {\n        gl.uniform1iv(location, units);\n        for (const index in textures) {\n            gl.activeTexture(gl.TEXTURE0 + units[index]);\n            gl.bindTexture(bindPoint, textures[index]._texture);\n        }\n    };\n}\nfunction isSamplerInfo(info) {\n    return info.Type === null;\n}\nconst typeMap = {\n    [GL_TYPE.FLOAT]: {\n        Type: Float32Array,\n        size: 4,\n        setter: floatSetter,\n        arraySetter: floatArraySetter,\n    },\n    [GL_TYPE.FLOAT_VEC2]: {\n        Type: Float32Array,\n        size: 8,\n        setter: floatVec2Setter,\n    },\n    [GL_TYPE.FLOAT_VEC3]: {\n        Type: Float32Array,\n        size: 12,\n        setter: floatVec3Setter,\n    },\n    [GL_TYPE.FLOAT_VEC4]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatVec4Setter,\n    },\n    [GL_TYPE.INT]: {\n        Type: Int32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.INT_VEC2]: { Type: Int32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.INT_VEC3]: { Type: Int32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.INT_VEC4]: { Type: Int32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.UNSIGNED_INT]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: uintSetter,\n        arraySetter: uintArraySetter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        Type: Uint32Array,\n        size: 8,\n        setter: uintVec2Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        Type: Uint32Array,\n        size: 12,\n        setter: uintVec3Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        Type: Uint32Array,\n        size: 16,\n        setter: uintVec4Setter,\n    },\n    [GL_TYPE.BOOL]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.BOOL_VEC2]: { Type: Uint32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.BOOL_VEC3]: { Type: Uint32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.BOOL_VEC4]: { Type: Uint32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.FLOAT_MAT2]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatMat2Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3]: {\n        Type: Float32Array,\n        size: 36,\n        setter: floatMat3Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4]: {\n        Type: Float32Array,\n        size: 64,\n        setter: floatMat4Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X3]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat23Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X4]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat24Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X2]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat32Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X4]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat34Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X2]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat42Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X3]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat43Setter,\n    },\n    [GL_TYPE.SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.SAMPLER_2D_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_CUBE_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n};\nfunction floatAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribPointer(location, typeInfo.itemSize, GL_TYPE.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n    };\n}\nfunction intAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribIPointer(location, typeInfo.itemSize, GL_TYPE.INT, b.stride || 0, b.offset || 0);\n    };\n}\nfunction matAttribSetter(gl, location, typeInfo) {\n    const defaultSize = typeInfo.size;\n    const count = typeInfo.count;\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        const numComponents = defaultSize;\n        const size = numComponents / count;\n        const typeInfo = typeMap[GL_TYPE.FLOAT];\n        const stride = typeInfo.size * numComponents;\n        const normalize = b.normalize || false;\n        const offset = b.offset || 0;\n        const rowOffset = stride / count;\n        for (let i = 0; i < count; ++i) {\n            gl.enableVertexAttribArray(location + i);\n            gl.vertexAttribPointer(location + i, size, GL_TYPE.FLOAT, normalize, stride, offset + rowOffset * i);\n        }\n    };\n}\nconst attrTypeMap = {\n    [GL_TYPE.FLOAT]: { size: 4, setter: floatAttribSetter, itemSize: 1 },\n    [GL_TYPE.FLOAT_VEC2]: { size: 8, setter: floatAttribSetter, itemSize: 2 },\n    [GL_TYPE.FLOAT_VEC3]: { size: 12, setter: floatAttribSetter, itemSize: 3 },\n    [GL_TYPE.FLOAT_VEC4]: { size: 16, setter: floatAttribSetter, itemSize: 4 },\n    [GL_TYPE.INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.INT_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.INT_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.INT_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.UNSIGNED_INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        size: 8,\n        setter: intAttribSetter,\n        itemSize: 2,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        size: 12,\n        setter: intAttribSetter,\n        itemSize: 3,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        size: 16,\n        setter: intAttribSetter,\n        itemSize: 4,\n    },\n    [GL_TYPE.BOOL]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.BOOL_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.BOOL_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.BOOL_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.FLOAT_MAT2]: { size: 4, setter: matAttribSetter, count: 2 },\n    [GL_TYPE.FLOAT_MAT3]: { size: 9, setter: matAttribSetter, count: 3 },\n    [GL_TYPE.FLOAT_MAT4]: { size: 16, setter: matAttribSetter, count: 4 },\n};\nexport function createUniformSetters(gl, program) {\n    let textureUnit = 0;\n    function createUniformSetter(program, uniformInfo) {\n        const location = gl.getUniformLocation(program, uniformInfo.name);\n        const isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]';\n        const type = uniformInfo.type;\n        const typeInfo = typeMap[type];\n        if (!typeInfo) {\n            throw new Error('unknown type: 0x' + type.toString(16)); // we should never get here.\n        }\n        if (location == null) {\n            return;\n        }\n        let setter;\n        if (isSamplerInfo(typeInfo)) {\n            // it's a sampler\n            const unit = textureUnit;\n            textureUnit += uniformInfo.size;\n            if (isArray) {\n                setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n            }\n            else {\n                setter = typeInfo.setter(gl, type, unit, location);\n            }\n        }\n        else {\n            if (typeInfo.arraySetter && isArray) {\n                setter = typeInfo.arraySetter(gl, location);\n            }\n            else {\n                setter = typeInfo.setter(gl, location);\n            }\n        }\n        return { setter, location };\n    }\n    const uniformSetters = {};\n    const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < numUniforms; ++i) {\n        const uniformInfo = gl.getActiveUniform(program, i);\n        if (!uniformInfo) {\n            continue;\n        }\n        let name = uniformInfo.name;\n        // remove the array suffix.\n        if (name.substr(-3) === '[0]') {\n            name = name.substr(0, name.length - 3);\n        }\n        if (program) {\n            const setter = createUniformSetter(program, uniformInfo);\n            if (setter) {\n                uniformSetters[name] = setter;\n            }\n        }\n    }\n    return uniformSetters;\n}\nexport function createAttributeSetters(gl, program) {\n    const attribSetters = {};\n    const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < numAttribs; i++) {\n        const attribInfo = gl.getActiveAttrib(program, i);\n        if (!attribInfo) {\n            break;\n        }\n        const location = gl.getAttribLocation(program, attribInfo.name);\n        const typeInfo = attrTypeMap[attribInfo.type];\n        const setter = typeInfo.setter(gl, location, typeInfo);\n        attribSetters[attribInfo.name] = { setter, location };\n    }\n    return attribSetters;\n}\n// Type helpers\nexport const glTypeToTypedArray = {\n    [GL_TYPE.BYTE]: Int8Array,\n    [GL_TYPE.UNSIGNED_BYTE]: Uint8Array,\n    [GL_TYPE.SHORT]: Int16Array,\n    [GL_TYPE.UNSIGNED_SHORT]: Uint16Array,\n    [GL_TYPE.INT]: Int32Array,\n    [GL_TYPE.UNSIGNED_INT]: Uint32Array,\n    [GL_TYPE.FLOAT]: Float32Array,\n    [GL_TYPE.UNSIGNED_SHORT_4_4_4_4]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_5_5_1]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_6_5]: Uint16Array,\n    [GL_TYPE.HALF_FLOAT]: Uint16Array,\n    [GL_TYPE.UNSIGNED_INT_2_10_10_10_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_10F_11F_11F_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_5_9_9_9_REV]: Uint32Array,\n    [GL_TYPE.FLOAT_32_UNSIGNED_INT_24_8_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_24_8]: Uint32Array,\n};\nexport function getGLTypeForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArray instanceof Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArray instanceof Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArray instanceof Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArray instanceof Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArray instanceof Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\nexport function getGLTypeForTypedArrayType(typedArrayType) {\n    if (typedArrayType === Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArrayType === Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArrayType === Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArrayType === Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArrayType === Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArrayType === Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\n// Settings\nexport function applyDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.enable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.blendFunc) {\n        gl.blendFunc.apply(gl, settings.blendFunc);\n    }\n    if (settings.depthFunc != null) {\n        gl.depthFunc(settings.depthFunc);\n    }\n    if (settings.cullFace != null) {\n        gl.cullFace(settings.cullFace);\n    }\n    if (settings.frontFace != null) {\n        gl.frontFace(settings.frontFace);\n    }\n    if (settings.lineWidth != null) {\n        gl.lineWidth(settings.lineWidth);\n    }\n    if (settings.colorMask) {\n        gl.colorMask.apply(gl, settings.colorMask);\n    }\n    if (settings.depthMask != null) {\n        gl.depthMask(settings.depthMask);\n    }\n    if (settings.clearColor) {\n        gl.clearColor.apply(gl, settings.clearColor);\n    }\n    if (settings.clearDepth != null) {\n        gl.clearDepth(settings.clearDepth);\n    }\n    if (settings.clearBits != null) {\n        gl.clear(settings.clearBits);\n    }\n}\nexport function revertDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.enable(setting);\n        }\n    }\n}\n//# sourceMappingURL=render-utils.js.map","import { getGLTypeForTypedArray } from './render-utils';\nlet formCounter = 1;\nexport class Form {\n    constructor(_painter, id = 'Form' + formCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (data.drawType) {\n            this._drawType = gl[data.drawType];\n        }\n        if (data.itemCount) {\n            this._itemCount = data.itemCount;\n        }\n        this._attribs = this._attribs || {};\n        for (const id in data.attribs) {\n            const attribData = data.attribs[id];\n            if (this._attribs[id] == null) {\n                this._attribs[id] = {\n                    buffer: gl.createBuffer(),\n                };\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._attribs[id].buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, attribData.buffer, gl[(attribData.storeType || 'STATIC') + '_DRAW']);\n        }\n        if (data.elements) {\n            const buffer = data.elements.buffer;\n            if (this._elements == null) {\n                this._elements = {\n                    buffer: gl.createBuffer(),\n                    glType: null,\n                };\n            }\n            this._elements.glType = getGLTypeForTypedArray(buffer);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._elements.buffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, buffer, gl[(data.elements.storeType || 'STATIC') + '_DRAW']);\n        }\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        for (const id in this._attribs) {\n            gl.deleteBuffer(this._attribs[id].buffer);\n        }\n        this._attribs = {};\n        if (this._elements) {\n            gl.deleteBuffer(this._elements.buffer);\n            this._elements = undefined;\n        }\n    }\n}\n//# sourceMappingURL=form.js.map","import { defaultTextureSettings } from './asset-lib';\nlet textureCount = 1;\nexport class Texture {\n    constructor(_painter, id = 'Texture' + textureCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this._texture = null;\n        this._data = {};\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (this._texture == null) {\n            this._texture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        if ((data.wrap && data.wrap !== this._data.wrap) ||\n            (data.wrapS && data.wrapS !== this._data.wrapS) ||\n            (data.wrapT && data.wrapT !== this._data.wrapT)) {\n            let wrapS, wrapT;\n            if (data.wrap) {\n                wrapS = wrapT = data.wrap;\n            }\n            else {\n                wrapT = data.wrapT || defaultTextureSettings.wrap;\n                wrapS = data.wrapS || defaultTextureSettings.wrap;\n            }\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n        }\n        else if (!(this._data.wrap || this._data.wrapS || this._data.wrapT)) {\n            this._data.wrap = this._data.wrapT = this._data.wrapS = defaultTextureSettings.wrap;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[this._data.wrap]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[this._data.wrap]);\n        }\n        if (data.magFilter && data.magFilter !== this._data.magFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[data.magFilter]);\n        }\n        else if (!this._data.magFilter) {\n            this._data.magFilter = defaultTextureSettings.magFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[this._data.magFilter]);\n        }\n        if (data.minFilter && data.minFilter !== this._data.minFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[data.minFilter]);\n        }\n        else if (!this._data.minFilter) {\n            this._data.minFilter = defaultTextureSettings.minFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[this._data.minFilter]);\n        }\n        if (data.asset) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data.asset);\n        }\n        if (data.data !== undefined) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, data.type === 'FLOAT' && this._painter.isWebGL2\n                ? gl.RGBA32F\n                : gl.RGBA, data.width, // width and height are required if using custom data\n            data.height, 0, gl.RGBA, gl[data.type || 'UNSIGNED_BYTE'], data.data);\n        }\n        if (data.flipY != null && data.flipY !== this._data.flipY) {\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, data.flipY);\n        }\n        if (data.minFilter && data.minFilter.indexOf('MIPMAP') > 0) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        this._painter.gl.deleteTexture(this._texture);\n        this._data = {};\n        this._texture = null;\n    }\n}\n//# sourceMappingURL=texture.js.map","import { equalObject } from 'tvs-libs/dist/utils/predicates';\nimport { Texture } from './texture';\nlet targetCount = 1;\nexport class RenderTarget {\n    constructor(_painter, id = 'Form' + targetCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.antialias = false;\n        this.frameBuffer = null;\n        this.antiAliasFrameBuffer = null;\n        this.antiAliasRenderBuffer = null;\n        this.textures = [];\n        this.depthBuffer = null;\n        this.bufferStructure = [];\n        this._data = {};\n    }\n    update(data) {\n        var _a;\n        const gl = this._painter.gl;\n        const width = data.width || this.width;\n        const height = data.height || this.height;\n        if (!(width && height)) {\n            return this;\n        }\n        else if (width === this.width && height === this.height) {\n            if (!data.bufferStructure)\n                return this;\n            if (data.bufferStructure.length === this.bufferStructure.length &&\n                this.bufferStructure.every((buf, i) => equalObject(buf, data.bufferStructure[i]))) {\n                return this;\n            }\n        }\n        if (this.frameBuffer == null) {\n            this.frameBuffer = gl.createFramebuffer();\n        }\n        if (this.depthBuffer == null) {\n            this.depthBuffer = gl.createRenderbuffer();\n        }\n        if (data.bufferStructure && data.bufferStructure.length) {\n            this.bufferStructure = data.bufferStructure;\n            if (this.bufferStructure.some(t => t.type === 'FLOAT')) {\n                if (this._painter.isWebGL2) {\n                    gl.getExtension('EXT_color_buffer_float');\n                }\n                else {\n                    gl.getExtension('OES_texture_float');\n                }\n            }\n        }\n        const texCount = this.bufferStructure.length || 1;\n        const bufferAttachments = [gl.COLOR_ATTACHMENT0];\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        if (texCount > 1) {\n            let glx;\n            if (!this._painter.isWebGL2) {\n                glx = gl.getExtension('WEBGL_draw_buffers');\n            }\n            const attachment = this._painter.isWebGL2\n                ? gl.COLOR_ATTACHMENT0\n                : glx.COLOR_ATTACHMENT0_WEBGL;\n            for (let i = 0; i < texCount; i++) {\n                bufferAttachments[i] = attachment + i;\n            }\n            this._painter.isWebGL2\n                ? gl.drawBuffers(bufferAttachments)\n                : glx.drawBuffersWEBGL(bufferAttachments);\n        }\n        this.antialias =\n            texCount === 1 &&\n                this._painter.isWebGL2 &&\n                (data.antialias || ((_a = this._data) === null || _a === void 0 ? void 0 : _a.antialias));\n        if (this.antialias) {\n            const gl2 = gl;\n            if (this.antiAliasFrameBuffer == null) {\n                this.antiAliasFrameBuffer = gl.createFramebuffer();\n            }\n            if (this.antiAliasRenderBuffer == null) {\n                this.antiAliasRenderBuffer = gl.createRenderbuffer();\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl2.RGBA8, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        else {\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n        }\n        for (let i = 0; i < texCount; i++) {\n            if (!this.textures[i]) {\n                this.textures[i] = new Texture(this._painter, this.id + '_Texture' + i);\n            }\n            const texture = this.textures[i];\n            texture.update(Object.assign(Object.assign({ minFilter: 'NEAREST', magFilter: 'NEAREST' }, this.bufferStructure[i]), { data: null, width,\n                height }));\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, bufferAttachments[i], gl.TEXTURE_2D, texture._texture, 0);\n        }\n        if (this.antialias) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n            if (err !== gl.FRAMEBUFFER_COMPLETE) {\n                console.error('antialias framebuffer error', err, data);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (err !== gl.FRAMEBUFFER_COMPLETE) {\n            console.error('framebuffer error', err, data);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        Object.assign(this._data, data);\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteFramebuffer(this.frameBuffer);\n        gl.deleteRenderbuffer(this.depthBuffer);\n        for (const texture of this.textures) {\n            gl.deleteTexture(texture);\n        }\n        if (this.antiAliasFrameBuffer) {\n            gl.deleteFramebuffer(this.antiAliasFrameBuffer);\n        }\n        if (this.antiAliasRenderBuffer) {\n            gl.deleteRenderbuffer(this.antiAliasRenderBuffer);\n        }\n        this.textures = [];\n        this.frameBuffer = null;\n        this.depthBuffer = null;\n        this._data = {};\n        this.bufferStructure = [];\n        this.width = 0;\n        this.height = 0;\n    }\n}\n//# sourceMappingURL=render-target.js.map","import { times } from 'tvs-libs/dist/utils/sequence';\nimport { RenderTarget } from './render-target';\nimport { Texture } from './texture';\nlet frameCount = 1;\nexport class Frame {\n    constructor(_painter, id = 'Frame' + frameCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.layers = [];\n        this._data = {};\n        this._targets = [];\n        this._textures = [];\n    }\n    image(i = 0) {\n        return ((this._targets.length &&\n            this._targets[this._targets.length - 1].textures[i]) ||\n            this._textures[i]);\n    }\n    update(data = {}) {\n        var _a, _b, _c, _d;\n        const gl = this._painter.gl;\n        const layers = Array.isArray(data.layers)\n            ? data.layers\n            : data.layers\n                ? [data.layers]\n                : this.layers;\n        const selfReferencing = data.selfReferencing || this._data.selfReferencing;\n        const layerCount = layers.reduce((count, layer) => count + (layer._uniforms.length || 1), 0);\n        const targetCount = selfReferencing || layerCount > 1 ? 2 : layerCount;\n        const width = data.width || ((_a = data.texture) === null || _a === void 0 ? void 0 : _a.width) ||\n            this._data.width || ((_b = this._data.texture) === null || _b === void 0 ? void 0 : _b.width) ||\n            gl.drawingBufferWidth;\n        const height = data.height || ((_c = data.texture) === null || _c === void 0 ? void 0 : _c.height) ||\n            this._data.height || ((_d = this._data.texture) === null || _d === void 0 ? void 0 : _d.height) ||\n            gl.drawingBufferHeight;\n        const antialias = data.antialias || this._data.antialias || true;\n        if (targetCount !== this._targets.length) {\n            this._destroyTargets();\n        }\n        const targetData = Object.assign(Object.assign({}, data), { width, height, antialias });\n        if (!this._targets.length && targetCount > 0) {\n            this._targets = times(i => new RenderTarget(this._painter, this.id + '_target' + (i + 1)).update(targetData), targetCount);\n        }\n        else if (this._targets.length) {\n            this._targets.forEach(t => {\n                t.update(targetData);\n            });\n        }\n        if (data.texture) {\n            // Hardcode to one static texture for now\n            if (!this._textures[0]) {\n                this._textures[0] = new Texture(this._painter, this.id + '_Texture0');\n            }\n            data.texture.width = width;\n            data.texture.height = height;\n            this._textures[0].update(data.texture);\n        }\n        Object.assign(this._data, data);\n        this.layers = layers;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        this._destroyTargets();\n        this._textures.forEach(tex => tex.destroy());\n        this._textures = [];\n        this._data = {};\n        this.layers = [];\n        this.width = 0;\n        this.height = 0;\n    }\n    _destroyTargets() {\n        this._targets.forEach(t => t.destroy());\n        this._targets = [];\n    }\n    _swapTargets() {\n        if (this._targets.length > 1) {\n            const tmp = this._targets[0];\n            this._targets[0] = this._targets[1];\n            this._targets[1] = tmp;\n        }\n    }\n}\n//# sourceMappingURL=frame.js.map","let layerCount = 1;\nexport class Layer {\n    constructor(id = 'DrawingLayer' + layerCount++) {\n        this.id = id;\n        this.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.sketches) {\n            this.sketches = Array.isArray(data.sketches)\n                ? data.sketches\n                : [data.sketches];\n        }\n        if (data.frag) {\n            const sketch = this.sketches && this.sketches[0];\n            if (sketch) {\n                sketch.shade.update({ frag: data.frag });\n            }\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        for (const sketch of this.sketches) {\n            sketch.destroy();\n        }\n        this._data.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=layer.js.map","import { createAttributeSetters, createUniformSetters } from './render-utils';\nlet shadeCounter = 1;\nexport class Shade {\n    constructor(_painter, id = 'Shade' + shadeCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        const fragSource = (data.frag && data.frag.trim()) || this.fragSource;\n        const vertSource = (data.vert && data.vert.trim()) || this.vertSource;\n        if (!(fragSource &&\n            vertSource &&\n            (fragSource !== this.fragSource || vertSource !== this.vertSource))) {\n            return this;\n        }\n        this.destroy();\n        if (fragSource.indexOf('GL_EXT_draw_buffers') >= 0) {\n            gl.getExtension('WEBGL_draw_buffers');\n        }\n        const program = gl.createProgram();\n        const frag = gl.createShader(gl.FRAGMENT_SHADER);\n        const vert = gl.createShader(gl.VERTEX_SHADER);\n        if (!(program && vert && frag))\n            return;\n        this._program = program;\n        this._frag = frag;\n        this._vert = vert;\n        gl.attachShader(program, vert);\n        gl.attachShader(program, frag);\n        gl.shaderSource(vert, vertSource);\n        gl.shaderSource(frag, fragSource);\n        gl.compileShader(vert);\n        gl.compileShader(frag);\n        if (!gl.getShaderParameter(vert, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Vertex Shader!\\n', gl.getShaderInfoLog(vert), addLineNumbers(vertSource));\n        }\n        if (!gl.getShaderParameter(frag, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Fragment Shader!\\n', gl.getShaderInfoLog(frag), addLineNumbers(fragSource));\n        }\n        gl.linkProgram(program);\n        const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n            const lastError = gl.getProgramInfoLog(program);\n            console.error('Error in program linking:', lastError);\n        }\n        this._uniformSetters = createUniformSetters(gl, program);\n        this._attributeSetters = createAttributeSetters(gl, program);\n        this.fragSource = fragSource;\n        this.vertSource = vertSource;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteProgram(this._program);\n        gl.deleteShader(this._frag);\n        gl.deleteShader(this._vert);\n        this.vertSource = undefined;\n        this.fragSource = undefined;\n        this._attributeSetters = {};\n        this._uniformSetters = {};\n    }\n}\nfunction addLineNumbers(src) {\n    return src\n        .trim()\n        .split('\\n')\n        .map((line, i) => i + 1 + ': ' + line)\n        .join('\\n');\n}\n//# sourceMappingURL=shade.js.map","let sketchCounter = 1;\nexport class Sketch {\n    constructor(id = 'Sketch' + sketchCounter++) {\n        this.id = id;\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.drawSettings) {\n            this._drawSettings = data.drawSettings;\n        }\n        if (data.form) {\n            this.form = data.form;\n        }\n        if (data.shade) {\n            this.shade = data.shade;\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        return this;\n    }\n    destroy() {\n        this.form && this.form.destroy();\n        this.shade && this.shade.destroy();\n        this._drawSettings = undefined;\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=sketch.js.map","import { defaultForms, defaultShaders, getDefaultLayerSettings, } from './asset-lib';\nimport { Form } from './form';\nimport { Frame } from './frame';\nimport { Layer } from './layer';\nimport { applyDrawSettings, revertDrawSettings } from './render-utils';\nimport { Shade } from './shade';\nimport { Sketch } from './sketch';\nimport { resizeCanvas } from './utils/context';\nexport class Painter {\n    constructor(canvas, opts = {}) {\n        this.canvas = canvas;\n        this.isWebGL2 = true;\n        this.maxBufferSamples = 0;\n        let gl = null;\n        if (!opts.useWebGL1) {\n            gl =\n                canvas.getContext('webgl2', opts) ||\n                    canvas.getContext('experimental-webgl2', opts);\n        }\n        if (gl == null) {\n            this.isWebGL2 = false;\n            gl =\n                canvas.getContext('webgl', opts) ||\n                    canvas.getContext('experimental-webgl', opts);\n        }\n        if (gl == null) {\n            throw Error('Cannot initialize WebGL.');\n        }\n        this.gl = gl;\n        this.sizeMultiplier = opts.sizeMultiplier || 1;\n        if (this.isWebGL2) {\n            this.maxBufferSamples = gl.getParameter(gl.MAX_SAMPLES);\n        }\n        this.resize();\n        applyDrawSettings(gl, getDefaultLayerSettings(gl));\n        this._renderQuad = this.createForm().update(defaultForms.renderQuad);\n        this._staticSketch = this.createFlatSketch();\n    }\n    resize() {\n        resizeCanvas(this.gl.canvas, this.sizeMultiplier);\n        return this;\n    }\n    destroy() {\n        this._staticSketch.destroy();\n        this._renderQuad.destroy();\n    }\n    updateDrawSettings(drawSettings) {\n        applyDrawSettings(this.gl, Object.assign({}, drawSettings));\n        return this;\n    }\n    createForm(id) {\n        return new Form(this, id);\n    }\n    createShade(id) {\n        return new Shade(this, id);\n    }\n    createSketch(id) {\n        return new Sketch(id);\n    }\n    createFlatSketch(id) {\n        const s = this.createSketch(id);\n        return s.update({\n            form: this._renderQuad,\n            shade: this.createShade(s.id + '_defaultShade').update(defaultShaders.basicEffect),\n        });\n    }\n    createFrame(id) {\n        return new Frame(this, id);\n    }\n    createLayer(id) {\n        return new Layer(id);\n    }\n    createEffect(id) {\n        const l = this.createLayer(id);\n        return l.update({\n            sketches: this.createFlatSketch(l.id + '_effectSketch'),\n        });\n    }\n    draw(sketch, globalUniforms) {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        draw(gl, sketch, globalUniforms);\n        return this;\n    }\n    compose(...frames) {\n        for (const frame of frames) {\n            renderFrame(this.gl, frame);\n        }\n        return this;\n    }\n    display(frame, idx = 0) {\n        return this.draw(this._staticSketch, { source: frame.image(idx) });\n    }\n}\nfunction draw(gl, sketch, globalUniforms, sources) {\n    const { shade: shade, form: form, _drawSettings: drawSettings, _uniforms: uniforms, } = sketch;\n    if (!(shade && form)) {\n        throw Error('cannot draw, shader or geometry are not set');\n    }\n    gl.useProgram(shade._program);\n    shadeForm(shade, form);\n    if (globalUniforms) {\n        shadeUniforms(shade, globalUniforms, sources);\n    }\n    if (drawSettings) {\n        applyDrawSettings(gl, drawSettings);\n    }\n    for (let i = 0; i < (uniforms.length || 1); i++) {\n        drawInstance(gl, sketch, uniforms[i], sources);\n    }\n    if (drawSettings) {\n        revertDrawSettings(gl, drawSettings);\n    }\n}\nfunction drawInstance(gl, sketch, uniforms, sources) {\n    if (uniforms) {\n        shadeUniforms(sketch.shade, uniforms, sources);\n    }\n    if (sketch.form._elements && sketch.form._elements.glType != null) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, sketch.form._elements.buffer);\n        gl.drawElements(sketch.form._drawType, sketch.form._itemCount, sketch.form._elements.glType, 0);\n    }\n    else {\n        gl.drawArrays(sketch.form._drawType, 0, sketch.form._itemCount);\n    }\n}\nfunction shadeForm(shade, form) {\n    for (const name in form._attribs) {\n        const setter = shade._attributeSetters[name];\n        if (setter) {\n            setter.setter(form._attribs[name]);\n        }\n    }\n}\nfunction shadeUniforms(shade, uniforms, sources) {\n    for (const name in uniforms) {\n        const setter = shade._uniformSetters[name];\n        if (setter) {\n            let value = uniforms[name];\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (typeof value === 'string' && sources) {\n                setter.setter(sources[value]);\n            }\n            else {\n                setter.setter(value);\n            }\n        }\n    }\n}\nfunction renderLayer(gl, layer, uniforms, target, source) {\n    if (target) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, target.antialias ? target.antiAliasFrameBuffer : target.frameBuffer);\n        gl.viewport(0, 0, target.width, target.height);\n    }\n    else {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    }\n    if (layer._data.drawSettings) {\n        applyDrawSettings(gl, layer._data.drawSettings);\n    }\n    for (const sketch of layer.sketches) {\n        draw(gl, sketch, uniforms, source);\n    }\n    if (target && target.antialias) {\n        const gl2 = gl;\n        // \"blit\" the cube into the color buffer, which adds antialiasing\n        gl.bindFramebuffer(gl2.READ_FRAMEBUFFER, target.antiAliasFrameBuffer);\n        gl.bindFramebuffer(gl2.DRAW_FRAMEBUFFER, target.frameBuffer);\n        gl2.clearBufferfv(gl2.COLOR, 0, [1.0, 1.0, 1.0, 1.0]);\n        gl2.blitFramebuffer(0, 0, target.width, target.height, 0, 0, target.width, target.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n    }\n    if (layer._data.drawSettings) {\n        revertDrawSettings(gl, layer._data.drawSettings);\n    }\n}\nfunction renderFrame(gl, frame) {\n    for (let i = 0; i < frame.layers.length; i++) {\n        const layer = frame.layers[i];\n        const layerPasses = layer._uniforms.length || 1;\n        for (let j = 0; j < layerPasses; j++) {\n            const target = frame._targets[0];\n            const sources = i + j === 0 && frame._textures.length\n                ? frame._textures\n                : frame._targets[1] && frame._targets[1].textures;\n            renderLayer(gl, layer, layer._uniforms[j], target, sources);\n            frame._swapTargets();\n        }\n    }\n}\n//# sourceMappingURL=painter.js.map","import { once } from './scheduler'\nimport { windowSize } from 'tvs-libs/dist/events/dom'\nimport { keyboard, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { deepOverride } from 'tvs-libs/dist/utils/object'\nimport { PainterOptions } from 'tvs-painter'\nimport { Form } from 'tvs-painter/dist/form'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport { Layer } from 'tvs-painter/dist/layer'\nimport { Painter } from 'tvs-painter/dist/painter'\nimport { Shade } from 'tvs-painter/dist/shade'\nimport { Sketch } from 'tvs-painter/dist/sketch'\nimport { PointerState, pointer } from 'tvs-libs/dist/events/pointer'\n\n// === Painter ===\n\nlet currentCanvas: HTMLCanvasElement\nlet painter: Painter\n\nexport function getPainter(canvas: HTMLCanvasElement, opts?: PainterOptions) {\n\tinit(canvas, opts)\n\treturn painter\n}\n\nconst forms: { [id: string]: Form } = {}\nexport function getForm(painter: Painter, id: string) {\n\treturn forms[id] || (forms[id] = painter.createForm('Form_' + id))\n}\n\nconst shades: { [id: string]: Shade } = {}\nexport function getShade(painter: Painter, id: string) {\n\treturn shades[id] || (shades[id] = painter.createShade('Shade_' + id))\n}\n\nconst sketches: { [id: string]: Sketch } = {}\nexport function getSketch(painter: Painter, id: string) {\n\treturn sketches[id] || (sketches[id] = painter.createSketch('Sketch_' + id))\n}\n\nconst layers: { [id: string]: Layer } = {}\nexport function getLayer(painter: Painter, id: string) {\n\treturn layers[id] || (layers[id] = painter.createLayer('Layer_' + id))\n}\n\nconst frames: { [id: string]: Frame } = {}\nexport function getFrame(painter: Painter, id: string) {\n\treturn frames[id] || (frames[id] = painter.createFrame('Frame_' + id))\n}\n\nconst effects: { [id: string]: Layer } = {}\nexport function getEffect(painter: Painter, id: string) {\n\treturn effects[id] || (effects[id] = painter.createEffect('Effect_' + id))\n}\n\n// === State ===\n\nexport interface BaseState {\n\tdevice: {\n\t\ttpf: number\n\t\tcanvas: HTMLCanvasElement\n\t\tpointer: PointerState\n\t\tkeys: KeyState\n\t\tsizeMultiplier: number\n\t\tkeepCanvasSize?: boolean\n\t}\n}\n\nexport const state: BaseState = {\n\tdevice: {\n\t\ttpf: 0,\n\t\tsizeMultiplier: 1,\n\t},\n} as BaseState\n;(window as any).state = state\n\nexport function get<\n\tS extends BaseState = BaseState,\n\tK extends keyof S = keyof S\n>(prop: K): S[K] {\n\treturn (state as S)[prop]\n}\n\nexport function set<\n\tS extends BaseState = BaseState,\n\tK extends keyof S = keyof S\n>(key: K, val: S[K], opts?: { reset: any }) {\n\tconst s = state as S\n\tif (s[key]) {\n\t\tconst reset = opts && opts.reset\n\t\tif (reset !== true) {\n\t\t\tval = deepOverride(val, s[key], { ignore: reset })\n\t\t}\n\t}\n\ts[key] = val\n}\n\nexport function getState<S extends BaseState>() {\n\treturn state as S\n}\n\n// === Systems ===\n\ntype ActionHandler<S extends BaseState = BaseState> = (\n\tevent: string,\n\tstate: S,\n) => void\n\nconst systems: { [id: string]: ActionHandler<any> } = {}\n\nexport function addSystem<S extends BaseState = BaseState>(\n\tid: string,\n\ts: ActionHandler<S>,\n) {\n\tsystems[id] = s\n}\n\nexport function dispatch(event: string) {\n\tfor (const k in systems) {\n\t\tsystems[k](event, state)\n\t}\n}\n\nexport const baseEvents = {\n\tFRAME: 'frame',\n\tRESIZE: 'resize',\n}\n\n// === Init ===\n\nlet cancelWindow: () => void\nlet cancelPointer: () => void\nlet cancelKeys: () => void\n\nexport function init(canvas: HTMLCanvasElement, opts?: PainterOptions) {\n\tif (canvas !== currentCanvas) {\n\t\tcurrentCanvas = canvas\n\n\t\tpainter = new Painter(canvas, opts)\n\n\t\tstate.device.canvas = canvas\n\n\t\tcancelWindow && cancelWindow()\n\t\tcancelPointer && cancelPointer()\n\t\tcancelKeys && cancelKeys()\n\n\t\tcancelWindow = windowSize(() =>\n\t\t\tonce(() => {\n\t\t\t\tpainter.sizeMultiplier = state.device.sizeMultiplier\n\t\t\t\tpainter.resize()\n\t\t\t\tdispatch(baseEvents.RESIZE)\n\t\t\t}, 'resize'),\n\t\t)\n\n\t\tcancelPointer = pointer(\n\t\t\t{\n\t\t\t\telement: canvas,\n\t\t\t\tenableRightButton: true,\n\t\t\t\tholdRadius: 7,\n\t\t\t\tholdDelay: 250,\n\t\t\t},\n\t\t\tm => (state.device.pointer = m),\n\t\t)\n\n\t\tcancelKeys = keyboard(k => (state.device.keys = k))\n\t}\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function deepmerge(obj1, obj2) {\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        const result = Object.assign({}, obj1);\n        for (const key in obj2) {\n            const val1 = obj1[key];\n            const val2 = obj2[key];\n            if (typeof val2 !== 'undefined') {\n                result[key] = deepmerge(val1, val2);\n            }\n            else {\n                delete result[key];\n            }\n        }\n        return result;\n    }\n    return obj2;\n}\nexport function deepOverride(obj1, obj2, opt) {\n    const ignore = opt && opt.ignore;\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        for (const key in obj1) {\n            if (obj1.hasOwnProperty(key) &&\n                !(ignore && key in ignore && ignore[key] === true)) {\n                const val1 = obj1[key];\n                const val2 = obj2[key];\n                if (val2 !== undefined) {\n                    obj1[key] = deepOverride(val1, val2, {\n                        ignore: ignore && ignore[key],\n                    });\n                }\n            }\n        }\n        return obj1;\n    }\n    return obj2;\n}\n//# sourceMappingURL=object.js.map","export const and = (p1, p2) => (a, b) => p1(a, b) && p2(a, b);\nexport const not = (p) => (...args) => !p(...args);\nexport const defined = a => a != null;\nexport const notEmpty = a => a && a.length;\nexport const unequal = (a, b) => a !== b;\nexport const equal = (a, b) => a === b;\nexport function equalArray(arr1, arr2) {\n    if (arr1 === arr2) {\n        return true;\n    }\n    if (!arr2 || !arr1) {\n        return false;\n    }\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalObject(obj1, obj2) {\n    if (obj1 === obj2) {\n        return true;\n    }\n    if (!obj2) {\n        return false;\n    }\n    const k1 = Object.keys(obj1);\n    const k2 = Object.keys(obj2);\n    if (!equalArray(k1, k2)) {\n        return false;\n    }\n    for (const key of k1) {\n        if (obj1[key] !== obj2[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=predicates.js.map","export function makeClear(gl, ...clearArray) {\n    return clearArray.reduce((res, item) => res | gl[item.toUpperCase() + '_BUFFER_BIT'], 0);\n}\nexport function setBlendFunc(gl, blendOpts) {\n    gl.blendFunc.apply(gl, blendOpts.map(opt => gl[opt.toUpperCase()]));\n}\n/**\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] optional `window.devicePixelRatio`.\n * @return {boolean} true if the canvas was resized.\n */\nexport function resizeCanvas(canvas, multiplier = 1) {\n    let width = canvas.width;\n    let height = canvas.height;\n    if ('clientWidth' in canvas && 'clientHeight' in canvas) {\n        width = (canvas.clientWidth * multiplier) | 0;\n        height = (canvas.clientHeight * multiplier) | 0;\n    }\n    if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=context.js.map","import { mat4, vec3 } from 'gl-matrix'\nimport { Keys, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { Constructor } from 'tvs-libs/lib/oop/mixins'\nimport { PointerState, Buttons } from 'tvs-libs/dist/events/pointer'\n\nexport class Camera {\n\tposition: vec3 = [0, 0, 0]\n\trotationX = 0\n\trotationY = 0\n\trotationXMat = mat4.create()\n\trotationYMat = mat4.create()\n\tprojectionMat = mat4.create()\n\tviewMat = mat4.create()\n\tneedsUpdateView = true\n\n\tconstructor(props?: Partial<Camera>) {\n\t\tObject.assign(this, props)\n\t\tthis.updateRotationX()\n\t\tthis.updateRotationY()\n\t}\n\n\tupdateRotationX(amount: number = 0) {\n\t\tthis.rotationX += amount\n\t\tmat4.fromXRotation(this.rotationXMat, this.rotationX)\n\t\tthis.needsUpdateView = true\n\t}\n\n\tupdateRotationY(amount: number = 0) {\n\t\tthis.rotationY += amount\n\t\tmat4.fromYRotation(this.rotationYMat, this.rotationY)\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveForward(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[8],\n\t\t\tthis.rotationYMat[9],\n\t\t\tthis.rotationYMat[10],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, -dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveLeft(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[0],\n\t\t\tthis.rotationYMat[1],\n\t\t\tthis.rotationYMat[2],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, -dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveUp(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[4],\n\t\t\tthis.rotationYMat[5],\n\t\t\tthis.rotationYMat[6],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tupdate() {\n\t\tif (this.needsUpdateView) {\n\t\t\tmat4.fromTranslation(this.viewMat, this.position)\n\t\t\tmat4.multiply(this.viewMat, this.viewMat, this.rotationYMat)\n\t\t\tmat4.multiply(this.viewMat, this.viewMat, this.rotationXMat)\n\t\t\tmat4.invert(this.viewMat, this.viewMat)\n\t\t\tthis.needsUpdateView = false\n\t\t}\n\t}\n}\n\nexport class PerspectiveCamera extends Camera {\n\tfovy = Math.PI * 0.6\n\taspect = 1\n\tnear = 0.1\n\tfar = 1000\n\tneedsUpdateProjection = true\n\n\tconstructor(props?: Partial<PerspectiveCamera>) {\n\t\tsuper(props)\n\t\tObject.assign(this, props)\n\t\tthis.update()\n\t}\n\n\tupdate() {\n\t\tsuper.update()\n\n\t\tif (this.needsUpdateProjection) {\n\t\t\tmat4.perspective(\n\t\t\t\tthis.projectionMat,\n\t\t\t\tthis.fovy,\n\t\t\t\tthis.aspect,\n\t\t\t\tthis.near,\n\t\t\t\tthis.far,\n\t\t\t)\n\t\t\tthis.needsUpdateProjection = false\n\t\t}\n\t}\n}\n\nexport function WithKeyNavigation<T extends Constructor<Camera>>(Cam: T) {\n\treturn class extends Cam {\n\t\tupdatePosFromInput(speed: number, keys?: KeyState, pointer?: PointerState) {\n\t\t\tif (!(keys || pointer)) return\n\t\t\tif (\n\t\t\t\tkeys?.[Keys.UP] ||\n\t\t\t\tkeys?.[Keys.W] ||\n\t\t\t\t(pointer?.holding && !pointer.pressed[Buttons.RIGHT])\n\t\t\t) {\n\t\t\t\tthis.moveForward(speed)\n\t\t\t}\n\t\t\tif (\n\t\t\t\tkeys?.[Keys.DOWN] ||\n\t\t\t\tkeys?.[Keys.S] ||\n\t\t\t\tpointer?.pressed[Buttons.RIGHT]\n\t\t\t) {\n\t\t\t\tthis.moveForward(-speed)\n\t\t\t}\n\t\t\tif (keys?.[Keys.LEFT] || keys?.[Keys.A]) {\n\t\t\t\tthis.moveLeft(speed)\n\t\t\t}\n\t\t\tif (keys?.[Keys.RIGHT] || keys?.[Keys.D]) {\n\t\t\t\tthis.moveLeft(-speed)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function WithMouseRotation<T extends Constructor<Camera>>(Cam: T) {\n\treturn class extends Cam {\n\t\t_oldMouse = { x: 0, y: 0 }\n\n\t\tupdateRotFromPointer(\n\t\t\tspeed: number,\n\t\t\tm: { dragging: boolean; drag: { x: number; y: number } },\n\t\t) {\n\t\t\tif (m.dragging) {\n\t\t\t\tconst deltaX = this._oldMouse.x - m.drag.x\n\t\t\t\tconst deltaY = this._oldMouse.y - m.drag.y\n\t\t\t\tthis._oldMouse.x = m.drag.x\n\t\t\t\tthis._oldMouse.y = m.drag.y\n\t\t\t\tdeltaY && this.updateRotationX(deltaY * speed)\n\t\t\t\tdeltaX && this.updateRotationY(deltaX * speed)\n\t\t\t} else {\n\t\t\t\tthis._oldMouse.x && (this._oldMouse.x = 0)\n\t\t\t\tthis._oldMouse.y && (this._oldMouse.y = 0)\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import { addSystem, set, BaseState, baseEvents } from '../painterState'\nimport {\n\tPerspectiveCamera,\n\tWithKeyNavigation,\n\tWithMouseRotation,\n} from './camera'\n\nexport interface PerspectiveViewportState extends BaseState {\n\tviewPort: ViewPort\n}\n\nexport class ViewPort {\n\tmoveSpeed = 2\n\tlookSpeed = 2\n\tcamera = new (WithKeyNavigation(WithMouseRotation(PerspectiveCamera)))({\n\t\tfovy: Math.PI * 0.3,\n\t\tposition: [0, 0, 5],\n\t})\n}\n\naddSystem<PerspectiveViewportState>('viewPort', (e, s) => {\n\tconst v = s.viewPort\n\tswitch (e) {\n\t\tcase baseEvents.FRAME:\n\t\t\tconst d = s.device\n\t\t\tconst tpf = d.tpf / 1000\n\n\t\t\tv.camera.updatePosFromInput(\n\t\t\t\tv.moveSpeed * tpf,\n\t\t\t\ts.device.keys,\n\t\t\t\ts.device.pointer,\n\t\t\t)\n\n\t\t\tconst p = d.pointer\n\t\t\tconst dragInfo = {\n\t\t\t\tdragging: p.dragging,\n\t\t\t\tdrag: {\n\t\t\t\t\tx: (d.sizeMultiplier * p.drag.x) / d.canvas.width,\n\t\t\t\t\ty: (d.sizeMultiplier * p.drag.y) / d.canvas.height,\n\t\t\t\t},\n\t\t\t}\n\t\t\tv.camera.updateRotFromPointer(v.lookSpeed, dragInfo)\n\t\t\tv.camera.update()\n\t\t\treturn\n\n\t\tcase baseEvents.RESIZE:\n\t\t\tv.camera.aspect = s.device.canvas.width / s.device.canvas.height\n\t\t\tv.camera.needsUpdateProjection = true\n\t}\n})\n\ninterface InitOpts {\n\tmoveSpeed?: number\n\tlookSpeed?: number\n\tfovy?: number\n\tposition?: [number, number, number]\n\trotationY?: number\n\trotationX?: number\n}\n\nexport function initPerspectiveViewport({\n\tlookSpeed,\n\tmoveSpeed,\n\tposition,\n\trotationY,\n\trotationX,\n\tfovy,\n}: InitOpts = {}) {\n\tconst v = new ViewPort()\n\tif (lookSpeed) {\n\t\tv.lookSpeed = lookSpeed\n\t}\n\tif (moveSpeed) {\n\t\tv.moveSpeed = moveSpeed\n\t}\n\tif (fovy) {\n\t\tv.camera.fovy = fovy\n\t\tv.camera.needsUpdateProjection = true\n\t}\n\tif (position) {\n\t\tv.camera.position = position\n\t\tv.camera.needsUpdateView = true\n\t}\n\tif (rotationX) {\n\t\tv.camera.rotationX = rotationX\n\t\tv.camera.updateRotationX()\n\t}\n\tif (rotationY) {\n\t\tv.camera.rotationY = rotationY\n\t\tv.camera.updateRotationY()\n\t}\n\tset<PerspectiveViewportState>('viewPort', v, {\n\t\treset: { moveSpeed: true, lookSpeed: true },\n\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { randInt, randIntInRange } from '../math/random';\nexport function pickRandom(arr) {\n    return arr[randInt(arr.length)];\n}\nexport function doTimes(fn, count) {\n    for (let i = 0; i < count; i++) {\n        fn(i);\n    }\n}\nexport function times(fn, count, res = []) {\n    for (let i = 0; i < count; i++) {\n        res[i] = fn(i);\n    }\n    return res;\n}\nexport function zip(fn, as, bs, res = []) {\n    const length = Math.min(as.length, bs.length);\n    for (let i = 0; i < length; i++) {\n        res[i] = fn(as[i], bs[i]);\n    }\n    return res;\n}\nexport function flatten(array, res = []) {\n    for (const subarray of array) {\n        const currentLength = res.length;\n        for (let i = 0; i < subarray.length; i++) {\n            res[i + currentLength] = subarray[i];\n        }\n    }\n    return res;\n}\nexport function mapcat(fn, array, res = []) {\n    return flatten(map(fn, array, res));\n}\nexport const flatMap = mapcat;\nexport function shuffle(arr) {\n    const shuffled = [];\n    for (let i = 0; i < arr.length; i++) {\n        const j = randIntInRange(i, arr.length);\n        const temp = shuffled[i] !== undefined ? shuffled[i] : arr[i];\n        shuffled[i] = shuffled[j] !== undefined ? shuffled[j] : arr[j];\n        shuffled[j] = temp;\n    }\n    return shuffled;\n}\nexport function map(fn, coll, result) {\n    if (Array.isArray(coll)) {\n        return coll.map(fn);\n    }\n    else if (Symbol.iterator in coll) {\n        const res = result || [];\n        for (let i = 0; i < coll.length; i++) {\n            res[i] = fn(coll[i], i);\n        }\n        return res;\n    }\n    else {\n        const obj = result || {};\n        for (const key in coll) {\n            obj[key] = fn(coll[key], key);\n        }\n        return obj;\n    }\n}\nexport function each(fn, coll) {\n    for (const key in coll) {\n        fn(coll[key], key);\n    }\n}\n//# sourceMappingURL=sequence.js.map","import { flatten } from 'tvs-libs/dist/utils/sequence';\nimport * as constants from '../contants';\nexport const STACK_GL_GEOMETRY_PROP_POSITION = 'positions';\nexport const STACK_GL_GEOMETRY_PROP_NORMAL = 'normals';\nexport const STACK_GL_GEOMETRY_PROP_UV = 'uvs';\nexport const STACK_GL_GEOMETRY_PROP_ELEMENTS = 'cells';\nexport function convertStackGLGeometry(stackglGeometry) {\n    const geometry = {\n        drawType: 'TRIANGLES',\n        attribs: {},\n        itemCount: 0,\n    };\n    for (const prop in stackglGeometry) {\n        const arr = stackglGeometry[prop];\n        if (prop === STACK_GL_GEOMETRY_PROP_ELEMENTS) {\n            const buffer = new (arr.length > 65535 ? Uint32Array : Uint16Array)(flatten(arr));\n            Object.assign(geometry, {\n                elements: { buffer },\n                itemCount: buffer.length,\n            });\n        }\n        else if (prop === STACK_GL_GEOMETRY_PROP_POSITION) {\n            geometry.attribs[constants.GEOMETRY_PROP_POSITION] = {\n                buffer: new Float32Array(flatten(arr)),\n            };\n        }\n        else if (prop === STACK_GL_GEOMETRY_PROP_NORMAL) {\n            geometry.attribs[constants.GEOMETRY_PROP_NORMAL] = {\n                buffer: new Float32Array(flatten(arr)),\n            };\n        }\n        else if (prop === STACK_GL_GEOMETRY_PROP_UV) {\n            geometry.attribs[constants.GEOMETRY_PROP_UV] = {\n                buffer: new Float32Array(flatten(arr)),\n            };\n        }\n        else {\n            geometry.attribs[prop] = { buffer: new Float32Array(flatten(arr)) };\n        }\n    }\n    return geometry;\n}\n//# sourceMappingURL=stackgl.js.map","export function plane(width, height, widthSegments, heightSegments) {\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    const gridX = widthSegments || 1;\n    const gridY = heightSegments || 1;\n    const gridX1 = gridX + 1;\n    const gridY1 = gridY + 1;\n    const segmentWidth = width / gridX;\n    const segmentHeight = height / gridY;\n    const vertices = new Float32Array(gridX1 * gridY1 * 3);\n    const normals = new Float32Array(gridX1 * gridY1 * 3);\n    const uvs = new Float32Array(gridX1 * gridY1 * 2);\n    let iy, ix;\n    let offset = 0;\n    let offset2 = 0;\n    for (iy = 0; iy < gridY1; iy++) {\n        const y = iy * segmentHeight - heightHalf;\n        for (ix = 0; ix < gridX1; ix++) {\n            const x = ix * segmentWidth - widthHalf;\n            vertices[offset] = x;\n            vertices[offset + 1] = -y;\n            normals[offset + 2] = 1;\n            uvs[offset2] = ix / gridX;\n            uvs[offset2 + 1] = 1 - iy / gridY;\n            offset += 3;\n            offset2 += 2;\n        }\n    }\n    offset = 0;\n    const indices = new (vertices.length / 3 > 65535 ? Uint32Array : Uint16Array)(gridX * gridY * 6);\n    for (iy = 0; iy < gridY; iy++) {\n        for (ix = 0; ix < gridX; ix++) {\n            const a = ix + gridX1 * iy;\n            const b = ix + gridX1 * (iy + 1);\n            const c = ix + 1 + gridX1 * (iy + 1);\n            const d = ix + 1 + gridX1 * iy;\n            indices[offset] = a;\n            indices[offset + 1] = b;\n            indices[offset + 2] = d;\n            indices[offset + 3] = b;\n            indices[offset + 4] = c;\n            indices[offset + 5] = d;\n            offset += 6;\n        }\n    }\n    return {\n        attribs: {\n            position: {\n                buffer: vertices,\n            },\n            normal: {\n                buffer: normals,\n            },\n            uv: {\n                buffer: uvs,\n            },\n        },\n        elements: {\n            buffer: indices,\n        },\n        drawType: 'TRIANGLES',\n        itemCount: indices.length,\n    };\n}\n//# sourceMappingURL=plane.js.map","export var Keys;\n(function (Keys) {\n    Keys[Keys[\"CANCEL\"] = 3] = \"CANCEL\";\n    Keys[Keys[\"HELP\"] = 6] = \"HELP\";\n    Keys[Keys[\"BACK_SPACE\"] = 8] = \"BACK_SPACE\";\n    Keys[Keys[\"TAB\"] = 9] = \"TAB\";\n    Keys[Keys[\"CLEAR\"] = 12] = \"CLEAR\";\n    Keys[Keys[\"RETURN\"] = 13] = \"RETURN\";\n    Keys[Keys[\"ENTER\"] = 14] = \"ENTER\";\n    Keys[Keys[\"SHIFT\"] = 16] = \"SHIFT\";\n    Keys[Keys[\"CONTROL\"] = 17] = \"CONTROL\";\n    Keys[Keys[\"ALT\"] = 18] = \"ALT\";\n    Keys[Keys[\"PAUSE\"] = 19] = \"PAUSE\";\n    Keys[Keys[\"CAPS_LOCK\"] = 20] = \"CAPS_LOCK\";\n    Keys[Keys[\"ESCAPE\"] = 27] = \"ESCAPE\";\n    Keys[Keys[\"SPACE\"] = 32] = \"SPACE\";\n    Keys[Keys[\"PAGE_UP\"] = 33] = \"PAGE_UP\";\n    Keys[Keys[\"PAGE_DOWN\"] = 34] = \"PAGE_DOWN\";\n    Keys[Keys[\"END\"] = 35] = \"END\";\n    Keys[Keys[\"HOME\"] = 36] = \"HOME\";\n    Keys[Keys[\"LEFT\"] = 37] = \"LEFT\";\n    Keys[Keys[\"UP\"] = 38] = \"UP\";\n    Keys[Keys[\"RIGHT\"] = 39] = \"RIGHT\";\n    Keys[Keys[\"DOWN\"] = 40] = \"DOWN\";\n    Keys[Keys[\"PRINTSCREEN\"] = 44] = \"PRINTSCREEN\";\n    Keys[Keys[\"INSERT\"] = 45] = \"INSERT\";\n    Keys[Keys[\"DELETE\"] = 46] = \"DELETE\";\n    Keys[Keys[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    Keys[Keys[\"DIGIT_1\"] = 49] = \"DIGIT_1\";\n    Keys[Keys[\"DIGIT_2\"] = 50] = \"DIGIT_2\";\n    Keys[Keys[\"DIGIT_3\"] = 51] = \"DIGIT_3\";\n    Keys[Keys[\"DIGIT_4\"] = 52] = \"DIGIT_4\";\n    Keys[Keys[\"DIGIT_5\"] = 53] = \"DIGIT_5\";\n    Keys[Keys[\"DIGIT_6\"] = 54] = \"DIGIT_6\";\n    Keys[Keys[\"DIGIT_7\"] = 55] = \"DIGIT_7\";\n    Keys[Keys[\"DIGIT_8\"] = 56] = \"DIGIT_8\";\n    Keys[Keys[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    Keys[Keys[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    Keys[Keys[\"EQUALS\"] = 61] = \"EQUALS\";\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    Keys[Keys[\"CONTEXT_MENU\"] = 93] = \"CONTEXT_MENU\";\n    Keys[Keys[\"NUMPAD0\"] = 96] = \"NUMPAD0\";\n    Keys[Keys[\"NUMPAD1\"] = 97] = \"NUMPAD1\";\n    Keys[Keys[\"NUMPAD2\"] = 98] = \"NUMPAD2\";\n    Keys[Keys[\"NUMPAD3\"] = 99] = \"NUMPAD3\";\n    Keys[Keys[\"NUMPAD4\"] = 100] = \"NUMPAD4\";\n    Keys[Keys[\"NUMPAD5\"] = 101] = \"NUMPAD5\";\n    Keys[Keys[\"NUMPAD6\"] = 102] = \"NUMPAD6\";\n    Keys[Keys[\"NUMPAD7\"] = 103] = \"NUMPAD7\";\n    Keys[Keys[\"NUMPAD8\"] = 104] = \"NUMPAD8\";\n    Keys[Keys[\"NUMPAD9\"] = 105] = \"NUMPAD9\";\n    Keys[Keys[\"MULTIPLY\"] = 106] = \"MULTIPLY\";\n    Keys[Keys[\"ADD\"] = 107] = \"ADD\";\n    Keys[Keys[\"SEPARATOR\"] = 108] = \"SEPARATOR\";\n    Keys[Keys[\"SUBTRACT\"] = 109] = \"SUBTRACT\";\n    Keys[Keys[\"DECIMAL\"] = 110] = \"DECIMAL\";\n    Keys[Keys[\"DIVIDE\"] = 111] = \"DIVIDE\";\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    Keys[Keys[\"F13\"] = 124] = \"F13\";\n    Keys[Keys[\"F14\"] = 125] = \"F14\";\n    Keys[Keys[\"F15\"] = 126] = \"F15\";\n    Keys[Keys[\"F16\"] = 127] = \"F16\";\n    Keys[Keys[\"F17\"] = 128] = \"F17\";\n    Keys[Keys[\"F18\"] = 129] = \"F18\";\n    Keys[Keys[\"F19\"] = 130] = \"F19\";\n    Keys[Keys[\"F20\"] = 131] = \"F20\";\n    Keys[Keys[\"F21\"] = 132] = \"F21\";\n    Keys[Keys[\"F22\"] = 133] = \"F22\";\n    Keys[Keys[\"F23\"] = 134] = \"F23\";\n    Keys[Keys[\"F24\"] = 135] = \"F24\";\n    Keys[Keys[\"NUM_LOCK\"] = 144] = \"NUM_LOCK\";\n    Keys[Keys[\"SCROLL_LOCK\"] = 145] = \"SCROLL_LOCK\";\n    Keys[Keys[\"COMMA\"] = 188] = \"COMMA\";\n    Keys[Keys[\"PERIOD\"] = 190] = \"PERIOD\";\n    Keys[Keys[\"SLASH\"] = 191] = \"SLASH\";\n    Keys[Keys[\"BACK_QUOTE\"] = 192] = \"BACK_QUOTE\";\n    Keys[Keys[\"OPEN_BRACKET\"] = 219] = \"OPEN_BRACKET\";\n    Keys[Keys[\"BACK_SLASH\"] = 220] = \"BACK_SLASH\";\n    Keys[Keys[\"CLOSE_BRACKET\"] = 221] = \"CLOSE_BRACKET\";\n    Keys[Keys[\"QUOTE\"] = 222] = \"QUOTE\";\n    Keys[Keys[\"META\"] = 224] = \"META\";\n})(Keys || (Keys = {}));\nexport function keyboard(opts, callback) {\n    const cb = callback || opts;\n    const { element = window } = opts;\n    const pressed = {};\n    function onKeydown(event) {\n        pressed[event.keyCode] = Date.now();\n        cb(pressed);\n    }\n    function onKeyup(event) {\n        delete pressed[event.keyCode];\n        cb(pressed);\n    }\n    element.addEventListener('keyup', onKeyup, false);\n    element.addEventListener('keydown', onKeydown, false);\n    cb(pressed);\n    return function stop() {\n        element.removeEventListener('keyup', onKeyup);\n        element.removeEventListener('keydown', onKeydown);\n    };\n}\nexport function keyboardObserver(opts) {\n    const observer = {\n        Keys,\n        state: { pressed: {} },\n        destroy: () => { },\n    };\n    function callback(pressed) {\n        observer.state.pressed = pressed;\n    }\n    observer.destroy = keyboard(callback, opts);\n    return observer;\n}\n//# sourceMappingURL=keyboard.js.map","import { getEffect } from '../../painterState'\nimport { LayerData, Painter } from 'tvs-painter'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport frag from './blur_with_alpha.glsl'\n\ninterface BlurOpts {\n\tstrength: number\n\tsize?: number[] | (() => number[])\n\tstrengthOffset?: number | (() => number)\n\tblurRatioVertical?: number\n\tscaleFactor?: number\n\tlayerOpts?: LayerData\n\tstartFrame?: Frame\n}\n\nexport function getBlurByAlphaEffect(\n\tpainter: Painter,\n\tid: string,\n\t{\n\t\tstrength,\n\t\tsize,\n\t\tlayerOpts,\n\t\tstartFrame: startLayer,\n\t\tstrengthOffset = 0,\n\t\tblurRatioVertical = 1,\n\t\tscaleFactor = 0.6,\n\t}: BlurOpts,\n) {\n\tconst passData: any[] = []\n\n\twhile (strength >= 1 / blurRatioVertical) {\n\t\tpassData.push({\n\t\t\tstrength,\n\t\t\tdirection: 0,\n\t\t\tsource: '0',\n\t\t})\n\t\tpassData.push({\n\t\t\tstrength: strength * blurRatioVertical,\n\t\t\tdirection: 1,\n\t\t\tsource: '0',\n\t\t})\n\t\tstrength *= scaleFactor\n\t}\n\n\tif (startLayer) {\n\t\tpassData[0].source = () => startLayer.image()\n\t}\n\n\treturn getEffect(painter, id).update({\n\t\t...layerOpts,\n\t\tfrag,\n\t\tdrawSettings: {\n\t\t\tdisable: [painter.gl.DEPTH_TEST],\n\t\t},\n\t\tuniforms: passData.map(data => ({\n\t\t\t...data,\n\t\t\tblurRatioVertical,\n\t\t\tstrengthOffset,\n\t\t\tsize: size || (() => [painter.gl.canvas.width, painter.gl.canvas.height]),\n\t\t})),\n\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export default \"precision mediump float;\\n#define GLSLIFY 1\\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n  vec4 color = vec4(0.0);\\n  vec2 off1 = vec2(1.3846153846) * direction;\\n  vec2 off2 = vec2(3.2307692308) * direction;\\n  color += texture2D(image, uv) * 0.2270270270;\\n  color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\\n  color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\\n  color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\\n  color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\\n  return color;\\n}\\n\\nuniform sampler2D source;\\nuniform vec2 size;\\nuniform float direction;\\nuniform float strength;\\nuniform float strengthOffset;\\n\\nvarying vec2 coords;\\n\\nvoid main() {\\n\\tvec2 uv = coords;\\n\\tvec4 refl = texture2D(source, uv);\\n\\tfloat dist = refl.a * strength + strengthOffset;\\n\\n\\tif (direction == 0.0) {\\n\\t\\tgl_FragColor = blur9(source, uv, size, vec2(dist, 0));\\n\\t} else {\\n\\t\\tgl_FragColor = blur9(source, uv, size, vec2(0, dist));\\n\\t}\\n}\\n\";","import { cross, dot, normalize, sub } from './vectors';\nexport function planeFromNormalAndCoplanarPoint(n, point) {\n    const d = dot(n, point);\n    return [n[0], n[1], n[2], -d];\n}\nexport function planeFromThreeCoplanarPoints(p1, p2, p3) {\n    return planeFromNormalAndCoplanarPoint(normalFromThreeCoplanarPoints(p1, p2, p3), p1);\n}\nexport function normalFromThreeCoplanarPoints(p1, p2, p3) {\n    return normalize(cross(sub(p3, p2), sub(p1, p2)));\n}\n/*            | 1-2Nx2   -2NxNy  -2NxNz  -2NxD |\nMreflection = |  -2NxNy 1-2Ny2   -2NyNz  -2NyD |\n              |  -2NxNz  -2NyNz 1-2Nz2   -2NzD |\n              |    0       0       0       1   |\nhttp://khayyam.kaplinski.com/2011/09/reflective-water-with-glsl-part-i.html\n\n              mat.m._00 = 1-2*a*a;\tmat.m._01 = -2*a*b;\tmat.m._02 = -2*a*c;\tmat.m._03 = -2*a*d;\n              mat.m._10 = -2*a*b; mat.m._11 = 1-2*b*b;\tmat.m._12 = -2*b*c;\tmat.m._13 = -2*b*d;\n              mat.m._20 = -2*a*c;\tmat.m._21 = -2*b*c;\tmat.m._22 = 1-2*c*c;\tmat.m._23 = -2*c*d;\n              mat.m._30 = 0.0f;\tmat.m._31 = 0.0f;\tmat.m._32 = 0.0f;\tmat.m._33 = 1.0f;\nhttps://www.opengl.org/discussion_boards/showthread.php/147784-Mirror-Matrices\n*/\nexport function mirrorMatrixFromPlane(plane) {\n    const [a, b, c, d] = plane;\n    // prettier-ignore\n    return [\n        1 - 2 * a * a, -2 * a * b, -2 * a * c, 0,\n        -2 * a * b, 1 - 2 * b * b, -2 * b * c, 0,\n        -2 * a * c, -2 * b * c, 1 - 2 * c * c, 0,\n        -2 * a * d, -2 * b * d, -2 * c * d, 1,\n    ];\n}\nexport function getYawQuat(rotYAngle) {\n    rotYAngle *= 0.5;\n    return [0, Math.sin(rotYAngle), 0, Math.cos(rotYAngle)];\n}\nexport function getPitchQuat(rotXAngle) {\n    rotXAngle *= 0.5;\n    return [Math.sin(rotXAngle), 0, 0, Math.cos(rotXAngle)];\n}\nexport function getRollQuat(rotZAngle) {\n    rotZAngle *= 0.5;\n    return [0, 0, Math.sin(rotZAngle), Math.cos(rotZAngle)];\n}\n//# sourceMappingURL=geometry.js.map","import { length } from './vectors';\n// === polar coordinates ===\n/**\n * @param radius distance from origin\n * @param angle counter clockwise\n */\nexport function polarCoord(radius, angle) {\n    return [radius, angle];\n}\nexport function cartesianToPolar2D(v) {\n    return polarCoord(length(v), Math.atan2(v[1], v[0]));\n}\nexport function polarToCartesian2D([r, phi]) {\n    return [r * Math.cos(phi), r * Math.sin(phi)];\n}\n// === sphere coordinates ===\n/**\n * Sphere coordinate vector.\n *\n * Angles rotate counterclockwise. Sphere coordinate [1, 0, 0] corresponds to cartesian coord [0, 0, 1].\n *\n * @param radius distance from origin\n * @param angleY polar angle, rotating around y axis, 0 - PI (0° - 180°)\n * @param angleZ azimuth angle, rotating around z axis, 0 - 2*PI (0° - 360°)\n */\nexport function sphereCoord(radius, angleY, angleZ) {\n    return [radius, angleY, angleZ];\n}\nexport function cartesianToSphere3D([x, y, z]) {\n    const radius = Math.sqrt(x * x + y * y + z * z);\n    if (radius === 0) {\n        return sphereCoord(0, 0, 0);\n    }\n    let azimuthAngleZ = x === 0 ? (y >= 0 ? 0 : Math.PI) : Math.atan2(y, x);\n    let polarAngleY = Math.acos(z / radius);\n    if (azimuthAngleZ < 0)\n        azimuthAngleZ += Math.PI * 2;\n    return sphereCoord(radius, polarAngleY, azimuthAngleZ);\n}\nexport function sphereToCartesian3D(vec) {\n    const radius = vec[0], polar = vec[1], azimuth = vec[2];\n    if (radius === 0) {\n        return [0, 0, 0];\n    }\n    return [\n        radius * Math.sin(polar) * Math.cos(azimuth),\n        radius * Math.sin(polar) * Math.sin(azimuth),\n        radius * Math.cos(polar),\n    ];\n}\n//# sourceMappingURL=coords.js.map","import { equalArray } from '../utils/predicates';\nexport function vec(v) {\n    if (typeof v === 'number') {\n        return new Float32Array(v);\n    }\n    return new Float32Array(v);\n}\nexport function add(vec1, vec2, res = []) {\n    for (let i = 0; i < vec1.length; i++) {\n        res[i] = vec1[i] + vec2[i];\n    }\n    return res;\n}\nexport function sub(vec1, vec2, res = []) {\n    for (let i = 0; i < vec1.length; i++) {\n        res[i] = vec1[i] - vec2[i];\n    }\n    return res;\n}\nexport function mul(scalar, vec, res = []) {\n    for (let i = 0; i < vec.length; i++) {\n        res[i] = vec[i] * scalar;\n    }\n    return res;\n}\nexport function div(scalar, vec, res = []) {\n    for (let i = 0; i < vec.length; i++) {\n        res[i] = vec[i] / scalar;\n    }\n    return res;\n}\nexport function length(vec) {\n    let sum = 0;\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < vec.length; i++) {\n        const val = vec[i];\n        sum += val * val;\n    }\n    return Math.sqrt(sum);\n}\nexport function normalize(vec, res = []) {\n    return div(length(vec), vec, res);\n}\nexport function limit(maxLength, vec) {\n    const l = length(vec);\n    if (maxLength < l) {\n        return mul(maxLength / l, vec);\n    }\n    else {\n        return vec;\n    }\n}\nexport function dot(v1, v2) {\n    let d = 0;\n    for (let i = 0; i < v1.length; i++) {\n        d += v1[i] * v2[i];\n    }\n    return d;\n}\nexport function cross(v1, v2, res = []) {\n    res[0] = v1[1] * v2[2] - v1[2] * v2[1];\n    res[1] = v1[2] * v2[0] - v1[0] * v2[2];\n    res[2] = v1[0] * v2[1] - v1[1] * v2[0];\n    return res;\n}\nexport function cross2D(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\nexport const isEqual = equalArray;\n//# sourceMappingURL=vectors.js.map","function _createConfig( properties ) {\n\t\n\tvar config = {\n\t\tsize : [1,1,1],\n\t\tsegments : [1,1,1]\n\t}\n\t\n\tif( properties ) {\n\t\n\t\tif( Array.isArray( properties.size ) ) {\n\t\t\tconfig.size = properties.size\n\t\t} else if( typeof properties.size === \"number\" ) {\n\t\t\tconfig.size = [properties.size, properties.size, properties.size]\n\t\t}\n\t\n\t\tif( Array.isArray( properties.segments ) ) {\n\t\t\tconfig.segments = properties.segments\n\t\t} else if( typeof properties.segments === \"number\" ) {\n\t\t\tconfig.segments = [properties.segments, properties.segments, properties.segments]\n\t\t}\n\t}\n\t\n\treturn config\n}\n\nfunction _flatten( array ) {\n\tvar results = []\n\t\n\tfor( var i=0; i < array.length; i++ ) {\n\t\tvar subarray = array[i]\n\t\tfor( var j=0; j < subarray.length; j++ ) {\n\t\t\tresults.push(subarray[j])\n\t\t}\n\t}\n\treturn results\n}\n\nfunction _generatePanel( config ) {\n\t\t\t\n\tvar rows      = _generateGrid( config )\n\tvar cells     = _generateCells( config, rows )\n\tvar positions = _flatten( rows )\n\tvar uvs       = _generateUvs( config, positions )\n\t\n\treturn {\n\t\tpositions   : positions,\n\t\tcells       : cells,\n\t\tuvs         : uvs,\n\t\tvertexCount : (config.sx + 1) * (config.sy + 1)\n\t}\n}\n\nfunction _generateUvs( config, positions ) {\n\t\n\treturn positions.map(function(p) {\n\t\treturn [\n\t\t\tp[0] / config.wx + 0.5,\n\t\t\tp[1] / config.wy + 0.5\n\t\t]\n\t})\n}\n\nfunction _generateGrid( config ) {\n\t\n\tvar step   = config.wy / config.sy\n\tvar halfY  = config.wy / 2\n\tvar length = config.sy + 1\n\tvar grid   = Array(length)\n\t\n\tfor( var i=0; i < length; i++ ) {\n\t\tgrid[i] = _generateRow( config, step * i - halfY)\n\t}\n\t\n\treturn grid\n}\n\nfunction _generateRow( config, height ) {\n\t\n\tvar halfX  = config.wx / 2\n\tvar step   = config.wx / config.sx\n\tvar length = config.sx + 1\n\tvar row    = Array(length)\n\t\n\tfor( var i=0; i < length; i++ ) {\n\t\trow[i] = [ step * i - halfX, height ]\n\t}\n\t\n\treturn row\n}\n\nfunction _generateCells( config ) {\n\t\n\tfunction index( x, y ) {\n\t\treturn (config.sx + 1) * y + x\n\t}\n\t\n\tvar cells = []\n\t\n\tfor( var x=0; x < config.sx; x++ ) {\n\t\t\n\t\tfor( var y=0; y < config.sy; y++ ) {\n\n\t\t\tvar a = index( x + 0, y + 0 )  //   d __ c\n\t\t\tvar b = index( x + 1, y + 0 )  //    |  |\n\t\t\tvar c = index( x + 1, y + 1 )  //    |__|\n\t\t\tvar d = index( x + 0, y + 1 )  //   a    b\n\t\t\t\n\t\t\tcells.push( [ a, b, c ] )\n\t\t\tcells.push( [ c, d, a ] )\n\t\t}\n\t}\n\t\n\treturn cells\n}\n\nfunction _clonePanel( panel ) {\n\t\n\treturn {\n\t\tpositions   : panel.positions,\n\t\tcells       : panel.cells,\n\t\tuvs         : panel.uvs,\n\t\tvertexCount : panel.vertexCount\n\t}\n}\n\nfunction _generateBoxPanels( config ) {\n\t\n\tvar size = config.size\n\tvar segs = config.segments\n\t\n\t//       yp  zm\n\t//        | /\n\t//        |/\n\t// xm ----+----- xp\n\t//       /|\n\t//      / |\n\t//    zp  ym\n\t\n\tvar zp = _generatePanel({\n\t\twx: size[0], wy: size[1],\n\t\tsx: segs[0], sy: segs[1]\n\t})\n\tvar xp = _generatePanel({\n\t\twx: size[2], wy: size[1],\n\t\tsx: segs[2], sy: segs[1]\n\t})\n\tvar yp = _generatePanel({\n\t\twx: size[0], wy: size[2],\n\t\tsx: segs[0], sy: segs[2]\n\t})\n\t\n\tvar zm = _clonePanel(zp)\n\tvar xm = _clonePanel(xp)\n\tvar ym = _clonePanel(yp)\n\t\n\tzp.positions = zp.positions.map( function(p) { return [       p[0],       p[1],  size[2]/2 ] } )\n\tzm.positions = zm.positions.map( function(p) { return [       p[0],      -p[1], -size[2]/2 ] } )\n\txp.positions = xp.positions.map( function(p) { return [  size[0]/2,      -p[1],       p[0] ] } )\n\txm.positions = xm.positions.map( function(p) { return [ -size[0]/2,       p[1],       p[0] ] } )\n\typ.positions = yp.positions.map( function(p) { return [       p[0],  size[1]/2,      -p[1] ] } )\n\tym.positions = ym.positions.map( function(p) { return [       p[0], -size[1]/2,       p[1] ] } )\n\t\n\tzp.normals = _makeNormals( [ 0, 0, 1], zp.positions.length )\n\tzm.normals = _makeNormals( [ 0, 0,-1], zm.positions.length )\n\txp.normals = _makeNormals( [ 1, 0, 0], xp.positions.length )\n\txm.normals = _makeNormals( [-1, 0, 0], xm.positions.length )\n\typ.normals = _makeNormals( [ 0, 1, 0], yp.positions.length )\n\tym.normals = _makeNormals( [ 0,-1, 0], ym.positions.length )\n\t\n\treturn [ zp, zm, xp, xm, yp, ym ]\n}\n\nfunction _makeNormals( normal, count ) {\n\t\n\tvar normals = Array(count)\n\t\n\tfor( var i=0; i < count; i++ ) {\n\t\tnormals[i] = normal.slice()\n\t}\n\t\n\treturn normals\n}\n\t\nfunction _generateBox( config ) {\n\t\n\tvar panels = _generateBoxPanels( config )\n\t\n\tvar positions = panels.map(function(panel) { return panel.positions })\n\tvar uvs       = panels.map(function(panel) { return panel.uvs       })\n\tvar normals   = panels.map(function(panel) { return panel.normals   })\n\tvar cells     = _offsetCellIndices( panels )\n\t\n\treturn {\n\t\tpositions: _flatten( positions ),\n\t\tuvs:       _flatten( uvs ),\n\t\tcells:     _flatten( cells ),\n\t\tnormals:   _flatten( normals ),\n\t}\n}\n\nfunction _offsetCellIndices( panels ) {\n\t\n\t/*\n\t\tFrom: [[[0,1,2],[2,3,0]],[[0,1,2],[2,3,0]]]\n\t\tTo:   [[[0,1,2],[2,3,0]],[[6,7,8],[8,9,6]]]\n\t*/\n\t\n\tvar offset = 0\n\t\n\treturn panels.map(function(panel) {\n\t\t\n\t\tvar offsetCells = panel.cells.map( function(cell) {\n\t\t\treturn cell.map(function(v) {\n\t\t\t\treturn v + offset\n\t\t\t})\n\t\t})\n\t\n\t\toffset += panel.vertexCount\n\t\n\t\treturn offsetCells\n\t})\n}\n\nmodule.exports = function( properties ) {\n\t\n\tvar config = _createConfig( properties )\n\n\treturn _generateBox( config )\n}","export function randInt(int) {\n    return Math.floor(Math.random() * int);\n}\nexport function randIntInRange(from, to) {\n    return randInt(to - from) + from;\n}\nexport function normalRand() {\n    return (Math.random() + Math.random() + Math.random()) / 3;\n}\n//# sourceMappingURL=random.js.map","import { mat4, vec3 } from 'gl-matrix'\nimport * as geo from 'tvs-libs/dist/math/geometry'\nimport { State } from '../context'\nimport { set } from '../../shared-utils/painterState'\n\nexport class Ground {\n\tposition: vec3 = [0, -3.6, 0]\n\tnormal = [0, 1, 0]\n\tscale = 1000\n\ttransform = mat4.create()\n\tplaneEquation!: number[]\n\tmirrorMatrix!: number[]\n\tgroundMirrorView = mat4.create()\n\n\tconstructor() {\n\t\tthis.update()\n\t}\n\n\tupdate() {\n\t\tmat4.fromTranslation(this.transform, this.position)\n\t\tmat4.rotateX(this.transform, this.transform, Math.PI / 2)\n\t\tmat4.scale(this.transform, this.transform, [\n\t\t\tthis.scale,\n\t\t\tthis.scale,\n\t\t\tthis.scale,\n\t\t])\n\n\t\tthis.planeEquation = geo.planeFromNormalAndCoplanarPoint(\n\t\t\tthis.normal,\n\t\t\tthis.position,\n\t\t)\n\t\tthis.mirrorMatrix = geo.mirrorMatrixFromPlane(this.planeEquation)\n\t}\n}\n\nset<State>('ground', new Ground(), {\n\treset: { transform: true, mirrorMatrix: true },\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import {\n\tbaseEvents,\n\tBaseState,\n\tgetPainter,\n\tgetState,\n} from '../shared-utils/painterState'\nimport { Ground } from './state/ground'\nimport { Screens } from './state/screens'\nimport { PerspectiveViewportState } from '../shared-utils/vr/perspectiveViewport'\n\nexport interface State extends PerspectiveViewportState {\n\tground: Ground\n\tscreens: Screens\n}\n\nexport const canvas = document.getElementById('canvas') as HTMLCanvasElement\n\nexport const painter = getPainter(canvas)\n\nexport const gl = painter.gl\n\nexport const state = getState<State>()\n\nexport const getCanvasSize = () => [canvas.width, canvas.height]\n\nexport const events = {\n\t...baseEvents,\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import box from 'geo-3d-box'\nimport { getForm } from '../shared-utils/painterState'\nimport { plane } from 'tvs-painter/dist/utils/geometry/plane'\nimport { convertStackGLGeometry } from 'tvs-painter/dist/utils/stackgl'\nimport { painter } from './context'\n\nexport const planeSize = {\n\twidth: 10,\n\theight: 10,\n}\n\nexport const planeForm = getForm(painter, 'plane').update(\n\tplane(planeSize.width, planeSize.height, 5, 5),\n)\n\nconst size = [10, 14, 2]\nconst segments = [5, 7, 1]\n\nexport const boxForm = getForm(painter, 'box').update(\n\tconvertStackGLGeometry(box({ size, segments })),\n)\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export const names = [\n\t'tworooms',\n\t'behindglass',\n\t'nanofuzz',\n\t'balloon',\n\t'threescreens'\n]\n\nconst videosUrl =\n\tprocess.env.NODE_ENV === 'production'\n\t\t? '//s3.eu-central-1.amazonaws.com/trivialspace.net/tvs1/'\n\t\t: 'videos/'\n\nconst loadTimeout = 60000\n\nfunction createVideo(src: string) {\n\tconst video = document.createElement('video')\n\tvideo.crossOrigin = 'anonymous'\n\tvideo.loop = true\n\t;(video as any).playsinline = true\n\tvideo.autoplay\n\n\tconst source1 = document.createElement('source')\n\tsource1.src = src + '.webm'\n\tsource1.type = 'video/webm'\n\n\tconst source2 = document.createElement('source')\n\tsource2.src = src + '.mp4'\n\tsource2.type = 'video/mp4'\n\n\tvideo.appendChild(source1)\n\tvideo.appendChild(source2)\n\treturn video\n}\n\nexport const videos = Promise.all(\n\tnames\n\t\t.map(name => createVideo(videosUrl + name))\n\t\t.map(\n\t\t\tv =>\n\t\t\t\tnew Promise<HTMLVideoElement>((res, rej) => {\n\t\t\t\t\tconst t = setTimeout(() => {\n\t\t\t\t\t\tconsole.log('timeout', v)\n\t\t\t\t\t\trej('Video timeout ' + v)\n\t\t\t\t\t}, loadTimeout)\n\n\t\t\t\t\tv.addEventListener('canplay', () => {\n\t\t\t\t\t\tres(v)\n\t\t\t\t\t\tclearTimeout(t)\n\t\t\t\t\t\tconsole.log('loaded', v)\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t)\n)\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { mat4, vec3 } from 'gl-matrix'\nimport { set } from '../../shared-utils/painterState'\nimport * as coords from 'tvs-libs/dist/math/coords'\nimport { mul } from 'tvs-libs/dist/math/vectors'\nimport { flatten, zip } from 'tvs-libs/dist/utils/sequence'\nimport { State } from '../context'\nimport { planeSize } from '../geometries'\nimport * as videos from './videos'\n\nexport class Screens {\n\tradius = 25\n\theight = 2\n\tscale = [1.6, 1, 1]\n\trotations = videos.names.map(\n\t\t(_, i) => (Math.PI * 2 * i) / videos.names.length,\n\t)\n\tpositions!: vec3[]\n\tscreenTransforms!: mat4[]\n\tpedestalTransforms!: mat4[]\n\tlights!: number[]\n\tlightSize!: [number, number]\n\n\tconstructor() {\n\t\tthis.update()\n\t}\n\n\tupdate() {\n\t\tthis.positions = this.rotations.map(rot => {\n\t\t\tconst phi = -rot - Math.PI / 2\n\t\t\tconst [x, z] = coords.polarToCartesian2D([this.radius, phi])\n\t\t\treturn [x, this.height, z]\n\t\t})\n\n\t\tthis.screenTransforms = zip(\n\t\t\t(rot, pos) => {\n\t\t\t\tconst t = mat4.fromTranslation(mat4.create(), pos)\n\t\t\t\tmat4.rotateY(t, t, rot)\n\t\t\t\tmat4.scale(t, t, this.scale as vec3)\n\t\t\t\treturn t\n\t\t\t},\n\t\t\tthis.rotations,\n\t\t\tthis.positions,\n\t\t)\n\n\t\tthis.pedestalTransforms = zip(\n\t\t\t(rot, pos) => {\n\t\t\t\tconst p = mul(1.045, pos) as vec3\n\t\t\t\tp[1] -= 2\n\n\t\t\t\tconst t = mat4.fromTranslation(mat4.create(), p)\n\t\t\t\tmat4.rotateY(t, t, rot)\n\t\t\t\tmat4.scale(t, t, this.scale.map(v => v * 1.03) as vec3)\n\t\t\t\treturn t\n\t\t\t},\n\t\t\tthis.rotations,\n\t\t\tthis.positions,\n\t\t)\n\n\t\tthis.lights = flatten(\n\t\t\tzip((p, r) => [...p, r], this.positions, this.rotations),\n\t\t)\n\n\t\tthis.lightSize = [\n\t\t\tplaneSize.width * this.scale[0],\n\t\t\tplaneSize.height * this.scale[1],\n\t\t]\n\t}\n}\n\nset<State>('screens', new Screens())\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { getShade } from '../shared-utils/painterState'\nimport { painter } from './context'\nimport groundFrag from './glsl/ground-frag.glsl'\nimport groundVert from './glsl/ground-vert.glsl'\nimport objectFrag from './glsl/object-frag.glsl'\nimport objectVert from './glsl/object-vert.glsl'\nimport screenFrag from './glsl/screen-frag.glsl'\nimport screenVert from './glsl/screen-vert.glsl'\n\nexport const groundShade = getShade(painter, 'ground').update({\n\tvert: groundVert,\n\tfrag: groundFrag,\n})\n\nexport const objectShade = getShade(painter, 'object').update({\n\tvert: objectVert,\n\tfrag: objectFrag,\n})\n\nexport const screenShade = getShade(painter, 'screen').update({\n\tvert: screenVert,\n\tfrag: screenFrag,\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\n\\nuniform mat4 transform;\\nuniform mat4 projection;\\nuniform mat4 view;\\n\\nvarying vec3 V;\\n\\nvoid main() {\\n\\tvec4 pos = transform * vec4(position, 1.0);\\n\\tV = pos.xyz;\\n\\tgl_Position = projection * view * pos;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D reflection;\\nuniform sampler2D lightTex[5];\\nuniform vec4 lights[5];\\nuniform vec2 size;\\nuniform vec2 lightSize;\\nvarying vec3 V;\\n\\nconst vec3 up = vec3(0.0, 1.0, 0.0);\\n\\nvec3 diffuseAreaLight(sampler2D tex, vec3 normal, vec3 pos, vec3 V) {\\n\\tfloat width = lightSize.x / 2.0;\\n\\tfloat height = lightSize.y / 2.0;\\n\\n\\tvec3 right = cross(up, normal);\\n\\n\\t/*project onto plane and calculate direction from center to the projection*/\\n\\tfloat dis = dot(normal, V - pos);\\n\\tvec3 projection = V - dis * normal;\\n\\tvec3 dir = projection - pos;\\n\\n\\t/*calculate distance from area*/\\n\\tvec2 diagonal = vec2(dot(dir, right), dot(dir, up));\\n\\tvec2 nearest2D = vec2(clamp(diagonal.x, -width, width), clamp(diagonal.y, -height, height));\\n\\tvec3 nearestPointInside = pos + (right * nearest2D.x + up * nearest2D.y);\\n\\n\\tvec3 L = normalize(nearestPointInside - V);\\n\\n\\tfloat nDotL = dot(-normal, L);\\n\\n\\tfloat d = distance(V, nearestPointInside); //real distance to area rectangle\\n\\n\\tvec3 diff = vec3(0.0);\\n\\n\\tvec2 co = ((diagonal.xy / (d + 1.0)) + vec2(width, height)) / lightSize;\\n\\tvec3 texColor = texture2D(tex, co).rgb;\\n\\n\\tif (nDotL > 0.0) {\\n\\t\\t//co.x = 1.0 - co.x;\\n\\t\\tdiff = texColor;\\n\\n\\t\\tfloat NDotL = clamp(dot(-up, L), 0.0, 1.0);\\n\\t\\tnDotL *= NDotL * 0.5 + 0.5; //distribute over hemisphere, looks better. Should be dependant of area size.\\n\\n\\t\\tfloat attenuation = 1.0 / (1.0 + d);\\n\\n\\t\\tdiff *= nDotL * attenuation;\\n\\t}\\n\\n\\treturn diff;\\n}\\n\\nvec3 processLight(vec4 light, sampler2D tex) {\\n\\t\\tvec3 lightNormal = vec3(sin(light.a), 0, cos(light.a));\\n\\t\\tvec3 diffuse = diffuseAreaLight(tex, lightNormal, light.xyz, V);\\n\\t\\treturn pow(diffuse, vec3(0.57));\\n}\\n\\nvoid main() {\\n\\tfloat scale = (50.0 - length(V)) / 50.0;\\n\\tvec4 refl = texture2D(reflection, gl_FragCoord.xy / size);\\n\\tvec3 ground = vec3(0.0);\\n\\n\\tground += processLight(lights[0], lightTex[0]);\\n\\tground += processLight(lights[1], lightTex[1]);\\n\\tground += processLight(lights[2], lightTex[2]);\\n\\tground += processLight(lights[3], lightTex[3]);\\n\\tground += processLight(lights[4], lightTex[4]);\\n\\n\\tgl_FragColor = mix(vec4(ground, 1.0), vec4(refl.rgb, 1.0), refl / 2.0 + 0.25);\\n\\t// gl_FragColor = vec4(ground, 1.0);\\n}\\n\";","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\n\\nuniform mat4 transform;\\nuniform mat4 projection;\\nuniform mat4 view;\\nuniform float groundHeight;\\n\\nvarying float dist;\\nvarying float height;\\n\\nvoid main() {\\n\\tvec4 pos = transform * vec4(position, 1.0);\\n\\tdist = length(pos.xyz);\\n\\theight = (pos.y - groundHeight) / 10.0;\\n\\tgl_Position = projection * view * pos;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform int withDistance;\\n\\nvarying float dist;\\nvarying float height;\\n\\nvoid main() {\\n\\tfloat scale = (50.0 - dist) / 50.0;\\n\\tif (withDistance == 0) {\\n\\t\\tgl_FragColor = vec4(vec3(scale * 0.6), 1.0);\\n\\t} else {\\n\\t\\tgl_FragColor = vec4(vec3(scale * 0.6), height);\\n\\t\\t// gl_FragColor = vec4(vec3(height), 1.0);\\n\\t}\\n}\\n\";","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\nattribute vec2 uv;\\nuniform float groundHeight;\\n\\nuniform mat4 transform;\\nuniform mat4 projection;\\nuniform mat4 view;\\n\\nvarying vec2 vUv;\\nvarying float height;\\n\\nvoid main() {\\n\\tvUv = uv;\\n\\tvec4 pos = transform * vec4(position, 1.0);\\n\\theight = (pos.y - groundHeight) / 10.0;\\n\\tgl_Position = projection * view * pos;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D video;\\nuniform int withDistance;\\n\\nvarying vec2 vUv;\\nvarying float height;\\n\\nvoid main() {\\n\\tvec4 tex = texture2D(video, vUv);\\n\\tif (withDistance == 0) {\\n\\t\\tgl_FragColor = vec4(tex.rgb, 1.0);\\n\\t} else {\\n\\t\\tgl_FragColor = vec4(tex.rgb, height);\\n\\t\\t// gl_FragColor = vec4(vec3(height), 1.0);\\n\\t}\\n}\\n\";","import { mat4 } from 'gl-matrix'\nimport {\n\taddSystem,\n\tgetFrame,\n\tgetLayer,\n\tgetSketch,\n} from '../shared-utils/painterState'\nimport { getBlurByAlphaEffect } from '../shared-utils/shaders/effects/blur'\nimport { zip } from 'tvs-libs/dist/utils/sequence'\nimport { TextureData } from 'tvs-painter'\nimport { makeClear } from 'tvs-painter/dist/utils/context'\nimport { events, getCanvasSize, gl, painter, state, State } from './context'\nimport { boxForm, planeForm } from './geometries'\nimport { groundShade, objectShade, screenShade } from './shaders'\nimport * as videos from './state/videos'\nimport { initPerspectiveViewport } from '../shared-utils/vr/perspectiveViewport'\n\ninitPerspectiveViewport({\n\tfovy: Math.PI * 0.4,\n\tlookSpeed: 2,\n})\n\n// Settings\n\npainter.updateDrawSettings({\n\tclearColor: [0, 0, 0, 1],\n})\n\n// Textures\n\nexport const videoTextureData: TextureData = {\n\tflipY: true,\n\tminFilter: 'LINEAR',\n\twrap: 'CLAMP_TO_EDGE',\n}\n\nexport const videoTextures = videos.names.map(n => getFrame(painter, n))\n\nconst reflSize = 256\nexport const videoLights = videoTextures.map((t, i) => {\n\tconst id = 'vref' + i\n\treturn getFrame(painter, id).update({\n\t\tbufferStructure: [\n\t\t\t{\n\t\t\t\tminFilter: 'LINEAR',\n\t\t\t\tmagFilter: 'LINEAR',\n\t\t\t},\n\t\t],\n\t\twidth: reflSize,\n\t\theight: reflSize,\n\t\tlayers: getBlurByAlphaEffect(painter, id, {\n\t\t\tstrength: 4,\n\t\t\tsize: [reflSize, reflSize],\n\t\t\tstartFrame: t,\n\t\t}),\n\t})\n})\n\n// Sketches\n\nconst groundSketch = getSketch(painter, 'ground').update({\n\tform: planeForm,\n\tshade: groundShade,\n\tuniforms: {\n\t\treflection: () => mirrorScene.image(),\n\t\ttransform: () => state.ground.transform,\n\t\tlights: () => state.screens.lights,\n\t\tlightSize: () => state.screens.lightSize,\n\t\tlightTex: () => videoLights.map(v => v.image()),\n\t\tsize: getCanvasSize,\n\t},\n})\n\nconst screenSketch = getSketch(painter, 'screens').update({\n\tform: planeForm,\n\tshade: screenShade,\n\tuniforms: zip(\n\t\t(transform, tex) => ({\n\t\t\ttransform,\n\t\t\tvideo: () => tex.image(),\n\t\t}),\n\t\tstate.screens.screenTransforms,\n\t\tvideoTextures,\n\t),\n})\n\nconst pedestalSketch = getSketch(painter, 'pedestals').update({\n\tform: boxForm,\n\tshade: objectShade,\n\tuniforms: state.screens.pedestalTransforms.map(transform => ({\n\t\ttransform,\n\t})),\n})\n\n// Layers\n\nconst drawSettings = {\n\tclearBits: makeClear(gl, 'color', 'depth'),\n}\n\nconst sceneLayer = getLayer(painter, 'scene').update({\n\tsketches: [screenSketch, pedestalSketch, groundSketch],\n\tdrawSettings,\n\tuniforms: {\n\t\tview: () => state.viewPort.camera.viewMat,\n\t\tprojection: () => state.viewPort.camera.projectionMat,\n\t\twithDistance: 0,\n\t},\n})\n\nconst mirrorSceneLayer = getLayer(painter, 'mirrorScene').update({\n\tsketches: [screenSketch, pedestalSketch],\n\tdrawSettings,\n\tuniforms: {\n\t\tview: () =>\n\t\t\tmat4.multiply(\n\t\t\t\tstate.ground.groundMirrorView,\n\t\t\t\tstate.viewPort.camera.viewMat,\n\t\t\t\tstate.ground.mirrorMatrix as any,\n\t\t\t),\n\t\tprojection: () => state.viewPort.camera.projectionMat,\n\t\twithDistance: 1,\n\t\tgroundHeight: () => state.ground.position[1],\n\t},\n})\n\nconst blurEffect = getBlurByAlphaEffect(painter, 'blur', {\n\tstrength: 4,\n\tstrengthOffset: 0.3,\n\tblurRatioVertical: 3,\n\tsize: [256, 256],\n})\n\nexport const mirrorScene = getFrame(painter, 'mirror').update({\n\tlayers: [mirrorSceneLayer, blurEffect],\n\twidth: 256,\n\theight: 256,\n\tbufferStructure: [\n\t\t{\n\t\t\tmagFilter: 'LINEAR',\n\t\t\tminFilter: 'LINEAR',\n\t\t},\n\t],\n})\n\nexport const scene = getFrame(painter, 'scene').update({\n\tlayers: sceneLayer,\n})\n\naddSystem<State>('renderer', e => {\n\tswitch (e) {\n\t\tcase events.RESIZE:\n\t\t\tscene.update()\n\t}\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import './state/ground'\nimport './state/screens'\n\nimport { dispatch, get } from '../shared-utils/painterState'\nimport { repeat } from '../shared-utils/scheduler'\nimport { events, painter } from './context'\nimport {\n\tmirrorScene,\n\tscene,\n\tvideoLights,\n\tvideoTextureData,\n\tvideoTextures,\n} from './renderer'\nimport { videos } from './state/videos'\n\nconst d = get('device')\n// d.sizeMultiplier = 1.5\n\nvideos.then(vs => {\n\tfunction startVideos() {\n\t\tvs.forEach(v => v.play())\n\t\td.canvas.removeEventListener('mousedown', startVideos)\n\t\td.canvas.removeEventListener('touchstart', startVideos)\n\t}\n\td.canvas.addEventListener('mousedown', startVideos)\n\td.canvas.addEventListener('touchstart', startVideos)\n\n\trepeat(tpf => {\n\t\td.tpf = tpf\n\t\tdispatch(events.FRAME)\n\t\tvideoTextures.forEach((t, i) =>\n\t\t\tt.update({ texture: { ...videoTextureData, asset: vs[i] } }),\n\t\t)\n\t\tpainter.compose(...videoLights, mirrorScene, scene).display(scene)\n\t}, 'render')\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","// onNextTick\n// schedule actions on next animation frame\n\ntype Callback = (n: number) => void\n\nlet updateOnce: { [id: string]: Callback } | null = null\nconst updateRepeat: { [id: string]: Callback } = {}\n\nlet willUpdate = false\n\nlet uidCounter = 0\n\nlet oldTime = 0\n\nfunction processUpdates(time: number) {\n\tconst tpf = oldTime ? time - oldTime : oldTime\n\toldTime = time\n\n\tif (updateOnce) {\n\t\tfor (const id in updateOnce) {\n\t\t\tupdateOnce[id](tpf)\n\t\t}\n\t\tupdateOnce = null\n\t}\n\n\tlet updates = 0\n\tfor (const id in updateRepeat) {\n\t\tupdates++\n\t\tupdateRepeat[id](tpf)\n\t}\n\n\tif (!updates) {\n\t\twillUpdate = false\n\t\toldTime = 0\n\t} else {\n\t\trequestAnimationFrame(processUpdates)\n\t}\n}\n\nexport function once(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateOnce = updateOnce || {}\n\tupdateOnce[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n}\n\nexport function repeat(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateRepeat[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n\n\treturn id\n}\n\nexport function stop(id: Callback | string | number) {\n\tif (typeof id === 'function') {\n\t\tid = id.name\n\t}\n\tdelete updateRepeat[id]\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export const Buttons = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n};\nexport function pointer(opts, callback) {\n    const cb = callback || opts;\n    const { element = document, enableRightButton, holdDelay = 400, holdRadius = 5, } = opts;\n    const state = {\n        pressed: {},\n        drag: { x: 0, y: 0, dX: 0, dY: 0, xMax: 0, yMax: 0 },\n        dragging: false,\n        holding: false,\n    };\n    let x = 0, y = 0, oX = 0, oY = 0, timeout = null;\n    function onPointerDown(e) {\n        if (e.isPrimary) {\n            state.pressed[e.button] = e;\n            x = oX = e.clientX;\n            y = oY = e.clientY;\n            state.dragging = true;\n            timeout != null && clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                if (state.drag.xMax < holdRadius && state.drag.yMax < holdRadius) {\n                    state.holding = true;\n                    cb(state);\n                }\n            }, holdDelay);\n        }\n        else {\n            state.pressed[Buttons.RIGHT] = e;\n        }\n        cb(state);\n    }\n    function onPointerUp(_e) {\n        state.pressed = {};\n        delete state.drag.event;\n        state.drag.x = 0;\n        state.drag.y = 0;\n        state.drag.dX = 0;\n        state.drag.dY = 0;\n        state.drag.xMax = 0;\n        state.drag.yMax = 0;\n        state.dragging = false;\n        state.holding = false;\n        timeout != null && clearTimeout(timeout);\n        timeout = null;\n        cb(state);\n    }\n    function onPointerMove(e) {\n        if (state.dragging && e.isPrimary) {\n            state.drag.event = e;\n            state.drag.x = x - e.clientX;\n            state.drag.y = y - e.clientY;\n            state.drag.dX = oX - e.clientX;\n            state.drag.dY = oY - e.clientY;\n            state.drag.xMax = Math.max(Math.abs(state.drag.x), state.drag.xMax);\n            state.drag.yMax = Math.max(Math.abs(state.drag.y), state.drag.yMax);\n            oX = e.clientX;\n            oY = e.clientY;\n            cb(state);\n        }\n    }\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    element.addEventListener('pointerdown', onPointerDown);\n    document.addEventListener('pointermove', onPointerMove);\n    document.addEventListener('pointerup', onPointerUp);\n    document.addEventListener('pointerleave', onPointerUp);\n    document.addEventListener('pointercancel', onPointerUp);\n    if (enableRightButton) {\n        element.addEventListener('contextmenu', preventDefault);\n    }\n    cb(state);\n    return function destroy() {\n        element.removeEventListener('pointerdown', onPointerDown);\n        document.removeEventListener('pointermove', onPointerMove);\n        document.removeEventListener('pointerup', onPointerUp);\n        document.removeEventListener('pointerleave', onPointerUp);\n        document.removeEventListener('pointercancel', onPointerUp);\n        if (enableRightButton) {\n            element.removeEventListener('contextmenu', preventDefault);\n        }\n    };\n}\nexport function pointerObserver(opts = {}) {\n    const observer = {\n        Buttons,\n        state: {},\n        destroy: () => { },\n    };\n    function callback(state) {\n        observer.state = state;\n    }\n    observer.destroy = pointer(opts, callback);\n    return observer;\n}\n//# sourceMappingURL=pointer.js.map"],"sourceRoot":""}