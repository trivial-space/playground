{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/contants.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/common.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/mat4.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/vec3.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/vec4.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/quat.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/mat3.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/pointer.js","webpack:///./shared-utils/scheduler.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/predicates.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/utils/context.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/object.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/dom.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/asset-lib.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/render-utils.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/form.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/texture.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/render-target.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/frame.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/layer.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/shade.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/sketch.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/painter.js","webpack:///./shared-utils/painterState.ts","webpack:///./shared-utils/vr/camera.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/sequence.js","webpack:///./shared-utils/vr/perspectiveViewport.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/utils/stackgl.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/utils/geometry/plane.js","webpack:///./shared-utils/shaders/effects/blur.ts","webpack:///./shared-utils/shaders/effects/blur_with_alpha.glsl","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/math/vectors.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/math/geometry.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/math/coords.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/keyboard.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/geo-3d-box/box.js","webpack:///./homage/state/ground.ts","webpack:///./homage/context.ts","webpack:///./homage/geometries.ts","webpack:///./homage/state/videos.ts","webpack:///./homage/state/screens.ts","webpack:///./homage/shaders.ts","webpack:///./homage/glsl/ground-vert.glsl","webpack:///./homage/glsl/ground-frag.glsl","webpack:///./homage/glsl/object-vert.glsl","webpack:///./homage/glsl/object-frag.glsl","webpack:///./homage/glsl/screen-vert.glsl","webpack:///./homage/glsl/screen-frag.glsl","webpack:///./homage/renderer.ts","webpack:///./homage/index.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/math/random.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GEOMETRY_PROP_POSITION","GEOMETRY_PROP_NORMAL","GEOMETRY_PROP_UV","UNIFORM_SOURCE_TEXTURE","VARYING_UV_COORDS","GL_TYPE","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","FLOAT_MAT2X3","FLOAT_MAT2X4","FLOAT_MAT3X2","FLOAT_MAT3X4","FLOAT_MAT4X2","FLOAT_MAT4X3","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_3D","TEXTURE_2D_ARRAY","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","FLOAT_32_UNSIGNED_INT_24_8_REV","UNSIGNED_INT_24_8","TEXTURE_FORMAT","TEXTURE_FORMAT_INTERNAL","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","PI","out","clone","a","copy","fromValues","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","set","identity","transpose","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","multiply","b","b0","b1","b2","b3","translate","v","x","y","z","rotate","rad","axis","b12","b20","b21","b22","len","hypot","sin","cos","rotateX","rotateY","rotateZ","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","sqrt","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","targetTo","target","str","frob","add","subtract","multiplyScalar","multiplyScalarAndAdd","scale","exactEquals","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","max","arguments","length","mul","sub","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","mag","cosine","acos","zero","vec","div","dist","sqrDist","sqrLen","forEach","stride","offset","count","fn","arg","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","dot","invDot","conjugate","fromMat3","fRoot","fTrace","j","k","fromEuler","halfToRad","cx","cy","cz","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","rotationTo","sqlerp","setAxes","view","Buttons","LEFT","MIDDLE","RIGHT","pointer","opts","callback","cb","element","document","enableRightButton","holdDelay","holdRadius","state","pressed","drag","dX","dY","xMax","yMax","dragging","holding","oX","oY","timeout","onPointerDown","e","isPrimary","button","clientX","clientY","clearTimeout","setTimeout","onPointerUp","_e","event","onPointerMove","preventDefault","addEventListener","removeEventListener","updateOnce","updateRepeat","willUpdate","uidCounter","oldTime","processUpdates","time","tpf","id","updates","requestAnimationFrame","once","repeat","stop","equalArray","arr1","arr2","equalObject","obj1","obj2","k1","keys","makeClear","gl","clearArray","reduce","res","item","toUpperCase","resizeCanvas","canvas","multiplier","width","height","rect","getBoundingClientRect","deepOverride","opt","ignore","isArray","val1","val2","undefined","mapObj","coll","windowSize","resize","window","innerWidth","innerHeight","defaultTextureSettings","defaultForms","renderQuad","attribs","buffer","storeType","drawType","itemCount","defaultShaders","basicEffect","vert","frag","getBindPointForSamplerType","type","typeMap","bindPoint","intSetter","location","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","texture","activeTexture","TEXTURE0","bindTexture","_texture","samplerArraySetter","size","units","Int32Array","textures","index","Type","setter","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Uint32Array","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","floatAttribSetter","typeInfo","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","itemSize","intAttribSetter","vertexAttribIPointer","matAttribSetter","defaultSize","numComponents","rowOffset","attrTypeMap","Int8Array","Uint8Array","Int16Array","Uint16Array","applyDrawSettings","settings","enable","setting","disable","blendFunc","apply","depthFunc","cullFace","frontFace","lineWidth","colorMask","depthMask","clearColor","clearDepth","clearBits","clear","revertDrawSettings","formCounter","_painter","this","data","_drawType","_itemCount","_attribs","attribData","createBuffer","bufferData","elements","_elements","glType","typedArray","Uint8ClampedArray","Error","getGLTypeForTypedArray","ELEMENT_ARRAY_BUFFER","deleteBuffer","textureCount","_data","createTexture","wrap","wrapS","wrapT","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","magFilter","TEXTURE_MAG_FILTER","minFilter","TEXTURE_MIN_FILTER","asset","texImage2D","RGBA","isWebGL2","RGBA32F","flipY","pixelStorei","UNPACK_FLIP_Y_WEBGL","indexOf","generateMipmap","assign","deleteTexture","antialias","frameBuffer","antiAliasFrameBuffer","antiAliasRenderBuffer","depthBuffer","bufferStructure","_a","every","buf","createFramebuffer","createRenderbuffer","some","getExtension","texCount","bufferAttachments","COLOR_ATTACHMENT0","bindFramebuffer","FRAMEBUFFER","glx","attachment","COLOR_ATTACHMENT0_WEBGL","drawBuffers","drawBuffersWEBGL","gl2","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","getParameter","MAX_SAMPLES","RGBA8","framebufferRenderbuffer","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","renderbufferStorage","update","framebufferTexture2D","err","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","console","error","deleteFramebuffer","deleteRenderbuffer","frameCount","layers","_targets","_textures","_b","_c","_d","selfReferencing","layerCount","layer","_uniforms","targetCount","_destroyTargets","targetData","tex","destroy","tmp","Layer","sketches","sketch","shade","uniforms","shadeCounter","fragSource","trim","vertSource","program","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","_program","_frag","_vert","attachShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","addLineNumbers","linkProgram","getProgramParameter","LINK_STATUS","lastError","getProgramInfoLog","_uniformSetters","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","substr","toString","uniformSetters","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","createUniformSetters","_attributeSetters","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","createAttributeSetters","deleteProgram","deleteShader","src","split","map","line","join","sketchCounter","Sketch","drawSettings","_drawSettings","form","maxBufferSamples","useWebGL1","getContext","sizeMultiplier","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","getDefaultLayerSettings","_renderQuad","createForm","_staticSketch","createFlatSketch","createSketch","createShade","createLayer","globalUniforms","viewport","draw","frames","frame","renderFrame","idx","source","image","sources","useProgram","shadeForm","shadeUniforms","drawInstance","drawElements","drawArrays","renderLayer","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","clearBufferfv","COLOR","blitFramebuffer","COLOR_BUFFER_BIT","LINEAR","layerPasses","_swapTargets","currentCanvas","painter","getPainter","device","cancelWindow","cancelPointer","cancelKeys","dispatch","baseEvents","RESIZE","keyboard","init","getForm","shades","getShade","getSketch","getLayer","getFrame","createFrame","effects","getEffect","createEffect","prop","val","reset","getState","systems","addSystem","FRAME","PerspectiveCamera","props","position","rotationX","rotationY","rotationXMat","rotationYMat","projectionMat","viewMat","needsUpdateView","updateRotationX","updateRotationY","amount","super","needsUpdateProjection","WithKeyNavigation","Cam","speed","UP","W","moveForward","DOWN","A","moveLeft","D","WithMouseRotation","_oldMouse","deltaX","deltaY","pickRandom","arr","doTimes","times","concat","arrs","zip","as","bs","flatten","array","subarray","currentLength","mapcat","flatMap","reverse","each","ViewPort","moveSpeed","lookSpeed","camera","initPerspectiveViewport","viewPort","updatePosFromInput","dragInfo","updateRotFromPointer","convertStackGLGeometry","stackglGeometry","geometry","plane","widthSegments","heightSegments","widthHalf","heightHalf","gridX","gridY","gridX1","gridY1","segmentWidth","segmentHeight","vertices","normals","uvs","iy","ix","offset2","indices","normal","uv","getBlurByAlphaEffect","strength","layerOpts","startFrame","startLayer","strengthOffset","blurRatioVertical","scaleFactor","passData","push","direction","DEPTH_TEST","vec1","vec2","scalar","sum","v1","v2","cross2D","planeFromNormalAndCoplanarPoint","point","mirrorMatrixFromPlane","getYawQuat","rotYAngle","getRollQuat","rotZAngle","polarToCartesian2D","phi","Keys","onKeydown","keyCode","Date","now","onKeyup","_flatten","results","_generatePanel","config","rows","step","halfY","grid","_generateRow","_generateGrid","cells","_generateCells","positions","_generateUvs","vertexCount","halfX","row","_clonePanel","panel","_makeNormals","slice","_generateBox","panels","segs","segments","zp","xp","yp","zm","xm","ym","_generateBoxPanels","offsetCells","cell","_offsetCellIndices","properties","_createConfig","transform","groundMirrorView","planeEquation","mirrorMatrix","getElementById","events","planeSize","planeForm","boxForm","names","videos","Promise","all","video","createElement","crossOrigin","loop","playsinline","autoplay","source1","source2","appendChild","createVideo","rej","radius","rotations","_","rot","coords","screenTransforms","pos","pedestalTransforms","lights","lightSize","groundShade","objectShade","screenShade","updateDrawSettings","videoTextureData","videoTextures","videoLights","groundSketch","reflection","mirrorScene","ground","screens","lightTex","screenSketch","pedestalSketch","sceneLayer","projection","withDistance","mirrorSceneLayer","groundHeight","blurEffect","scene","then","vs","startVideos","play","compose","display","randInt","int","randIntInRange","from","to","normalRand"],"mappings":"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","file":"homage/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 68);\n","export const GEOMETRY_PROP_POSITION = 'position';\nexport const GEOMETRY_PROP_NORMAL = 'normal';\nexport const GEOMETRY_PROP_UV = 'uv';\nexport const UNIFORM_SOURCE_TEXTURE = 'source';\nexport const VARYING_UV_COORDS = 'coords';\nexport const GL_TYPE = {\n    FLOAT: 0x1406,\n    FLOAT_VEC2: 0x8b50,\n    FLOAT_VEC3: 0x8b51,\n    FLOAT_VEC4: 0x8b52,\n    INT: 0x1404,\n    INT_VEC2: 0x8b53,\n    INT_VEC3: 0x8b54,\n    INT_VEC4: 0x8b55,\n    BOOL: 0x8b56,\n    BOOL_VEC2: 0x8b57,\n    BOOL_VEC3: 0x8b58,\n    BOOL_VEC4: 0x8b59,\n    FLOAT_MAT2: 0x8b5a,\n    FLOAT_MAT3: 0x8b5b,\n    FLOAT_MAT4: 0x8b5c,\n    SAMPLER_2D: 0x8b5e,\n    SAMPLER_CUBE: 0x8b60,\n    SAMPLER_3D: 0x8b5f,\n    SAMPLER_2D_SHADOW: 0x8b62,\n    FLOAT_MAT2X3: 0x8b65,\n    FLOAT_MAT2X4: 0x8b66,\n    FLOAT_MAT3X2: 0x8b67,\n    FLOAT_MAT3X4: 0x8b68,\n    FLOAT_MAT4X2: 0x8b69,\n    FLOAT_MAT4X3: 0x8b6a,\n    SAMPLER_2D_ARRAY: 0x8dc1,\n    SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n    SAMPLER_CUBE_SHADOW: 0x8dc5,\n    UNSIGNED_INT: 0x1405,\n    UNSIGNED_INT_VEC2: 0x8dc6,\n    UNSIGNED_INT_VEC3: 0x8dc7,\n    UNSIGNED_INT_VEC4: 0x8dc8,\n    INT_SAMPLER_2D: 0x8dca,\n    INT_SAMPLER_3D: 0x8dcb,\n    INT_SAMPLER_CUBE: 0x8dcc,\n    INT_SAMPLER_2D_ARRAY: 0x8dcf,\n    UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n    UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n    UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n    TEXTURE_2D: 0x0de1,\n    TEXTURE_CUBE_MAP: 0x8513,\n    TEXTURE_3D: 0x806f,\n    TEXTURE_2D_ARRAY: 0x8c1a,\n    BYTE: 0x1400,\n    UNSIGNED_BYTE: 0x1401,\n    SHORT: 0x1402,\n    UNSIGNED_SHORT: 0x1403,\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\n    UNSIGNED_SHORT_5_6_5: 0x8363,\n    HALF_FLOAT: 0x140b,\n    UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n    UNSIGNED_INT_10F_11F_11F_REV: 0x8c3b,\n    UNSIGNED_INT_5_9_9_9_REV: 0x8c3e,\n    FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8dad,\n    UNSIGNED_INT_24_8: 0x84fa,\n};\nexport const TEXTURE_FORMAT = {\n    RED: 0x1903,\n    RG: 0x8227,\n    RGB: 0x1907,\n    RGBA: 0x1908,\n    RED_INTEGER: 0x8d94,\n    RG_INTEGER: 0x8228,\n    RGB_INTEGER: 0x8d98,\n    RGBA_INTEGER: 0x8d99,\n    DEPTH_COMPONENT: 0x1902,\n};\nexport const TEXTURE_FORMAT_INTERNAL = {\n    R8: 0x8229,\n    RG8: 0x822b,\n    RGB8: 0x8051,\n    RGBA8: 0x8058,\n    R16F: 0x822d,\n    RG16F: 0x822f,\n    RGB16F: 0x881b,\n    RGBA16F: 0x881a,\n    R32F: 0x822e,\n    RG32F: 0x8230,\n    RGB32F: 0x8815,\n    RGBA32F: 0x8814,\n    R8I: 0x8231,\n    RG8I: 0x8237,\n    RGB8I: 0x8d8f,\n    RGBA8I: 0x8d8e,\n    R8UI: 0x8232,\n    RG8UI: 0x8238,\n    RGB8UI: 0x8d7d,\n    RGBA8UI: 0x8d7c,\n    R16I: 0x8233,\n    RG16I: 0x8239,\n    RGB16I: 0x8d89,\n    RGBA16I: 0x8d88,\n    R16UI: 0x8234,\n    RG16UI: 0x823a,\n    RGB16UI: 0x8d77,\n    RGBA16UI: 0x8d76,\n    R32I: 0x8235,\n    RG32I: 0x823b,\n    RGB32I: 0x8d83,\n    RGBA32I: 0x8d82,\n    R32UI: 0x8236,\n    RG32UI: 0x823c,\n    RGB32UI: 0x8d71,\n    RGBA32UI: 0x8d70,\n    RGB10_A2: 0x8059,\n    RGB10_A2UI: 0x906f,\n    SRGB: 0x8c40,\n    SRGB8: 0x8c41,\n    SRGB8_ALPHA8: 0x8c43,\n    R8_SNORM: 0x8f94,\n    RG8_SNORM: 0x8f95,\n    RGB8_SNORM: 0x8f96,\n    RGBA8_SNORM: 0x8f97,\n    DEPTH_COMPONENT16: 0x81a5,\n    DEPTH_COMPONENT24: 0x81a6,\n    DEPTH_COMPONENT32F: 0x8cac,\n};\nexport const TEXTURE_FORMAT_DEFAULTS = {\n    [GL_TYPE.UNSIGNED_BYTE]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R8,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG8,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB8,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA8,\n    },\n    [GL_TYPE.UNSIGNED_SHORT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT16,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16UI,\n    },\n    [GL_TYPE.UNSIGNED_INT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT24,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R32UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG32UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB32UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA32UI,\n    },\n    [GL_TYPE.FLOAT]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16F,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16F,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16F,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16F,\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT32F,\n    },\n    COMPRESSED_TYPES: {},\n};\n//# sourceMappingURL=contants.js.map","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","export const Buttons = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n};\nexport function pointer(opts, callback) {\n    const cb = callback || opts;\n    const { element = document, enableRightButton, holdDelay = 400, holdRadius = 5, } = opts;\n    const state = {\n        pressed: {},\n        drag: { x: 0, y: 0, dX: 0, dY: 0, xMax: 0, yMax: 0 },\n        dragging: false,\n        holding: false,\n    };\n    let x = 0, y = 0, oX = 0, oY = 0, timeout = null;\n    function onPointerDown(e) {\n        if (e.isPrimary) {\n            state.pressed[e.button] = e;\n            x = oX = e.clientX;\n            y = oY = e.clientY;\n            state.dragging = true;\n            timeout != null && clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                if (state.drag.xMax < holdRadius && state.drag.yMax < holdRadius) {\n                    state.holding = true;\n                    cb(state);\n                }\n            }, holdDelay);\n        }\n        else {\n            state.pressed[Buttons.RIGHT] = e;\n        }\n        cb(state);\n    }\n    function onPointerUp(_e) {\n        state.pressed = {};\n        delete state.drag.event;\n        state.drag.x = 0;\n        state.drag.y = 0;\n        state.drag.dX = 0;\n        state.drag.dY = 0;\n        state.drag.xMax = 0;\n        state.drag.yMax = 0;\n        state.dragging = false;\n        state.holding = false;\n        timeout != null && clearTimeout(timeout);\n        timeout = null;\n        cb(state);\n    }\n    function onPointerMove(e) {\n        if (state.dragging && e.isPrimary) {\n            state.drag.event = e;\n            state.drag.x = x - e.clientX;\n            state.drag.y = y - e.clientY;\n            state.drag.dX = oX - e.clientX;\n            state.drag.dY = oY - e.clientY;\n            state.drag.xMax = Math.max(Math.abs(state.drag.x), state.drag.xMax);\n            state.drag.yMax = Math.max(Math.abs(state.drag.y), state.drag.yMax);\n            oX = e.clientX;\n            oY = e.clientY;\n            cb(state);\n        }\n    }\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    element.addEventListener('pointerdown', onPointerDown);\n    document.addEventListener('pointermove', onPointerMove);\n    document.addEventListener('pointerup', onPointerUp);\n    document.addEventListener('pointerleave', onPointerUp);\n    document.addEventListener('pointercancel', onPointerUp);\n    if (enableRightButton) {\n        element.addEventListener('contextmenu', preventDefault);\n    }\n    cb(state);\n    return function destroy() {\n        element.removeEventListener('pointerdown', onPointerDown);\n        document.removeEventListener('pointermove', onPointerMove);\n        document.removeEventListener('pointerup', onPointerUp);\n        document.removeEventListener('pointerleave', onPointerUp);\n        document.removeEventListener('pointercancel', onPointerUp);\n        if (enableRightButton) {\n            element.removeEventListener('contextmenu', preventDefault);\n        }\n    };\n}\nexport function pointerObserver(opts = {}) {\n    const observer = {\n        Buttons,\n        state: {},\n        destroy: () => { },\n    };\n    function callback(state) {\n        observer.state = state;\n    }\n    observer.destroy = pointer(opts, callback);\n    return observer;\n}\n//# sourceMappingURL=pointer.js.map","// onNextTick\n// schedule actions on next animation frame\n\ntype Callback = (n: number) => void\n\nlet updateOnce: { [id: string]: Callback } | null = null\nconst updateRepeat: { [id: string]: Callback } = {}\n\nlet willUpdate = false\n\nlet uidCounter = 0\n\nlet oldTime = 0\n\nfunction processUpdates(time: number) {\n\tconst tpf = oldTime ? time - oldTime : oldTime\n\toldTime = time\n\n\tif (updateOnce) {\n\t\tfor (const id in updateOnce) {\n\t\t\tupdateOnce[id](tpf)\n\t\t}\n\t\tupdateOnce = null\n\t}\n\n\tlet updates = 0\n\tfor (const id in updateRepeat) {\n\t\tupdates++\n\t\tupdateRepeat[id](tpf)\n\t}\n\n\tif (!updates) {\n\t\twillUpdate = false\n\t\toldTime = 0\n\t} else {\n\t\trequestAnimationFrame(processUpdates)\n\t}\n}\n\nexport function once(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateOnce = updateOnce || {}\n\tupdateOnce[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n}\n\nexport function repeat(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateRepeat[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n\n\treturn id\n}\n\nexport function stop(id: Callback | string | number) {\n\tif (typeof id === 'function') {\n\t\tid = id.name\n\t}\n\tdelete updateRepeat[id]\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export const and = (p1, p2) => (a, b) => p1(a, b) && p2(a, b);\nexport const not = (p) => (...args) => !p(...args);\nexport const defined = a => a != null;\nexport const notEmpty = a => a && a.length;\nexport const unequal = (a, b) => a !== b;\nexport const equal = (a, b) => a === b;\nexport function equalArray(arr1, arr2) {\n    if (arr1 === arr2) {\n        return true;\n    }\n    if (!arr2 || !arr1) {\n        return false;\n    }\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalObject(obj1, obj2) {\n    if (obj1 === obj2) {\n        return true;\n    }\n    if (!obj2) {\n        return false;\n    }\n    const k1 = Object.keys(obj1);\n    const k2 = Object.keys(obj2);\n    if (!equalArray(k1, k2)) {\n        return false;\n    }\n    for (const key of k1) {\n        if (obj1[key] !== obj2[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=predicates.js.map","export function makeClear(gl, ...clearArray) {\n    return clearArray.reduce((res, item) => res | gl[item.toUpperCase() + '_BUFFER_BIT'], 0);\n}\nexport function setBlendFunc(gl, blendOpts) {\n    gl.blendFunc.apply(gl, blendOpts.map(opt => gl[opt.toUpperCase()]));\n}\n/**\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] optional `window.devicePixelRatio`.\n * @return {boolean} true if the canvas was resized.\n */\nexport function resizeCanvas(canvas, multiplier = 1) {\n    let width = canvas.width;\n    let height = canvas.height;\n    if ('clientWidth' in canvas) {\n        const rect = canvas.getBoundingClientRect();\n        width = (rect.width * multiplier) | 0;\n        height = (rect.height * multiplier) | 0;\n    }\n    if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=context.js.map","export function deepmerge(obj1, obj2) {\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        const result = Object.assign({}, obj1);\n        for (const key in obj2) {\n            const val1 = obj1[key];\n            const val2 = obj2[key];\n            if (typeof val2 !== 'undefined') {\n                result[key] = deepmerge(val1, val2);\n            }\n            else {\n                delete result[key];\n            }\n        }\n        return result;\n    }\n    return obj2;\n}\nexport function deepOverride(obj1, obj2, opt) {\n    const ignore = opt && opt.ignore;\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        for (const key in obj1) {\n            if (obj1.hasOwnProperty(key) &&\n                !(ignore && key in ignore && ignore[key] === true)) {\n                const val1 = obj1[key];\n                const val2 = obj2[key];\n                if (val2 !== undefined) {\n                    obj1[key] = deepOverride(val1, val2, {\n                        ignore: ignore && ignore[key],\n                    });\n                }\n            }\n        }\n        return obj1;\n    }\n    return obj2;\n}\nexport function mapObj(fn, coll, res = {}) {\n    for (const key in coll) {\n        res[key] = fn(coll[key], key);\n    }\n    return res;\n}\n//# sourceMappingURL=object.js.map","export function windowSize(callback) {\n    function resize() {\n        callback({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    }\n    window.addEventListener('resize', resize);\n    resize();\n    return function stop() {\n        window.removeEventListener('resize', resize);\n    };\n}\nexport function windowSizeObserver() {\n    const state = {\n        size: { width: 0, height: 0 },\n    };\n    const destroy = windowSize(s => (state.size = s));\n    return { state, destroy };\n}\n//# sourceMappingURL=dom.js.map","import * as constants from './contants';\nexport const defaultTextureSettings = {\n    wrap: 'CLAMP_TO_EDGE',\n    minFilter: 'LINEAR',\n    magFilter: 'NEAREST',\n};\nexport function getDefaultLayerSettings(gl) {\n    return {\n        clearColor: [0.0, 0.0, 0.0, 1.0],\n        blendFunc: [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA],\n    };\n}\nexport const defaultForms = {\n    renderQuad: {\n        attribs: {\n            [constants.GEOMETRY_PROP_POSITION]: {\n                buffer: new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1]),\n                storeType: 'STATIC',\n            },\n            [constants.GEOMETRY_PROP_UV]: {\n                buffer: new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]),\n                storeType: 'STATIC',\n            },\n        },\n        drawType: 'TRIANGLE_STRIP',\n        itemCount: 4,\n    },\n};\nexport const defaultShaders = {\n    basicEffect: {\n        vert: `\nattribute vec2 ${constants.GEOMETRY_PROP_POSITION};\nattribute vec2 ${constants.GEOMETRY_PROP_UV};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\t${constants.VARYING_UV_COORDS} = ${constants.GEOMETRY_PROP_UV};\n\tgl_Position = vec4(${constants.GEOMETRY_PROP_POSITION}, 0.0, 1.0);\n}`,\n        frag: `precision mediump float;\nuniform sampler2D ${constants.UNIFORM_SOURCE_TEXTURE};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\tgl_FragColor = texture2D(${constants.UNIFORM_SOURCE_TEXTURE}, ${constants.VARYING_UV_COORDS});\n}`,\n    },\n};\n//# sourceMappingURL=asset-lib.js.map","import { GL_TYPE } from './contants';\n// Attrib and Uniform Setters\nfunction getBindPointForSamplerType(type) {\n    return typeMap[type].bindPoint;\n}\nfunction floatSetter(gl, location) {\n    return (v) => {\n        gl.uniform1f(location, v);\n    };\n}\nfunction floatArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1fv(location, v);\n    };\n}\nfunction floatVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2fv(location, v);\n    };\n}\nfunction floatVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3fv(location, v);\n    };\n}\nfunction floatVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4fv(location, v);\n    };\n}\nfunction intSetter(gl, location) {\n    return (v) => {\n        gl.uniform1i(location, v);\n    };\n}\nfunction intArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1iv(location, v);\n    };\n}\nfunction intVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2iv(location, v);\n    };\n}\nfunction intVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3iv(location, v);\n    };\n}\nfunction intVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4iv(location, v);\n    };\n}\nfunction uintSetter(gl, location) {\n    return (v) => {\n        gl.uniform1ui(location, v);\n    };\n}\nfunction uintArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1uiv(location, v);\n    };\n}\nfunction uintVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2uiv(location, v);\n    };\n}\nfunction uintVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3uiv(location, v);\n    };\n}\nfunction uintVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4uiv(location, v);\n    };\n}\nfunction floatMat2Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n    };\n}\nfunction floatMat3Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n    };\n}\nfunction floatMat4Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n    };\n}\nfunction floatMat23Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x3fv(location, false, v);\n    };\n}\nfunction floatMat32Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x2fv(location, false, v);\n    };\n}\nfunction floatMat24Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x4fv(location, false, v);\n    };\n}\nfunction floatMat42Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x2fv(location, false, v);\n    };\n}\nfunction floatMat34Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x4fv(location, false, v);\n    };\n}\nfunction floatMat43Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x3fv(location, false, v);\n    };\n}\nfunction samplerSetter(gl, type, unit, location) {\n    const bindPoint = getBindPointForSamplerType(type);\n    return (texture) => {\n        gl.uniform1i(location, unit);\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(bindPoint, texture._texture);\n    };\n}\nfunction samplerArraySetter(gl, type, unit, location, size) {\n    const bindPoint = getBindPointForSamplerType(type);\n    const units = new Int32Array(size);\n    for (let i = 0; i < size; ++i) {\n        units[i] = unit + i;\n    }\n    return (textures) => {\n        gl.uniform1iv(location, units);\n        for (const index in textures) {\n            gl.activeTexture(gl.TEXTURE0 + units[index]);\n            gl.bindTexture(bindPoint, textures[index]._texture);\n        }\n    };\n}\nfunction isSamplerInfo(info) {\n    return info.Type === null;\n}\nconst typeMap = {\n    [GL_TYPE.FLOAT]: {\n        Type: Float32Array,\n        size: 4,\n        setter: floatSetter,\n        arraySetter: floatArraySetter,\n    },\n    [GL_TYPE.FLOAT_VEC2]: {\n        Type: Float32Array,\n        size: 8,\n        setter: floatVec2Setter,\n    },\n    [GL_TYPE.FLOAT_VEC3]: {\n        Type: Float32Array,\n        size: 12,\n        setter: floatVec3Setter,\n    },\n    [GL_TYPE.FLOAT_VEC4]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatVec4Setter,\n    },\n    [GL_TYPE.INT]: {\n        Type: Int32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.INT_VEC2]: { Type: Int32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.INT_VEC3]: { Type: Int32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.INT_VEC4]: { Type: Int32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.UNSIGNED_INT]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: uintSetter,\n        arraySetter: uintArraySetter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        Type: Uint32Array,\n        size: 8,\n        setter: uintVec2Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        Type: Uint32Array,\n        size: 12,\n        setter: uintVec3Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        Type: Uint32Array,\n        size: 16,\n        setter: uintVec4Setter,\n    },\n    [GL_TYPE.BOOL]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.BOOL_VEC2]: { Type: Uint32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.BOOL_VEC3]: { Type: Uint32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.BOOL_VEC4]: { Type: Uint32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.FLOAT_MAT2]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatMat2Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3]: {\n        Type: Float32Array,\n        size: 36,\n        setter: floatMat3Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4]: {\n        Type: Float32Array,\n        size: 64,\n        setter: floatMat4Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X3]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat23Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X4]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat24Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X2]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat32Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X4]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat34Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X2]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat42Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X3]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat43Setter,\n    },\n    [GL_TYPE.SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.SAMPLER_2D_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_CUBE_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n};\nfunction floatAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribPointer(location, typeInfo.itemSize, GL_TYPE.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n    };\n}\nfunction intAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribIPointer(location, typeInfo.itemSize, GL_TYPE.INT, b.stride || 0, b.offset || 0);\n    };\n}\nfunction matAttribSetter(gl, location, typeInfo) {\n    const defaultSize = typeInfo.size;\n    const count = typeInfo.count;\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        const numComponents = defaultSize;\n        const size = numComponents / count;\n        const typeInfo = typeMap[GL_TYPE.FLOAT];\n        const stride = typeInfo.size * numComponents;\n        const normalize = b.normalize || false;\n        const offset = b.offset || 0;\n        const rowOffset = stride / count;\n        for (let i = 0; i < count; ++i) {\n            gl.enableVertexAttribArray(location + i);\n            gl.vertexAttribPointer(location + i, size, GL_TYPE.FLOAT, normalize, stride, offset + rowOffset * i);\n        }\n    };\n}\nconst attrTypeMap = {\n    [GL_TYPE.FLOAT]: { size: 4, setter: floatAttribSetter, itemSize: 1 },\n    [GL_TYPE.FLOAT_VEC2]: { size: 8, setter: floatAttribSetter, itemSize: 2 },\n    [GL_TYPE.FLOAT_VEC3]: { size: 12, setter: floatAttribSetter, itemSize: 3 },\n    [GL_TYPE.FLOAT_VEC4]: { size: 16, setter: floatAttribSetter, itemSize: 4 },\n    [GL_TYPE.INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.INT_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.INT_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.INT_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.UNSIGNED_INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        size: 8,\n        setter: intAttribSetter,\n        itemSize: 2,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        size: 12,\n        setter: intAttribSetter,\n        itemSize: 3,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        size: 16,\n        setter: intAttribSetter,\n        itemSize: 4,\n    },\n    [GL_TYPE.BOOL]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.BOOL_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.BOOL_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.BOOL_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.FLOAT_MAT2]: { size: 4, setter: matAttribSetter, count: 2 },\n    [GL_TYPE.FLOAT_MAT3]: { size: 9, setter: matAttribSetter, count: 3 },\n    [GL_TYPE.FLOAT_MAT4]: { size: 16, setter: matAttribSetter, count: 4 },\n};\nexport function createUniformSetters(gl, program) {\n    let textureUnit = 0;\n    function createUniformSetter(program, uniformInfo) {\n        const location = gl.getUniformLocation(program, uniformInfo.name);\n        const isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]';\n        const type = uniformInfo.type;\n        const typeInfo = typeMap[type];\n        if (!typeInfo) {\n            throw new Error('unknown type: 0x' + type.toString(16)); // we should never get here.\n        }\n        if (location == null) {\n            return;\n        }\n        let setter;\n        if (isSamplerInfo(typeInfo)) {\n            // it's a sampler\n            const unit = textureUnit;\n            textureUnit += uniformInfo.size;\n            if (isArray) {\n                setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n            }\n            else {\n                setter = typeInfo.setter(gl, type, unit, location);\n            }\n        }\n        else {\n            if (typeInfo.arraySetter && isArray) {\n                setter = typeInfo.arraySetter(gl, location);\n            }\n            else {\n                setter = typeInfo.setter(gl, location);\n            }\n        }\n        return { setter, location };\n    }\n    const uniformSetters = {};\n    const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < numUniforms; ++i) {\n        const uniformInfo = gl.getActiveUniform(program, i);\n        if (!uniformInfo) {\n            continue;\n        }\n        let name = uniformInfo.name;\n        // remove the array suffix.\n        if (name.substr(-3) === '[0]') {\n            name = name.substr(0, name.length - 3);\n        }\n        if (program) {\n            const setter = createUniformSetter(program, uniformInfo);\n            if (setter) {\n                uniformSetters[name] = setter;\n            }\n        }\n    }\n    return uniformSetters;\n}\nexport function createAttributeSetters(gl, program) {\n    const attribSetters = {};\n    const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < numAttribs; i++) {\n        const attribInfo = gl.getActiveAttrib(program, i);\n        if (!attribInfo) {\n            break;\n        }\n        const location = gl.getAttribLocation(program, attribInfo.name);\n        const typeInfo = attrTypeMap[attribInfo.type];\n        const setter = typeInfo.setter(gl, location, typeInfo);\n        attribSetters[attribInfo.name] = { setter, location };\n    }\n    return attribSetters;\n}\n// Type helpers\nexport const glTypeToTypedArray = {\n    [GL_TYPE.BYTE]: Int8Array,\n    [GL_TYPE.UNSIGNED_BYTE]: Uint8Array,\n    [GL_TYPE.SHORT]: Int16Array,\n    [GL_TYPE.UNSIGNED_SHORT]: Uint16Array,\n    [GL_TYPE.INT]: Int32Array,\n    [GL_TYPE.UNSIGNED_INT]: Uint32Array,\n    [GL_TYPE.FLOAT]: Float32Array,\n    [GL_TYPE.UNSIGNED_SHORT_4_4_4_4]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_5_5_1]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_6_5]: Uint16Array,\n    [GL_TYPE.HALF_FLOAT]: Uint16Array,\n    [GL_TYPE.UNSIGNED_INT_2_10_10_10_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_10F_11F_11F_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_5_9_9_9_REV]: Uint32Array,\n    [GL_TYPE.FLOAT_32_UNSIGNED_INT_24_8_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_24_8]: Uint32Array,\n};\nexport function getGLTypeForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArray instanceof Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArray instanceof Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArray instanceof Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArray instanceof Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArray instanceof Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\nexport function getGLTypeForTypedArrayType(typedArrayType) {\n    if (typedArrayType === Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArrayType === Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArrayType === Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArrayType === Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArrayType === Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArrayType === Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\n// Settings\nexport function applyDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.enable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.blendFunc) {\n        gl.blendFunc.apply(gl, settings.blendFunc);\n    }\n    if (settings.depthFunc != null) {\n        gl.depthFunc(settings.depthFunc);\n    }\n    if (settings.cullFace != null) {\n        gl.cullFace(settings.cullFace);\n    }\n    if (settings.frontFace != null) {\n        gl.frontFace(settings.frontFace);\n    }\n    if (settings.lineWidth != null) {\n        gl.lineWidth(settings.lineWidth);\n    }\n    if (settings.colorMask) {\n        gl.colorMask.apply(gl, settings.colorMask);\n    }\n    if (settings.depthMask != null) {\n        gl.depthMask(settings.depthMask);\n    }\n    if (settings.clearColor) {\n        gl.clearColor.apply(gl, settings.clearColor);\n    }\n    if (settings.clearDepth != null) {\n        gl.clearDepth(settings.clearDepth);\n    }\n    if (settings.clearBits != null) {\n        gl.clear(settings.clearBits);\n    }\n}\nexport function revertDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.enable(setting);\n        }\n    }\n}\n//# sourceMappingURL=render-utils.js.map","import { getGLTypeForTypedArray } from './render-utils';\nlet formCounter = 1;\nexport class Form {\n    constructor(_painter, id = 'Form' + formCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (data.drawType) {\n            this._drawType = gl[data.drawType];\n        }\n        if (data.itemCount) {\n            this._itemCount = data.itemCount;\n        }\n        this._attribs = this._attribs || {};\n        for (const id in data.attribs) {\n            const attribData = data.attribs[id];\n            if (this._attribs[id] == null) {\n                this._attribs[id] = {\n                    buffer: gl.createBuffer(),\n                };\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._attribs[id].buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, attribData.buffer, gl[(attribData.storeType || 'STATIC') + '_DRAW']);\n        }\n        if (data.elements) {\n            const buffer = data.elements.buffer;\n            if (this._elements == null) {\n                this._elements = {\n                    buffer: gl.createBuffer(),\n                    glType: null,\n                };\n            }\n            this._elements.glType = getGLTypeForTypedArray(buffer);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._elements.buffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, buffer, gl[(data.elements.storeType || 'STATIC') + '_DRAW']);\n        }\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        for (const id in this._attribs) {\n            gl.deleteBuffer(this._attribs[id].buffer);\n        }\n        this._attribs = {};\n        if (this._elements) {\n            gl.deleteBuffer(this._elements.buffer);\n            this._elements = undefined;\n        }\n    }\n}\n//# sourceMappingURL=form.js.map","import { defaultTextureSettings } from './asset-lib';\nlet textureCount = 1;\nexport class Texture {\n    constructor(_painter, id = 'Texture' + textureCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this._texture = null;\n        this._data = {};\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (this._texture == null) {\n            this._texture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        if ((data.wrap && data.wrap !== this._data.wrap) ||\n            (data.wrapS && data.wrapS !== this._data.wrapS) ||\n            (data.wrapT && data.wrapT !== this._data.wrapT)) {\n            let wrapS, wrapT;\n            if (data.wrap) {\n                wrapS = wrapT = data.wrap;\n            }\n            else {\n                wrapT = data.wrapT || defaultTextureSettings.wrap;\n                wrapS = data.wrapS || defaultTextureSettings.wrap;\n            }\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n        }\n        else if (!(this._data.wrap || this._data.wrapS || this._data.wrapT)) {\n            this._data.wrap = this._data.wrapT = this._data.wrapS = defaultTextureSettings.wrap;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[this._data.wrap]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[this._data.wrap]);\n        }\n        if (data.magFilter && data.magFilter !== this._data.magFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[data.magFilter]);\n        }\n        else if (!this._data.magFilter) {\n            this._data.magFilter = defaultTextureSettings.magFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[this._data.magFilter]);\n        }\n        if (data.minFilter && data.minFilter !== this._data.minFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[data.minFilter]);\n        }\n        else if (!this._data.minFilter) {\n            this._data.minFilter = defaultTextureSettings.minFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[this._data.minFilter]);\n        }\n        if (data.asset) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data.asset);\n        }\n        if (data.data !== undefined) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, data.type === 'FLOAT' && this._painter.isWebGL2\n                ? gl.RGBA32F\n                : gl.RGBA, data.width, // width and height are required if using custom data\n            data.height, 0, gl.RGBA, gl[data.type || 'UNSIGNED_BYTE'], data.data);\n        }\n        if (data.flipY != null && data.flipY !== this._data.flipY) {\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, data.flipY);\n        }\n        if (data.minFilter && data.minFilter.indexOf('MIPMAP') > 0) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        this._painter.gl.deleteTexture(this._texture);\n        this._data = {};\n        this._texture = null;\n    }\n}\n//# sourceMappingURL=texture.js.map","import { equalObject } from 'tvs-libs/dist/utils/predicates';\nimport { Texture } from './texture';\nlet targetCount = 1;\nexport class RenderTarget {\n    constructor(_painter, id = 'Form' + targetCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.antialias = false;\n        this.frameBuffer = null;\n        this.antiAliasFrameBuffer = null;\n        this.antiAliasRenderBuffer = null;\n        this.textures = [];\n        this.depthBuffer = null;\n        this.bufferStructure = [];\n        this._data = {};\n    }\n    update(data) {\n        var _a;\n        const gl = this._painter.gl;\n        const width = data.width || this.width;\n        const height = data.height || this.height;\n        if (!(width && height)) {\n            return this;\n        }\n        else if (width === this.width && height === this.height) {\n            if (!data.bufferStructure)\n                return this;\n            if (data.bufferStructure.length === this.bufferStructure.length &&\n                this.bufferStructure.every((buf, i) => equalObject(buf, data.bufferStructure[i]))) {\n                return this;\n            }\n        }\n        if (this.frameBuffer == null) {\n            this.frameBuffer = gl.createFramebuffer();\n        }\n        if (this.depthBuffer == null) {\n            this.depthBuffer = gl.createRenderbuffer();\n        }\n        if (data.bufferStructure && data.bufferStructure.length) {\n            this.bufferStructure = data.bufferStructure;\n            if (this.bufferStructure.some(t => t.type === 'FLOAT')) {\n                if (this._painter.isWebGL2) {\n                    gl.getExtension('EXT_color_buffer_float');\n                }\n                else {\n                    gl.getExtension('OES_texture_float');\n                }\n            }\n        }\n        const texCount = this.bufferStructure.length || 1;\n        const bufferAttachments = [gl.COLOR_ATTACHMENT0];\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        if (texCount > 1) {\n            let glx;\n            if (!this._painter.isWebGL2) {\n                glx = gl.getExtension('WEBGL_draw_buffers');\n            }\n            const attachment = this._painter.isWebGL2\n                ? gl.COLOR_ATTACHMENT0\n                : glx.COLOR_ATTACHMENT0_WEBGL;\n            for (let i = 0; i < texCount; i++) {\n                bufferAttachments[i] = attachment + i;\n            }\n            this._painter.isWebGL2\n                ? gl.drawBuffers(bufferAttachments)\n                : glx.drawBuffersWEBGL(bufferAttachments);\n        }\n        this.antialias =\n            texCount === 1 &&\n                this._painter.isWebGL2 &&\n                (data.antialias || ((_a = this._data) === null || _a === void 0 ? void 0 : _a.antialias));\n        if (this.antialias) {\n            const gl2 = gl;\n            if (this.antiAliasFrameBuffer == null) {\n                this.antiAliasFrameBuffer = gl.createFramebuffer();\n            }\n            if (this.antiAliasRenderBuffer == null) {\n                this.antiAliasRenderBuffer = gl.createRenderbuffer();\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl2.RGBA8, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        else {\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n        }\n        for (let i = 0; i < texCount; i++) {\n            if (!this.textures[i]) {\n                this.textures[i] = new Texture(this._painter, this.id + '_Texture' + i);\n            }\n            const texture = this.textures[i];\n            texture.update(Object.assign(Object.assign({ minFilter: 'NEAREST', magFilter: 'NEAREST' }, this.bufferStructure[i]), { data: null, width,\n                height }));\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, bufferAttachments[i], gl.TEXTURE_2D, texture._texture, 0);\n        }\n        if (this.antialias) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n            if (err !== gl.FRAMEBUFFER_COMPLETE) {\n                console.error('antialias framebuffer error', err, data);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (err !== gl.FRAMEBUFFER_COMPLETE) {\n            console.error('framebuffer error', err, data);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        Object.assign(this._data, data);\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteFramebuffer(this.frameBuffer);\n        gl.deleteRenderbuffer(this.depthBuffer);\n        for (const texture of this.textures) {\n            gl.deleteTexture(texture);\n        }\n        if (this.antiAliasFrameBuffer) {\n            gl.deleteFramebuffer(this.antiAliasFrameBuffer);\n        }\n        if (this.antiAliasRenderBuffer) {\n            gl.deleteRenderbuffer(this.antiAliasRenderBuffer);\n        }\n        this.textures = [];\n        this.frameBuffer = null;\n        this.depthBuffer = null;\n        this._data = {};\n        this.bufferStructure = [];\n        this.width = 0;\n        this.height = 0;\n    }\n}\n//# sourceMappingURL=render-target.js.map","import { times } from 'tvs-libs/dist/utils/sequence';\nimport { RenderTarget } from './render-target';\nimport { Texture } from './texture';\nlet frameCount = 1;\nexport class Frame {\n    constructor(_painter, id = 'Frame' + frameCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.layers = [];\n        this._data = {};\n        this._targets = [];\n        this._textures = [];\n    }\n    image(i = 0) {\n        return ((this._targets.length &&\n            this._targets[this._targets.length - 1].textures[i]) ||\n            this._textures[i]);\n    }\n    update(data = {}) {\n        var _a, _b, _c, _d;\n        const gl = this._painter.gl;\n        const layers = Array.isArray(data.layers)\n            ? data.layers\n            : data.layers\n                ? [data.layers]\n                : this.layers;\n        const selfReferencing = data.selfReferencing || this._data.selfReferencing;\n        const layerCount = layers.reduce((count, layer) => count + (layer._uniforms.length || 1), 0);\n        const targetCount = selfReferencing || layerCount > 1 ? 2 : layerCount;\n        const width = data.width || ((_a = data.texture) === null || _a === void 0 ? void 0 : _a.width) ||\n            this._data.width || ((_b = this._data.texture) === null || _b === void 0 ? void 0 : _b.width) ||\n            gl.canvas.width;\n        const height = data.height || ((_c = data.texture) === null || _c === void 0 ? void 0 : _c.height) ||\n            this._data.height || ((_d = this._data.texture) === null || _d === void 0 ? void 0 : _d.height) ||\n            gl.canvas.height;\n        const antialias = data.antialias || this._data.antialias || true;\n        if (targetCount !== this._targets.length) {\n            this._destroyTargets();\n        }\n        const targetData = Object.assign(Object.assign({}, data), { width, height, antialias });\n        if (!this._targets.length && targetCount > 0) {\n            this._targets = times(i => new RenderTarget(this._painter, this.id + '_target' + (i + 1)).update(targetData), targetCount);\n        }\n        else if (this._targets.length) {\n            this._targets.forEach(t => {\n                t.update(targetData);\n            });\n        }\n        if (data.texture) {\n            // Hardcode to one static texture for now\n            if (!this._textures[0]) {\n                this._textures[0] = new Texture(this._painter, this.id + '_Texture0');\n            }\n            data.texture.width = width;\n            data.texture.height = height;\n            this._textures[0].update(data.texture);\n        }\n        Object.assign(this._data, data);\n        this.layers = layers;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        this._destroyTargets();\n        this._textures.forEach(tex => tex.destroy());\n        this._textures = [];\n        this._data = {};\n        this.layers = [];\n        this.width = 0;\n        this.height = 0;\n    }\n    _destroyTargets() {\n        this._targets.forEach(t => t.destroy());\n        this._targets = [];\n    }\n    _swapTargets() {\n        if (this._targets.length > 1) {\n            const tmp = this._targets[0];\n            this._targets[0] = this._targets[1];\n            this._targets[1] = tmp;\n        }\n    }\n}\n//# sourceMappingURL=frame.js.map","let layerCount = 1;\nexport class Layer {\n    constructor(id = 'DrawingLayer' + layerCount++) {\n        this.id = id;\n        this.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.sketches) {\n            this.sketches = Array.isArray(data.sketches)\n                ? data.sketches\n                : [data.sketches];\n        }\n        if (data.frag) {\n            const sketch = this.sketches && this.sketches[0];\n            if (sketch) {\n                sketch.shade.update({ frag: data.frag });\n            }\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        for (const sketch of this.sketches) {\n            sketch.destroy();\n        }\n        this._data.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=layer.js.map","import { createAttributeSetters, createUniformSetters } from './render-utils';\nlet shadeCounter = 1;\nexport class Shade {\n    constructor(_painter, id = 'Shade' + shadeCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        const fragSource = (data.frag && data.frag.trim()) || this.fragSource;\n        const vertSource = (data.vert && data.vert.trim()) || this.vertSource;\n        if (!(fragSource &&\n            vertSource &&\n            (fragSource !== this.fragSource || vertSource !== this.vertSource))) {\n            return this;\n        }\n        this.destroy();\n        if (fragSource.indexOf('GL_EXT_draw_buffers') >= 0) {\n            gl.getExtension('WEBGL_draw_buffers');\n        }\n        const program = gl.createProgram();\n        const frag = gl.createShader(gl.FRAGMENT_SHADER);\n        const vert = gl.createShader(gl.VERTEX_SHADER);\n        if (!(program && vert && frag))\n            return;\n        this._program = program;\n        this._frag = frag;\n        this._vert = vert;\n        gl.attachShader(program, vert);\n        gl.attachShader(program, frag);\n        gl.shaderSource(vert, vertSource);\n        gl.shaderSource(frag, fragSource);\n        gl.compileShader(vert);\n        gl.compileShader(frag);\n        if (!gl.getShaderParameter(vert, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Vertex Shader!\\n', gl.getShaderInfoLog(vert), addLineNumbers(vertSource));\n        }\n        if (!gl.getShaderParameter(frag, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Fragment Shader!\\n', gl.getShaderInfoLog(frag), addLineNumbers(fragSource));\n        }\n        gl.linkProgram(program);\n        const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n            const lastError = gl.getProgramInfoLog(program);\n            console.error('Error in program linking:', lastError);\n        }\n        this._uniformSetters = createUniformSetters(gl, program);\n        this._attributeSetters = createAttributeSetters(gl, program);\n        this.fragSource = fragSource;\n        this.vertSource = vertSource;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteProgram(this._program);\n        gl.deleteShader(this._frag);\n        gl.deleteShader(this._vert);\n        this.vertSource = undefined;\n        this.fragSource = undefined;\n        this._attributeSetters = {};\n        this._uniformSetters = {};\n    }\n}\nfunction addLineNumbers(src) {\n    return src\n        .trim()\n        .split('\\n')\n        .map((line, i) => i + 1 + ': ' + line)\n        .join('\\n');\n}\n//# sourceMappingURL=shade.js.map","let sketchCounter = 1;\nexport class Sketch {\n    constructor(id = 'Sketch' + sketchCounter++) {\n        this.id = id;\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.drawSettings) {\n            this._drawSettings = data.drawSettings;\n        }\n        if (data.form) {\n            this.form = data.form;\n        }\n        if (data.shade) {\n            this.shade = data.shade;\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        return this;\n    }\n    destroy() {\n        this.form && this.form.destroy();\n        this.shade && this.shade.destroy();\n        this._drawSettings = undefined;\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=sketch.js.map","import { defaultForms, defaultShaders, getDefaultLayerSettings, } from './asset-lib';\nimport { Form } from './form';\nimport { Frame } from './frame';\nimport { Layer } from './layer';\nimport { applyDrawSettings, revertDrawSettings } from './render-utils';\nimport { Shade } from './shade';\nimport { Sketch } from './sketch';\nimport { resizeCanvas } from './utils/context';\nexport class Painter {\n    constructor(canvas, opts = {}) {\n        this.canvas = canvas;\n        this.isWebGL2 = true;\n        this.maxBufferSamples = 0;\n        let gl = null;\n        if (!opts.useWebGL1) {\n            gl =\n                canvas.getContext('webgl2', opts) ||\n                    canvas.getContext('experimental-webgl2', opts);\n        }\n        if (gl == null) {\n            this.isWebGL2 = false;\n            gl =\n                canvas.getContext('webgl', opts) ||\n                    canvas.getContext('experimental-webgl', opts);\n        }\n        if (gl == null) {\n            throw Error('Cannot initialize WebGL.');\n        }\n        this.gl = gl;\n        this.sizeMultiplier = opts.sizeMultiplier || 1;\n        if (this.isWebGL2) {\n            this.maxBufferSamples = gl.getParameter(gl.MAX_SAMPLES);\n        }\n        this.resize();\n        applyDrawSettings(gl, getDefaultLayerSettings(gl));\n        this._renderQuad = this.createForm().update(defaultForms.renderQuad);\n        this._staticSketch = this.createFlatSketch();\n    }\n    resize() {\n        resizeCanvas(this.gl.canvas, this.sizeMultiplier);\n        return this;\n    }\n    destroy() {\n        this._staticSketch.destroy();\n        this._renderQuad.destroy();\n    }\n    updateDrawSettings(drawSettings) {\n        applyDrawSettings(this.gl, Object.assign({}, drawSettings));\n        return this;\n    }\n    createForm(id) {\n        return new Form(this, id);\n    }\n    createShade(id) {\n        return new Shade(this, id);\n    }\n    createSketch(id) {\n        return new Sketch(id);\n    }\n    createFlatSketch(id) {\n        const s = this.createSketch(id);\n        return s.update({\n            form: this._renderQuad,\n            shade: this.createShade(s.id + '_defaultShade').update(defaultShaders.basicEffect),\n        });\n    }\n    createFrame(id) {\n        return new Frame(this, id);\n    }\n    createLayer(id) {\n        return new Layer(id);\n    }\n    createEffect(id) {\n        const l = this.createLayer(id);\n        return l.update({\n            sketches: this.createFlatSketch(l.id + '_effectSketch'),\n        });\n    }\n    draw(sketch, globalUniforms) {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        draw(gl, sketch, globalUniforms);\n        return this;\n    }\n    compose(...frames) {\n        for (const frame of frames) {\n            renderFrame(this.gl, frame);\n        }\n        return this;\n    }\n    display(frame, idx = 0) {\n        return this.draw(this._staticSketch, { source: frame.image(idx) });\n    }\n}\nfunction draw(gl, sketch, globalUniforms, sources) {\n    const { shade: shade, form: form, _drawSettings: drawSettings, _uniforms: uniforms, } = sketch;\n    if (!(shade && form)) {\n        throw Error('cannot draw, shader or geometry are not set');\n    }\n    gl.useProgram(shade._program);\n    shadeForm(shade, form);\n    if (globalUniforms) {\n        shadeUniforms(shade, globalUniforms, sources);\n    }\n    if (drawSettings) {\n        applyDrawSettings(gl, drawSettings);\n    }\n    for (let i = 0; i < (uniforms.length || 1); i++) {\n        drawInstance(gl, sketch, uniforms[i], sources);\n    }\n    if (drawSettings) {\n        revertDrawSettings(gl, drawSettings);\n    }\n}\nfunction drawInstance(gl, sketch, uniforms, sources) {\n    if (uniforms) {\n        shadeUniforms(sketch.shade, uniforms, sources);\n    }\n    if (sketch.form._elements && sketch.form._elements.glType != null) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, sketch.form._elements.buffer);\n        gl.drawElements(sketch.form._drawType, sketch.form._itemCount, sketch.form._elements.glType, 0);\n    }\n    else {\n        gl.drawArrays(sketch.form._drawType, 0, sketch.form._itemCount);\n    }\n}\nfunction shadeForm(shade, form) {\n    for (const name in form._attribs) {\n        const setter = shade._attributeSetters[name];\n        if (setter) {\n            setter.setter(form._attribs[name]);\n        }\n    }\n}\nfunction shadeUniforms(shade, uniforms, sources) {\n    for (const name in uniforms) {\n        const setter = shade._uniformSetters[name];\n        if (setter) {\n            let value = uniforms[name];\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (typeof value === 'string' && sources) {\n                setter.setter(sources[value]);\n            }\n            else {\n                setter.setter(value);\n            }\n        }\n    }\n}\nfunction renderLayer(gl, layer, uniforms, target, source) {\n    if (target) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, target.antialias ? target.antiAliasFrameBuffer : target.frameBuffer);\n        gl.viewport(0, 0, target.width, target.height);\n    }\n    else {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    }\n    if (layer._data.drawSettings) {\n        applyDrawSettings(gl, layer._data.drawSettings);\n    }\n    for (const sketch of layer.sketches) {\n        draw(gl, sketch, uniforms, source);\n    }\n    if (target && target.antialias) {\n        const gl2 = gl;\n        // \"blit\" the cube into the color buffer, which adds antialiasing\n        gl.bindFramebuffer(gl2.READ_FRAMEBUFFER, target.antiAliasFrameBuffer);\n        gl.bindFramebuffer(gl2.DRAW_FRAMEBUFFER, target.frameBuffer);\n        gl2.clearBufferfv(gl2.COLOR, 0, [1.0, 1.0, 1.0, 1.0]);\n        gl2.blitFramebuffer(0, 0, target.width, target.height, 0, 0, target.width, target.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n    }\n    if (layer._data.drawSettings) {\n        revertDrawSettings(gl, layer._data.drawSettings);\n    }\n}\nfunction renderFrame(gl, frame) {\n    for (let i = 0; i < frame.layers.length; i++) {\n        const layer = frame.layers[i];\n        const layerPasses = layer._uniforms.length || 1;\n        for (let j = 0; j < layerPasses; j++) {\n            const target = frame._targets[0];\n            const sources = i + j === 0 && frame._textures.length\n                ? frame._textures\n                : frame._targets[1] && frame._targets[1].textures;\n            renderLayer(gl, layer, layer._uniforms[j], target, sources);\n            frame._swapTargets();\n        }\n    }\n}\n//# sourceMappingURL=painter.js.map","import { once } from './scheduler'\nimport { windowSize } from 'tvs-libs/dist/events/dom'\nimport { keyboard, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { deepOverride } from 'tvs-libs/dist/utils/object'\nimport { PainterOptions } from 'tvs-painter'\nimport { Form } from 'tvs-painter/dist/form'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport { Layer } from 'tvs-painter/dist/layer'\nimport { Painter } from 'tvs-painter/dist/painter'\nimport { Shade } from 'tvs-painter/dist/shade'\nimport { Sketch } from 'tvs-painter/dist/sketch'\nimport { PointerState, pointer } from 'tvs-libs/dist/events/pointer'\n\n// === Painter ===\n\nlet currentCanvas: HTMLCanvasElement\nlet painter: Painter\n\nexport function getPainter(canvas: HTMLCanvasElement, opts?: PainterOptions) {\n\tinit(canvas, opts)\n\treturn painter\n}\n\nconst forms: { [id: string]: Form } = {}\nexport function getForm(painter: Painter, id: string) {\n\treturn forms[id] || (forms[id] = painter.createForm('Form_' + id))\n}\n\nconst shades: { [id: string]: Shade } = {}\nexport function getShade(painter: Painter, id: string) {\n\treturn shades[id] || (shades[id] = painter.createShade('Shade_' + id))\n}\n\nconst sketches: { [id: string]: Sketch } = {}\nexport function getSketch(painter: Painter, id: string) {\n\treturn sketches[id] || (sketches[id] = painter.createSketch('Sketch_' + id))\n}\n\nconst layers: { [id: string]: Layer } = {}\nexport function getLayer(painter: Painter, id: string) {\n\treturn layers[id] || (layers[id] = painter.createLayer('Layer_' + id))\n}\n\nconst frames: { [id: string]: Frame } = {}\nexport function getFrame(painter: Painter, id: string) {\n\treturn frames[id] || (frames[id] = painter.createFrame('Frame_' + id))\n}\n\nconst effects: { [id: string]: Layer } = {}\nexport function getEffect(painter: Painter, id: string) {\n\treturn effects[id] || (effects[id] = painter.createEffect('Effect_' + id))\n}\n\n// === State ===\n\nexport interface BaseState {\n\tdevice: {\n\t\ttpf: number\n\t\tcanvas: HTMLCanvasElement\n\t\tpointer: PointerState\n\t\tkeys: KeyState\n\t\tsizeMultiplier: number\n\t\tkeepCanvasSize?: boolean\n\t}\n}\n\nexport const state: BaseState = {\n\tdevice: {\n\t\ttpf: 0,\n\t\tsizeMultiplier: 1,\n\t},\n} as BaseState\n;(window as any).state = state\n\nexport function get<\n\tS extends BaseState = BaseState,\n\tK extends keyof S = keyof S\n>(prop: K): S[K] {\n\treturn (state as S)[prop]\n}\n\nexport function set<\n\tS extends BaseState = BaseState,\n\tK extends keyof S = keyof S\n>(key: K, val: S[K], opts?: { reset: any }) {\n\tconst s = state as S\n\tif (s[key]) {\n\t\tconst reset = opts && opts.reset\n\t\tif (reset !== true) {\n\t\t\tval = deepOverride(val, s[key], { ignore: reset })\n\t\t}\n\t}\n\ts[key] = val\n}\n\nexport function getState<S extends BaseState>() {\n\treturn state as S\n}\n\n// === Systems ===\n\ntype ActionHandler<S extends BaseState = BaseState> = (\n\tevent: string,\n\tstate: S,\n) => void\n\nconst systems: { [id: string]: ActionHandler<any> } = {}\n\nexport function addSystem<S extends BaseState = BaseState>(\n\tid: string,\n\ts: ActionHandler<S>,\n) {\n\tsystems[id] = s\n}\n\nexport function dispatch(event: string) {\n\tfor (const k in systems) {\n\t\tsystems[k](event, state)\n\t}\n}\n\nexport const baseEvents = {\n\tFRAME: 'frame',\n\tRESIZE: 'resize',\n}\n\n// === Init ===\n\nlet cancelWindow: () => void\nlet cancelPointer: () => void\nlet cancelKeys: () => void\n\nexport function init(canvas: HTMLCanvasElement, opts?: PainterOptions) {\n\tif (canvas !== currentCanvas) {\n\t\tcurrentCanvas = canvas\n\n\t\tpainter = new Painter(canvas, opts)\n\n\t\tstate.device.canvas = canvas\n\n\t\tcancelWindow && cancelWindow()\n\t\tcancelPointer && cancelPointer()\n\t\tcancelKeys && cancelKeys()\n\n\t\tcancelWindow = windowSize(() =>\n\t\t\tonce(() => {\n\t\t\t\tpainter.sizeMultiplier = state.device.sizeMultiplier\n\t\t\t\tpainter.resize()\n\t\t\t\tdispatch(baseEvents.RESIZE)\n\t\t\t}, 'resize'),\n\t\t)\n\n\t\tcancelPointer = pointer(\n\t\t\t{\n\t\t\t\telement: canvas,\n\t\t\t\tenableRightButton: true,\n\t\t\t\tholdRadius: 7,\n\t\t\t\tholdDelay: 250,\n\t\t\t},\n\t\t\tm => (state.device.pointer = m),\n\t\t)\n\n\t\tcancelKeys = keyboard(k => (state.device.keys = k))\n\t}\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { mat4, vec3 } from 'gl-matrix'\nimport { Keys, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { Constructor } from 'tvs-libs/lib/oop/mixins'\nimport { PointerState, Buttons } from 'tvs-libs/dist/events/pointer'\n\nexport class Camera {\n\tposition: vec3 = [0, 0, 0]\n\trotationX = 0\n\trotationY = 0\n\trotationXMat = mat4.create()\n\trotationYMat = mat4.create()\n\tprojectionMat = mat4.create()\n\tviewMat = mat4.create()\n\tneedsUpdateView = true\n\n\tconstructor(props?: Partial<Camera>) {\n\t\tObject.assign(this, props)\n\t\tthis.updateRotationX()\n\t\tthis.updateRotationY()\n\t}\n\n\tupdateRotationX(amount: number = 0) {\n\t\tthis.rotationX += amount\n\t\tmat4.fromXRotation(this.rotationXMat, this.rotationX)\n\t\tthis.needsUpdateView = true\n\t}\n\n\tupdateRotationY(amount: number = 0) {\n\t\tthis.rotationY += amount\n\t\tmat4.fromYRotation(this.rotationYMat, this.rotationY)\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveForward(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[8],\n\t\t\tthis.rotationYMat[9],\n\t\t\tthis.rotationYMat[10],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, -dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveLeft(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[0],\n\t\t\tthis.rotationYMat[1],\n\t\t\tthis.rotationYMat[2],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, -dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveUp(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[4],\n\t\t\tthis.rotationYMat[5],\n\t\t\tthis.rotationYMat[6],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tupdate() {\n\t\tif (this.needsUpdateView) {\n\t\t\tmat4.fromTranslation(this.viewMat, this.position)\n\t\t\tmat4.multiply(this.viewMat, this.viewMat, this.rotationYMat)\n\t\t\tmat4.multiply(this.viewMat, this.viewMat, this.rotationXMat)\n\t\t\tmat4.invert(this.viewMat, this.viewMat)\n\t\t\tthis.needsUpdateView = false\n\t\t}\n\t}\n}\n\nexport class PerspectiveCamera extends Camera {\n\tfovy = Math.PI * 0.6\n\taspect = 1\n\tnear = 0.1\n\tfar = 1000\n\tneedsUpdateProjection = true\n\n\tconstructor(props?: Partial<PerspectiveCamera>) {\n\t\tsuper(props)\n\t\tObject.assign(this, props)\n\t\tthis.update()\n\t}\n\n\tupdate() {\n\t\tsuper.update()\n\n\t\tif (this.needsUpdateProjection) {\n\t\t\tmat4.perspective(\n\t\t\t\tthis.projectionMat,\n\t\t\t\tthis.fovy,\n\t\t\t\tthis.aspect,\n\t\t\t\tthis.near,\n\t\t\t\tthis.far,\n\t\t\t)\n\t\t\tthis.needsUpdateProjection = false\n\t\t}\n\t}\n}\n\nexport function WithKeyNavigation<T extends Constructor<Camera>>(Cam: T) {\n\treturn class extends Cam {\n\t\tupdatePosFromInput(speed: number, keys?: KeyState, pointer?: PointerState) {\n\t\t\tif (!(keys || pointer)) return\n\t\t\tif (\n\t\t\t\tkeys?.[Keys.UP] ||\n\t\t\t\tkeys?.[Keys.W] ||\n\t\t\t\t(pointer?.holding && !pointer.pressed[Buttons.RIGHT])\n\t\t\t) {\n\t\t\t\tthis.moveForward(speed)\n\t\t\t}\n\t\t\tif (\n\t\t\t\tkeys?.[Keys.DOWN] ||\n\t\t\t\tkeys?.[Keys.S] ||\n\t\t\t\tpointer?.pressed[Buttons.RIGHT]\n\t\t\t) {\n\t\t\t\tthis.moveForward(-speed)\n\t\t\t}\n\t\t\tif (keys?.[Keys.LEFT] || keys?.[Keys.A]) {\n\t\t\t\tthis.moveLeft(speed)\n\t\t\t}\n\t\t\tif (keys?.[Keys.RIGHT] || keys?.[Keys.D]) {\n\t\t\t\tthis.moveLeft(-speed)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function WithMouseRotation<T extends Constructor<Camera>>(Cam: T) {\n\treturn class extends Cam {\n\t\t_oldMouse = { x: 0, y: 0 }\n\n\t\tupdateRotFromPointer(\n\t\t\tspeed: number,\n\t\t\tm: { dragging: boolean; drag: { x: number; y: number } },\n\t\t) {\n\t\t\tif (m.dragging) {\n\t\t\t\tconst deltaX = this._oldMouse.x - m.drag.x\n\t\t\t\tconst deltaY = this._oldMouse.y - m.drag.y\n\t\t\t\tthis._oldMouse.x = m.drag.x\n\t\t\t\tthis._oldMouse.y = m.drag.y\n\t\t\t\tdeltaY && this.updateRotationX(deltaY * speed)\n\t\t\t\tdeltaX && this.updateRotationY(deltaX * speed)\n\t\t\t} else {\n\t\t\t\tthis._oldMouse.x && (this._oldMouse.x = 0)\n\t\t\t\tthis._oldMouse.y && (this._oldMouse.y = 0)\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { randInt, randIntInRange } from '../math/random';\nexport function pickRandom(arr) {\n    return arr[randInt(arr.length)];\n}\nexport function doTimes(fn, count) {\n    for (let i = 0; i < count; i++) {\n        fn(i);\n    }\n}\nexport function times(fn, count, res = []) {\n    for (let i = 0; i < count; i++) {\n        res[i] = fn(i);\n    }\n    return res;\n}\nexport function repeat(count, item) {\n    return times(() => item, count);\n}\nexport function concat(arr, ...arrs) {\n    return arr.concat(...arrs);\n}\nexport function zip(fn, as, bs, res = []) {\n    const length = Math.min(as.length, bs.length);\n    for (let i = 0; i < length; i++) {\n        res[i] = fn(as[i], bs[i]);\n    }\n    return res;\n}\nexport function flatten(array, res = []) {\n    for (const subarray of array) {\n        const currentLength = res.length;\n        for (let i = 0; i < subarray.length; i++) {\n            res[i + currentLength] = subarray[i];\n        }\n    }\n    return res;\n}\nexport function mapcat(fn, array, res = []) {\n    return flatten(map(fn, array, res));\n}\nexport const flatMap = mapcat;\nexport function reverse(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        res[i] = arr[arr.length - 1 - i];\n    }\n    return res;\n}\nexport function shuffle(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        const j = randIntInRange(i, arr.length);\n        const temp = res[i] !== undefined ? res[i] : arr[i];\n        res[i] = res[j] !== undefined ? res[j] : arr[j];\n        res[j] = temp;\n    }\n    return res;\n}\nexport function map(fn, coll, res = []) {\n    for (let i = 0; i < coll.length; i++) {\n        res[i] = fn(coll[i], i);\n    }\n    return res;\n}\nexport function each(fn, coll) {\n    for (const key in coll) {\n        fn(coll[key], key);\n    }\n}\nexport function reduce(fn, start, arr) {\n    for (let i = 0; i < arr.length; i++) {\n        start = fn(start, arr[i]);\n    }\n    return start;\n}\nexport function fold(fn, arr) {\n    const [start, ...rest] = arr;\n    return reduce(fn, start, rest);\n}\nexport const last = (arr) => arr[arr.length - 1];\n//# sourceMappingURL=sequence.js.map","import { addSystem, set, BaseState, baseEvents } from '../painterState'\nimport {\n\tPerspectiveCamera,\n\tWithKeyNavigation,\n\tWithMouseRotation,\n} from './camera'\n\nexport interface PerspectiveViewportState extends BaseState {\n\tviewPort: ViewPort\n}\n\nexport class ViewPort {\n\tmoveSpeed = 2\n\tlookSpeed = 2\n\tcamera = new (WithKeyNavigation(WithMouseRotation(PerspectiveCamera)))({\n\t\tfovy: Math.PI * 0.3,\n\t\tposition: [0, 0, 5],\n\t})\n}\n\naddSystem<PerspectiveViewportState>('viewPort', (e, s) => {\n\tconst v = s.viewPort\n\tswitch (e) {\n\t\tcase baseEvents.FRAME:\n\t\t\tconst d = s.device\n\t\t\tconst tpf = d.tpf / 1000\n\n\t\t\tv.camera.updatePosFromInput(\n\t\t\t\tv.moveSpeed * tpf,\n\t\t\t\ts.device.keys,\n\t\t\t\ts.device.pointer,\n\t\t\t)\n\n\t\t\tconst p = d.pointer\n\t\t\tconst dragInfo = {\n\t\t\t\tdragging: p.dragging,\n\t\t\t\tdrag: {\n\t\t\t\t\tx: (d.sizeMultiplier * p.drag.x) / d.canvas.width,\n\t\t\t\t\ty: (d.sizeMultiplier * p.drag.y) / d.canvas.height,\n\t\t\t\t},\n\t\t\t}\n\t\t\tv.camera.updateRotFromPointer(v.lookSpeed, dragInfo)\n\t\t\tv.camera.update()\n\t\t\treturn\n\n\t\tcase baseEvents.RESIZE:\n\t\t\tv.camera.aspect = s.device.canvas.width / s.device.canvas.height\n\t\t\tv.camera.needsUpdateProjection = true\n\t}\n})\n\ninterface InitOpts {\n\tmoveSpeed?: number\n\tlookSpeed?: number\n\tfovy?: number\n\tposition?: [number, number, number]\n\trotationY?: number\n\trotationX?: number\n}\n\nexport function initPerspectiveViewport({\n\tlookSpeed,\n\tmoveSpeed,\n\tposition,\n\trotationY,\n\trotationX,\n\tfovy,\n}: InitOpts = {}) {\n\tconst v = new ViewPort()\n\tif (lookSpeed) {\n\t\tv.lookSpeed = lookSpeed\n\t}\n\tif (moveSpeed) {\n\t\tv.moveSpeed = moveSpeed\n\t}\n\tif (fovy) {\n\t\tv.camera.fovy = fovy\n\t\tv.camera.needsUpdateProjection = true\n\t}\n\tif (position) {\n\t\tv.camera.position = position\n\t\tv.camera.needsUpdateView = true\n\t}\n\tif (rotationX) {\n\t\tv.camera.rotationX = rotationX\n\t\tv.camera.updateRotationX()\n\t}\n\tif (rotationY) {\n\t\tv.camera.rotationY = rotationY\n\t\tv.camera.updateRotationY()\n\t}\n\tset<PerspectiveViewportState>('viewPort', v, {\n\t\treset: { moveSpeed: true, lookSpeed: true },\n\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { flatten } from 'tvs-libs/dist/utils/sequence';\nimport * as constants from '../contants';\nexport const STACK_GL_GEOMETRY_PROP_POSITION = 'positions';\nexport const STACK_GL_GEOMETRY_PROP_NORMAL = 'normals';\nexport const STACK_GL_GEOMETRY_PROP_UV = 'uvs';\nexport const STACK_GL_GEOMETRY_PROP_ELEMENTS = 'cells';\nexport function convertStackGLGeometry(stackglGeometry) {\n    const geometry = {\n        drawType: 'TRIANGLES',\n        attribs: {},\n        itemCount: 0,\n    };\n    for (const prop in stackglGeometry) {\n        const arr = stackglGeometry[prop];\n        if (prop === STACK_GL_GEOMETRY_PROP_ELEMENTS) {\n            const buffer = new (arr.length > 65535 ? Uint32Array : Uint16Array)(flatten(arr));\n            Object.assign(geometry, {\n                elements: { buffer },\n                itemCount: buffer.length,\n            });\n        }\n        else if (prop === STACK_GL_GEOMETRY_PROP_POSITION) {\n            geometry.attribs[constants.GEOMETRY_PROP_POSITION] = {\n                buffer: new Float32Array(flatten(arr)),\n            };\n        }\n        else if (prop === STACK_GL_GEOMETRY_PROP_NORMAL) {\n            geometry.attribs[constants.GEOMETRY_PROP_NORMAL] = {\n                buffer: new Float32Array(flatten(arr)),\n            };\n        }\n        else if (prop === STACK_GL_GEOMETRY_PROP_UV) {\n            geometry.attribs[constants.GEOMETRY_PROP_UV] = {\n                buffer: new Float32Array(flatten(arr)),\n            };\n        }\n        else {\n            geometry.attribs[prop] = { buffer: new Float32Array(flatten(arr)) };\n        }\n    }\n    return geometry;\n}\n//# sourceMappingURL=stackgl.js.map","export function plane(width, height, widthSegments, heightSegments) {\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    const gridX = widthSegments || 1;\n    const gridY = heightSegments || 1;\n    const gridX1 = gridX + 1;\n    const gridY1 = gridY + 1;\n    const segmentWidth = width / gridX;\n    const segmentHeight = height / gridY;\n    const vertices = new Float32Array(gridX1 * gridY1 * 3);\n    const normals = new Float32Array(gridX1 * gridY1 * 3);\n    const uvs = new Float32Array(gridX1 * gridY1 * 2);\n    let iy, ix;\n    let offset = 0;\n    let offset2 = 0;\n    for (iy = 0; iy < gridY1; iy++) {\n        const y = iy * segmentHeight - heightHalf;\n        for (ix = 0; ix < gridX1; ix++) {\n            const x = ix * segmentWidth - widthHalf;\n            vertices[offset] = x;\n            vertices[offset + 1] = -y;\n            normals[offset + 2] = 1;\n            uvs[offset2] = ix / gridX;\n            uvs[offset2 + 1] = 1 - iy / gridY;\n            offset += 3;\n            offset2 += 2;\n        }\n    }\n    offset = 0;\n    const indices = new (vertices.length / 3 > 65535 ? Uint32Array : Uint16Array)(gridX * gridY * 6);\n    for (iy = 0; iy < gridY; iy++) {\n        for (ix = 0; ix < gridX; ix++) {\n            const a = ix + gridX1 * iy;\n            const b = ix + gridX1 * (iy + 1);\n            const c = ix + 1 + gridX1 * (iy + 1);\n            const d = ix + 1 + gridX1 * iy;\n            indices[offset] = a;\n            indices[offset + 1] = b;\n            indices[offset + 2] = d;\n            indices[offset + 3] = b;\n            indices[offset + 4] = c;\n            indices[offset + 5] = d;\n            offset += 6;\n        }\n    }\n    return {\n        attribs: {\n            position: {\n                buffer: vertices,\n            },\n            normal: {\n                buffer: normals,\n            },\n            uv: {\n                buffer: uvs,\n            },\n        },\n        elements: {\n            buffer: indices,\n        },\n        drawType: 'TRIANGLES',\n        itemCount: indices.length,\n    };\n}\n//# sourceMappingURL=plane.js.map","import { getEffect } from '../../painterState'\nimport { LayerData, Painter } from 'tvs-painter'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport frag from './blur_with_alpha.glsl'\n\ninterface BlurOpts {\n\tstrength: number\n\tsize?: number[] | (() => number[])\n\tstrengthOffset?: number | (() => number)\n\tblurRatioVertical?: number\n\tscaleFactor?: number\n\tlayerOpts?: LayerData\n\tstartFrame?: Frame\n}\n\nexport function getBlurByAlphaEffect(\n\tpainter: Painter,\n\tid: string,\n\t{\n\t\tstrength,\n\t\tsize,\n\t\tlayerOpts,\n\t\tstartFrame: startLayer,\n\t\tstrengthOffset = 0,\n\t\tblurRatioVertical = 1,\n\t\tscaleFactor = 0.6,\n\t}: BlurOpts,\n) {\n\tconst passData: any[] = []\n\n\twhile (strength >= 1 / blurRatioVertical) {\n\t\tpassData.push({\n\t\t\tstrength,\n\t\t\tdirection: 0,\n\t\t\tsource: '0',\n\t\t})\n\t\tpassData.push({\n\t\t\tstrength: strength * blurRatioVertical,\n\t\t\tdirection: 1,\n\t\t\tsource: '0',\n\t\t})\n\t\tstrength *= scaleFactor\n\t}\n\n\tif (startLayer) {\n\t\tpassData[0].source = () => startLayer.image()\n\t}\n\n\treturn getEffect(painter, id).update({\n\t\t...layerOpts,\n\t\tfrag,\n\t\tdrawSettings: {\n\t\t\tdisable: [painter.gl.DEPTH_TEST],\n\t\t},\n\t\tuniforms: passData.map(data => ({\n\t\t\t...data,\n\t\t\tblurRatioVertical,\n\t\t\tstrengthOffset,\n\t\t\tsize: size || (() => [painter.gl.canvas.width, painter.gl.canvas.height]),\n\t\t})),\n\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export default \"precision mediump float;\\n#define GLSLIFY 1\\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n  vec4 color = vec4(0.0);\\n  vec2 off1 = vec2(1.3846153846) * direction;\\n  vec2 off2 = vec2(3.2307692308) * direction;\\n  color += texture2D(image, uv) * 0.2270270270;\\n  color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\\n  color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\\n  color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\\n  color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\\n  return color;\\n}\\n\\nuniform sampler2D source;\\nuniform vec2 size;\\nuniform float direction;\\nuniform float strength;\\nuniform float strengthOffset;\\n\\nvarying vec2 coords;\\n\\nvoid main() {\\n\\tvec2 uv = coords;\\n\\tvec4 refl = texture2D(source, uv);\\n\\tfloat dist = refl.a * strength + strengthOffset;\\n\\n\\tif (direction == 0.0) {\\n\\t\\tgl_FragColor = blur9(source, uv, size, vec2(dist, 0));\\n\\t} else {\\n\\t\\tgl_FragColor = blur9(source, uv, size, vec2(0, dist));\\n\\t}\\n}\\n\";","import { equalArray } from '../utils/predicates';\nexport function vec(v) {\n    if (typeof v === 'number') {\n        return new Float32Array(v);\n    }\n    return new Float32Array(v);\n}\nexport function add(vec1, vec2, res = []) {\n    for (let i = 0; i < vec1.length; i++) {\n        res[i] = vec1[i] + vec2[i];\n    }\n    return res;\n}\nexport function sub(vec1, vec2, res = []) {\n    for (let i = 0; i < vec1.length; i++) {\n        res[i] = vec1[i] - vec2[i];\n    }\n    return res;\n}\nexport function mul(scalar, vec, res = []) {\n    for (let i = 0; i < vec.length; i++) {\n        res[i] = vec[i] * scalar;\n    }\n    return res;\n}\nexport function div(scalar, vec, res = []) {\n    for (let i = 0; i < vec.length; i++) {\n        res[i] = vec[i] / scalar;\n    }\n    return res;\n}\nexport function length(vec) {\n    let sum = 0;\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < vec.length; i++) {\n        const val = vec[i];\n        sum += val * val;\n    }\n    return Math.sqrt(sum);\n}\nexport function normalize(vec, res = []) {\n    return div(length(vec), vec, res);\n}\nexport function limit(maxLength, vec) {\n    const l = length(vec);\n    if (maxLength < l) {\n        return mul(maxLength / l, vec);\n    }\n    else {\n        return vec;\n    }\n}\nexport function dot(v1, v2) {\n    let d = 0;\n    for (let i = 0; i < v1.length; i++) {\n        d += v1[i] * v2[i];\n    }\n    return d;\n}\nexport function cross(v1, v2, res = []) {\n    res[0] = v1[1] * v2[2] - v1[2] * v2[1];\n    res[1] = v1[2] * v2[0] - v1[0] * v2[2];\n    res[2] = v1[0] * v2[1] - v1[1] * v2[0];\n    return res;\n}\nexport function cross2D(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\nexport const isEqual = equalArray;\n//# sourceMappingURL=vectors.js.map","import { cross, dot, normalize, sub } from './vectors';\nexport function planeFromNormalAndCoplanarPoint(n, point) {\n    const d = dot(n, point);\n    return [n[0], n[1], n[2], -d];\n}\nexport function planeFromThreeCoplanarPoints(p1, p2, p3) {\n    return planeFromNormalAndCoplanarPoint(normalFromThreeCoplanarPoints(p1, p2, p3), p1);\n}\nexport function normalFromThreeCoplanarPoints(p1, p2, p3) {\n    return normalize(cross(sub(p3, p2), sub(p1, p2)));\n}\n/*            | 1-2Nx2   -2NxNy  -2NxNz  -2NxD |\nMreflection = |  -2NxNy 1-2Ny2   -2NyNz  -2NyD |\n              |  -2NxNz  -2NyNz 1-2Nz2   -2NzD |\n              |    0       0       0       1   |\nhttp://khayyam.kaplinski.com/2011/09/reflective-water-with-glsl-part-i.html\n\n              mat.m._00 = 1-2*a*a;\tmat.m._01 = -2*a*b;\tmat.m._02 = -2*a*c;\tmat.m._03 = -2*a*d;\n              mat.m._10 = -2*a*b; mat.m._11 = 1-2*b*b;\tmat.m._12 = -2*b*c;\tmat.m._13 = -2*b*d;\n              mat.m._20 = -2*a*c;\tmat.m._21 = -2*b*c;\tmat.m._22 = 1-2*c*c;\tmat.m._23 = -2*c*d;\n              mat.m._30 = 0.0f;\tmat.m._31 = 0.0f;\tmat.m._32 = 0.0f;\tmat.m._33 = 1.0f;\nhttps://www.opengl.org/discussion_boards/showthread.php/147784-Mirror-Matrices\n*/\nexport function mirrorMatrixFromPlane(plane) {\n    const [a, b, c, d] = plane;\n    // prettier-ignore\n    return [\n        1 - 2 * a * a, -2 * a * b, -2 * a * c, 0,\n        -2 * a * b, 1 - 2 * b * b, -2 * b * c, 0,\n        -2 * a * c, -2 * b * c, 1 - 2 * c * c, 0,\n        -2 * a * d, -2 * b * d, -2 * c * d, 1,\n    ];\n}\nexport function getYawQuat(rotYAngle) {\n    rotYAngle *= 0.5;\n    return [0, Math.sin(rotYAngle), 0, Math.cos(rotYAngle)];\n}\nexport function getPitchQuat(rotXAngle) {\n    rotXAngle *= 0.5;\n    return [Math.sin(rotXAngle), 0, 0, Math.cos(rotXAngle)];\n}\nexport function getRollQuat(rotZAngle) {\n    rotZAngle *= 0.5;\n    return [0, 0, Math.sin(rotZAngle), Math.cos(rotZAngle)];\n}\n//# sourceMappingURL=geometry.js.map","import { length } from './vectors';\n// === polar coordinates ===\n/**\n * @param radius distance from origin\n * @param angle counter clockwise\n */\nexport function polarCoord(radius, angle) {\n    return [radius, angle];\n}\nexport function cartesianToPolar2D(v) {\n    return polarCoord(length(v), Math.atan2(v[1], v[0]));\n}\nexport function polarToCartesian2D([r, phi]) {\n    return [r * Math.cos(phi), r * Math.sin(phi)];\n}\n// === sphere coordinates ===\n/**\n * Sphere coordinate vector.\n *\n * Angles rotate counterclockwise. Sphere coordinate [1, 0, 0] corresponds to cartesian coord [0, 0, 1].\n *\n * @param radius distance from origin\n * @param angleY polar angle, rotating around y axis, 0 - PI (0° - 180°)\n * @param angleZ azimuth angle, rotating around z axis, 0 - 2*PI (0° - 360°)\n */\nexport function sphereCoord(radius, angleY, angleZ) {\n    return [radius, angleY, angleZ];\n}\nexport function cartesianToSphere3D([x, y, z]) {\n    const radius = Math.sqrt(x * x + y * y + z * z);\n    if (radius === 0) {\n        return sphereCoord(0, 0, 0);\n    }\n    let azimuthAngleZ = x === 0 ? (y >= 0 ? 0 : Math.PI) : Math.atan2(y, x);\n    let polarAngleY = Math.acos(z / radius);\n    if (azimuthAngleZ < 0)\n        azimuthAngleZ += Math.PI * 2;\n    return sphereCoord(radius, polarAngleY, azimuthAngleZ);\n}\nexport function sphereToCartesian3D(vec) {\n    const radius = vec[0], polar = vec[1], azimuth = vec[2];\n    if (radius === 0) {\n        return [0, 0, 0];\n    }\n    return [\n        radius * Math.sin(polar) * Math.cos(azimuth),\n        radius * Math.sin(polar) * Math.sin(azimuth),\n        radius * Math.cos(polar),\n    ];\n}\n//# sourceMappingURL=coords.js.map","export var Keys;\n(function (Keys) {\n    Keys[Keys[\"CANCEL\"] = 3] = \"CANCEL\";\n    Keys[Keys[\"HELP\"] = 6] = \"HELP\";\n    Keys[Keys[\"BACK_SPACE\"] = 8] = \"BACK_SPACE\";\n    Keys[Keys[\"TAB\"] = 9] = \"TAB\";\n    Keys[Keys[\"CLEAR\"] = 12] = \"CLEAR\";\n    Keys[Keys[\"RETURN\"] = 13] = \"RETURN\";\n    Keys[Keys[\"ENTER\"] = 14] = \"ENTER\";\n    Keys[Keys[\"SHIFT\"] = 16] = \"SHIFT\";\n    Keys[Keys[\"CONTROL\"] = 17] = \"CONTROL\";\n    Keys[Keys[\"ALT\"] = 18] = \"ALT\";\n    Keys[Keys[\"PAUSE\"] = 19] = \"PAUSE\";\n    Keys[Keys[\"CAPS_LOCK\"] = 20] = \"CAPS_LOCK\";\n    Keys[Keys[\"ESCAPE\"] = 27] = \"ESCAPE\";\n    Keys[Keys[\"SPACE\"] = 32] = \"SPACE\";\n    Keys[Keys[\"PAGE_UP\"] = 33] = \"PAGE_UP\";\n    Keys[Keys[\"PAGE_DOWN\"] = 34] = \"PAGE_DOWN\";\n    Keys[Keys[\"END\"] = 35] = \"END\";\n    Keys[Keys[\"HOME\"] = 36] = \"HOME\";\n    Keys[Keys[\"LEFT\"] = 37] = \"LEFT\";\n    Keys[Keys[\"UP\"] = 38] = \"UP\";\n    Keys[Keys[\"RIGHT\"] = 39] = \"RIGHT\";\n    Keys[Keys[\"DOWN\"] = 40] = \"DOWN\";\n    Keys[Keys[\"PRINTSCREEN\"] = 44] = \"PRINTSCREEN\";\n    Keys[Keys[\"INSERT\"] = 45] = \"INSERT\";\n    Keys[Keys[\"DELETE\"] = 46] = \"DELETE\";\n    Keys[Keys[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    Keys[Keys[\"DIGIT_1\"] = 49] = \"DIGIT_1\";\n    Keys[Keys[\"DIGIT_2\"] = 50] = \"DIGIT_2\";\n    Keys[Keys[\"DIGIT_3\"] = 51] = \"DIGIT_3\";\n    Keys[Keys[\"DIGIT_4\"] = 52] = \"DIGIT_4\";\n    Keys[Keys[\"DIGIT_5\"] = 53] = \"DIGIT_5\";\n    Keys[Keys[\"DIGIT_6\"] = 54] = \"DIGIT_6\";\n    Keys[Keys[\"DIGIT_7\"] = 55] = \"DIGIT_7\";\n    Keys[Keys[\"DIGIT_8\"] = 56] = \"DIGIT_8\";\n    Keys[Keys[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    Keys[Keys[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    Keys[Keys[\"EQUALS\"] = 61] = \"EQUALS\";\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    Keys[Keys[\"CONTEXT_MENU\"] = 93] = \"CONTEXT_MENU\";\n    Keys[Keys[\"NUMPAD0\"] = 96] = \"NUMPAD0\";\n    Keys[Keys[\"NUMPAD1\"] = 97] = \"NUMPAD1\";\n    Keys[Keys[\"NUMPAD2\"] = 98] = \"NUMPAD2\";\n    Keys[Keys[\"NUMPAD3\"] = 99] = \"NUMPAD3\";\n    Keys[Keys[\"NUMPAD4\"] = 100] = \"NUMPAD4\";\n    Keys[Keys[\"NUMPAD5\"] = 101] = \"NUMPAD5\";\n    Keys[Keys[\"NUMPAD6\"] = 102] = \"NUMPAD6\";\n    Keys[Keys[\"NUMPAD7\"] = 103] = \"NUMPAD7\";\n    Keys[Keys[\"NUMPAD8\"] = 104] = \"NUMPAD8\";\n    Keys[Keys[\"NUMPAD9\"] = 105] = \"NUMPAD9\";\n    Keys[Keys[\"MULTIPLY\"] = 106] = \"MULTIPLY\";\n    Keys[Keys[\"ADD\"] = 107] = \"ADD\";\n    Keys[Keys[\"SEPARATOR\"] = 108] = \"SEPARATOR\";\n    Keys[Keys[\"SUBTRACT\"] = 109] = \"SUBTRACT\";\n    Keys[Keys[\"DECIMAL\"] = 110] = \"DECIMAL\";\n    Keys[Keys[\"DIVIDE\"] = 111] = \"DIVIDE\";\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    Keys[Keys[\"F13\"] = 124] = \"F13\";\n    Keys[Keys[\"F14\"] = 125] = \"F14\";\n    Keys[Keys[\"F15\"] = 126] = \"F15\";\n    Keys[Keys[\"F16\"] = 127] = \"F16\";\n    Keys[Keys[\"F17\"] = 128] = \"F17\";\n    Keys[Keys[\"F18\"] = 129] = \"F18\";\n    Keys[Keys[\"F19\"] = 130] = \"F19\";\n    Keys[Keys[\"F20\"] = 131] = \"F20\";\n    Keys[Keys[\"F21\"] = 132] = \"F21\";\n    Keys[Keys[\"F22\"] = 133] = \"F22\";\n    Keys[Keys[\"F23\"] = 134] = \"F23\";\n    Keys[Keys[\"F24\"] = 135] = \"F24\";\n    Keys[Keys[\"NUM_LOCK\"] = 144] = \"NUM_LOCK\";\n    Keys[Keys[\"SCROLL_LOCK\"] = 145] = \"SCROLL_LOCK\";\n    Keys[Keys[\"COMMA\"] = 188] = \"COMMA\";\n    Keys[Keys[\"PERIOD\"] = 190] = \"PERIOD\";\n    Keys[Keys[\"SLASH\"] = 191] = \"SLASH\";\n    Keys[Keys[\"BACK_QUOTE\"] = 192] = \"BACK_QUOTE\";\n    Keys[Keys[\"OPEN_BRACKET\"] = 219] = \"OPEN_BRACKET\";\n    Keys[Keys[\"BACK_SLASH\"] = 220] = \"BACK_SLASH\";\n    Keys[Keys[\"CLOSE_BRACKET\"] = 221] = \"CLOSE_BRACKET\";\n    Keys[Keys[\"QUOTE\"] = 222] = \"QUOTE\";\n    Keys[Keys[\"META\"] = 224] = \"META\";\n})(Keys || (Keys = {}));\nexport function keyboard(opts, callback) {\n    const cb = callback || opts;\n    const { element = window } = opts;\n    const pressed = {};\n    function onKeydown(event) {\n        pressed[event.keyCode] = Date.now();\n        cb(pressed);\n    }\n    function onKeyup(event) {\n        delete pressed[event.keyCode];\n        cb(pressed);\n    }\n    element.addEventListener('keyup', onKeyup, false);\n    element.addEventListener('keydown', onKeydown, false);\n    cb(pressed);\n    return function stop() {\n        element.removeEventListener('keyup', onKeyup);\n        element.removeEventListener('keydown', onKeydown);\n    };\n}\nexport function keyboardObserver(opts) {\n    const observer = {\n        Keys,\n        state: { pressed: {} },\n        destroy: () => { },\n    };\n    function callback(pressed) {\n        observer.state.pressed = pressed;\n    }\n    observer.destroy = keyboard(callback, opts);\n    return observer;\n}\n//# sourceMappingURL=keyboard.js.map","function _createConfig( properties ) {\n\t\n\tvar config = {\n\t\tsize : [1,1,1],\n\t\tsegments : [1,1,1]\n\t}\n\t\n\tif( properties ) {\n\t\n\t\tif( Array.isArray( properties.size ) ) {\n\t\t\tconfig.size = properties.size\n\t\t} else if( typeof properties.size === \"number\" ) {\n\t\t\tconfig.size = [properties.size, properties.size, properties.size]\n\t\t}\n\t\n\t\tif( Array.isArray( properties.segments ) ) {\n\t\t\tconfig.segments = properties.segments\n\t\t} else if( typeof properties.segments === \"number\" ) {\n\t\t\tconfig.segments = [properties.segments, properties.segments, properties.segments]\n\t\t}\n\t}\n\t\n\treturn config\n}\n\nfunction _flatten( array ) {\n\tvar results = []\n\t\n\tfor( var i=0; i < array.length; i++ ) {\n\t\tvar subarray = array[i]\n\t\tfor( var j=0; j < subarray.length; j++ ) {\n\t\t\tresults.push(subarray[j])\n\t\t}\n\t}\n\treturn results\n}\n\nfunction _generatePanel( config ) {\n\t\t\t\n\tvar rows      = _generateGrid( config )\n\tvar cells     = _generateCells( config, rows )\n\tvar positions = _flatten( rows )\n\tvar uvs       = _generateUvs( config, positions )\n\t\n\treturn {\n\t\tpositions   : positions,\n\t\tcells       : cells,\n\t\tuvs         : uvs,\n\t\tvertexCount : (config.sx + 1) * (config.sy + 1)\n\t}\n}\n\nfunction _generateUvs( config, positions ) {\n\t\n\treturn positions.map(function(p) {\n\t\treturn [\n\t\t\tp[0] / config.wx + 0.5,\n\t\t\tp[1] / config.wy + 0.5\n\t\t]\n\t})\n}\n\nfunction _generateGrid( config ) {\n\t\n\tvar step   = config.wy / config.sy\n\tvar halfY  = config.wy / 2\n\tvar length = config.sy + 1\n\tvar grid   = Array(length)\n\t\n\tfor( var i=0; i < length; i++ ) {\n\t\tgrid[i] = _generateRow( config, step * i - halfY)\n\t}\n\t\n\treturn grid\n}\n\nfunction _generateRow( config, height ) {\n\t\n\tvar halfX  = config.wx / 2\n\tvar step   = config.wx / config.sx\n\tvar length = config.sx + 1\n\tvar row    = Array(length)\n\t\n\tfor( var i=0; i < length; i++ ) {\n\t\trow[i] = [ step * i - halfX, height ]\n\t}\n\t\n\treturn row\n}\n\nfunction _generateCells( config ) {\n\t\n\tfunction index( x, y ) {\n\t\treturn (config.sx + 1) * y + x\n\t}\n\t\n\tvar cells = []\n\t\n\tfor( var x=0; x < config.sx; x++ ) {\n\t\t\n\t\tfor( var y=0; y < config.sy; y++ ) {\n\n\t\t\tvar a = index( x + 0, y + 0 )  //   d __ c\n\t\t\tvar b = index( x + 1, y + 0 )  //    |  |\n\t\t\tvar c = index( x + 1, y + 1 )  //    |__|\n\t\t\tvar d = index( x + 0, y + 1 )  //   a    b\n\t\t\t\n\t\t\tcells.push( [ a, b, c ] )\n\t\t\tcells.push( [ c, d, a ] )\n\t\t}\n\t}\n\t\n\treturn cells\n}\n\nfunction _clonePanel( panel ) {\n\t\n\treturn {\n\t\tpositions   : panel.positions,\n\t\tcells       : panel.cells,\n\t\tuvs         : panel.uvs,\n\t\tvertexCount : panel.vertexCount\n\t}\n}\n\nfunction _generateBoxPanels( config ) {\n\t\n\tvar size = config.size\n\tvar segs = config.segments\n\t\n\t//       yp  zm\n\t//        | /\n\t//        |/\n\t// xm ----+----- xp\n\t//       /|\n\t//      / |\n\t//    zp  ym\n\t\n\tvar zp = _generatePanel({\n\t\twx: size[0], wy: size[1],\n\t\tsx: segs[0], sy: segs[1]\n\t})\n\tvar xp = _generatePanel({\n\t\twx: size[2], wy: size[1],\n\t\tsx: segs[2], sy: segs[1]\n\t})\n\tvar yp = _generatePanel({\n\t\twx: size[0], wy: size[2],\n\t\tsx: segs[0], sy: segs[2]\n\t})\n\t\n\tvar zm = _clonePanel(zp)\n\tvar xm = _clonePanel(xp)\n\tvar ym = _clonePanel(yp)\n\t\n\tzp.positions = zp.positions.map( function(p) { return [       p[0],       p[1],  size[2]/2 ] } )\n\tzm.positions = zm.positions.map( function(p) { return [       p[0],      -p[1], -size[2]/2 ] } )\n\txp.positions = xp.positions.map( function(p) { return [  size[0]/2,      -p[1],       p[0] ] } )\n\txm.positions = xm.positions.map( function(p) { return [ -size[0]/2,       p[1],       p[0] ] } )\n\typ.positions = yp.positions.map( function(p) { return [       p[0],  size[1]/2,      -p[1] ] } )\n\tym.positions = ym.positions.map( function(p) { return [       p[0], -size[1]/2,       p[1] ] } )\n\t\n\tzp.normals = _makeNormals( [ 0, 0, 1], zp.positions.length )\n\tzm.normals = _makeNormals( [ 0, 0,-1], zm.positions.length )\n\txp.normals = _makeNormals( [ 1, 0, 0], xp.positions.length )\n\txm.normals = _makeNormals( [-1, 0, 0], xm.positions.length )\n\typ.normals = _makeNormals( [ 0, 1, 0], yp.positions.length )\n\tym.normals = _makeNormals( [ 0,-1, 0], ym.positions.length )\n\t\n\treturn [ zp, zm, xp, xm, yp, ym ]\n}\n\nfunction _makeNormals( normal, count ) {\n\t\n\tvar normals = Array(count)\n\t\n\tfor( var i=0; i < count; i++ ) {\n\t\tnormals[i] = normal.slice()\n\t}\n\t\n\treturn normals\n}\n\t\nfunction _generateBox( config ) {\n\t\n\tvar panels = _generateBoxPanels( config )\n\t\n\tvar positions = panels.map(function(panel) { return panel.positions })\n\tvar uvs       = panels.map(function(panel) { return panel.uvs       })\n\tvar normals   = panels.map(function(panel) { return panel.normals   })\n\tvar cells     = _offsetCellIndices( panels )\n\t\n\treturn {\n\t\tpositions: _flatten( positions ),\n\t\tuvs:       _flatten( uvs ),\n\t\tcells:     _flatten( cells ),\n\t\tnormals:   _flatten( normals ),\n\t}\n}\n\nfunction _offsetCellIndices( panels ) {\n\t\n\t/*\n\t\tFrom: [[[0,1,2],[2,3,0]],[[0,1,2],[2,3,0]]]\n\t\tTo:   [[[0,1,2],[2,3,0]],[[6,7,8],[8,9,6]]]\n\t*/\n\t\n\tvar offset = 0\n\t\n\treturn panels.map(function(panel) {\n\t\t\n\t\tvar offsetCells = panel.cells.map( function(cell) {\n\t\t\treturn cell.map(function(v) {\n\t\t\t\treturn v + offset\n\t\t\t})\n\t\t})\n\t\n\t\toffset += panel.vertexCount\n\t\n\t\treturn offsetCells\n\t})\n}\n\nmodule.exports = function( properties ) {\n\t\n\tvar config = _createConfig( properties )\n\n\treturn _generateBox( config )\n}","import { mat4, vec3 } from 'gl-matrix'\nimport * as geo from 'tvs-libs/dist/math/geometry'\nimport { State } from '../context'\nimport { set } from '../../shared-utils/painterState'\n\nexport class Ground {\n\tposition: vec3 = [0, -3.6, 0]\n\tnormal = [0, 1, 0]\n\tscale = 1000\n\ttransform = mat4.create()\n\tplaneEquation!: number[]\n\tmirrorMatrix!: number[]\n\tgroundMirrorView = mat4.create()\n\n\tconstructor() {\n\t\tthis.update()\n\t}\n\n\tupdate() {\n\t\tmat4.fromTranslation(this.transform, this.position)\n\t\tmat4.rotateX(this.transform, this.transform, Math.PI / 2)\n\t\tmat4.scale(this.transform, this.transform, [\n\t\t\tthis.scale,\n\t\t\tthis.scale,\n\t\t\tthis.scale,\n\t\t])\n\n\t\tthis.planeEquation = geo.planeFromNormalAndCoplanarPoint(\n\t\t\tthis.normal,\n\t\t\tthis.position,\n\t\t)\n\t\tthis.mirrorMatrix = geo.mirrorMatrixFromPlane(this.planeEquation)\n\t}\n}\n\nset<State>('ground', new Ground(), {\n\treset: { transform: true, mirrorMatrix: true },\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import {\n\tbaseEvents,\n\tBaseState,\n\tgetPainter,\n\tgetState,\n} from '../shared-utils/painterState'\nimport { Ground } from './state/ground'\nimport { Screens } from './state/screens'\nimport { PerspectiveViewportState } from '../shared-utils/vr/perspectiveViewport'\n\nexport interface State extends PerspectiveViewportState {\n\tground: Ground\n\tscreens: Screens\n}\n\nexport const canvas = document.getElementById('canvas') as HTMLCanvasElement\n\nexport const painter = getPainter(canvas)\n\nexport const gl = painter.gl\n\nexport const state = getState<State>()\n\nexport const getCanvasSize = () => [canvas.width, canvas.height]\n\nexport const events = {\n\t...baseEvents,\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import box from 'geo-3d-box'\nimport { getForm } from '../shared-utils/painterState'\nimport { plane } from 'tvs-painter/dist/utils/geometry/plane'\nimport { convertStackGLGeometry } from 'tvs-painter/dist/utils/stackgl'\nimport { painter } from './context'\n\nexport const planeSize = {\n\twidth: 10,\n\theight: 10,\n}\n\nexport const planeForm = getForm(painter, 'plane').update(\n\tplane(planeSize.width, planeSize.height, 5, 5),\n)\n\nconst size = [10, 14, 2]\nconst segments = [5, 7, 1]\n\nexport const boxForm = getForm(painter, 'box').update(\n\tconvertStackGLGeometry(box({ size, segments })),\n)\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export const names = [\n\t'tworooms',\n\t'behindglass',\n\t'nanofuzz',\n\t'balloon',\n\t'threescreens'\n]\n\nconst videosUrl =\n\tprocess.env.NODE_ENV === 'production'\n\t\t? '//s3.eu-central-1.amazonaws.com/trivialspace.net/tvs1/'\n\t\t: 'videos/'\n\nconst loadTimeout = 60000\n\nfunction createVideo(src: string) {\n\tconst video = document.createElement('video')\n\tvideo.crossOrigin = 'anonymous'\n\tvideo.loop = true\n\t;(video as any).playsinline = true\n\tvideo.autoplay\n\n\tconst source1 = document.createElement('source')\n\tsource1.src = src + '.webm'\n\tsource1.type = 'video/webm'\n\n\tconst source2 = document.createElement('source')\n\tsource2.src = src + '.mp4'\n\tsource2.type = 'video/mp4'\n\n\tvideo.appendChild(source1)\n\tvideo.appendChild(source2)\n\treturn video\n}\n\nexport const videos = Promise.all(\n\tnames\n\t\t.map(name => createVideo(videosUrl + name))\n\t\t.map(\n\t\t\tv =>\n\t\t\t\tnew Promise<HTMLVideoElement>((res, rej) => {\n\t\t\t\t\tconst t = setTimeout(() => {\n\t\t\t\t\t\tconsole.log('timeout', v)\n\t\t\t\t\t\trej('Video timeout ' + v)\n\t\t\t\t\t}, loadTimeout)\n\n\t\t\t\t\tv.addEventListener('canplay', () => {\n\t\t\t\t\t\tres(v)\n\t\t\t\t\t\tclearTimeout(t)\n\t\t\t\t\t\tconsole.log('loaded', v)\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t)\n)\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { mat4, vec3 } from 'gl-matrix'\nimport { set } from '../../shared-utils/painterState'\nimport * as coords from 'tvs-libs/dist/math/coords'\nimport { mul } from 'tvs-libs/dist/math/vectors'\nimport { flatten, zip } from 'tvs-libs/dist/utils/sequence'\nimport { State } from '../context'\nimport { planeSize } from '../geometries'\nimport * as videos from './videos'\n\nexport class Screens {\n\tradius = 25\n\theight = 2\n\tscale = [1.6, 1, 1]\n\trotations = videos.names.map(\n\t\t(_, i) => (Math.PI * 2 * i) / videos.names.length,\n\t)\n\tpositions!: vec3[]\n\tscreenTransforms!: mat4[]\n\tpedestalTransforms!: mat4[]\n\tlights!: number[]\n\tlightSize!: [number, number]\n\n\tconstructor() {\n\t\tthis.update()\n\t}\n\n\tupdate() {\n\t\tthis.positions = this.rotations.map(rot => {\n\t\t\tconst phi = -rot - Math.PI / 2\n\t\t\tconst [x, z] = coords.polarToCartesian2D([this.radius, phi])\n\t\t\treturn [x, this.height, z]\n\t\t})\n\n\t\tthis.screenTransforms = zip(\n\t\t\t(rot, pos) => {\n\t\t\t\tconst t = mat4.fromTranslation(mat4.create(), pos)\n\t\t\t\tmat4.rotateY(t, t, rot)\n\t\t\t\tmat4.scale(t, t, this.scale as vec3)\n\t\t\t\treturn t\n\t\t\t},\n\t\t\tthis.rotations,\n\t\t\tthis.positions,\n\t\t)\n\n\t\tthis.pedestalTransforms = zip(\n\t\t\t(rot, pos) => {\n\t\t\t\tconst p = mul(1.045, pos) as vec3\n\t\t\t\tp[1] -= 2\n\n\t\t\t\tconst t = mat4.fromTranslation(mat4.create(), p)\n\t\t\t\tmat4.rotateY(t, t, rot)\n\t\t\t\tmat4.scale(t, t, this.scale.map(v => v * 1.03) as vec3)\n\t\t\t\treturn t\n\t\t\t},\n\t\t\tthis.rotations,\n\t\t\tthis.positions,\n\t\t)\n\n\t\tthis.lights = flatten(\n\t\t\tzip((p, r) => [...p, r], this.positions, this.rotations),\n\t\t)\n\n\t\tthis.lightSize = [\n\t\t\tplaneSize.width * this.scale[0],\n\t\t\tplaneSize.height * this.scale[1],\n\t\t]\n\t}\n}\n\nset<State>('screens', new Screens())\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { getShade } from '../shared-utils/painterState'\nimport { painter } from './context'\nimport groundFrag from './glsl/ground-frag.glsl'\nimport groundVert from './glsl/ground-vert.glsl'\nimport objectFrag from './glsl/object-frag.glsl'\nimport objectVert from './glsl/object-vert.glsl'\nimport screenFrag from './glsl/screen-frag.glsl'\nimport screenVert from './glsl/screen-vert.glsl'\n\nexport const groundShade = getShade(painter, 'ground').update({\n\tvert: groundVert,\n\tfrag: groundFrag,\n})\n\nexport const objectShade = getShade(painter, 'object').update({\n\tvert: objectVert,\n\tfrag: objectFrag,\n})\n\nexport const screenShade = getShade(painter, 'screen').update({\n\tvert: screenVert,\n\tfrag: screenFrag,\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\n\\nuniform mat4 transform;\\nuniform mat4 projection;\\nuniform mat4 view;\\n\\nvarying vec3 V;\\n\\nvoid main() {\\n\\tvec4 pos = transform * vec4(position, 1.0);\\n\\tV = pos.xyz;\\n\\tgl_Position = projection * view * pos;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D reflection;\\nuniform sampler2D lightTex[5];\\nuniform vec4 lights[5];\\nuniform vec2 size;\\nuniform vec2 lightSize;\\nvarying vec3 V;\\n\\nconst vec3 up = vec3(0.0, 1.0, 0.0);\\n\\nvec3 diffuseAreaLight(sampler2D tex, vec3 normal, vec3 pos, vec3 V) {\\n\\tfloat width = lightSize.x / 2.0;\\n\\tfloat height = lightSize.y / 2.0;\\n\\n\\tvec3 right = cross(up, normal);\\n\\n\\t/*project onto plane and calculate direction from center to the projection*/\\n\\tfloat dis = dot(normal, V - pos);\\n\\tvec3 projection = V - dis * normal;\\n\\tvec3 dir = projection - pos;\\n\\n\\t/*calculate distance from area*/\\n\\tvec2 diagonal = vec2(dot(dir, right), dot(dir, up));\\n\\tvec2 nearest2D = vec2(clamp(diagonal.x, -width, width), clamp(diagonal.y, -height, height));\\n\\tvec3 nearestPointInside = pos + (right * nearest2D.x + up * nearest2D.y);\\n\\n\\tvec3 L = normalize(nearestPointInside - V);\\n\\n\\tfloat nDotL = dot(-normal, L);\\n\\n\\tfloat d = distance(V, nearestPointInside); //real distance to area rectangle\\n\\n\\tvec3 diff = vec3(0.0);\\n\\n\\tvec2 co = ((diagonal.xy / (d + 1.0)) + vec2(width, height)) / lightSize;\\n\\tvec3 texColor = texture2D(tex, co).rgb;\\n\\n\\tif (nDotL > 0.0) {\\n\\t\\t//co.x = 1.0 - co.x;\\n\\t\\tdiff = texColor;\\n\\n\\t\\tfloat NDotL = clamp(dot(-up, L), 0.0, 1.0);\\n\\t\\tnDotL *= NDotL * 0.5 + 0.5; //distribute over hemisphere, looks better. Should be dependant of area size.\\n\\n\\t\\tfloat attenuation = 1.0 / (1.0 + d);\\n\\n\\t\\tdiff *= nDotL * attenuation;\\n\\t}\\n\\n\\treturn diff;\\n}\\n\\nvec3 processLight(vec4 light, sampler2D tex) {\\n\\t\\tvec3 lightNormal = vec3(sin(light.a), 0, cos(light.a));\\n\\t\\tvec3 diffuse = diffuseAreaLight(tex, lightNormal, light.xyz, V);\\n\\t\\treturn pow(diffuse, vec3(0.57));\\n}\\n\\nvoid main() {\\n\\tfloat scale = (50.0 - length(V)) / 50.0;\\n\\tvec4 refl = texture2D(reflection, gl_FragCoord.xy / size);\\n\\tvec3 ground = vec3(0.0);\\n\\n\\tground += processLight(lights[0], lightTex[0]);\\n\\tground += processLight(lights[1], lightTex[1]);\\n\\tground += processLight(lights[2], lightTex[2]);\\n\\tground += processLight(lights[3], lightTex[3]);\\n\\tground += processLight(lights[4], lightTex[4]);\\n\\n\\tgl_FragColor = mix(vec4(ground, 1.0), vec4(refl.rgb, 1.0), refl / 2.0 + 0.25);\\n\\t// gl_FragColor = vec4(ground, 1.0);\\n}\\n\";","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\n\\nuniform mat4 transform;\\nuniform mat4 projection;\\nuniform mat4 view;\\nuniform float groundHeight;\\n\\nvarying float dist;\\nvarying float height;\\n\\nvoid main() {\\n\\tvec4 pos = transform * vec4(position, 1.0);\\n\\tdist = length(pos.xyz);\\n\\theight = (pos.y - groundHeight) / 10.0;\\n\\tgl_Position = projection * view * pos;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform int withDistance;\\n\\nvarying float dist;\\nvarying float height;\\n\\nvoid main() {\\n\\tfloat scale = (50.0 - dist) / 50.0;\\n\\tif (withDistance == 0) {\\n\\t\\tgl_FragColor = vec4(vec3(scale * 0.6), 1.0);\\n\\t} else {\\n\\t\\tgl_FragColor = vec4(vec3(scale * 0.6), height);\\n\\t\\t// gl_FragColor = vec4(vec3(height), 1.0);\\n\\t}\\n}\\n\";","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\nattribute vec2 uv;\\nuniform float groundHeight;\\n\\nuniform mat4 transform;\\nuniform mat4 projection;\\nuniform mat4 view;\\n\\nvarying vec2 vUv;\\nvarying float height;\\n\\nvoid main() {\\n\\tvUv = uv;\\n\\tvec4 pos = transform * vec4(position, 1.0);\\n\\theight = (pos.y - groundHeight) / 10.0;\\n\\tgl_Position = projection * view * pos;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D video;\\nuniform int withDistance;\\n\\nvarying vec2 vUv;\\nvarying float height;\\n\\nvoid main() {\\n\\tvec4 tex = texture2D(video, vUv);\\n\\tif (withDistance == 0) {\\n\\t\\tgl_FragColor = vec4(tex.rgb, 1.0);\\n\\t} else {\\n\\t\\tgl_FragColor = vec4(tex.rgb, height);\\n\\t\\t// gl_FragColor = vec4(vec3(height), 1.0);\\n\\t}\\n}\\n\";","import { mat4 } from 'gl-matrix'\nimport {\n\taddSystem,\n\tgetFrame,\n\tgetLayer,\n\tgetSketch,\n} from '../shared-utils/painterState'\nimport { getBlurByAlphaEffect } from '../shared-utils/shaders/effects/blur'\nimport { zip } from 'tvs-libs/dist/utils/sequence'\nimport { TextureData } from 'tvs-painter'\nimport { makeClear } from 'tvs-painter/dist/utils/context'\nimport { events, getCanvasSize, gl, painter, state, State } from './context'\nimport { boxForm, planeForm } from './geometries'\nimport { groundShade, objectShade, screenShade } from './shaders'\nimport * as videos from './state/videos'\nimport { initPerspectiveViewport } from '../shared-utils/vr/perspectiveViewport'\n\ninitPerspectiveViewport({\n\tfovy: Math.PI * 0.4,\n\tlookSpeed: 2,\n})\n\n// Settings\n\npainter.updateDrawSettings({\n\tclearColor: [0, 0, 0, 1],\n})\n\n// Textures\n\nexport const videoTextureData: TextureData = {\n\tflipY: true,\n\tminFilter: 'LINEAR',\n\twrap: 'CLAMP_TO_EDGE',\n}\n\nexport const videoTextures = videos.names.map(n => getFrame(painter, n))\n\nconst reflSize = 256\nexport const videoLights = videoTextures.map((t, i) => {\n\tconst id = 'vref' + i\n\treturn getFrame(painter, id).update({\n\t\tbufferStructure: [\n\t\t\t{\n\t\t\t\tminFilter: 'LINEAR',\n\t\t\t\tmagFilter: 'LINEAR',\n\t\t\t},\n\t\t],\n\t\twidth: reflSize,\n\t\theight: reflSize,\n\t\tlayers: getBlurByAlphaEffect(painter, id, {\n\t\t\tstrength: 4,\n\t\t\tsize: [reflSize, reflSize],\n\t\t\tstartFrame: t,\n\t\t}),\n\t})\n})\n\n// Sketches\n\nconst groundSketch = getSketch(painter, 'ground').update({\n\tform: planeForm,\n\tshade: groundShade,\n\tuniforms: {\n\t\treflection: () => mirrorScene.image(),\n\t\ttransform: () => state.ground.transform,\n\t\tlights: () => state.screens.lights,\n\t\tlightSize: () => state.screens.lightSize,\n\t\tlightTex: () => videoLights.map(v => v.image()),\n\t\tsize: getCanvasSize,\n\t},\n})\n\nconst screenSketch = getSketch(painter, 'screens').update({\n\tform: planeForm,\n\tshade: screenShade,\n\tuniforms: zip(\n\t\t(transform, tex) => ({\n\t\t\ttransform,\n\t\t\tvideo: () => tex.image(),\n\t\t}),\n\t\tstate.screens.screenTransforms,\n\t\tvideoTextures,\n\t),\n})\n\nconst pedestalSketch = getSketch(painter, 'pedestals').update({\n\tform: boxForm,\n\tshade: objectShade,\n\tuniforms: state.screens.pedestalTransforms.map(transform => ({\n\t\ttransform,\n\t})),\n})\n\n// Layers\n\nconst drawSettings = {\n\tclearBits: makeClear(gl, 'color', 'depth'),\n}\n\nconst sceneLayer = getLayer(painter, 'scene').update({\n\tsketches: [screenSketch, pedestalSketch, groundSketch],\n\tdrawSettings,\n\tuniforms: {\n\t\tview: () => state.viewPort.camera.viewMat,\n\t\tprojection: () => state.viewPort.camera.projectionMat,\n\t\twithDistance: 0,\n\t},\n})\n\nconst mirrorSceneLayer = getLayer(painter, 'mirrorScene').update({\n\tsketches: [screenSketch, pedestalSketch],\n\tdrawSettings,\n\tuniforms: {\n\t\tview: () =>\n\t\t\tmat4.multiply(\n\t\t\t\tstate.ground.groundMirrorView,\n\t\t\t\tstate.viewPort.camera.viewMat,\n\t\t\t\tstate.ground.mirrorMatrix as any,\n\t\t\t),\n\t\tprojection: () => state.viewPort.camera.projectionMat,\n\t\twithDistance: 1,\n\t\tgroundHeight: () => state.ground.position[1],\n\t},\n})\n\nconst blurEffect = getBlurByAlphaEffect(painter, 'blur', {\n\tstrength: 4,\n\tstrengthOffset: 0.3,\n\tblurRatioVertical: 3,\n\tsize: [256, 256],\n})\n\nexport const mirrorScene = getFrame(painter, 'mirror').update({\n\tlayers: [mirrorSceneLayer, blurEffect],\n\twidth: 256,\n\theight: 256,\n\tbufferStructure: [\n\t\t{\n\t\t\tmagFilter: 'LINEAR',\n\t\t\tminFilter: 'LINEAR',\n\t\t},\n\t],\n})\n\nexport const scene = getFrame(painter, 'scene').update({\n\tlayers: sceneLayer,\n})\n\naddSystem<State>('renderer', e => {\n\tswitch (e) {\n\t\tcase events.RESIZE:\n\t\t\tscene.update()\n\t}\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import './state/ground'\nimport './state/screens'\n\nimport { dispatch, get } from '../shared-utils/painterState'\nimport { repeat } from '../shared-utils/scheduler'\nimport { events, painter } from './context'\nimport {\n\tmirrorScene,\n\tscene,\n\tvideoLights,\n\tvideoTextureData,\n\tvideoTextures,\n} from './renderer'\nimport { videos } from './state/videos'\n\nconst d = get('device')\n// d.sizeMultiplier = 1.5\n\nvideos.then(vs => {\n\tfunction startVideos() {\n\t\tvs.forEach(v => v.play())\n\t\td.canvas.removeEventListener('mousedown', startVideos)\n\t\td.canvas.removeEventListener('touchstart', startVideos)\n\t}\n\td.canvas.addEventListener('mousedown', startVideos)\n\td.canvas.addEventListener('touchstart', startVideos)\n\n\trepeat(tpf => {\n\t\td.tpf = tpf\n\t\tdispatch(events.FRAME)\n\t\tvideoTextures.forEach((t, i) =>\n\t\t\tt.update({ texture: { ...videoTextureData, asset: vs[i] } }),\n\t\t)\n\t\tpainter.compose(...videoLights, mirrorScene, scene).display(scene)\n\t}, 'render')\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function randInt(int) {\n    return Math.floor(Math.random() * int);\n}\nexport function randIntInRange(from, to) {\n    return randInt(to - from) + from;\n}\nexport function normalRand() {\n    return (Math.random() + Math.random() + Math.random()) / 3;\n}\n//# sourceMappingURL=random.js.map"],"sourceRoot":""}