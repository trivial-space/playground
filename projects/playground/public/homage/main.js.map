{"version":3,"sources":["webpack:///../node_modules/geo-3d-box/box.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../node_modules/gl-matrix/esm/common.js","webpack:///../node_modules/gl-matrix/esm/mat4.js","webpack:///./shared-utils/scheduler.ts","webpack:///../libs/dist/events/keyboard.js","webpack:///../libs/dist/utils/object.js","webpack:///../painter/dist/contants.js","webpack:///../painter/dist/asset-lib.js","webpack:///../painter/dist/render-utils.js","webpack:///../painter/dist/form.js","webpack:///../libs/dist/utils/sequence.js","webpack:///../painter/dist/texture.js","webpack:///../painter/dist/render-target.js","webpack:///../libs/dist/utils/predicates.js","webpack:///../painter/dist/frame.js","webpack:///../painter/dist/layer.js","webpack:///../painter/dist/shade.js","webpack:///../painter/dist/sketch.js","webpack:///../painter/dist/painter.js","webpack:///../painter/dist/utils/context.js","webpack:///../libs/dist/events/pointer.js","webpack:///./shared-utils/painterState.ts","webpack:///./homage/context.ts","webpack:///../libs/dist/events/dom.js","webpack:///./homage/state/ground.ts","webpack:///../libs/dist/math/geometry.js","webpack:///../libs/dist/math/vectors.js","webpack:///./homage/geometries.ts","webpack:///../painter/dist/utils/geometry/plane.js","webpack:///../painter/dist/utils/stackgl.js","webpack:///./homage/state/videos.ts","webpack:///./shared-utils/shaders/effects/blur.ts","webpack:///./shared-utils/shaders/effects/blur_with_alpha.glsl","webpack:///./homage/state/screens.ts","webpack:///../libs/dist/math/coords.js","webpack:///./homage/glsl/ground-frag.glsl","webpack:///./homage/shaders.ts","webpack:///./homage/glsl/ground-vert.glsl","webpack:///./homage/glsl/object-vert.glsl","webpack:///./homage/glsl/object-frag.glsl","webpack:///./homage/glsl/screen-vert.glsl","webpack:///./homage/glsl/screen-frag.glsl","webpack:///../node_modules/gl-matrix/esm/vec3.js","webpack:///./shared-utils/vr/camera.ts","webpack:///./shared-utils/vr/perspectiveViewport.ts","webpack:///./homage/renderer.ts","webpack:///./homage/index.ts"],"names":["_flatten","array","results","i","length","subarray","j","push","_generatePanel","config","rows","step","wy","sy","halfY","grid","Array","_generateRow","_generateGrid","cells","index","x","y","sx","a","b","c","d","_generateCells","positions","uvs","map","p","wx","_generateUvs","vertexCount","height","halfX","row","_clonePanel","panel","_makeNormals","normal","count","normals","slice","module","exports","properties","size","segments","isArray","_createConfig","panels","segs","zp","xp","yp","zm","xm","ym","_generateBoxPanels","offset","offsetCells","cell","v","_offsetCellIndices","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","n","getter","__esModule","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","ARRAY_TYPE","Float32Array","create","out","multiply","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","scale","z","rotateY","rad","s","Math","sin","cos","fromTranslation","random","PI","hypot","arguments","sqrt","updateOnce","updateRepeat","willUpdate","uidCounter","oldTime","processUpdates","time","tpf","id","updates","requestAnimationFrame","Keys","deepOverride","obj1","obj2","opt","ignore","val1","val2","undefined","defaultTextureSettings","defaultForms","renderQuad","attribs","buffer","storeType","drawType","itemCount","defaultShaders","vert","frag","getBindPointForSamplerType","type","typeMap","bindPoint","intSetter","gl","location","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","texture","activeTexture","TEXTURE0","bindTexture","_texture","samplerArraySetter","units","Int32Array","textures","Type","setter","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Uint32Array","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","floatAttribSetter","typeInfo","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","itemSize","normalize","stride","intAttribSetter","vertexAttribIPointer","matAttribSetter","defaultSize","numComponents","rowOffset","attrTypeMap","applyDrawSettings","settings","enable","setting","disable","blendFunc","apply","depthFunc","cullFace","frontFace","lineWidth","colorMask","depthMask","clearColor","clearDepth","clearBits","clear","revertDrawSettings","Int8Array","Uint8Array","Int16Array","Uint16Array","formCounter","Form","_painter","this","data","_drawType","_itemCount","_attribs","attribData","createBuffer","bufferData","elements","_elements","glType","typedArray","Uint8ClampedArray","Error","getGLTypeForTypedArray","ELEMENT_ARRAY_BUFFER","deleteBuffer","zip","fn","as","bs","res","min","flatten","currentLength","textureCount","Texture","_data","createTexture","TEXTURE_2D","wrap","wrapS","wrapT","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","magFilter","TEXTURE_MAG_FILTER","minFilter","TEXTURE_MIN_FILTER","asset","texImage2D","RGBA","UNSIGNED_BYTE","isWebGL2","RGBA32F","width","flipY","pixelStorei","UNPACK_FLIP_Y_WEBGL","indexOf","generateMipmap","assign","deleteTexture","targetCount","RenderTarget","antialias","frameBuffer","antiAliasFrameBuffer","antiAliasRenderBuffer","depthBuffer","bufferStructure","_a","every","buf","k1","keys","arr1","arr2","equalObject","createFramebuffer","createRenderbuffer","some","t","getExtension","texCount","bufferAttachments","COLOR_ATTACHMENT0","bindFramebuffer","FRAMEBUFFER","glx","attachment","COLOR_ATTACHMENT0_WEBGL","drawBuffers","drawBuffersWEBGL","gl2","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","getParameter","MAX_SAMPLES","RGBA8","framebufferRenderbuffer","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","renderbufferStorage","update","framebufferTexture2D","err","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","console","error","deleteFramebuffer","deleteRenderbuffer","frameCount","Frame","layers","_targets","_textures","_b","_c","_d","selfReferencing","layerCount","reduce","layer","_uniforms","canvas","_destroyTargets","targetData","times","forEach","tex","destroy","tmp","Layer","sketches","sketch","shade","uniforms","shadeCounter","Shade","fragSource","trim","vertSource","program","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","_program","_frag","_vert","attachShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","addLineNumbers","linkProgram","getProgramParameter","LINK_STATUS","lastError","getProgramInfoLog","_uniformSetters","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","name","substr","toString","uniformSetters","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","createUniformSetters","_attributeSetters","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","createAttributeSetters","deleteProgram","deleteShader","src","split","line","join","sketchCounter","Sketch","drawSettings","_drawSettings","form","Painter","opts","maxBufferSamples","useWebGL1","getContext","sizeMultiplier","resize","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","getDefaultLayerSettings","_renderQuad","createForm","_staticSketch","createFlatSketch","multiplier","rect","getBoundingClientRect","resizeCanvas","createSketch","createShade","l","createLayer","globalUniforms","viewport","draw","frames","frame","renderFrame","idx","source","image","sources","useProgram","shadeForm","shadeUniforms","drawInstance","drawElements","drawArrays","value","renderLayer","target","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","clearBufferfv","COLOR","blitFramebuffer","COLOR_BUFFER_BIT","LINEAR","layerPasses","_swapTargets","Buttons","currentCanvas","painter","getForm","shades","getShade","getSketch","getLayer","getFrame","createFrame","effects","getEffect","createEffect","state","device","window","eventHandlers","baseEvents","FRAME","RESIZE","cancelWindow","cancelPointer","cancelKeys","document","getElementById","Q","getPainterContext","callback","innerWidth","innerHeight","addEventListener","removeEventListener","windowSize","once","emit","cb","element","enableRightButton","holdDelay","holdRadius","pressed","drag","dX","dY","xMax","yMax","dragging","holding","oX","oY","timeout","onPointerDown","e","isPrimary","button","clientX","clientY","clearTimeout","setTimeout","onPointerUp","_e","event","onPointerMove","max","abs","preventDefault","pointer","m","onKeydown","keyCode","Date","now","onKeyup","keyboard","k","set","val","reset","listen","events","position","transform","groundMirrorView","planeEquation","point","v1","v2","dot","mirrorMatrix","plane","planeForm","widthSegments","heightSegments","vertices","gridX1","iy","ix","offset2","gridY","gridX","indices","uv","boxForm","stackglGeometry","geometry","arr","convertStackGLGeometry","names","videos","Promise","all","video","createElement","crossOrigin","loop","playsinline","autoplay","source1","source2","appendChild","createVideo","rej","log","getBlurByAlphaEffect","strength","layerOpts","startFrame","startLayer","strengthOffset","blurRatioVertical","scaleFactor","passData","direction","DEPTH_TEST","radius","rotations","_","rot","phi","r","screenTransforms","pos","pedestalTransforms","scalar","vec","lights","lightSize","groundShade","objectShade","screenShade","PerspectiveCamera","props","rotationX","rotationY","rotationXMat","rotationYMat","projectionMat","viewMat","needsUpdateView","updateRotationX","updateRotationY","amount","dist","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","super","fovy","aspect","near","far","needsUpdateProjection","nf","f","tan","Infinity","ViewPort","Cam","moveSpeed","lookSpeed","camera","speed","UP","W","moveForward","DOWN","S","LEFT","A","moveLeft","RIGHT","D","_oldMouse","deltaX","deltaY","ctx","viewPort","updatePosFromInput","dragInfo","updateRotFromPointer","initPerspectiveViewport","updateDrawSettings","videoTextureData","videoTextures","reflSize","videoLights","groundSketch","reflection","mirrorScene","ground","screens","lightTex","screenSketch","pedestalSketch","clearArray","makeClear","item","toUpperCase","sceneLayer","view","projection","withDistance","mirrorSceneLayer","groundHeight","blurEffect","scene","then","vs","startVideos","play","compose","display"],"mappings":"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","file":"homage/main.js","sourcesContent":["function _createConfig( properties ) {\n\t\n\tvar config = {\n\t\tsize : [1,1,1],\n\t\tsegments : [1,1,1]\n\t}\n\t\n\tif( properties ) {\n\t\n\t\tif( Array.isArray( properties.size ) ) {\n\t\t\tconfig.size = properties.size\n\t\t} else if( typeof properties.size === \"number\" ) {\n\t\t\tconfig.size = [properties.size, properties.size, properties.size]\n\t\t}\n\t\n\t\tif( Array.isArray( properties.segments ) ) {\n\t\t\tconfig.segments = properties.segments\n\t\t} else if( typeof properties.segments === \"number\" ) {\n\t\t\tconfig.segments = [properties.segments, properties.segments, properties.segments]\n\t\t}\n\t}\n\t\n\treturn config\n}\n\nfunction _flatten( array ) {\n\tvar results = []\n\t\n\tfor( var i=0; i < array.length; i++ ) {\n\t\tvar subarray = array[i]\n\t\tfor( var j=0; j < subarray.length; j++ ) {\n\t\t\tresults.push(subarray[j])\n\t\t}\n\t}\n\treturn results\n}\n\nfunction _generatePanel( config ) {\n\t\t\t\n\tvar rows      = _generateGrid( config )\n\tvar cells     = _generateCells( config, rows )\n\tvar positions = _flatten( rows )\n\tvar uvs       = _generateUvs( config, positions )\n\t\n\treturn {\n\t\tpositions   : positions,\n\t\tcells       : cells,\n\t\tuvs         : uvs,\n\t\tvertexCount : (config.sx + 1) * (config.sy + 1)\n\t}\n}\n\nfunction _generateUvs( config, positions ) {\n\t\n\treturn positions.map(function(p) {\n\t\treturn [\n\t\t\tp[0] / config.wx + 0.5,\n\t\t\tp[1] / config.wy + 0.5\n\t\t]\n\t})\n}\n\nfunction _generateGrid( config ) {\n\t\n\tvar step   = config.wy / config.sy\n\tvar halfY  = config.wy / 2\n\tvar length = config.sy + 1\n\tvar grid   = Array(length)\n\t\n\tfor( var i=0; i < length; i++ ) {\n\t\tgrid[i] = _generateRow( config, step * i - halfY)\n\t}\n\t\n\treturn grid\n}\n\nfunction _generateRow( config, height ) {\n\t\n\tvar halfX  = config.wx / 2\n\tvar step   = config.wx / config.sx\n\tvar length = config.sx + 1\n\tvar row    = Array(length)\n\t\n\tfor( var i=0; i < length; i++ ) {\n\t\trow[i] = [ step * i - halfX, height ]\n\t}\n\t\n\treturn row\n}\n\nfunction _generateCells( config ) {\n\t\n\tfunction index( x, y ) {\n\t\treturn (config.sx + 1) * y + x\n\t}\n\t\n\tvar cells = []\n\t\n\tfor( var x=0; x < config.sx; x++ ) {\n\t\t\n\t\tfor( var y=0; y < config.sy; y++ ) {\n\n\t\t\tvar a = index( x + 0, y + 0 )  //   d __ c\n\t\t\tvar b = index( x + 1, y + 0 )  //    |  |\n\t\t\tvar c = index( x + 1, y + 1 )  //    |__|\n\t\t\tvar d = index( x + 0, y + 1 )  //   a    b\n\t\t\t\n\t\t\tcells.push( [ a, b, c ] )\n\t\t\tcells.push( [ c, d, a ] )\n\t\t}\n\t}\n\t\n\treturn cells\n}\n\nfunction _clonePanel( panel ) {\n\t\n\treturn {\n\t\tpositions   : panel.positions,\n\t\tcells       : panel.cells,\n\t\tuvs         : panel.uvs,\n\t\tvertexCount : panel.vertexCount\n\t}\n}\n\nfunction _generateBoxPanels( config ) {\n\t\n\tvar size = config.size\n\tvar segs = config.segments\n\t\n\t//       yp  zm\n\t//        | /\n\t//        |/\n\t// xm ----+----- xp\n\t//       /|\n\t//      / |\n\t//    zp  ym\n\t\n\tvar zp = _generatePanel({\n\t\twx: size[0], wy: size[1],\n\t\tsx: segs[0], sy: segs[1]\n\t})\n\tvar xp = _generatePanel({\n\t\twx: size[2], wy: size[1],\n\t\tsx: segs[2], sy: segs[1]\n\t})\n\tvar yp = _generatePanel({\n\t\twx: size[0], wy: size[2],\n\t\tsx: segs[0], sy: segs[2]\n\t})\n\t\n\tvar zm = _clonePanel(zp)\n\tvar xm = _clonePanel(xp)\n\tvar ym = _clonePanel(yp)\n\t\n\tzp.positions = zp.positions.map( function(p) { return [       p[0],       p[1],  size[2]/2 ] } )\n\tzm.positions = zm.positions.map( function(p) { return [       p[0],      -p[1], -size[2]/2 ] } )\n\txp.positions = xp.positions.map( function(p) { return [  size[0]/2,      -p[1],       p[0] ] } )\n\txm.positions = xm.positions.map( function(p) { return [ -size[0]/2,       p[1],       p[0] ] } )\n\typ.positions = yp.positions.map( function(p) { return [       p[0],  size[1]/2,      -p[1] ] } )\n\tym.positions = ym.positions.map( function(p) { return [       p[0], -size[1]/2,       p[1] ] } )\n\t\n\tzp.normals = _makeNormals( [ 0, 0, 1], zp.positions.length )\n\tzm.normals = _makeNormals( [ 0, 0,-1], zm.positions.length )\n\txp.normals = _makeNormals( [ 1, 0, 0], xp.positions.length )\n\txm.normals = _makeNormals( [-1, 0, 0], xm.positions.length )\n\typ.normals = _makeNormals( [ 0, 1, 0], yp.positions.length )\n\tym.normals = _makeNormals( [ 0,-1, 0], ym.positions.length )\n\t\n\treturn [ zp, zm, xp, xm, yp, ym ]\n}\n\nfunction _makeNormals( normal, count ) {\n\t\n\tvar normals = Array(count)\n\t\n\tfor( var i=0; i < count; i++ ) {\n\t\tnormals[i] = normal.slice()\n\t}\n\t\n\treturn normals\n}\n\t\nfunction _generateBox( config ) {\n\t\n\tvar panels = _generateBoxPanels( config )\n\t\n\tvar positions = panels.map(function(panel) { return panel.positions })\n\tvar uvs       = panels.map(function(panel) { return panel.uvs       })\n\tvar normals   = panels.map(function(panel) { return panel.normals   })\n\tvar cells     = _offsetCellIndices( panels )\n\t\n\treturn {\n\t\tpositions: _flatten( positions ),\n\t\tuvs:       _flatten( uvs ),\n\t\tcells:     _flatten( cells ),\n\t\tnormals:   _flatten( normals ),\n\t}\n}\n\nfunction _offsetCellIndices( panels ) {\n\t\n\t/*\n\t\tFrom: [[[0,1,2],[2,3,0]],[[0,1,2],[2,3,0]]]\n\t\tTo:   [[[0,1,2],[2,3,0]],[[6,7,8],[8,9,6]]]\n\t*/\n\t\n\tvar offset = 0\n\t\n\treturn panels.map(function(panel) {\n\t\t\n\t\tvar offsetCells = panel.cells.map( function(cell) {\n\t\t\treturn cell.map(function(v) {\n\t\t\t\treturn v + offset\n\t\t\t})\n\t\t})\n\t\n\t\toffset += panel.vertexCount\n\t\n\t\treturn offsetCells\n\t})\n}\n\nmodule.exports = function( properties ) {\n\t\n\tvar config = _createConfig( properties )\n\n\treturn _generateBox( config )\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","// onNextTick\n// schedule actions on next animation frame\n\ntype Callback = (n: number) => void\n\nlet updateOnce: { [id: string]: Callback } | null = null\nconst updateRepeat: { [id: string]: Callback } = {}\n\nlet willUpdate = false\n\nlet uidCounter = 0\n\nlet oldTime = 0\n\nfunction processUpdates(time: number) {\n\tconst tpf = oldTime ? time - oldTime : oldTime\n\toldTime = time\n\n\tif (updateOnce) {\n\t\tfor (const id in updateOnce) {\n\t\t\tupdateOnce[id](tpf)\n\t\t}\n\t\tupdateOnce = null\n\t}\n\n\tlet updates = 0\n\tfor (const id in updateRepeat) {\n\t\tupdates++\n\t\tupdateRepeat[id](tpf)\n\t}\n\n\tif (!updates) {\n\t\twillUpdate = false\n\t\toldTime = 0\n\t} else {\n\t\trequestAnimationFrame(processUpdates)\n\t}\n}\n\nexport function once(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateOnce = updateOnce || {}\n\tupdateOnce[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n}\n\nexport function repeat(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateRepeat[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n\n\treturn id\n}\n\nexport function stop(id: Callback | string | number) {\n\tif (typeof id === 'function') {\n\t\tid = id.name\n\t}\n\tdelete updateRepeat[id]\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export var Keys;\n(function (Keys) {\n    Keys[Keys[\"CANCEL\"] = 3] = \"CANCEL\";\n    Keys[Keys[\"HELP\"] = 6] = \"HELP\";\n    Keys[Keys[\"BACK_SPACE\"] = 8] = \"BACK_SPACE\";\n    Keys[Keys[\"TAB\"] = 9] = \"TAB\";\n    Keys[Keys[\"CLEAR\"] = 12] = \"CLEAR\";\n    Keys[Keys[\"RETURN\"] = 13] = \"RETURN\";\n    Keys[Keys[\"ENTER\"] = 14] = \"ENTER\";\n    Keys[Keys[\"SHIFT\"] = 16] = \"SHIFT\";\n    Keys[Keys[\"CONTROL\"] = 17] = \"CONTROL\";\n    Keys[Keys[\"ALT\"] = 18] = \"ALT\";\n    Keys[Keys[\"PAUSE\"] = 19] = \"PAUSE\";\n    Keys[Keys[\"CAPS_LOCK\"] = 20] = \"CAPS_LOCK\";\n    Keys[Keys[\"ESCAPE\"] = 27] = \"ESCAPE\";\n    Keys[Keys[\"SPACE\"] = 32] = \"SPACE\";\n    Keys[Keys[\"PAGE_UP\"] = 33] = \"PAGE_UP\";\n    Keys[Keys[\"PAGE_DOWN\"] = 34] = \"PAGE_DOWN\";\n    Keys[Keys[\"END\"] = 35] = \"END\";\n    Keys[Keys[\"HOME\"] = 36] = \"HOME\";\n    Keys[Keys[\"LEFT\"] = 37] = \"LEFT\";\n    Keys[Keys[\"UP\"] = 38] = \"UP\";\n    Keys[Keys[\"RIGHT\"] = 39] = \"RIGHT\";\n    Keys[Keys[\"DOWN\"] = 40] = \"DOWN\";\n    Keys[Keys[\"PRINTSCREEN\"] = 44] = \"PRINTSCREEN\";\n    Keys[Keys[\"INSERT\"] = 45] = \"INSERT\";\n    Keys[Keys[\"DELETE\"] = 46] = \"DELETE\";\n    Keys[Keys[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    Keys[Keys[\"DIGIT_1\"] = 49] = \"DIGIT_1\";\n    Keys[Keys[\"DIGIT_2\"] = 50] = \"DIGIT_2\";\n    Keys[Keys[\"DIGIT_3\"] = 51] = \"DIGIT_3\";\n    Keys[Keys[\"DIGIT_4\"] = 52] = \"DIGIT_4\";\n    Keys[Keys[\"DIGIT_5\"] = 53] = \"DIGIT_5\";\n    Keys[Keys[\"DIGIT_6\"] = 54] = \"DIGIT_6\";\n    Keys[Keys[\"DIGIT_7\"] = 55] = \"DIGIT_7\";\n    Keys[Keys[\"DIGIT_8\"] = 56] = \"DIGIT_8\";\n    Keys[Keys[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    Keys[Keys[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    Keys[Keys[\"EQUALS\"] = 61] = \"EQUALS\";\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    Keys[Keys[\"CONTEXT_MENU\"] = 93] = \"CONTEXT_MENU\";\n    Keys[Keys[\"NUMPAD0\"] = 96] = \"NUMPAD0\";\n    Keys[Keys[\"NUMPAD1\"] = 97] = \"NUMPAD1\";\n    Keys[Keys[\"NUMPAD2\"] = 98] = \"NUMPAD2\";\n    Keys[Keys[\"NUMPAD3\"] = 99] = \"NUMPAD3\";\n    Keys[Keys[\"NUMPAD4\"] = 100] = \"NUMPAD4\";\n    Keys[Keys[\"NUMPAD5\"] = 101] = \"NUMPAD5\";\n    Keys[Keys[\"NUMPAD6\"] = 102] = \"NUMPAD6\";\n    Keys[Keys[\"NUMPAD7\"] = 103] = \"NUMPAD7\";\n    Keys[Keys[\"NUMPAD8\"] = 104] = \"NUMPAD8\";\n    Keys[Keys[\"NUMPAD9\"] = 105] = \"NUMPAD9\";\n    Keys[Keys[\"MULTIPLY\"] = 106] = \"MULTIPLY\";\n    Keys[Keys[\"ADD\"] = 107] = \"ADD\";\n    Keys[Keys[\"SEPARATOR\"] = 108] = \"SEPARATOR\";\n    Keys[Keys[\"SUBTRACT\"] = 109] = \"SUBTRACT\";\n    Keys[Keys[\"DECIMAL\"] = 110] = \"DECIMAL\";\n    Keys[Keys[\"DIVIDE\"] = 111] = \"DIVIDE\";\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    Keys[Keys[\"F13\"] = 124] = \"F13\";\n    Keys[Keys[\"F14\"] = 125] = \"F14\";\n    Keys[Keys[\"F15\"] = 126] = \"F15\";\n    Keys[Keys[\"F16\"] = 127] = \"F16\";\n    Keys[Keys[\"F17\"] = 128] = \"F17\";\n    Keys[Keys[\"F18\"] = 129] = \"F18\";\n    Keys[Keys[\"F19\"] = 130] = \"F19\";\n    Keys[Keys[\"F20\"] = 131] = \"F20\";\n    Keys[Keys[\"F21\"] = 132] = \"F21\";\n    Keys[Keys[\"F22\"] = 133] = \"F22\";\n    Keys[Keys[\"F23\"] = 134] = \"F23\";\n    Keys[Keys[\"F24\"] = 135] = \"F24\";\n    Keys[Keys[\"NUM_LOCK\"] = 144] = \"NUM_LOCK\";\n    Keys[Keys[\"SCROLL_LOCK\"] = 145] = \"SCROLL_LOCK\";\n    Keys[Keys[\"COMMA\"] = 188] = \"COMMA\";\n    Keys[Keys[\"PERIOD\"] = 190] = \"PERIOD\";\n    Keys[Keys[\"SLASH\"] = 191] = \"SLASH\";\n    Keys[Keys[\"BACK_QUOTE\"] = 192] = \"BACK_QUOTE\";\n    Keys[Keys[\"OPEN_BRACKET\"] = 219] = \"OPEN_BRACKET\";\n    Keys[Keys[\"BACK_SLASH\"] = 220] = \"BACK_SLASH\";\n    Keys[Keys[\"CLOSE_BRACKET\"] = 221] = \"CLOSE_BRACKET\";\n    Keys[Keys[\"QUOTE\"] = 222] = \"QUOTE\";\n    Keys[Keys[\"META\"] = 224] = \"META\";\n})(Keys || (Keys = {}));\nexport function keyboard(opts, callback) {\n    const cb = callback || opts;\n    const { element = window } = opts;\n    const pressed = {};\n    function onKeydown(event) {\n        pressed[event.keyCode] = Date.now();\n        cb(pressed);\n    }\n    function onKeyup(event) {\n        delete pressed[event.keyCode];\n        cb(pressed);\n    }\n    element.addEventListener('keyup', onKeyup, false);\n    element.addEventListener('keydown', onKeydown, false);\n    cb(pressed);\n    return function stop() {\n        element.removeEventListener('keyup', onKeyup);\n        element.removeEventListener('keydown', onKeydown);\n    };\n}\nexport function keyboardObserver(opts) {\n    const observer = {\n        Keys,\n        state: { pressed: {} },\n        destroy: () => { },\n    };\n    function callback(pressed) {\n        observer.state.pressed = pressed;\n    }\n    observer.destroy = keyboard(callback, opts);\n    return observer;\n}\n//# sourceMappingURL=keyboard.js.map","export function deepmerge(obj1, obj2) {\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        const result = Object.assign({}, obj1);\n        for (const key in obj2) {\n            const val1 = obj1[key];\n            const val2 = obj2[key];\n            if (typeof val2 !== 'undefined') {\n                result[key] = deepmerge(val1, val2);\n            }\n            else {\n                delete result[key];\n            }\n        }\n        return result;\n    }\n    return obj2;\n}\nexport function deepOverride(obj1, obj2, opt) {\n    const ignore = opt && opt.ignore;\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        for (const key in obj1) {\n            if (obj1.hasOwnProperty(key) &&\n                !(ignore && key in ignore && ignore[key] === true)) {\n                const val1 = obj1[key];\n                const val2 = obj2[key];\n                if (val2 !== undefined) {\n                    obj1[key] = deepOverride(val1, val2, {\n                        ignore: ignore && ignore[key],\n                    });\n                }\n            }\n        }\n        return obj1;\n    }\n    return obj2;\n}\nexport function mapObj(fn, coll, res = {}) {\n    for (const key in coll) {\n        res[key] = fn(coll[key], key);\n    }\n    return res;\n}\n//# sourceMappingURL=object.js.map","export const GEOMETRY_PROP_POSITION = 'position';\nexport const GEOMETRY_PROP_NORMAL = 'normal';\nexport const GEOMETRY_PROP_UV = 'uv';\nexport const UNIFORM_SOURCE_TEXTURE = 'source';\nexport const VARYING_UV_COORDS = 'coords';\nexport const GL_TYPE = {\n    FLOAT: 0x1406,\n    FLOAT_VEC2: 0x8b50,\n    FLOAT_VEC3: 0x8b51,\n    FLOAT_VEC4: 0x8b52,\n    INT: 0x1404,\n    INT_VEC2: 0x8b53,\n    INT_VEC3: 0x8b54,\n    INT_VEC4: 0x8b55,\n    BOOL: 0x8b56,\n    BOOL_VEC2: 0x8b57,\n    BOOL_VEC3: 0x8b58,\n    BOOL_VEC4: 0x8b59,\n    FLOAT_MAT2: 0x8b5a,\n    FLOAT_MAT3: 0x8b5b,\n    FLOAT_MAT4: 0x8b5c,\n    SAMPLER_2D: 0x8b5e,\n    SAMPLER_CUBE: 0x8b60,\n    SAMPLER_3D: 0x8b5f,\n    SAMPLER_2D_SHADOW: 0x8b62,\n    FLOAT_MAT2X3: 0x8b65,\n    FLOAT_MAT2X4: 0x8b66,\n    FLOAT_MAT3X2: 0x8b67,\n    FLOAT_MAT3X4: 0x8b68,\n    FLOAT_MAT4X2: 0x8b69,\n    FLOAT_MAT4X3: 0x8b6a,\n    SAMPLER_2D_ARRAY: 0x8dc1,\n    SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n    SAMPLER_CUBE_SHADOW: 0x8dc5,\n    UNSIGNED_INT: 0x1405,\n    UNSIGNED_INT_VEC2: 0x8dc6,\n    UNSIGNED_INT_VEC3: 0x8dc7,\n    UNSIGNED_INT_VEC4: 0x8dc8,\n    INT_SAMPLER_2D: 0x8dca,\n    INT_SAMPLER_3D: 0x8dcb,\n    INT_SAMPLER_CUBE: 0x8dcc,\n    INT_SAMPLER_2D_ARRAY: 0x8dcf,\n    UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n    UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n    UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n    TEXTURE_2D: 0x0de1,\n    TEXTURE_CUBE_MAP: 0x8513,\n    TEXTURE_3D: 0x806f,\n    TEXTURE_2D_ARRAY: 0x8c1a,\n    BYTE: 0x1400,\n    UNSIGNED_BYTE: 0x1401,\n    SHORT: 0x1402,\n    UNSIGNED_SHORT: 0x1403,\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\n    UNSIGNED_SHORT_5_6_5: 0x8363,\n    HALF_FLOAT: 0x140b,\n    UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n    UNSIGNED_INT_10F_11F_11F_REV: 0x8c3b,\n    UNSIGNED_INT_5_9_9_9_REV: 0x8c3e,\n    FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8dad,\n    UNSIGNED_INT_24_8: 0x84fa,\n};\nexport const TEXTURE_FORMAT = {\n    RED: 0x1903,\n    RG: 0x8227,\n    RGB: 0x1907,\n    RGBA: 0x1908,\n    RED_INTEGER: 0x8d94,\n    RG_INTEGER: 0x8228,\n    RGB_INTEGER: 0x8d98,\n    RGBA_INTEGER: 0x8d99,\n    DEPTH_COMPONENT: 0x1902,\n};\nexport const TEXTURE_FORMAT_INTERNAL = {\n    R8: 0x8229,\n    RG8: 0x822b,\n    RGB8: 0x8051,\n    RGBA8: 0x8058,\n    R16F: 0x822d,\n    RG16F: 0x822f,\n    RGB16F: 0x881b,\n    RGBA16F: 0x881a,\n    R32F: 0x822e,\n    RG32F: 0x8230,\n    RGB32F: 0x8815,\n    RGBA32F: 0x8814,\n    R8I: 0x8231,\n    RG8I: 0x8237,\n    RGB8I: 0x8d8f,\n    RGBA8I: 0x8d8e,\n    R8UI: 0x8232,\n    RG8UI: 0x8238,\n    RGB8UI: 0x8d7d,\n    RGBA8UI: 0x8d7c,\n    R16I: 0x8233,\n    RG16I: 0x8239,\n    RGB16I: 0x8d89,\n    RGBA16I: 0x8d88,\n    R16UI: 0x8234,\n    RG16UI: 0x823a,\n    RGB16UI: 0x8d77,\n    RGBA16UI: 0x8d76,\n    R32I: 0x8235,\n    RG32I: 0x823b,\n    RGB32I: 0x8d83,\n    RGBA32I: 0x8d82,\n    R32UI: 0x8236,\n    RG32UI: 0x823c,\n    RGB32UI: 0x8d71,\n    RGBA32UI: 0x8d70,\n    RGB10_A2: 0x8059,\n    RGB10_A2UI: 0x906f,\n    SRGB: 0x8c40,\n    SRGB8: 0x8c41,\n    SRGB8_ALPHA8: 0x8c43,\n    R8_SNORM: 0x8f94,\n    RG8_SNORM: 0x8f95,\n    RGB8_SNORM: 0x8f96,\n    RGBA8_SNORM: 0x8f97,\n    DEPTH_COMPONENT16: 0x81a5,\n    DEPTH_COMPONENT24: 0x81a6,\n    DEPTH_COMPONENT32F: 0x8cac,\n};\nexport const TEXTURE_FORMAT_DEFAULTS = {\n    [GL_TYPE.UNSIGNED_BYTE]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R8,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG8,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB8,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA8,\n    },\n    [GL_TYPE.UNSIGNED_SHORT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT16,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16UI,\n    },\n    [GL_TYPE.UNSIGNED_INT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT24,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R32UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG32UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB32UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA32UI,\n    },\n    [GL_TYPE.FLOAT]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16F,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16F,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16F,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16F,\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT32F,\n    },\n    COMPRESSED_TYPES: {},\n};\n//# sourceMappingURL=contants.js.map","import * as constants from './contants';\nexport const defaultTextureSettings = {\n    wrap: 'CLAMP_TO_EDGE',\n    minFilter: 'LINEAR',\n    magFilter: 'NEAREST',\n};\nexport function getDefaultLayerSettings(gl) {\n    return {\n        clearColor: [0.0, 0.0, 0.0, 1.0],\n        blendFunc: [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA],\n    };\n}\nexport const defaultForms = {\n    renderQuad: {\n        attribs: {\n            [constants.GEOMETRY_PROP_POSITION]: {\n                buffer: new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1]),\n                storeType: 'STATIC',\n            },\n            [constants.GEOMETRY_PROP_UV]: {\n                buffer: new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]),\n                storeType: 'STATIC',\n            },\n        },\n        drawType: 'TRIANGLE_STRIP',\n        itemCount: 4,\n    },\n};\nexport const defaultShaders = {\n    basicEffect: {\n        vert: `\nattribute vec2 ${constants.GEOMETRY_PROP_POSITION};\nattribute vec2 ${constants.GEOMETRY_PROP_UV};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\t${constants.VARYING_UV_COORDS} = ${constants.GEOMETRY_PROP_UV};\n\tgl_Position = vec4(${constants.GEOMETRY_PROP_POSITION}, 0.0, 1.0);\n}`,\n        frag: `precision mediump float;\nuniform sampler2D ${constants.UNIFORM_SOURCE_TEXTURE};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\tgl_FragColor = texture2D(${constants.UNIFORM_SOURCE_TEXTURE}, ${constants.VARYING_UV_COORDS});\n}`,\n    },\n};\n//# sourceMappingURL=asset-lib.js.map","import { GL_TYPE } from './contants';\n// Attrib and Uniform Setters\nfunction getBindPointForSamplerType(type) {\n    return typeMap[type].bindPoint;\n}\nfunction floatSetter(gl, location) {\n    return (v) => {\n        gl.uniform1f(location, v);\n    };\n}\nfunction floatArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1fv(location, v);\n    };\n}\nfunction floatVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2fv(location, v);\n    };\n}\nfunction floatVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3fv(location, v);\n    };\n}\nfunction floatVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4fv(location, v);\n    };\n}\nfunction intSetter(gl, location) {\n    return (v) => {\n        gl.uniform1i(location, v);\n    };\n}\nfunction intArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1iv(location, v);\n    };\n}\nfunction intVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2iv(location, v);\n    };\n}\nfunction intVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3iv(location, v);\n    };\n}\nfunction intVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4iv(location, v);\n    };\n}\nfunction uintSetter(gl, location) {\n    return (v) => {\n        gl.uniform1ui(location, v);\n    };\n}\nfunction uintArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1uiv(location, v);\n    };\n}\nfunction uintVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2uiv(location, v);\n    };\n}\nfunction uintVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3uiv(location, v);\n    };\n}\nfunction uintVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4uiv(location, v);\n    };\n}\nfunction floatMat2Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n    };\n}\nfunction floatMat3Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n    };\n}\nfunction floatMat4Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n    };\n}\nfunction floatMat23Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x3fv(location, false, v);\n    };\n}\nfunction floatMat32Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x2fv(location, false, v);\n    };\n}\nfunction floatMat24Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x4fv(location, false, v);\n    };\n}\nfunction floatMat42Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x2fv(location, false, v);\n    };\n}\nfunction floatMat34Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x4fv(location, false, v);\n    };\n}\nfunction floatMat43Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x3fv(location, false, v);\n    };\n}\nfunction samplerSetter(gl, type, unit, location) {\n    const bindPoint = getBindPointForSamplerType(type);\n    return (texture) => {\n        gl.uniform1i(location, unit);\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(bindPoint, texture._texture);\n    };\n}\nfunction samplerArraySetter(gl, type, unit, location, size) {\n    const bindPoint = getBindPointForSamplerType(type);\n    const units = new Int32Array(size);\n    for (let i = 0; i < size; ++i) {\n        units[i] = unit + i;\n    }\n    return (textures) => {\n        gl.uniform1iv(location, units);\n        for (const index in textures) {\n            gl.activeTexture(gl.TEXTURE0 + units[index]);\n            gl.bindTexture(bindPoint, textures[index]._texture);\n        }\n    };\n}\nfunction isSamplerInfo(info) {\n    return info.Type === null;\n}\nconst typeMap = {\n    [GL_TYPE.FLOAT]: {\n        Type: Float32Array,\n        size: 4,\n        setter: floatSetter,\n        arraySetter: floatArraySetter,\n    },\n    [GL_TYPE.FLOAT_VEC2]: {\n        Type: Float32Array,\n        size: 8,\n        setter: floatVec2Setter,\n    },\n    [GL_TYPE.FLOAT_VEC3]: {\n        Type: Float32Array,\n        size: 12,\n        setter: floatVec3Setter,\n    },\n    [GL_TYPE.FLOAT_VEC4]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatVec4Setter,\n    },\n    [GL_TYPE.INT]: {\n        Type: Int32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.INT_VEC2]: { Type: Int32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.INT_VEC3]: { Type: Int32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.INT_VEC4]: { Type: Int32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.UNSIGNED_INT]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: uintSetter,\n        arraySetter: uintArraySetter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        Type: Uint32Array,\n        size: 8,\n        setter: uintVec2Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        Type: Uint32Array,\n        size: 12,\n        setter: uintVec3Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        Type: Uint32Array,\n        size: 16,\n        setter: uintVec4Setter,\n    },\n    [GL_TYPE.BOOL]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.BOOL_VEC2]: { Type: Uint32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.BOOL_VEC3]: { Type: Uint32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.BOOL_VEC4]: { Type: Uint32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.FLOAT_MAT2]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatMat2Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3]: {\n        Type: Float32Array,\n        size: 36,\n        setter: floatMat3Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4]: {\n        Type: Float32Array,\n        size: 64,\n        setter: floatMat4Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X3]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat23Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X4]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat24Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X2]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat32Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X4]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat34Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X2]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat42Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X3]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat43Setter,\n    },\n    [GL_TYPE.SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.SAMPLER_2D_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_CUBE_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n};\nfunction floatAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribPointer(location, typeInfo.itemSize, GL_TYPE.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n    };\n}\nfunction intAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribIPointer(location, typeInfo.itemSize, GL_TYPE.INT, b.stride || 0, b.offset || 0);\n    };\n}\nfunction matAttribSetter(gl, location, typeInfo) {\n    const defaultSize = typeInfo.size;\n    const count = typeInfo.count;\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        const numComponents = defaultSize;\n        const size = numComponents / count;\n        const typeInfo = typeMap[GL_TYPE.FLOAT];\n        const stride = typeInfo.size * numComponents;\n        const normalize = b.normalize || false;\n        const offset = b.offset || 0;\n        const rowOffset = stride / count;\n        for (let i = 0; i < count; ++i) {\n            gl.enableVertexAttribArray(location + i);\n            gl.vertexAttribPointer(location + i, size, GL_TYPE.FLOAT, normalize, stride, offset + rowOffset * i);\n        }\n    };\n}\nconst attrTypeMap = {\n    [GL_TYPE.FLOAT]: { size: 4, setter: floatAttribSetter, itemSize: 1 },\n    [GL_TYPE.FLOAT_VEC2]: { size: 8, setter: floatAttribSetter, itemSize: 2 },\n    [GL_TYPE.FLOAT_VEC3]: { size: 12, setter: floatAttribSetter, itemSize: 3 },\n    [GL_TYPE.FLOAT_VEC4]: { size: 16, setter: floatAttribSetter, itemSize: 4 },\n    [GL_TYPE.INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.INT_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.INT_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.INT_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.UNSIGNED_INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        size: 8,\n        setter: intAttribSetter,\n        itemSize: 2,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        size: 12,\n        setter: intAttribSetter,\n        itemSize: 3,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        size: 16,\n        setter: intAttribSetter,\n        itemSize: 4,\n    },\n    [GL_TYPE.BOOL]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.BOOL_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.BOOL_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.BOOL_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.FLOAT_MAT2]: { size: 4, setter: matAttribSetter, count: 2 },\n    [GL_TYPE.FLOAT_MAT3]: { size: 9, setter: matAttribSetter, count: 3 },\n    [GL_TYPE.FLOAT_MAT4]: { size: 16, setter: matAttribSetter, count: 4 },\n};\nexport function createUniformSetters(gl, program) {\n    let textureUnit = 0;\n    function createUniformSetter(program, uniformInfo) {\n        const location = gl.getUniformLocation(program, uniformInfo.name);\n        const isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]';\n        const type = uniformInfo.type;\n        const typeInfo = typeMap[type];\n        if (!typeInfo) {\n            throw new Error('unknown type: 0x' + type.toString(16)); // we should never get here.\n        }\n        if (location == null) {\n            return;\n        }\n        let setter;\n        if (isSamplerInfo(typeInfo)) {\n            // it's a sampler\n            const unit = textureUnit;\n            textureUnit += uniformInfo.size;\n            if (isArray) {\n                setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n            }\n            else {\n                setter = typeInfo.setter(gl, type, unit, location);\n            }\n        }\n        else {\n            if (typeInfo.arraySetter && isArray) {\n                setter = typeInfo.arraySetter(gl, location);\n            }\n            else {\n                setter = typeInfo.setter(gl, location);\n            }\n        }\n        return { setter, location };\n    }\n    const uniformSetters = {};\n    const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < numUniforms; ++i) {\n        const uniformInfo = gl.getActiveUniform(program, i);\n        if (!uniformInfo) {\n            continue;\n        }\n        let name = uniformInfo.name;\n        // remove the array suffix.\n        if (name.substr(-3) === '[0]') {\n            name = name.substr(0, name.length - 3);\n        }\n        if (program) {\n            const setter = createUniformSetter(program, uniformInfo);\n            if (setter) {\n                uniformSetters[name] = setter;\n            }\n        }\n    }\n    return uniformSetters;\n}\nexport function createAttributeSetters(gl, program) {\n    const attribSetters = {};\n    const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < numAttribs; i++) {\n        const attribInfo = gl.getActiveAttrib(program, i);\n        if (!attribInfo) {\n            break;\n        }\n        const location = gl.getAttribLocation(program, attribInfo.name);\n        const typeInfo = attrTypeMap[attribInfo.type];\n        const setter = typeInfo.setter(gl, location, typeInfo);\n        attribSetters[attribInfo.name] = { setter, location };\n    }\n    return attribSetters;\n}\n// Type helpers\nexport const glTypeToTypedArray = {\n    [GL_TYPE.BYTE]: Int8Array,\n    [GL_TYPE.UNSIGNED_BYTE]: Uint8Array,\n    [GL_TYPE.SHORT]: Int16Array,\n    [GL_TYPE.UNSIGNED_SHORT]: Uint16Array,\n    [GL_TYPE.INT]: Int32Array,\n    [GL_TYPE.UNSIGNED_INT]: Uint32Array,\n    [GL_TYPE.FLOAT]: Float32Array,\n    [GL_TYPE.UNSIGNED_SHORT_4_4_4_4]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_5_5_1]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_6_5]: Uint16Array,\n    [GL_TYPE.HALF_FLOAT]: Uint16Array,\n    [GL_TYPE.UNSIGNED_INT_2_10_10_10_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_10F_11F_11F_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_5_9_9_9_REV]: Uint32Array,\n    [GL_TYPE.FLOAT_32_UNSIGNED_INT_24_8_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_24_8]: Uint32Array,\n};\nexport function getGLTypeForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArray instanceof Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArray instanceof Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArray instanceof Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArray instanceof Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArray instanceof Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\nexport function getGLTypeForTypedArrayType(typedArrayType) {\n    if (typedArrayType === Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArrayType === Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArrayType === Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArrayType === Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArrayType === Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArrayType === Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\n// Settings\nexport function applyDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.enable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.blendFunc) {\n        gl.blendFunc.apply(gl, settings.blendFunc);\n    }\n    if (settings.depthFunc != null) {\n        gl.depthFunc(settings.depthFunc);\n    }\n    if (settings.cullFace != null) {\n        gl.cullFace(settings.cullFace);\n    }\n    if (settings.frontFace != null) {\n        gl.frontFace(settings.frontFace);\n    }\n    if (settings.lineWidth != null) {\n        gl.lineWidth(settings.lineWidth);\n    }\n    if (settings.colorMask) {\n        gl.colorMask.apply(gl, settings.colorMask);\n    }\n    if (settings.depthMask != null) {\n        gl.depthMask(settings.depthMask);\n    }\n    if (settings.clearColor) {\n        gl.clearColor.apply(gl, settings.clearColor);\n    }\n    if (settings.clearDepth != null) {\n        gl.clearDepth(settings.clearDepth);\n    }\n    if (settings.clearBits != null) {\n        gl.clear(settings.clearBits);\n    }\n}\nexport function revertDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.enable(setting);\n        }\n    }\n}\n//# sourceMappingURL=render-utils.js.map","import { getGLTypeForTypedArray } from './render-utils';\nlet formCounter = 1;\nexport class Form {\n    constructor(_painter, id = 'Form' + formCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (data.drawType) {\n            this._drawType = gl[data.drawType];\n        }\n        if (data.itemCount) {\n            this._itemCount = data.itemCount;\n        }\n        this._attribs = this._attribs || {};\n        for (const id in data.attribs) {\n            const attribData = data.attribs[id];\n            if (this._attribs[id] == null) {\n                this._attribs[id] = {\n                    buffer: gl.createBuffer(),\n                };\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._attribs[id].buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, attribData.buffer, gl[(attribData.storeType || 'STATIC') + '_DRAW']);\n        }\n        if (data.elements) {\n            const buffer = data.elements.buffer;\n            if (this._elements == null) {\n                this._elements = {\n                    buffer: gl.createBuffer(),\n                    glType: null,\n                };\n            }\n            this._elements.glType = getGLTypeForTypedArray(buffer);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._elements.buffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, buffer, gl[(data.elements.storeType || 'STATIC') + '_DRAW']);\n        }\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        for (const id in this._attribs) {\n            gl.deleteBuffer(this._attribs[id].buffer);\n        }\n        this._attribs = {};\n        if (this._elements) {\n            gl.deleteBuffer(this._elements.buffer);\n            this._elements = undefined;\n        }\n    }\n}\n//# sourceMappingURL=form.js.map","import { randInt, randIntInRange } from '../math/random';\nexport function pickRandom(arr) {\n    return arr[randInt(arr.length)];\n}\nexport function doTimes(fn, count) {\n    for (let i = 0; i < count; i++) {\n        fn(i);\n    }\n}\nexport function times(fn, count, res = []) {\n    for (let i = 0; i < count; i++) {\n        res[i] = fn(i);\n    }\n    return res;\n}\nexport function repeat(count, item) {\n    return times(() => item, count);\n}\nexport function concat(arr, ...arrs) {\n    return arr.concat(...arrs);\n}\nexport function zip(fn, as, bs, res = []) {\n    const length = Math.min(as.length, bs.length);\n    for (let i = 0; i < length; i++) {\n        res[i] = fn(as[i], bs[i]);\n    }\n    return res;\n}\nexport function flatten(array, res = []) {\n    for (const subarray of array) {\n        const currentLength = res.length;\n        for (let i = 0; i < subarray.length; i++) {\n            res[i + currentLength] = subarray[i];\n        }\n    }\n    return res;\n}\nexport function mapcat(fn, array, res = []) {\n    return flatten(map(fn, array, res));\n}\nexport const flatMap = mapcat;\nexport function reverse(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        res[i] = arr[arr.length - 1 - i];\n    }\n    return res;\n}\nexport function shuffle(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        const j = randIntInRange(i, arr.length);\n        const temp = res[i] !== undefined ? res[i] : arr[i];\n        res[i] = res[j] !== undefined ? res[j] : arr[j];\n        res[j] = temp;\n    }\n    return res;\n}\nexport function map(fn, coll, res = []) {\n    for (let i = 0; i < coll.length; i++) {\n        res[i] = fn(coll[i], i);\n    }\n    return res;\n}\nexport function each(fn, coll) {\n    for (const key in coll) {\n        fn(coll[key], key);\n    }\n}\nexport function reduce(fn, start, arr) {\n    for (let i = 0; i < arr.length; i++) {\n        start = fn(start, arr[i]);\n    }\n    return start;\n}\nexport function fold(fn, arr) {\n    const [start, ...rest] = arr;\n    return reduce(fn, start, rest);\n}\nexport const last = (arr) => arr[arr.length - 1];\n//# sourceMappingURL=sequence.js.map","import { defaultTextureSettings } from './asset-lib';\nlet textureCount = 1;\nexport class Texture {\n    constructor(_painter, id = 'Texture' + textureCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this._texture = null;\n        this._data = {};\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (this._texture == null) {\n            this._texture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        if ((data.wrap && data.wrap !== this._data.wrap) ||\n            (data.wrapS && data.wrapS !== this._data.wrapS) ||\n            (data.wrapT && data.wrapT !== this._data.wrapT)) {\n            let wrapS, wrapT;\n            if (data.wrap) {\n                wrapS = wrapT = data.wrap;\n            }\n            else {\n                wrapT = data.wrapT || defaultTextureSettings.wrap;\n                wrapS = data.wrapS || defaultTextureSettings.wrap;\n            }\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n        }\n        else if (!(this._data.wrap || this._data.wrapS || this._data.wrapT)) {\n            this._data.wrap = this._data.wrapT = this._data.wrapS = defaultTextureSettings.wrap;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[this._data.wrap]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[this._data.wrap]);\n        }\n        if (data.magFilter && data.magFilter !== this._data.magFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[data.magFilter]);\n        }\n        else if (!this._data.magFilter) {\n            this._data.magFilter = defaultTextureSettings.magFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[this._data.magFilter]);\n        }\n        if (data.minFilter && data.minFilter !== this._data.minFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[data.minFilter]);\n        }\n        else if (!this._data.minFilter) {\n            this._data.minFilter = defaultTextureSettings.minFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[this._data.minFilter]);\n        }\n        if (data.asset) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data.asset);\n        }\n        if (data.data !== undefined) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, data.type === 'FLOAT' && this._painter.isWebGL2\n                ? gl.RGBA32F\n                : gl.RGBA, data.width, // width and height are required if using custom data\n            data.height, 0, gl.RGBA, gl[data.type || 'UNSIGNED_BYTE'], data.data);\n        }\n        if (data.flipY != null && data.flipY !== this._data.flipY) {\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, data.flipY);\n        }\n        if (data.minFilter && data.minFilter.indexOf('MIPMAP') > 0) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        this._painter.gl.deleteTexture(this._texture);\n        this._data = {};\n        this._texture = null;\n    }\n}\n//# sourceMappingURL=texture.js.map","import { equalObject } from 'tvs-libs/dist/utils/predicates';\nimport { Texture } from './texture';\nlet targetCount = 1;\nexport class RenderTarget {\n    constructor(_painter, id = 'Form' + targetCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.antialias = false;\n        this.frameBuffer = null;\n        this.antiAliasFrameBuffer = null;\n        this.antiAliasRenderBuffer = null;\n        this.textures = [];\n        this.depthBuffer = null;\n        this.bufferStructure = [];\n        this._data = {};\n    }\n    update(data) {\n        var _a;\n        const gl = this._painter.gl;\n        const width = data.width || this.width;\n        const height = data.height || this.height;\n        if (!(width && height)) {\n            return this;\n        }\n        else if (width === this.width && height === this.height) {\n            if (!data.bufferStructure)\n                return this;\n            if (data.bufferStructure.length === this.bufferStructure.length &&\n                this.bufferStructure.every((buf, i) => equalObject(buf, data.bufferStructure[i]))) {\n                return this;\n            }\n        }\n        if (this.frameBuffer == null) {\n            this.frameBuffer = gl.createFramebuffer();\n        }\n        if (this.depthBuffer == null) {\n            this.depthBuffer = gl.createRenderbuffer();\n        }\n        if (data.bufferStructure && data.bufferStructure.length) {\n            this.bufferStructure = data.bufferStructure;\n            if (this.bufferStructure.some(t => t.type === 'FLOAT')) {\n                if (this._painter.isWebGL2) {\n                    gl.getExtension('EXT_color_buffer_float');\n                }\n                else {\n                    gl.getExtension('OES_texture_float');\n                }\n            }\n        }\n        const texCount = this.bufferStructure.length || 1;\n        const bufferAttachments = [gl.COLOR_ATTACHMENT0];\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        if (texCount > 1) {\n            let glx;\n            if (!this._painter.isWebGL2) {\n                glx = gl.getExtension('WEBGL_draw_buffers');\n            }\n            const attachment = this._painter.isWebGL2\n                ? gl.COLOR_ATTACHMENT0\n                : glx.COLOR_ATTACHMENT0_WEBGL;\n            for (let i = 0; i < texCount; i++) {\n                bufferAttachments[i] = attachment + i;\n            }\n            this._painter.isWebGL2\n                ? gl.drawBuffers(bufferAttachments)\n                : glx.drawBuffersWEBGL(bufferAttachments);\n        }\n        this.antialias =\n            texCount === 1 &&\n                this._painter.isWebGL2 &&\n                (data.antialias || ((_a = this._data) === null || _a === void 0 ? void 0 : _a.antialias));\n        if (this.antialias) {\n            const gl2 = gl;\n            if (this.antiAliasFrameBuffer == null) {\n                this.antiAliasFrameBuffer = gl.createFramebuffer();\n            }\n            if (this.antiAliasRenderBuffer == null) {\n                this.antiAliasRenderBuffer = gl.createRenderbuffer();\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl2.RGBA8, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        else {\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n        }\n        for (let i = 0; i < texCount; i++) {\n            if (!this.textures[i]) {\n                this.textures[i] = new Texture(this._painter, this.id + '_Texture' + i);\n            }\n            const texture = this.textures[i];\n            texture.update(Object.assign(Object.assign({ minFilter: 'NEAREST', magFilter: 'NEAREST' }, this.bufferStructure[i]), { data: null, width,\n                height }));\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, bufferAttachments[i], gl.TEXTURE_2D, texture._texture, 0);\n        }\n        if (this.antialias) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n            if (err !== gl.FRAMEBUFFER_COMPLETE) {\n                console.error('antialias framebuffer error', err, data);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (err !== gl.FRAMEBUFFER_COMPLETE) {\n            console.error('framebuffer error', err, data);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        Object.assign(this._data, data);\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteFramebuffer(this.frameBuffer);\n        gl.deleteRenderbuffer(this.depthBuffer);\n        for (const texture of this.textures) {\n            gl.deleteTexture(texture);\n        }\n        if (this.antiAliasFrameBuffer) {\n            gl.deleteFramebuffer(this.antiAliasFrameBuffer);\n        }\n        if (this.antiAliasRenderBuffer) {\n            gl.deleteRenderbuffer(this.antiAliasRenderBuffer);\n        }\n        this.textures = [];\n        this.frameBuffer = null;\n        this.depthBuffer = null;\n        this._data = {};\n        this.bufferStructure = [];\n        this.width = 0;\n        this.height = 0;\n    }\n}\n//# sourceMappingURL=render-target.js.map","export const and = (p1, p2) => (a, b) => p1(a, b) && p2(a, b);\nexport const not = (p) => (...args) => !p(...args);\nexport const defined = a => a != null;\nexport const notEmpty = a => a && a.length;\nexport const unequal = (a, b) => a !== b;\nexport const equal = (a, b) => a === b;\nexport function equalArray(arr1, arr2) {\n    if (arr1 === arr2) {\n        return true;\n    }\n    if (!arr2 || !arr1) {\n        return false;\n    }\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalObject(obj1, obj2) {\n    if (obj1 === obj2) {\n        return true;\n    }\n    if (!obj2) {\n        return false;\n    }\n    const k1 = Object.keys(obj1);\n    const k2 = Object.keys(obj2);\n    if (!equalArray(k1, k2)) {\n        return false;\n    }\n    for (const key of k1) {\n        if (obj1[key] !== obj2[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=predicates.js.map","import { times } from 'tvs-libs/dist/utils/sequence';\nimport { RenderTarget } from './render-target';\nimport { Texture } from './texture';\nlet frameCount = 1;\nexport class Frame {\n    constructor(_painter, id = 'Frame' + frameCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.layers = [];\n        this._data = {};\n        this._targets = [];\n        this._textures = [];\n    }\n    image(i = 0) {\n        return ((this._targets.length &&\n            this._targets[this._targets.length - 1].textures[i]) ||\n            this._textures[i]);\n    }\n    update(data = {}) {\n        var _a, _b, _c, _d;\n        const gl = this._painter.gl;\n        const layers = Array.isArray(data.layers)\n            ? data.layers\n            : data.layers\n                ? [data.layers]\n                : this.layers;\n        const selfReferencing = data.selfReferencing || this._data.selfReferencing;\n        const layerCount = layers.reduce((count, layer) => count + (layer._uniforms.length || 1), 0);\n        const targetCount = selfReferencing || layerCount > 1 ? 2 : layerCount;\n        const width = data.width || ((_a = data.texture) === null || _a === void 0 ? void 0 : _a.width) ||\n            this._data.width || ((_b = this._data.texture) === null || _b === void 0 ? void 0 : _b.width) ||\n            gl.canvas.width;\n        const height = data.height || ((_c = data.texture) === null || _c === void 0 ? void 0 : _c.height) ||\n            this._data.height || ((_d = this._data.texture) === null || _d === void 0 ? void 0 : _d.height) ||\n            gl.canvas.height;\n        const antialias = data.antialias || this._data.antialias || true;\n        if (targetCount !== this._targets.length) {\n            this._destroyTargets();\n        }\n        const targetData = Object.assign(Object.assign({}, data), { width, height, antialias });\n        if (!this._targets.length && targetCount > 0) {\n            this._targets = times(i => new RenderTarget(this._painter, this.id + '_target' + (i + 1)).update(targetData), targetCount);\n        }\n        else if (this._targets.length) {\n            this._targets.forEach(t => {\n                t.update(targetData);\n            });\n        }\n        if (data.texture) {\n            // Hardcode to one static texture for now\n            if (!this._textures[0]) {\n                this._textures[0] = new Texture(this._painter, this.id + '_Texture0');\n            }\n            data.texture.width = width;\n            data.texture.height = height;\n            this._textures[0].update(data.texture);\n        }\n        Object.assign(this._data, data);\n        this.layers = layers;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        this._destroyTargets();\n        this._textures.forEach(tex => tex.destroy());\n        this._textures = [];\n        this._data = {};\n        this.layers = [];\n        this.width = 0;\n        this.height = 0;\n    }\n    _destroyTargets() {\n        this._targets.forEach(t => t.destroy());\n        this._targets = [];\n    }\n    _swapTargets() {\n        if (this._targets.length > 1) {\n            const tmp = this._targets[0];\n            this._targets[0] = this._targets[1];\n            this._targets[1] = tmp;\n        }\n    }\n}\n//# sourceMappingURL=frame.js.map","let layerCount = 1;\nexport class Layer {\n    constructor(id = 'DrawingLayer' + layerCount++) {\n        this.id = id;\n        this.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.sketches) {\n            this.sketches = Array.isArray(data.sketches)\n                ? data.sketches\n                : [data.sketches];\n        }\n        if (data.frag) {\n            const sketch = this.sketches && this.sketches[0];\n            if (sketch) {\n                sketch.shade.update({ frag: data.frag });\n            }\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        for (const sketch of this.sketches) {\n            sketch.destroy();\n        }\n        this._data.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=layer.js.map","import { createAttributeSetters, createUniformSetters } from './render-utils';\nlet shadeCounter = 1;\nexport class Shade {\n    constructor(_painter, id = 'Shade' + shadeCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        const fragSource = (data.frag && data.frag.trim()) || this.fragSource;\n        const vertSource = (data.vert && data.vert.trim()) || this.vertSource;\n        if (!(fragSource &&\n            vertSource &&\n            (fragSource !== this.fragSource || vertSource !== this.vertSource))) {\n            return this;\n        }\n        this.destroy();\n        if (fragSource.indexOf('GL_EXT_draw_buffers') >= 0) {\n            gl.getExtension('WEBGL_draw_buffers');\n        }\n        const program = gl.createProgram();\n        const frag = gl.createShader(gl.FRAGMENT_SHADER);\n        const vert = gl.createShader(gl.VERTEX_SHADER);\n        if (!(program && vert && frag))\n            return;\n        this._program = program;\n        this._frag = frag;\n        this._vert = vert;\n        gl.attachShader(program, vert);\n        gl.attachShader(program, frag);\n        gl.shaderSource(vert, vertSource);\n        gl.shaderSource(frag, fragSource);\n        gl.compileShader(vert);\n        gl.compileShader(frag);\n        if (!gl.getShaderParameter(vert, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Vertex Shader!\\n', gl.getShaderInfoLog(vert), addLineNumbers(vertSource));\n        }\n        if (!gl.getShaderParameter(frag, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Fragment Shader!\\n', gl.getShaderInfoLog(frag), addLineNumbers(fragSource));\n        }\n        gl.linkProgram(program);\n        const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n            const lastError = gl.getProgramInfoLog(program);\n            console.error('Error in program linking:', lastError);\n        }\n        this._uniformSetters = createUniformSetters(gl, program);\n        this._attributeSetters = createAttributeSetters(gl, program);\n        this.fragSource = fragSource;\n        this.vertSource = vertSource;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteProgram(this._program);\n        gl.deleteShader(this._frag);\n        gl.deleteShader(this._vert);\n        this.vertSource = undefined;\n        this.fragSource = undefined;\n        this._attributeSetters = {};\n        this._uniformSetters = {};\n    }\n}\nfunction addLineNumbers(src) {\n    return src\n        .trim()\n        .split('\\n')\n        .map((line, i) => i + 1 + ': ' + line)\n        .join('\\n');\n}\n//# sourceMappingURL=shade.js.map","let sketchCounter = 1;\nexport class Sketch {\n    constructor(id = 'Sketch' + sketchCounter++) {\n        this.id = id;\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.drawSettings) {\n            this._drawSettings = data.drawSettings;\n        }\n        if (data.form) {\n            this.form = data.form;\n        }\n        if (data.shade) {\n            this.shade = data.shade;\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        return this;\n    }\n    destroy() {\n        this.form && this.form.destroy();\n        this.shade && this.shade.destroy();\n        this._drawSettings = undefined;\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=sketch.js.map","import { defaultForms, defaultShaders, getDefaultLayerSettings, } from './asset-lib';\nimport { Form } from './form';\nimport { Frame } from './frame';\nimport { Layer } from './layer';\nimport { applyDrawSettings, revertDrawSettings } from './render-utils';\nimport { Shade } from './shade';\nimport { Sketch } from './sketch';\nimport { resizeCanvas } from './utils/context';\nexport class Painter {\n    constructor(canvas, opts = {}) {\n        this.canvas = canvas;\n        this.isWebGL2 = true;\n        this.maxBufferSamples = 0;\n        let gl = null;\n        if (!opts.useWebGL1) {\n            gl =\n                canvas.getContext('webgl2', opts) ||\n                    canvas.getContext('experimental-webgl2', opts);\n        }\n        if (gl == null) {\n            this.isWebGL2 = false;\n            gl =\n                canvas.getContext('webgl', opts) ||\n                    canvas.getContext('experimental-webgl', opts);\n        }\n        if (gl == null) {\n            throw Error('Cannot initialize WebGL.');\n        }\n        this.gl = gl;\n        this.sizeMultiplier = opts.sizeMultiplier || 1;\n        if (this.isWebGL2) {\n            this.maxBufferSamples = gl.getParameter(gl.MAX_SAMPLES);\n        }\n        this.resize();\n        applyDrawSettings(gl, getDefaultLayerSettings(gl));\n        this._renderQuad = this.createForm().update(defaultForms.renderQuad);\n        this._staticSketch = this.createFlatSketch();\n    }\n    resize() {\n        resizeCanvas(this.gl.canvas, this.sizeMultiplier);\n        return this;\n    }\n    destroy() {\n        this._staticSketch.destroy();\n        this._renderQuad.destroy();\n    }\n    updateDrawSettings(drawSettings) {\n        applyDrawSettings(this.gl, Object.assign({}, drawSettings));\n        return this;\n    }\n    createForm(id) {\n        return new Form(this, id);\n    }\n    createShade(id) {\n        return new Shade(this, id);\n    }\n    createSketch(id) {\n        return new Sketch(id);\n    }\n    createFlatSketch(id) {\n        const s = this.createSketch(id);\n        return s.update({\n            form: this._renderQuad,\n            shade: this.createShade(s.id + '_defaultShade').update(defaultShaders.basicEffect),\n        });\n    }\n    createFrame(id) {\n        return new Frame(this, id);\n    }\n    createLayer(id) {\n        return new Layer(id);\n    }\n    createEffect(id) {\n        const l = this.createLayer(id);\n        return l.update({\n            sketches: this.createFlatSketch(l.id + '_effectSketch'),\n        });\n    }\n    draw(sketch, globalUniforms) {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        draw(gl, sketch, globalUniforms);\n        return this;\n    }\n    compose(...frames) {\n        for (const frame of frames) {\n            renderFrame(this.gl, frame);\n        }\n        return this;\n    }\n    display(frame, idx = 0) {\n        return this.draw(this._staticSketch, { source: frame.image(idx) });\n    }\n}\nfunction draw(gl, sketch, globalUniforms, sources) {\n    const { shade: shade, form: form, _drawSettings: drawSettings, _uniforms: uniforms, } = sketch;\n    if (!(shade && form)) {\n        throw Error('cannot draw, shader or geometry are not set');\n    }\n    gl.useProgram(shade._program);\n    shadeForm(shade, form);\n    if (globalUniforms) {\n        shadeUniforms(shade, globalUniforms, sources);\n    }\n    if (drawSettings) {\n        applyDrawSettings(gl, drawSettings);\n    }\n    for (let i = 0; i < (uniforms.length || 1); i++) {\n        drawInstance(gl, sketch, uniforms[i], sources);\n    }\n    if (drawSettings) {\n        revertDrawSettings(gl, drawSettings);\n    }\n}\nfunction drawInstance(gl, sketch, uniforms, sources) {\n    if (uniforms) {\n        shadeUniforms(sketch.shade, uniforms, sources);\n    }\n    if (sketch.form._elements && sketch.form._elements.glType != null) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, sketch.form._elements.buffer);\n        gl.drawElements(sketch.form._drawType, sketch.form._itemCount, sketch.form._elements.glType, 0);\n    }\n    else {\n        gl.drawArrays(sketch.form._drawType, 0, sketch.form._itemCount);\n    }\n}\nfunction shadeForm(shade, form) {\n    for (const name in form._attribs) {\n        const setter = shade._attributeSetters[name];\n        if (setter) {\n            setter.setter(form._attribs[name]);\n        }\n    }\n}\nfunction shadeUniforms(shade, uniforms, sources) {\n    for (const name in uniforms) {\n        const setter = shade._uniformSetters[name];\n        if (setter) {\n            let value = uniforms[name];\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (typeof value === 'string' && sources) {\n                setter.setter(sources[value]);\n            }\n            else {\n                setter.setter(value);\n            }\n        }\n    }\n}\nfunction renderLayer(gl, layer, uniforms, target, source) {\n    if (target) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, target.antialias ? target.antiAliasFrameBuffer : target.frameBuffer);\n        gl.viewport(0, 0, target.width, target.height);\n    }\n    else {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    }\n    if (layer._data.drawSettings) {\n        applyDrawSettings(gl, layer._data.drawSettings);\n    }\n    for (const sketch of layer.sketches) {\n        draw(gl, sketch, uniforms, source);\n    }\n    if (target && target.antialias) {\n        const gl2 = gl;\n        // \"blit\" the cube into the color buffer, which adds antialiasing\n        gl.bindFramebuffer(gl2.READ_FRAMEBUFFER, target.antiAliasFrameBuffer);\n        gl.bindFramebuffer(gl2.DRAW_FRAMEBUFFER, target.frameBuffer);\n        gl2.clearBufferfv(gl2.COLOR, 0, [1.0, 1.0, 1.0, 1.0]);\n        gl2.blitFramebuffer(0, 0, target.width, target.height, 0, 0, target.width, target.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n    }\n    if (layer._data.drawSettings) {\n        revertDrawSettings(gl, layer._data.drawSettings);\n    }\n}\nfunction renderFrame(gl, frame) {\n    for (let i = 0; i < frame.layers.length; i++) {\n        const layer = frame.layers[i];\n        const layerPasses = layer._uniforms.length || 1;\n        for (let j = 0; j < layerPasses; j++) {\n            const target = frame._targets[0];\n            const sources = i + j === 0 && frame._textures.length\n                ? frame._textures\n                : frame._targets[1] && frame._targets[1].textures;\n            renderLayer(gl, layer, layer._uniforms[j], target, sources);\n            frame._swapTargets();\n        }\n    }\n}\n//# sourceMappingURL=painter.js.map","export function makeClear(gl, ...clearArray) {\n    return clearArray.reduce((res, item) => res | gl[item.toUpperCase() + '_BUFFER_BIT'], 0);\n}\nexport function setBlendFunc(gl, blendOpts) {\n    gl.blendFunc.apply(gl, blendOpts.map(opt => gl[opt.toUpperCase()]));\n}\n/**\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] optional `window.devicePixelRatio`.\n * @return {boolean} true if the canvas was resized.\n */\nexport function resizeCanvas(canvas, multiplier = 1) {\n    let width = canvas.width;\n    let height = canvas.height;\n    if ('clientWidth' in canvas) {\n        const rect = canvas.getBoundingClientRect();\n        width = (rect.width * multiplier) | 0;\n        height = (rect.height * multiplier) | 0;\n    }\n    if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=context.js.map","export const Buttons = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n};\nexport function pointer(opts, callback) {\n    const cb = callback || opts;\n    const { element = document, enableRightButton, holdDelay = 400, holdRadius = 5, } = opts;\n    const state = {\n        pressed: {},\n        drag: { x: 0, y: 0, dX: 0, dY: 0, xMax: 0, yMax: 0 },\n        dragging: false,\n        holding: false,\n    };\n    let x = 0, y = 0, oX = 0, oY = 0, timeout = null;\n    function onPointerDown(e) {\n        if (e.isPrimary) {\n            state.pressed[e.button] = e;\n            x = oX = e.clientX;\n            y = oY = e.clientY;\n            state.dragging = true;\n            timeout != null && clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                if (state.drag.xMax < holdRadius && state.drag.yMax < holdRadius) {\n                    state.holding = true;\n                    cb(state);\n                }\n            }, holdDelay);\n        }\n        else {\n            state.pressed[Buttons.RIGHT] = e;\n        }\n        cb(state);\n    }\n    function onPointerUp(_e) {\n        state.pressed = {};\n        delete state.drag.event;\n        state.drag.x = 0;\n        state.drag.y = 0;\n        state.drag.dX = 0;\n        state.drag.dY = 0;\n        state.drag.xMax = 0;\n        state.drag.yMax = 0;\n        state.dragging = false;\n        state.holding = false;\n        timeout != null && clearTimeout(timeout);\n        timeout = null;\n        cb(state);\n    }\n    function onPointerMove(e) {\n        if (state.dragging && e.isPrimary) {\n            state.drag.event = e;\n            state.drag.x = x - e.clientX;\n            state.drag.y = y - e.clientY;\n            state.drag.dX = oX - e.clientX;\n            state.drag.dY = oY - e.clientY;\n            state.drag.xMax = Math.max(Math.abs(state.drag.x), state.drag.xMax);\n            state.drag.yMax = Math.max(Math.abs(state.drag.y), state.drag.yMax);\n            oX = e.clientX;\n            oY = e.clientY;\n            cb(state);\n        }\n    }\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    element.addEventListener('pointerdown', onPointerDown);\n    document.addEventListener('pointermove', onPointerMove);\n    document.addEventListener('pointerup', onPointerUp);\n    document.addEventListener('pointerleave', onPointerUp);\n    document.addEventListener('pointercancel', onPointerUp);\n    if (enableRightButton) {\n        element.addEventListener('contextmenu', preventDefault);\n    }\n    cb(state);\n    return function destroy() {\n        element.removeEventListener('pointerdown', onPointerDown);\n        document.removeEventListener('pointermove', onPointerMove);\n        document.removeEventListener('pointerup', onPointerUp);\n        document.removeEventListener('pointerleave', onPointerUp);\n        document.removeEventListener('pointercancel', onPointerUp);\n        if (enableRightButton) {\n            element.removeEventListener('contextmenu', preventDefault);\n        }\n    };\n}\nexport function pointerObserver(opts = {}) {\n    const observer = {\n        Buttons,\n        state: {},\n        destroy: () => { },\n    };\n    function callback(state) {\n        observer.state = state;\n    }\n    observer.destroy = pointer(opts, callback);\n    return observer;\n}\n//# sourceMappingURL=pointer.js.map","import { once } from './scheduler'\nimport { windowSize } from 'tvs-libs/dist/events/dom'\nimport { keyboard, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { deepOverride } from 'tvs-libs/dist/utils/object'\nimport { GL, PainterOptions } from 'tvs-painter'\nimport { Form } from 'tvs-painter/dist/form'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport { Layer } from 'tvs-painter/dist/layer'\nimport { Painter } from 'tvs-painter/dist/painter'\nimport { Shade } from 'tvs-painter/dist/shade'\nimport { Sketch } from 'tvs-painter/dist/sketch'\nimport { PointerState, pointer } from 'tvs-libs/dist/events/pointer'\nimport { getPackedSettings } from 'http2'\n\n// === Painter ===\n\nlet currentCanvas: HTMLCanvasElement\nlet painter: Painter\n\nconst forms: { [id: string]: Form } = {}\nfunction getForm(id: string) {\n\treturn forms[id] || (forms[id] = painter.createForm('Form_' + id))\n}\n\nconst shades: { [id: string]: Shade } = {}\nfunction getShade(id: string) {\n\treturn shades[id] || (shades[id] = painter.createShade('Shade_' + id))\n}\n\nconst sketches: { [id: string]: Sketch } = {}\nfunction getSketch(id: string) {\n\treturn sketches[id] || (sketches[id] = painter.createSketch('Sketch_' + id))\n}\n\nconst layers: { [id: string]: Layer } = {}\nfunction getLayer(id: string) {\n\treturn layers[id] || (layers[id] = painter.createLayer('Layer_' + id))\n}\n\nconst frames: { [id: string]: Frame } = {}\nfunction getFrame(id: string) {\n\treturn frames[id] || (frames[id] = painter.createFrame('Frame_' + id))\n}\n\nconst effects: { [id: string]: Layer } = {}\nfunction getEffect(id: string) {\n\treturn effects[id] || (effects[id] = painter.createEffect('Effect_' + id))\n}\n\n// === State ===\n\nexport interface BaseState {\n\tdevice: {\n\t\ttpf: number\n\t\tcanvas: HTMLCanvasElement\n\t\tpointer: PointerState\n\t\tkeys: KeyState\n\t\tsizeMultiplier: number\n\t}\n}\n\nconst state: BaseState = {\n\tdevice: {\n\t\ttpf: 0,\n\t\tsizeMultiplier: 1,\n\t},\n} as BaseState\n;(window as any).state = state\n\n// === Events ===\n\ntype ActionHandler<S extends BaseState = BaseState> = (state: S) => void\n\nconst eventHandlers: {\n\t[event: string]: { [id: string]: ActionHandler<any> }\n} = {}\n\nexport const baseEvents = {\n\tFRAME: 'frame',\n\tRESIZE: 'resize',\n}\n\n// === Context ===\n\nlet cancelWindow: () => void\nlet cancelPointer: () => void\nlet cancelKeys: () => void\n\nexport function getPainterContext<S extends BaseState>(\n\tcanvas: HTMLCanvasElement,\n\topts?: PainterOptions,\n): PainterContext<S> {\n\tif (canvas !== currentCanvas) {\n\t\tcurrentCanvas = canvas\n\n\t\tpainter = new Painter(canvas, opts)\n\n\t\tstate.device.canvas = canvas\n\n\t\tcancelWindow && cancelWindow()\n\t\tcancelPointer && cancelPointer()\n\t\tcancelKeys && cancelKeys()\n\n\t\tcancelWindow = windowSize(() =>\n\t\t\tonce(() => {\n\t\t\t\tpainter.sizeMultiplier = state.device.sizeMultiplier\n\t\t\t\tpainter.resize()\n\t\t\t\temit(baseEvents.RESIZE)\n\t\t\t}, 'resize'),\n\t\t)\n\n\t\tcancelPointer = pointer(\n\t\t\t{\n\t\t\t\telement: canvas,\n\t\t\t\tenableRightButton: true,\n\t\t\t\tholdRadius: 7,\n\t\t\t\tholdDelay: 250,\n\t\t\t},\n\t\t\t(m) => (state.device.pointer = m),\n\t\t)\n\n\t\tcancelKeys = keyboard((k) => (state.device.keys = k))\n\t}\n\n\treturn {\n\t\tpainter,\n\t\tgl: painter.gl,\n\t\tgetForm,\n\t\tgetShade,\n\t\tgetSketch,\n\t\tgetLayer,\n\t\tgetFrame,\n\t\tgetEffect,\n\n\t\tstate: state as S,\n\n\t\tget,\n\t\tset,\n\t\tlisten,\n\t\temit,\n\t}\n\n\tfunction get<K extends keyof S = keyof S>(prop: K): S[K] {\n\t\treturn (state as S)[prop]\n\t}\n\n\tfunction set<K extends keyof S = keyof S>(\n\t\tkey: K,\n\t\tval: S[K],\n\t\topts?: { reset: any },\n\t) {\n\t\tconst s = state as S\n\t\tif (s[key]) {\n\t\t\tconst reset = opts && opts.reset\n\t\t\tif (reset !== true) {\n\t\t\t\tval = deepOverride(val, s[key], { ignore: reset })\n\t\t\t}\n\t\t}\n\t\ts[key] = val\n\t}\n\n\tfunction listen(id: string, event: string, s: ActionHandler<S>) {\n\t\tif (!eventHandlers[event]) eventHandlers[event] = {}\n\t\teventHandlers[event][id] = s\n\t}\n\n\tfunction emit(event: string) {\n\t\tconst e = eventHandlers[event]\n\t\tif (e)\n\t\t\tfor (const id in e) {\n\t\t\t\te[id](state as S)\n\t\t\t}\n\t}\n}\n\nexport interface PainterContext<S extends BaseState = BaseState> {\n\tpainter: Painter\n\tgl: GL\n\tgetForm: typeof getForm\n\tgetShade: typeof getShade\n\tgetSketch: typeof getSketch\n\tgetLayer: typeof getLayer\n\tgetFrame: typeof getFrame\n\tgetEffect: typeof getEffect\n\tstate: S\n\tget<K extends keyof S = keyof S>(prop: K): S[K]\n\tset<K extends keyof S = keyof S>(\n\t\tkey: K,\n\t\tval: S[K],\n\t\topts?: { reset: any },\n\t): void\n\tlisten(id: string, event: string, s: ActionHandler<S>): void\n\temit(event: string): void\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { baseEvents, getPainterContext } from '../shared-utils/painterState'\nimport { Ground } from './state/ground'\nimport { Screens } from './state/screens'\nimport { PerspectiveViewportState } from '../shared-utils/vr/perspectiveViewport'\n\nexport interface State extends PerspectiveViewportState {\n\tground: Ground\n\tscreens: Screens\n}\n\nexport const canvas = document.getElementById('canvas') as HTMLCanvasElement\n\nexport const Q = getPainterContext<State>(canvas)\n\nexport const getCanvasSize = () => [canvas.width, canvas.height]\n\nexport const events = {\n\t...baseEvents,\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function windowSize(callback) {\n    function resize() {\n        callback({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    }\n    window.addEventListener('resize', resize);\n    resize();\n    return function stop() {\n        window.removeEventListener('resize', resize);\n    };\n}\nexport function windowSizeObserver() {\n    const state = {\n        size: { width: 0, height: 0 },\n    };\n    const destroy = windowSize(s => (state.size = s));\n    return { state, destroy };\n}\n//# sourceMappingURL=dom.js.map","import { mat4, vec3 } from 'gl-matrix'\nimport * as geo from 'tvs-libs/dist/math/geometry'\nimport { Q, State } from '../context'\n\nexport class Ground {\n\tposition: vec3 = [0, -3.6, 0]\n\tnormal = [0, 1, 0]\n\tscale = 1000\n\ttransform = mat4.create()\n\tplaneEquation!: number[]\n\tmirrorMatrix!: number[]\n\tgroundMirrorView = mat4.create()\n\n\tconstructor() {\n\t\tthis.update()\n\t}\n\n\tupdate() {\n\t\tmat4.fromTranslation(this.transform, this.position)\n\t\tmat4.rotateX(this.transform, this.transform, Math.PI / 2)\n\t\tmat4.scale(this.transform, this.transform, [\n\t\t\tthis.scale,\n\t\t\tthis.scale,\n\t\t\tthis.scale,\n\t\t])\n\n\t\tthis.planeEquation = geo.planeFromNormalAndCoplanarPoint(\n\t\t\tthis.normal,\n\t\t\tthis.position,\n\t\t)\n\t\tthis.mirrorMatrix = geo.mirrorMatrixFromPlane(this.planeEquation)\n\t}\n}\n\nQ.set('ground', new Ground(), {\n\treset: { transform: true, mirrorMatrix: true },\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { cross, dot, normalize, sub } from './vectors';\nexport function planeFromNormalAndCoplanarPoint(n, point) {\n    const d = dot(n, point);\n    return [n[0], n[1], n[2], -d];\n}\nexport function planeFromThreeCoplanarPoints(p1, p2, p3) {\n    return planeFromNormalAndCoplanarPoint(normalFromThreeCoplanarPoints(p1, p2, p3), p1);\n}\nexport function normalFromThreeCoplanarPoints(p1, p2, p3) {\n    return normalize(cross(sub(p3, p2), sub(p1, p2)));\n}\n/*            | 1-2Nx2   -2NxNy  -2NxNz  -2NxD |\nMreflection = |  -2NxNy 1-2Ny2   -2NyNz  -2NyD |\n              |  -2NxNz  -2NyNz 1-2Nz2   -2NzD |\n              |    0       0       0       1   |\nhttp://khayyam.kaplinski.com/2011/09/reflective-water-with-glsl-part-i.html\n\n              mat.m._00 = 1-2*a*a;\tmat.m._01 = -2*a*b;\tmat.m._02 = -2*a*c;\tmat.m._03 = -2*a*d;\n              mat.m._10 = -2*a*b; mat.m._11 = 1-2*b*b;\tmat.m._12 = -2*b*c;\tmat.m._13 = -2*b*d;\n              mat.m._20 = -2*a*c;\tmat.m._21 = -2*b*c;\tmat.m._22 = 1-2*c*c;\tmat.m._23 = -2*c*d;\n              mat.m._30 = 0.0f;\tmat.m._31 = 0.0f;\tmat.m._32 = 0.0f;\tmat.m._33 = 1.0f;\nhttps://www.opengl.org/discussion_boards/showthread.php/147784-Mirror-Matrices\n*/\nexport function mirrorMatrixFromPlane(plane) {\n    const [a, b, c, d] = plane;\n    // prettier-ignore\n    return [\n        1 - 2 * a * a, -2 * a * b, -2 * a * c, 0,\n        -2 * a * b, 1 - 2 * b * b, -2 * b * c, 0,\n        -2 * a * c, -2 * b * c, 1 - 2 * c * c, 0,\n        -2 * a * d, -2 * b * d, -2 * c * d, 1,\n    ];\n}\nexport function getYawQuat(rotYAngle) {\n    rotYAngle *= 0.5;\n    return [0, Math.sin(rotYAngle), 0, Math.cos(rotYAngle)];\n}\nexport function getPitchQuat(rotXAngle) {\n    rotXAngle *= 0.5;\n    return [Math.sin(rotXAngle), 0, 0, Math.cos(rotXAngle)];\n}\nexport function getRollQuat(rotZAngle) {\n    rotZAngle *= 0.5;\n    return [0, 0, Math.sin(rotZAngle), Math.cos(rotZAngle)];\n}\n//# sourceMappingURL=geometry.js.map","import { equalArray } from '../utils/predicates';\nexport function vec(v) {\n    if (typeof v === 'number') {\n        return new Float32Array(v);\n    }\n    return new Float32Array(v);\n}\nexport function add(vec1, vec2, res = []) {\n    for (let i = 0; i < vec1.length; i++) {\n        res[i] = vec1[i] + vec2[i];\n    }\n    return res;\n}\nexport function sub(vec1, vec2, res = []) {\n    for (let i = 0; i < vec1.length; i++) {\n        res[i] = vec1[i] - vec2[i];\n    }\n    return res;\n}\nexport function mul(scalar, vec, res = []) {\n    for (let i = 0; i < vec.length; i++) {\n        res[i] = vec[i] * scalar;\n    }\n    return res;\n}\nexport function div(scalar, vec, res = []) {\n    for (let i = 0; i < vec.length; i++) {\n        res[i] = vec[i] / scalar;\n    }\n    return res;\n}\nexport function length(vec) {\n    let sum = 0;\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < vec.length; i++) {\n        const val = vec[i];\n        sum += val * val;\n    }\n    return Math.sqrt(sum);\n}\nexport function normalize(vec, res = []) {\n    return div(length(vec), vec, res);\n}\nexport function limit(maxLength, vec) {\n    const l = length(vec);\n    if (maxLength < l) {\n        return mul(maxLength / l, vec);\n    }\n    else {\n        return vec;\n    }\n}\nexport function dot(v1, v2) {\n    let d = 0;\n    for (let i = 0; i < v1.length; i++) {\n        d += v1[i] * v2[i];\n    }\n    return d;\n}\nexport function cross(v1, v2, res = []) {\n    res[0] = v1[1] * v2[2] - v1[2] * v2[1];\n    res[1] = v1[2] * v2[0] - v1[0] * v2[2];\n    res[2] = v1[0] * v2[1] - v1[1] * v2[0];\n    return res;\n}\nexport function cross2D(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\nexport const isEqual = equalArray;\n//# sourceMappingURL=vectors.js.map","import box from 'geo-3d-box'\nimport { plane } from 'tvs-painter/dist/utils/geometry/plane'\nimport { convertStackGLGeometry } from 'tvs-painter/dist/utils/stackgl'\nimport { Q } from './context'\n\nexport const planeSize = {\n\twidth: 10,\n\theight: 10,\n}\n\nexport const planeForm = Q.getForm('plane').update(\n\tplane(planeSize.width, planeSize.height, 5, 5),\n)\n\nconst size = [10, 14, 2]\nconst segments = [5, 7, 1]\n\nexport const boxForm = Q.getForm('box').update(\n\tconvertStackGLGeometry(box({ size, segments })),\n)\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function plane(width, height, widthSegments, heightSegments) {\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    const gridX = widthSegments || 1;\n    const gridY = heightSegments || 1;\n    const gridX1 = gridX + 1;\n    const gridY1 = gridY + 1;\n    const segmentWidth = width / gridX;\n    const segmentHeight = height / gridY;\n    const vertices = new Float32Array(gridX1 * gridY1 * 3);\n    const normals = new Float32Array(gridX1 * gridY1 * 3);\n    const uvs = new Float32Array(gridX1 * gridY1 * 2);\n    let iy, ix;\n    let offset = 0;\n    let offset2 = 0;\n    for (iy = 0; iy < gridY1; iy++) {\n        const y = iy * segmentHeight - heightHalf;\n        for (ix = 0; ix < gridX1; ix++) {\n            const x = ix * segmentWidth - widthHalf;\n            vertices[offset] = x;\n            vertices[offset + 1] = -y;\n            normals[offset + 2] = 1;\n            uvs[offset2] = ix / gridX;\n            uvs[offset2 + 1] = 1 - iy / gridY;\n            offset += 3;\n            offset2 += 2;\n        }\n    }\n    offset = 0;\n    const indices = new (vertices.length / 3 > 65535 ? Uint32Array : Uint16Array)(gridX * gridY * 6);\n    for (iy = 0; iy < gridY; iy++) {\n        for (ix = 0; ix < gridX; ix++) {\n            const a = ix + gridX1 * iy;\n            const b = ix + gridX1 * (iy + 1);\n            const c = ix + 1 + gridX1 * (iy + 1);\n            const d = ix + 1 + gridX1 * iy;\n            indices[offset] = a;\n            indices[offset + 1] = b;\n            indices[offset + 2] = d;\n            indices[offset + 3] = b;\n            indices[offset + 4] = c;\n            indices[offset + 5] = d;\n            offset += 6;\n        }\n    }\n    return {\n        attribs: {\n            position: {\n                buffer: vertices,\n            },\n            normal: {\n                buffer: normals,\n            },\n            uv: {\n                buffer: uvs,\n            },\n        },\n        elements: {\n            buffer: indices,\n        },\n        drawType: 'TRIANGLES',\n        itemCount: indices.length,\n    };\n}\n//# sourceMappingURL=plane.js.map","import { flatten } from 'tvs-libs/dist/utils/sequence';\nimport * as constants from '../contants';\nexport const STACK_GL_GEOMETRY_PROP_POSITION = 'positions';\nexport const STACK_GL_GEOMETRY_PROP_NORMAL = 'normals';\nexport const STACK_GL_GEOMETRY_PROP_UV = 'uvs';\nexport const STACK_GL_GEOMETRY_PROP_ELEMENTS = 'cells';\nexport function convertStackGLGeometry(stackglGeometry) {\n    const geometry = {\n        drawType: 'TRIANGLES',\n        attribs: {},\n        itemCount: 0,\n    };\n    for (const prop in stackglGeometry) {\n        const arr = stackglGeometry[prop];\n        if (prop === STACK_GL_GEOMETRY_PROP_ELEMENTS) {\n            const buffer = new (arr.length > 65535 ? Uint32Array : Uint16Array)(flatten(arr));\n            Object.assign(geometry, {\n                elements: { buffer },\n                itemCount: buffer.length,\n            });\n        }\n        else if (prop === STACK_GL_GEOMETRY_PROP_POSITION) {\n            geometry.attribs[constants.GEOMETRY_PROP_POSITION] = {\n                buffer: new Float32Array(flatten(arr)),\n            };\n        }\n        else if (prop === STACK_GL_GEOMETRY_PROP_NORMAL) {\n            geometry.attribs[constants.GEOMETRY_PROP_NORMAL] = {\n                buffer: new Float32Array(flatten(arr)),\n            };\n        }\n        else if (prop === STACK_GL_GEOMETRY_PROP_UV) {\n            geometry.attribs[constants.GEOMETRY_PROP_UV] = {\n                buffer: new Float32Array(flatten(arr)),\n            };\n        }\n        else {\n            geometry.attribs[prop] = { buffer: new Float32Array(flatten(arr)) };\n        }\n    }\n    return geometry;\n}\n//# sourceMappingURL=stackgl.js.map","export const names = [\n\t'tworooms',\n\t'behindglass',\n\t'nanofuzz',\n\t'balloon',\n\t'threescreens'\n]\n\nconst videosUrl =\n\tprocess.env.NODE_ENV === 'production'\n\t\t? '//s3.eu-central-1.amazonaws.com/trivialspace.net/tvs1/'\n\t\t: 'videos/'\n\nconst loadTimeout = 60000\n\nfunction createVideo(src: string) {\n\tconst video = document.createElement('video')\n\tvideo.crossOrigin = 'anonymous'\n\tvideo.loop = true\n\t;(video as any).playsinline = true\n\tvideo.autoplay\n\n\tconst source1 = document.createElement('source')\n\tsource1.src = src + '.webm'\n\tsource1.type = 'video/webm'\n\n\tconst source2 = document.createElement('source')\n\tsource2.src = src + '.mp4'\n\tsource2.type = 'video/mp4'\n\n\tvideo.appendChild(source1)\n\tvideo.appendChild(source2)\n\treturn video\n}\n\nexport const videos = Promise.all(\n\tnames\n\t\t.map(name => createVideo(videosUrl + name))\n\t\t.map(\n\t\t\tv =>\n\t\t\t\tnew Promise<HTMLVideoElement>((res, rej) => {\n\t\t\t\t\tconst t = setTimeout(() => {\n\t\t\t\t\t\tconsole.log('timeout', v)\n\t\t\t\t\t\trej('Video timeout ' + v)\n\t\t\t\t\t}, loadTimeout)\n\n\t\t\t\t\tv.addEventListener('canplay', () => {\n\t\t\t\t\t\tres(v)\n\t\t\t\t\t\tclearTimeout(t)\n\t\t\t\t\t\tconsole.log('loaded', v)\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t)\n)\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { LayerData } from 'tvs-painter'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport { PainterContext } from '../../painterState'\nimport frag from './blur_with_alpha.glsl'\n\ninterface BlurOpts {\n\tstrength: number\n\tsize?: number[] | (() => number[])\n\tstrengthOffset?: number | (() => number)\n\tblurRatioVertical?: number\n\tscaleFactor?: number\n\tlayerOpts?: LayerData\n\tstartFrame?: Frame\n}\n\nexport function getBlurByAlphaEffect(\n\tQ: PainterContext,\n\tid: string,\n\t{\n\t\tstrength,\n\t\tsize,\n\t\tlayerOpts,\n\t\tstartFrame: startLayer,\n\t\tstrengthOffset = 0,\n\t\tblurRatioVertical = 1,\n\t\tscaleFactor = 0.6,\n\t}: BlurOpts,\n) {\n\tconst passData: any[] = []\n\n\twhile (strength >= 1 / blurRatioVertical) {\n\t\tpassData.push({\n\t\t\tstrength,\n\t\t\tdirection: 0,\n\t\t\tsource: '0',\n\t\t})\n\t\tpassData.push({\n\t\t\tstrength: strength * blurRatioVertical,\n\t\t\tdirection: 1,\n\t\t\tsource: '0',\n\t\t})\n\t\tstrength *= scaleFactor\n\t}\n\n\tif (startLayer) {\n\t\tpassData[0].source = () => startLayer.image()\n\t}\n\n\treturn Q.getEffect(id).update({\n\t\t...layerOpts,\n\t\tfrag,\n\t\tdrawSettings: {\n\t\t\tdisable: [Q.gl.DEPTH_TEST],\n\t\t},\n\t\tuniforms: passData.map((data) => ({\n\t\t\t...data,\n\t\t\tblurRatioVertical,\n\t\t\tstrengthOffset,\n\t\t\tsize: size || (() => [Q.gl.canvas.width, Q.gl.canvas.height]),\n\t\t})),\n\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export default \"precision mediump float;\\n#define GLSLIFY 1\\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n  vec4 color = vec4(0.0);\\n  vec2 off1 = vec2(1.3846153846) * direction;\\n  vec2 off2 = vec2(3.2307692308) * direction;\\n  color += texture2D(image, uv) * 0.2270270270;\\n  color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\\n  color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\\n  color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\\n  color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\\n  return color;\\n}\\n\\nuniform sampler2D source;\\nuniform vec2 size;\\nuniform float direction;\\nuniform float strength;\\nuniform float strengthOffset;\\n\\nvarying vec2 coords;\\n\\nvoid main() {\\n\\tvec2 uv = coords;\\n\\tvec4 refl = texture2D(source, uv);\\n\\tfloat dist = refl.a * strength + strengthOffset;\\n\\n\\tif (direction == 0.0) {\\n\\t\\tgl_FragColor = blur9(source, uv, size, vec2(dist, 0));\\n\\t} else {\\n\\t\\tgl_FragColor = blur9(source, uv, size, vec2(0, dist));\\n\\t}\\n}\\n\";","import { mat4, vec3 } from 'gl-matrix'\nimport * as coords from 'tvs-libs/dist/math/coords'\nimport { mul } from 'tvs-libs/dist/math/vectors'\nimport { flatten, zip } from 'tvs-libs/dist/utils/sequence'\nimport { Q } from '../context'\nimport { planeSize } from '../geometries'\nimport * as videos from './videos'\n\nexport class Screens {\n\tradius = 25\n\theight = 2\n\tscale = [1.6, 1, 1]\n\trotations = videos.names.map(\n\t\t(_, i) => (Math.PI * 2 * i) / videos.names.length,\n\t)\n\tpositions!: vec3[]\n\tscreenTransforms!: mat4[]\n\tpedestalTransforms!: mat4[]\n\tlights!: number[]\n\tlightSize!: [number, number]\n\n\tconstructor() {\n\t\tthis.update()\n\t}\n\n\tupdate() {\n\t\tthis.positions = this.rotations.map((rot) => {\n\t\t\tconst phi = -rot - Math.PI / 2\n\t\t\tconst [x, z] = coords.polarToCartesian2D([this.radius, phi])\n\t\t\treturn [x, this.height, z]\n\t\t})\n\n\t\tthis.screenTransforms = zip(\n\t\t\t(rot, pos) => {\n\t\t\t\tconst t = mat4.fromTranslation(mat4.create(), pos)\n\t\t\t\tmat4.rotateY(t, t, rot)\n\t\t\t\tmat4.scale(t, t, this.scale as vec3)\n\t\t\t\treturn t\n\t\t\t},\n\t\t\tthis.rotations,\n\t\t\tthis.positions,\n\t\t)\n\n\t\tthis.pedestalTransforms = zip(\n\t\t\t(rot, pos) => {\n\t\t\t\tconst p = mul(1.045, pos) as vec3\n\t\t\t\tp[1] -= 2\n\n\t\t\t\tconst t = mat4.fromTranslation(mat4.create(), p)\n\t\t\t\tmat4.rotateY(t, t, rot)\n\t\t\t\tmat4.scale(t, t, this.scale.map((v) => v * 1.03) as vec3)\n\t\t\t\treturn t\n\t\t\t},\n\t\t\tthis.rotations,\n\t\t\tthis.positions,\n\t\t)\n\n\t\tthis.lights = flatten(\n\t\t\tzip((p, r) => [...p, r], this.positions, this.rotations),\n\t\t)\n\n\t\tthis.lightSize = [\n\t\t\tplaneSize.width * this.scale[0],\n\t\t\tplaneSize.height * this.scale[1],\n\t\t]\n\t}\n}\n\nQ.set('screens', new Screens())\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { length } from './vectors';\n// === polar coordinates ===\n/**\n * @param radius distance from origin\n * @param angle counter clockwise\n */\nexport function polarCoord(radius, angle) {\n    return [radius, angle];\n}\nexport function cartesianToPolar2D(v) {\n    return polarCoord(length(v), Math.atan2(v[1], v[0]));\n}\nexport function polarToCartesian2D([r, phi]) {\n    return [r * Math.cos(phi), r * Math.sin(phi)];\n}\n// === sphere coordinates ===\n/**\n * Sphere coordinate vector.\n *\n * Angles rotate counterclockwise. Sphere coordinate [1, 0, 0] corresponds to cartesian coord [0, 0, 1].\n *\n * @param radius distance from origin\n * @param angleY polar angle, rotating around y axis, 0 - PI (0° - 180°)\n * @param angleZ azimuth angle, rotating around z axis, 0 - 2*PI (0° - 360°)\n */\nexport function sphereCoord(radius, angleY, angleZ) {\n    return [radius, angleY, angleZ];\n}\nexport function cartesianToSphere3D([x, y, z]) {\n    const radius = Math.sqrt(x * x + y * y + z * z);\n    if (radius === 0) {\n        return sphereCoord(0, 0, 0);\n    }\n    let azimuthAngleZ = x === 0 ? (y >= 0 ? 0 : Math.PI) : Math.atan2(y, x);\n    let polarAngleY = Math.acos(z / radius);\n    if (azimuthAngleZ < 0)\n        azimuthAngleZ += Math.PI * 2;\n    return sphereCoord(radius, polarAngleY, azimuthAngleZ);\n}\nexport function sphereToCartesian3D(vec) {\n    const radius = vec[0], polar = vec[1], azimuth = vec[2];\n    if (radius === 0) {\n        return [0, 0, 0];\n    }\n    return [\n        radius * Math.sin(polar) * Math.cos(azimuth),\n        radius * Math.sin(polar) * Math.sin(azimuth),\n        radius * Math.cos(polar),\n    ];\n}\n//# sourceMappingURL=coords.js.map","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D reflection;\\nuniform sampler2D lightTex[5];\\nuniform vec4 lights[5];\\nuniform vec2 size;\\nuniform vec2 lightSize;\\nvarying vec3 V;\\n\\nconst vec3 up = vec3(0.0, 1.0, 0.0);\\n\\nvec3 diffuseAreaLight(sampler2D tex, vec3 normal, vec3 pos, vec3 V) {\\n\\tfloat width = lightSize.x / 2.0;\\n\\tfloat height = lightSize.y / 2.0;\\n\\n\\tvec3 right = cross(up, normal);\\n\\n\\t/*project onto plane and calculate direction from center to the projection*/\\n\\tfloat dis = dot(normal, V - pos);\\n\\tvec3 projection = V - dis * normal;\\n\\tvec3 dir = projection - pos;\\n\\n\\t/*calculate distance from area*/\\n\\tvec2 diagonal = vec2(dot(dir, right), dot(dir, up));\\n\\tvec2 nearest2D = vec2(clamp(diagonal.x, -width, width), clamp(diagonal.y, -height, height));\\n\\tvec3 nearestPointInside = pos + (right * nearest2D.x + up * nearest2D.y);\\n\\n\\tvec3 L = normalize(nearestPointInside - V);\\n\\n\\tfloat nDotL = dot(-normal, L);\\n\\n\\tfloat d = distance(V, nearestPointInside); //real distance to area rectangle\\n\\n\\tvec3 diff = vec3(0.0);\\n\\n\\tvec2 co = ((diagonal.xy / (d + 1.0)) + vec2(width, height)) / lightSize;\\n\\tvec3 texColor = texture2D(tex, co).rgb;\\n\\n\\tif (nDotL > 0.0) {\\n\\t\\t//co.x = 1.0 - co.x;\\n\\t\\tdiff = texColor;\\n\\n\\t\\tfloat NDotL = clamp(dot(-up, L), 0.0, 1.0);\\n\\t\\tnDotL *= NDotL * 0.5 + 0.5; //distribute over hemisphere, looks better. Should be dependant of area size.\\n\\n\\t\\tfloat attenuation = 1.0 / (1.0 + d);\\n\\n\\t\\tdiff *= nDotL * attenuation;\\n\\t}\\n\\n\\treturn diff;\\n}\\n\\nvec3 processLight(vec4 light, sampler2D tex) {\\n\\t\\tvec3 lightNormal = vec3(sin(light.a), 0, cos(light.a));\\n\\t\\tvec3 diffuse = diffuseAreaLight(tex, lightNormal, light.xyz, V);\\n\\t\\treturn pow(diffuse, vec3(0.57));\\n}\\n\\nvoid main() {\\n\\tfloat scale = (50.0 - length(V)) / 50.0;\\n\\tvec4 refl = texture2D(reflection, gl_FragCoord.xy / size);\\n\\tvec3 ground = vec3(0.0);\\n\\n\\tground += processLight(lights[0], lightTex[0]);\\n\\tground += processLight(lights[1], lightTex[1]);\\n\\tground += processLight(lights[2], lightTex[2]);\\n\\tground += processLight(lights[3], lightTex[3]);\\n\\tground += processLight(lights[4], lightTex[4]);\\n\\n\\tgl_FragColor = mix(vec4(ground, 1.0), vec4(refl.rgb, 1.0), refl / 2.0 + 0.25);\\n\\t// gl_FragColor = vec4(ground, 1.0);\\n}\\n\";","import { Q } from './context'\nimport groundFrag from './glsl/ground-frag.glsl'\nimport groundVert from './glsl/ground-vert.glsl'\nimport objectFrag from './glsl/object-frag.glsl'\nimport objectVert from './glsl/object-vert.glsl'\nimport screenFrag from './glsl/screen-frag.glsl'\nimport screenVert from './glsl/screen-vert.glsl'\n\nexport const groundShade = Q.getShade('ground').update({\n\tvert: groundVert,\n\tfrag: groundFrag,\n})\n\nexport const objectShade = Q.getShade('object').update({\n\tvert: objectVert,\n\tfrag: objectFrag,\n})\n\nexport const screenShade = Q.getShade('screen').update({\n\tvert: screenVert,\n\tfrag: screenFrag,\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\n\\nuniform mat4 transform;\\nuniform mat4 projection;\\nuniform mat4 view;\\n\\nvarying vec3 V;\\n\\nvoid main() {\\n\\tvec4 pos = transform * vec4(position, 1.0);\\n\\tV = pos.xyz;\\n\\tgl_Position = projection * view * pos;\\n}\\n\";","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\n\\nuniform mat4 transform;\\nuniform mat4 projection;\\nuniform mat4 view;\\nuniform float groundHeight;\\n\\nvarying float dist;\\nvarying float height;\\n\\nvoid main() {\\n\\tvec4 pos = transform * vec4(position, 1.0);\\n\\tdist = length(pos.xyz);\\n\\theight = (pos.y - groundHeight) / 10.0;\\n\\tgl_Position = projection * view * pos;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform int withDistance;\\n\\nvarying float dist;\\nvarying float height;\\n\\nvoid main() {\\n\\tfloat scale = (50.0 - dist) / 50.0;\\n\\tif (withDistance == 0) {\\n\\t\\tgl_FragColor = vec4(vec3(scale * 0.6), 1.0);\\n\\t} else {\\n\\t\\tgl_FragColor = vec4(vec3(scale * 0.6), height);\\n\\t\\t// gl_FragColor = vec4(vec3(height), 1.0);\\n\\t}\\n}\\n\";","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\nattribute vec2 uv;\\nuniform float groundHeight;\\n\\nuniform mat4 transform;\\nuniform mat4 projection;\\nuniform mat4 view;\\n\\nvarying vec2 vUv;\\nvarying float height;\\n\\nvoid main() {\\n\\tvUv = uv;\\n\\tvec4 pos = transform * vec4(position, 1.0);\\n\\theight = (pos.y - groundHeight) / 10.0;\\n\\tgl_Position = projection * view * pos;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D video;\\nuniform int withDistance;\\n\\nvarying vec2 vUv;\\nvarying float height;\\n\\nvoid main() {\\n\\tvec4 tex = texture2D(video, vUv);\\n\\tif (withDistance == 0) {\\n\\t\\tgl_FragColor = vec4(tex.rgb, 1.0);\\n\\t} else {\\n\\t\\tgl_FragColor = vec4(tex.rgb, height);\\n\\t\\t// gl_FragColor = vec4(vec3(height), 1.0);\\n\\t}\\n}\\n\";","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import { mat4, vec3 } from 'gl-matrix'\nimport { Keys, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { Constructor } from 'tvs-libs/lib/oop/mixins'\nimport { PointerState, Buttons } from 'tvs-libs/dist/events/pointer'\n\nexport class Camera {\n\tposition: vec3 = [0, 0, 0]\n\trotationX = 0\n\trotationY = 0\n\trotationXMat = mat4.create()\n\trotationYMat = mat4.create()\n\tprojectionMat = mat4.create()\n\tviewMat = mat4.create()\n\tneedsUpdateView = true\n\n\tconstructor(props?: Partial<Camera>) {\n\t\tObject.assign(this, props)\n\t\tthis.updateRotationX()\n\t\tthis.updateRotationY()\n\t}\n\n\tupdateRotationX(amount: number = 0) {\n\t\tthis.rotationX += amount\n\t\tmat4.fromXRotation(this.rotationXMat, this.rotationX)\n\t\tthis.needsUpdateView = true\n\t}\n\n\tupdateRotationY(amount: number = 0) {\n\t\tthis.rotationY += amount\n\t\tmat4.fromYRotation(this.rotationYMat, this.rotationY)\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveForward(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[8],\n\t\t\tthis.rotationYMat[9],\n\t\t\tthis.rotationYMat[10],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, -dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveLeft(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[0],\n\t\t\tthis.rotationYMat[1],\n\t\t\tthis.rotationYMat[2],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, -dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveUp(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[4],\n\t\t\tthis.rotationYMat[5],\n\t\t\tthis.rotationYMat[6],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tupdate() {\n\t\tif (this.needsUpdateView) {\n\t\t\tmat4.fromTranslation(this.viewMat, this.position)\n\t\t\tmat4.multiply(this.viewMat, this.viewMat, this.rotationYMat)\n\t\t\tmat4.multiply(this.viewMat, this.viewMat, this.rotationXMat)\n\t\t\tmat4.invert(this.viewMat, this.viewMat)\n\t\t\tthis.needsUpdateView = false\n\t\t}\n\t}\n}\n\nexport class PerspectiveCamera extends Camera {\n\tfovy = Math.PI * 0.6\n\taspect = 1\n\tnear = 0.1\n\tfar = 1000\n\tneedsUpdateProjection = true\n\n\tconstructor(props?: Partial<PerspectiveCamera>) {\n\t\tsuper(props)\n\t\tObject.assign(this, props)\n\t\tthis.update()\n\t}\n\n\tupdate() {\n\t\tsuper.update()\n\n\t\tif (this.needsUpdateProjection) {\n\t\t\tmat4.perspective(\n\t\t\t\tthis.projectionMat,\n\t\t\t\tthis.fovy,\n\t\t\t\tthis.aspect,\n\t\t\t\tthis.near,\n\t\t\t\tthis.far,\n\t\t\t)\n\t\t\tthis.needsUpdateProjection = false\n\t\t}\n\t}\n}\n\nexport function WithInputNavigation<T extends Constructor<Camera>>(Cam: T) {\n\treturn class extends Cam {\n\t\tupdatePosFromInput(speed: number, keys?: KeyState, pointer?: PointerState) {\n\t\t\tif (!(keys || pointer)) return\n\t\t\tif (\n\t\t\t\tkeys?.[Keys.UP] ||\n\t\t\t\tkeys?.[Keys.W] ||\n\t\t\t\t(pointer?.holding && !pointer.pressed[Buttons.RIGHT])\n\t\t\t) {\n\t\t\t\tthis.moveForward(speed)\n\t\t\t}\n\t\t\tif (\n\t\t\t\tkeys?.[Keys.DOWN] ||\n\t\t\t\tkeys?.[Keys.S] ||\n\t\t\t\tpointer?.pressed[Buttons.RIGHT]\n\t\t\t) {\n\t\t\t\tthis.moveForward(-speed)\n\t\t\t}\n\t\t\tif (keys?.[Keys.LEFT] || keys?.[Keys.A]) {\n\t\t\t\tthis.moveLeft(speed)\n\t\t\t}\n\t\t\tif (keys?.[Keys.RIGHT] || keys?.[Keys.D]) {\n\t\t\t\tthis.moveLeft(-speed)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function WithInputRotation<T extends Constructor<Camera>>(Cam: T) {\n\treturn class extends Cam {\n\t\t_oldMouse = { x: 0, y: 0 }\n\n\t\tupdateRotFromPointer(\n\t\t\tspeed: number,\n\t\t\tm: { dragging: boolean; drag: { x: number; y: number } },\n\t\t) {\n\t\t\tif (m.dragging) {\n\t\t\t\tconst deltaX = this._oldMouse.x - m.drag.x\n\t\t\t\tconst deltaY = this._oldMouse.y - m.drag.y\n\t\t\t\tthis._oldMouse.x = m.drag.x\n\t\t\t\tthis._oldMouse.y = m.drag.y\n\t\t\t\tdeltaY && this.updateRotationX(deltaY * speed)\n\t\t\t\tdeltaX && this.updateRotationY(deltaX * speed)\n\t\t\t} else {\n\t\t\t\tthis._oldMouse.x && (this._oldMouse.x = 0)\n\t\t\t\tthis._oldMouse.y && (this._oldMouse.y = 0)\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { BaseState, baseEvents, PainterContext } from '../painterState'\nimport {\n\tPerspectiveCamera,\n\tWithInputNavigation,\n\tWithInputRotation,\n} from './camera'\n\nexport interface PerspectiveViewportState extends BaseState {\n\tviewPort: ViewPort\n}\n\nexport class ViewPort {\n\tmoveSpeed = 2\n\tlookSpeed = 2\n\tcamera = new (WithInputNavigation(WithInputRotation(PerspectiveCamera)))({\n\t\tfovy: Math.PI * 0.3,\n\t\tposition: [0, 0, 5],\n\t})\n}\n\ninterface InitOpts {\n\tmoveSpeed?: number\n\tlookSpeed?: number\n\tfovy?: number\n\tposition?: [number, number, number]\n\trotationY?: number\n\trotationX?: number\n}\n\nexport function initPerspectiveViewport(\n\tctx: PainterContext<PerspectiveViewportState>,\n\t{ lookSpeed, moveSpeed, position, rotationY, rotationX, fovy }: InitOpts = {},\n) {\n\tconst v = new ViewPort()\n\tif (lookSpeed) {\n\t\tv.lookSpeed = lookSpeed\n\t}\n\tif (moveSpeed) {\n\t\tv.moveSpeed = moveSpeed\n\t}\n\tif (fovy) {\n\t\tv.camera.fovy = fovy\n\t\tv.camera.needsUpdateProjection = true\n\t}\n\tif (position) {\n\t\tv.camera.position = position\n\t\tv.camera.needsUpdateView = true\n\t}\n\tif (rotationX) {\n\t\tv.camera.rotationX = rotationX\n\t\tv.camera.updateRotationX()\n\t}\n\tif (rotationY) {\n\t\tv.camera.rotationY = rotationY\n\t\tv.camera.updateRotationY()\n\t}\n\n\tctx.set('viewPort', v, {\n\t\treset: { moveSpeed: true, lookSpeed: true },\n\t})\n\n\tctx.listen('viewPort', baseEvents.FRAME, ({ device: d, viewPort: v }) => {\n\t\tconst tpf = d.tpf / 1000\n\n\t\tv.camera.updatePosFromInput(v.moveSpeed * tpf, d.keys, d.pointer)\n\n\t\tconst p = d.pointer\n\t\tconst dragInfo = {\n\t\t\tdragging: p.dragging,\n\t\t\tdrag: {\n\t\t\t\tx: (d.sizeMultiplier * p.drag.x) / d.canvas.width,\n\t\t\t\ty: (d.sizeMultiplier * p.drag.y) / d.canvas.height,\n\t\t\t},\n\t\t}\n\t\tv.camera.updateRotFromPointer(v.lookSpeed, dragInfo)\n\t\tv.camera.update()\n\t\treturn\n\t})\n\n\tctx.listen('viewPort', baseEvents.RESIZE, ({ device: d, viewPort: v }) => {\n\t\tv.camera.aspect = d.canvas.width / d.canvas.height\n\t\tv.camera.needsUpdateProjection = true\n\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { mat4 } from 'gl-matrix'\nimport { getBlurByAlphaEffect } from '../shared-utils/shaders/effects/blur'\nimport { zip } from 'tvs-libs/dist/utils/sequence'\nimport { TextureData } from 'tvs-painter'\nimport { makeClear } from 'tvs-painter/dist/utils/context'\nimport { events, getCanvasSize, Q } from './context'\nimport { boxForm, planeForm } from './geometries'\nimport { groundShade, objectShade, screenShade } from './shaders'\nimport * as videos from './state/videos'\nimport { initPerspectiveViewport } from '../shared-utils/vr/perspectiveViewport'\n\nconst { gl, state: s } = Q\n\ninitPerspectiveViewport(Q, {\n\tfovy: Math.PI * 0.4,\n\tlookSpeed: 2,\n})\n\n// Settings\n\nQ.painter.updateDrawSettings({\n\tclearColor: [0, 0, 0, 1],\n})\n\n// Textures\n\nexport const videoTextureData: TextureData = {\n\tflipY: true,\n\tminFilter: 'LINEAR',\n\twrap: 'CLAMP_TO_EDGE',\n}\n\nexport const videoTextures = videos.names.map((n) => Q.getFrame(n))\n\nconst reflSize = 256\nexport const videoLights = videoTextures.map((t, i) => {\n\tconst id = 'vref' + i\n\treturn Q.getFrame(id).update({\n\t\tbufferStructure: [\n\t\t\t{\n\t\t\t\tminFilter: 'LINEAR',\n\t\t\t\tmagFilter: 'LINEAR',\n\t\t\t},\n\t\t],\n\t\twidth: reflSize,\n\t\theight: reflSize,\n\t\tlayers: getBlurByAlphaEffect(Q, id, {\n\t\t\tstrength: 4,\n\t\t\tsize: [reflSize, reflSize],\n\t\t\tstartFrame: t,\n\t\t}),\n\t})\n})\n\n// Sketches\n\nconst groundSketch = Q.getSketch('ground').update({\n\tform: planeForm,\n\tshade: groundShade,\n\tuniforms: {\n\t\treflection: () => mirrorScene.image(),\n\t\ttransform: () => s.ground.transform,\n\t\tlights: () => s.screens.lights,\n\t\tlightSize: () => s.screens.lightSize,\n\t\tlightTex: () => videoLights.map((v) => v.image()),\n\t\tsize: getCanvasSize,\n\t},\n})\n\nconst screenSketch = Q.getSketch('screens').update({\n\tform: planeForm,\n\tshade: screenShade,\n\tuniforms: zip(\n\t\t(transform, tex) => ({\n\t\t\ttransform,\n\t\t\tvideo: () => tex.image(),\n\t\t}),\n\t\ts.screens.screenTransforms,\n\t\tvideoTextures,\n\t),\n})\n\nconst pedestalSketch = Q.getSketch('pedestals').update({\n\tform: boxForm,\n\tshade: objectShade,\n\tuniforms: s.screens.pedestalTransforms.map((transform) => ({\n\t\ttransform,\n\t})),\n})\n\n// Layers\n\nconst drawSettings = {\n\tclearBits: makeClear(gl, 'color', 'depth'),\n}\n\nconst sceneLayer = Q.getLayer('scene').update({\n\tsketches: [screenSketch, pedestalSketch, groundSketch],\n\tdrawSettings,\n\tuniforms: {\n\t\tview: () => s.viewPort.camera.viewMat,\n\t\tprojection: () => s.viewPort.camera.projectionMat,\n\t\twithDistance: 0,\n\t},\n})\n\nconst mirrorSceneLayer = Q.getLayer('mirrorScene').update({\n\tsketches: [screenSketch, pedestalSketch],\n\tdrawSettings,\n\tuniforms: {\n\t\tview: () =>\n\t\t\tmat4.multiply(\n\t\t\t\ts.ground.groundMirrorView,\n\t\t\t\ts.viewPort.camera.viewMat,\n\t\t\t\ts.ground.mirrorMatrix as any,\n\t\t\t),\n\t\tprojection: () => s.viewPort.camera.projectionMat,\n\t\twithDistance: 1,\n\t\tgroundHeight: () => s.ground.position[1],\n\t},\n})\n\nconst blurEffect = getBlurByAlphaEffect(Q, 'blur', {\n\tstrength: 4,\n\tstrengthOffset: 0.3,\n\tblurRatioVertical: 3,\n\tsize: [256, 256],\n})\n\nexport const mirrorScene = Q.getFrame('mirror').update({\n\tlayers: [mirrorSceneLayer, blurEffect],\n\twidth: 256,\n\theight: 256,\n\tbufferStructure: [\n\t\t{\n\t\t\tmagFilter: 'LINEAR',\n\t\t\tminFilter: 'LINEAR',\n\t\t},\n\t],\n})\n\nexport const scene = Q.getFrame('scene').update({\n\tlayers: sceneLayer,\n})\n\nQ.listen('renderer', events.RESIZE, () => {\n\tscene.update()\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import './state/ground'\nimport './state/screens'\n\nimport { repeat } from '../shared-utils/scheduler'\nimport { events, Q } from './context'\nimport {\n\tmirrorScene,\n\tscene,\n\tvideoLights,\n\tvideoTextureData,\n\tvideoTextures,\n} from './renderer'\nimport { videos } from './state/videos'\n\nconst d = Q.get('device')\n// d.sizeMultiplier = 1.5\n\nvideos.then((vs) => {\n\tfunction startVideos() {\n\t\tvs.forEach((v) => v.play())\n\t\td.canvas.removeEventListener('mousedown', startVideos)\n\t\td.canvas.removeEventListener('touchstart', startVideos)\n\t}\n\td.canvas.addEventListener('mousedown', startVideos)\n\td.canvas.addEventListener('touchstart', startVideos)\n\n\trepeat((tpf) => {\n\t\td.tpf = tpf\n\t\tQ.emit(events.FRAME)\n\t\tvideoTextures.forEach((t, i) =>\n\t\t\tt.update({ texture: { ...videoTextureData, asset: vs[i] } }),\n\t\t)\n\t\tQ.painter.compose(...videoLights, mirrorScene, scene).display(scene)\n\t}, 'render')\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n"],"sourceRoot":""}