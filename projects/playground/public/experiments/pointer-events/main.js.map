{"version":3,"sources":["webpack:///../libs/dist/events/pointer.js","webpack:///./experiments/pointer-events/index.ts"],"names":["Buttons","code","document","getElementById","opts","callback","cb","element","enableRightButton","holdDelay","holdRadius","state","pressed","drag","x","y","dX","dY","xMax","yMax","dragging","holding","oX","oY","timeout","onPointerDown","e","isPrimary","button","clientX","clientY","clearTimeout","setTimeout","onPointerUp","_e","event","onPointerMove","Math","max","abs","preventDefault","addEventListener","pointer","val","innerHTML","JSON","stringify"],"mappings":"mBAAO,MAAMA,EAGF,ECDX,MAAMC,EAAOC,SAASC,eAAe,uBACjCF,GDEG,SAAiBG,EAAMC,GAC1B,MAAMC,EAAKD,GAAYD,GACjB,QAAEG,EAAUL,SAAQ,kBAAEM,EAAiB,UAAEC,EAAY,IAAG,WAAEC,EAAa,GAAON,EAC9EO,EAAQ,CACVC,QAAS,GACTC,KAAM,CAAEC,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAGC,GAAI,EAAGC,KAAM,EAAGC,KAAM,GACjDC,UAAU,EACVC,SAAS,GAEb,IAAIP,EAAI,EAAGC,EAAI,EAAGO,EAAK,EAAGC,EAAK,EAAGC,EAAU,KAC5C,SAASC,EAAcC,GACfA,EAAEC,WACFhB,EAAMC,QAAQc,EAAEE,QAAUF,EAC1BZ,EAAIQ,EAAKI,EAAEG,QACXd,EAAIQ,EAAKG,EAAEI,QACXnB,EAAMS,UAAW,EACN,MAAXI,GAAmBO,aAAaP,GAChCA,EAAUQ,YAAW,KACbrB,EAAME,KAAKK,KAAOR,GAAcC,EAAME,KAAKM,KAAOT,IAClDC,EAAMU,SAAU,EAChBf,EAAGK,MAERF,IAGHE,EAAMC,QAAQZ,GAAiB0B,EAEnCpB,EAAGK,GAEP,SAASsB,EAAYC,GACjBvB,EAAMC,QAAU,UACTD,EAAME,KAAKsB,MAClBxB,EAAME,KAAKC,EAAI,EACfH,EAAME,KAAKE,EAAI,EACfJ,EAAME,KAAKG,GAAK,EAChBL,EAAME,KAAKI,GAAK,EAChBN,EAAME,KAAKK,KAAO,EAClBP,EAAME,KAAKM,KAAO,EAClBR,EAAMS,UAAW,EACjBT,EAAMU,SAAU,EACL,MAAXG,GAAmBO,aAAaP,GAChCA,EAAU,KACVlB,EAAGK,GAEP,SAASyB,EAAcV,GACff,EAAMS,UAAYM,EAAEC,YACpBhB,EAAME,KAAKsB,MAAQT,EACnBf,EAAME,KAAKC,EAAIA,EAAIY,EAAEG,QACrBlB,EAAME,KAAKE,EAAIA,EAAIW,EAAEI,QACrBnB,EAAME,KAAKG,GAAKM,EAAKI,EAAEG,QACvBlB,EAAME,KAAKI,GAAKM,EAAKG,EAAEI,QACvBnB,EAAME,KAAKK,KAAOmB,KAAKC,IAAID,KAAKE,IAAI5B,EAAME,KAAKC,GAAIH,EAAME,KAAKK,MAC9DP,EAAME,KAAKM,KAAOkB,KAAKC,IAAID,KAAKE,IAAI5B,EAAME,KAAKE,GAAIJ,EAAME,KAAKM,MAC9DG,EAAKI,EAAEG,QACPN,EAAKG,EAAEI,QACPxB,EAAGK,IAGX,SAAS6B,EAAed,GACpBA,EAAEc,iBAENjC,EAAQkC,iBAAiB,cAAehB,GACxCvB,SAASuC,iBAAiB,cAAeL,GACzClC,SAASuC,iBAAiB,YAAaR,GACvC/B,SAASuC,iBAAiB,eAAgBR,GAC1C/B,SAASuC,iBAAiB,gBAAiBR,GACvCzB,GACAD,EAAQkC,iBAAiB,cAAeD,GAE5ClC,EAAGK,GCtEN+B,CAAQ,CAAElC,mBAAmB,IAAQmC,IACpC1C,EAAK2C,UAAYC,KAAKC,UAAUH,EAAK,KAAM,W","file":"experiments/pointer-events/main.js","sourcesContent":["export const Buttons = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n};\nexport function pointer(opts, callback) {\n    const cb = callback || opts;\n    const { element = document, enableRightButton, holdDelay = 400, holdRadius = 5, } = opts;\n    const state = {\n        pressed: {},\n        drag: { x: 0, y: 0, dX: 0, dY: 0, xMax: 0, yMax: 0 },\n        dragging: false,\n        holding: false,\n    };\n    let x = 0, y = 0, oX = 0, oY = 0, timeout = null;\n    function onPointerDown(e) {\n        if (e.isPrimary) {\n            state.pressed[e.button] = e;\n            x = oX = e.clientX;\n            y = oY = e.clientY;\n            state.dragging = true;\n            timeout != null && clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                if (state.drag.xMax < holdRadius && state.drag.yMax < holdRadius) {\n                    state.holding = true;\n                    cb(state);\n                }\n            }, holdDelay);\n        }\n        else {\n            state.pressed[Buttons.RIGHT] = e;\n        }\n        cb(state);\n    }\n    function onPointerUp(_e) {\n        state.pressed = {};\n        delete state.drag.event;\n        state.drag.x = 0;\n        state.drag.y = 0;\n        state.drag.dX = 0;\n        state.drag.dY = 0;\n        state.drag.xMax = 0;\n        state.drag.yMax = 0;\n        state.dragging = false;\n        state.holding = false;\n        timeout != null && clearTimeout(timeout);\n        timeout = null;\n        cb(state);\n    }\n    function onPointerMove(e) {\n        if (state.dragging && e.isPrimary) {\n            state.drag.event = e;\n            state.drag.x = x - e.clientX;\n            state.drag.y = y - e.clientY;\n            state.drag.dX = oX - e.clientX;\n            state.drag.dY = oY - e.clientY;\n            state.drag.xMax = Math.max(Math.abs(state.drag.x), state.drag.xMax);\n            state.drag.yMax = Math.max(Math.abs(state.drag.y), state.drag.yMax);\n            oX = e.clientX;\n            oY = e.clientY;\n            cb(state);\n        }\n    }\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    element.addEventListener('pointerdown', onPointerDown);\n    document.addEventListener('pointermove', onPointerMove);\n    document.addEventListener('pointerup', onPointerUp);\n    document.addEventListener('pointerleave', onPointerUp);\n    document.addEventListener('pointercancel', onPointerUp);\n    if (enableRightButton) {\n        element.addEventListener('contextmenu', preventDefault);\n    }\n    cb(state);\n    return function destroy() {\n        element.removeEventListener('pointerdown', onPointerDown);\n        document.removeEventListener('pointermove', onPointerMove);\n        document.removeEventListener('pointerup', onPointerUp);\n        document.removeEventListener('pointerleave', onPointerUp);\n        document.removeEventListener('pointercancel', onPointerUp);\n        if (enableRightButton) {\n            element.removeEventListener('contextmenu', preventDefault);\n        }\n    };\n}\nexport function pointerObserver(opts = {}) {\n    const observer = {\n        Buttons,\n        state: {},\n        destroy: () => { },\n    };\n    function callback(state) {\n        observer.state = state;\n    }\n    observer.destroy = pointer(opts, callback);\n    return observer;\n}\n//# sourceMappingURL=pointer.js.map","import { pointer } from 'tvs-libs/dist/events/pointer'\n\nconst code = document.getElementById('pointer-event-state')\nif (code) {\n\tpointer({ enableRightButton: true }, val => {\n\t\tcode.innerHTML = JSON.stringify(val, null, '   ')\n\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n"],"sourceRoot":""}