{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/contants.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/dom.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/mouse.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/asset-lib.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/render-utils.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/form.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/texture.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/render-target.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/frame.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/layer.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/shade.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/sketch.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/painter.js","webpack:///./shared-utils/painterState.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/object.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/utils/geometry/plane.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/common.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/mat4.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/vec3.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/vec4.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/quat.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/mat3.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/sequence.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/keyboard.js","webpack:///./experiments/game-of-life/context.ts","webpack:///./experiments/game-of-life/paint.ts","webpack:///./experiments/game-of-life/renderer.ts","webpack:///./experiments/game-of-life/glsl/base.frag","webpack:///./experiments/game-of-life/glsl/plane-material.vert","webpack:///./experiments/game-of-life/glsl/plane-material.frag","webpack:///./experiments/game-of-life/index.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/math/random.js","webpack:///./shared-utils/scheduler.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/predicates.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/utils/context.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GEOMETRY_PROP_POSITION","GEOMETRY_PROP_NORMAL","GEOMETRY_PROP_UV","UNIFORM_SOURCE_TEXTURE","VARYING_UV_COORDS","GL_TYPE","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","FLOAT_MAT2X3","FLOAT_MAT2X4","FLOAT_MAT3X2","FLOAT_MAT3X4","FLOAT_MAT4X2","FLOAT_MAT4X3","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_3D","TEXTURE_2D_ARRAY","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","FLOAT_32_UNSIGNED_INT_24_8_REV","UNSIGNED_INT_24_8","TEXTURE_FORMAT","TEXTURE_FORMAT_INTERNAL","windowSize","callback","resize","width","window","innerWidth","height","innerHeight","addEventListener","removeEventListener","Buttons","LEFT","MIDDLE","RIGHT","mouse","opts","cb","element","document","enableRightButton","state","pressed","drag","x","y","dX","dY","dragging","oX","oY","onMouseDown","e","button","clientX","clientY","onMouseUp","event","onMouseMove","preventDefault","defaultTextureSettings","defaultForms","renderQuad","attribs","buffer","Float32Array","storeType","drawType","itemCount","defaultShaders","basicEffect","vert","frag","getBindPointForSamplerType","type","typeMap","bindPoint","intSetter","gl","location","v","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","texture","activeTexture","TEXTURE0","bindTexture","_texture","samplerArraySetter","size","units","Int32Array","textures","index","Type","setter","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Uint32Array","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","floatAttribSetter","typeInfo","b","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","itemSize","normalize","stride","offset","intAttribSetter","vertexAttribIPointer","matAttribSetter","defaultSize","count","numComponents","rowOffset","attrTypeMap","Int8Array","Uint8Array","Int16Array","Uint16Array","applyDrawSettings","settings","enable","setting","disable","blendFunc","apply","depthFunc","cullFace","frontFace","lineWidth","colorMask","depthMask","clearColor","clearDepth","clearBits","clear","revertDrawSettings","formCounter","_painter","id","this","data","_drawType","_itemCount","_attribs","attribData","createBuffer","bufferData","elements","_elements","glType","typedArray","Uint8ClampedArray","Error","getGLTypeForTypedArray","ELEMENT_ARRAY_BUFFER","deleteBuffer","undefined","textureCount","_data","createTexture","wrap","wrapS","wrapT","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","magFilter","TEXTURE_MAG_FILTER","minFilter","TEXTURE_MIN_FILTER","asset","texImage2D","RGBA","isWebGL2","RGBA32F","flipY","pixelStorei","UNPACK_FLIP_Y_WEBGL","indexOf","generateMipmap","assign","deleteTexture","frameBuffer","depthBuffer","bufferStructure","length","every","buf","createFramebuffer","bindFramebuffer","FRAMEBUFFER","some","getExtension","texCount","bufferAttachments","COLOR_ATTACHMENT0","glx","attachment","COLOR_ATTACHMENT0_WEBGL","drawBuffers","drawBuffersWEBGL","update","framebufferTexture2D","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","err","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","console","error","deleteFramebuffer","deleteRenderbuffer","frameCount","layers","_targets","_textures","Array","isArray","selfReferencing","layerCount","reduce","layer","_uniforms","targetCount","drawingBufferWidth","drawingBufferHeight","_destroyTargets","targetData","forEach","tex","destroy","tmp","Layer","sketches","sketch","shade","uniforms","shadeCounter","fragSource","trim","vertSource","program","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","_program","_frag","_vert","attachShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","addLineNumbers","linkProgram","getProgramParameter","LINK_STATUS","lastError","getProgramInfoLog","_uniformSetters","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","substr","toString","uniformSetters","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","createUniformSetters","_attributeSetters","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","createAttributeSetters","deleteProgram","deleteShader","src","split","map","line","join","sketchCounter","Sketch","drawSettings","_drawSettings","form","canvas","maxBufferSamples","useWebGL1","getContext","sizeMultiplier","getParameter","MAX_SAMPLES","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","getDefaultLayerSettings","_renderQuad","createForm","_staticSketch","createFlatSketch","createSketch","createShade","createLayer","globalUniforms","viewport","draw","frames","frame","renderFrame","idx","source","image","sources","useProgram","shadeForm","shadeUniforms","drawInstance","drawElements","drawArrays","renderLayer","target","layerPasses","j","_swapTargets","currentCanvas","painter","getPainter","device","cancelWindow","cancelMouse","cancelKeys","dispatch","baseEvents","RESIZE","keyboard","k","keys","init","getForm","shades","getShade","getSketch","getLayer","getFrame","createFrame","effects","getEffect","createEffect","tpf","prop","set","val","reset","deepOverride","obj1","obj2","opt","ignore","val1","val2","getState","systems","addSystem","FRAME","plane","widthSegments","heightSegments","widthHalf","heightHalf","gridX","gridY","gridX1","gridY1","segmentWidth","segmentHeight","vertices","normals","uvs","iy","ix","offset2","indices","a","position","normal","uv","EPSILON","ARRAY_TYPE","RANDOM","Math","random","PI","out","clone","copy","fromValues","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","identity","transpose","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","multiply","b0","b1","b2","b3","translate","z","rotate","rad","axis","b12","b20","b21","b22","len","hypot","sin","cos","rotateX","rotateY","rotateZ","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","sqrt","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","targetTo","str","frob","add","subtract","multiplyScalar","multiplyScalarAndAdd","scale","exactEquals","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","max","arguments","mul","sub","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","mag","cosine","acos","zero","vec","div","dist","sqrDist","sqrLen","fn","arg","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","dot","invDot","conjugate","fromMat3","fRoot","fTrace","fromEuler","halfToRad","cx","cy","cz","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","rotationTo","sqlerp","setAxes","view","pickRandom","arr","doTimes","times","res","zip","as","bs","flatten","array","subarray","currentLength","mapcat","coll","obj","each","Keys","onKeydown","keyCode","Date","now","onKeyup","getElementById","paint","events","PROCESS_PAINT","CLEANUP_PAINT","ctx","getImageData","putImageData","fillStyle","fillRect","paintFrame","effect","previous","automaton","planMat","projection","transform","compose","randInt","int","randIntInRange","from","to","normalRand","updateOnce","updateRepeat","willUpdate","uidCounter","oldTime","processUpdates","time","updates","requestAnimationFrame","once","repeat","stop","equalArray","arr1","arr2","equalObject","k1","makeClear","clearArray","item","toUpperCase","resizeCanvas","multiplier","clientWidth","clientHeight"],"mappings":"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","file":"experiments/game-of-life/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","export const GEOMETRY_PROP_POSITION = 'position';\nexport const GEOMETRY_PROP_NORMAL = 'normal';\nexport const GEOMETRY_PROP_UV = 'uv';\nexport const UNIFORM_SOURCE_TEXTURE = 'source';\nexport const VARYING_UV_COORDS = 'coords';\nexport const GL_TYPE = {\n    FLOAT: 0x1406,\n    FLOAT_VEC2: 0x8b50,\n    FLOAT_VEC3: 0x8b51,\n    FLOAT_VEC4: 0x8b52,\n    INT: 0x1404,\n    INT_VEC2: 0x8b53,\n    INT_VEC3: 0x8b54,\n    INT_VEC4: 0x8b55,\n    BOOL: 0x8b56,\n    BOOL_VEC2: 0x8b57,\n    BOOL_VEC3: 0x8b58,\n    BOOL_VEC4: 0x8b59,\n    FLOAT_MAT2: 0x8b5a,\n    FLOAT_MAT3: 0x8b5b,\n    FLOAT_MAT4: 0x8b5c,\n    SAMPLER_2D: 0x8b5e,\n    SAMPLER_CUBE: 0x8b60,\n    SAMPLER_3D: 0x8b5f,\n    SAMPLER_2D_SHADOW: 0x8b62,\n    FLOAT_MAT2X3: 0x8b65,\n    FLOAT_MAT2X4: 0x8b66,\n    FLOAT_MAT3X2: 0x8b67,\n    FLOAT_MAT3X4: 0x8b68,\n    FLOAT_MAT4X2: 0x8b69,\n    FLOAT_MAT4X3: 0x8b6a,\n    SAMPLER_2D_ARRAY: 0x8dc1,\n    SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n    SAMPLER_CUBE_SHADOW: 0x8dc5,\n    UNSIGNED_INT: 0x1405,\n    UNSIGNED_INT_VEC2: 0x8dc6,\n    UNSIGNED_INT_VEC3: 0x8dc7,\n    UNSIGNED_INT_VEC4: 0x8dc8,\n    INT_SAMPLER_2D: 0x8dca,\n    INT_SAMPLER_3D: 0x8dcb,\n    INT_SAMPLER_CUBE: 0x8dcc,\n    INT_SAMPLER_2D_ARRAY: 0x8dcf,\n    UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n    UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n    UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n    TEXTURE_2D: 0x0de1,\n    TEXTURE_CUBE_MAP: 0x8513,\n    TEXTURE_3D: 0x806f,\n    TEXTURE_2D_ARRAY: 0x8c1a,\n    BYTE: 0x1400,\n    UNSIGNED_BYTE: 0x1401,\n    SHORT: 0x1402,\n    UNSIGNED_SHORT: 0x1403,\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\n    UNSIGNED_SHORT_5_6_5: 0x8363,\n    HALF_FLOAT: 0x140b,\n    UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n    UNSIGNED_INT_10F_11F_11F_REV: 0x8c3b,\n    UNSIGNED_INT_5_9_9_9_REV: 0x8c3e,\n    FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8dad,\n    UNSIGNED_INT_24_8: 0x84fa,\n};\nexport const TEXTURE_FORMAT = {\n    RED: 0x1903,\n    RG: 0x8227,\n    RGB: 0x1907,\n    RGBA: 0x1908,\n    RED_INTEGER: 0x8d94,\n    RG_INTEGER: 0x8228,\n    RGB_INTEGER: 0x8d98,\n    RGBA_INTEGER: 0x8d99,\n    DEPTH_COMPONENT: 0x1902,\n};\nexport const TEXTURE_FORMAT_INTERNAL = {\n    R8: 0x8229,\n    RG8: 0x822b,\n    RGB8: 0x8051,\n    RGBA8: 0x8058,\n    R16F: 0x822d,\n    RG16F: 0x822f,\n    RGB16F: 0x881b,\n    RGBA16F: 0x881a,\n    R32F: 0x822e,\n    RG32F: 0x8230,\n    RGB32F: 0x8815,\n    RGBA32F: 0x8814,\n    R8I: 0x8231,\n    RG8I: 0x8237,\n    RGB8I: 0x8d8f,\n    RGBA8I: 0x8d8e,\n    R8UI: 0x8232,\n    RG8UI: 0x8238,\n    RGB8UI: 0x8d7d,\n    RGBA8UI: 0x8d7c,\n    R16I: 0x8233,\n    RG16I: 0x8239,\n    RGB16I: 0x8d89,\n    RGBA16I: 0x8d88,\n    R16UI: 0x8234,\n    RG16UI: 0x823a,\n    RGB16UI: 0x8d77,\n    RGBA16UI: 0x8d76,\n    R32I: 0x8235,\n    RG32I: 0x823b,\n    RGB32I: 0x8d83,\n    RGBA32I: 0x8d82,\n    R32UI: 0x8236,\n    RG32UI: 0x823c,\n    RGB32UI: 0x8d71,\n    RGBA32UI: 0x8d70,\n    RGB10_A2: 0x8059,\n    RGB10_A2UI: 0x906f,\n    SRGB: 0x8c40,\n    SRGB8: 0x8c41,\n    SRGB8_ALPHA8: 0x8c43,\n    R8_SNORM: 0x8f94,\n    RG8_SNORM: 0x8f95,\n    RGB8_SNORM: 0x8f96,\n    RGBA8_SNORM: 0x8f97,\n    DEPTH_COMPONENT16: 0x81a5,\n    DEPTH_COMPONENT24: 0x81a6,\n    DEPTH_COMPONENT32F: 0x8cac,\n};\nexport const TEXTURE_FORMAT_DEFAULTS = {\n    [GL_TYPE.UNSIGNED_BYTE]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R8,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG8,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB8,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA8,\n    },\n    [GL_TYPE.UNSIGNED_SHORT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT16,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16UI,\n    },\n    [GL_TYPE.UNSIGNED_INT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT24,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R32UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG32UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB32UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA32UI,\n    },\n    [GL_TYPE.FLOAT]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16F,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16F,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16F,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16F,\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT32F,\n    },\n    COMPRESSED_TYPES: {},\n};\n//# sourceMappingURL=contants.js.map","export function windowSize(callback) {\n    function resize() {\n        callback({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    }\n    window.addEventListener('resize', resize);\n    resize();\n    return function stop() {\n        window.removeEventListener('resize', resize);\n    };\n}\nexport function windowSizeObserver() {\n    const state = {\n        size: { width: 0, height: 0 },\n    };\n    const destroy = windowSize(s => (state.size = s));\n    return { state, destroy };\n}\n//# sourceMappingURL=dom.js.map","export const Buttons = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n};\nexport function mouse(opts, callback) {\n    const cb = callback || opts;\n    const { element = document, enableRightButton } = opts;\n    const state = {\n        pressed: {},\n        drag: { x: 0, y: 0, dX: 0, dY: 0 },\n        dragging: false,\n    };\n    let x = 0, y = 0, oX = 0, oY = 0;\n    function onMouseDown(e) {\n        state.pressed[e.button] = e;\n        if (e.button === Buttons.LEFT) {\n            x = oX = e.clientX;\n            y = oY = e.clientY;\n            state.dragging = true;\n        }\n        cb(state);\n    }\n    function onMouseUp(e) {\n        delete state.pressed[e.button];\n        delete state.drag.event;\n        state.drag.x = 0;\n        state.drag.y = 0;\n        state.drag.dX = 0;\n        state.drag.dY = 0;\n        state.dragging = false;\n        cb(state);\n    }\n    function onMouseMove(e) {\n        if (state.dragging) {\n            state.drag.event = e;\n            state.drag.x = x - e.clientX;\n            state.drag.y = y - e.clientY;\n            state.drag.dX = oX - e.clientX;\n            state.drag.dY = oY - e.clientY;\n            oX = e.clientX;\n            oY = e.clientY;\n            cb(state);\n        }\n    }\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    element.addEventListener('mousedown', onMouseDown);\n    document.addEventListener('mouseup', onMouseUp);\n    document.addEventListener('mousemove', onMouseMove);\n    if (enableRightButton) {\n        element.addEventListener('contextmenu', preventDefault);\n    }\n    cb(state);\n    return function destroy() {\n        element.removeEventListener('mousedown', onMouseDown);\n        document.removeEventListener('mousemove', onMouseMove);\n        document.removeEventListener('mouseup', onMouseUp);\n        if (enableRightButton) {\n            element.removeEventListener('contextmenu', preventDefault);\n        }\n    };\n}\nexport function mouseObserver(opts = {}) {\n    const observer = {\n        Buttons,\n        state: {},\n        destroy: () => { },\n    };\n    function callback(state) {\n        observer.state = state;\n    }\n    observer.destroy = mouse(opts, callback);\n    return observer;\n}\n//# sourceMappingURL=mouse.js.map","import * as constants from './contants';\nexport const defaultTextureSettings = {\n    wrap: 'CLAMP_TO_EDGE',\n    minFilter: 'LINEAR',\n    magFilter: 'NEAREST',\n};\nexport function getDefaultLayerSettings(gl) {\n    return {\n        clearColor: [0.0, 0.0, 0.0, 1.0],\n        blendFunc: [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA],\n    };\n}\nexport const defaultForms = {\n    renderQuad: {\n        attribs: {\n            [constants.GEOMETRY_PROP_POSITION]: {\n                buffer: new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1]),\n                storeType: 'STATIC',\n            },\n            [constants.GEOMETRY_PROP_UV]: {\n                buffer: new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]),\n                storeType: 'STATIC',\n            },\n        },\n        drawType: 'TRIANGLE_STRIP',\n        itemCount: 4,\n    },\n};\nexport const defaultShaders = {\n    basicEffect: {\n        vert: `\nattribute vec2 ${constants.GEOMETRY_PROP_POSITION};\nattribute vec2 ${constants.GEOMETRY_PROP_UV};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\t${constants.VARYING_UV_COORDS} = ${constants.GEOMETRY_PROP_UV};\n\tgl_Position = vec4(${constants.GEOMETRY_PROP_POSITION}, 0.0, 1.0);\n}`,\n        frag: `precision mediump float;\nuniform sampler2D ${constants.UNIFORM_SOURCE_TEXTURE};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\tgl_FragColor = texture2D(${constants.UNIFORM_SOURCE_TEXTURE}, ${constants.VARYING_UV_COORDS});\n}`,\n    },\n};\n//# sourceMappingURL=asset-lib.js.map","import { GL_TYPE } from './contants';\n// Attrib and Uniform Setters\nfunction getBindPointForSamplerType(type) {\n    return typeMap[type].bindPoint;\n}\nfunction floatSetter(gl, location) {\n    return (v) => {\n        gl.uniform1f(location, v);\n    };\n}\nfunction floatArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1fv(location, v);\n    };\n}\nfunction floatVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2fv(location, v);\n    };\n}\nfunction floatVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3fv(location, v);\n    };\n}\nfunction floatVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4fv(location, v);\n    };\n}\nfunction intSetter(gl, location) {\n    return (v) => {\n        gl.uniform1i(location, v);\n    };\n}\nfunction intArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1iv(location, v);\n    };\n}\nfunction intVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2iv(location, v);\n    };\n}\nfunction intVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3iv(location, v);\n    };\n}\nfunction intVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4iv(location, v);\n    };\n}\nfunction uintSetter(gl, location) {\n    return (v) => {\n        gl.uniform1ui(location, v);\n    };\n}\nfunction uintArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1uiv(location, v);\n    };\n}\nfunction uintVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2uiv(location, v);\n    };\n}\nfunction uintVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3uiv(location, v);\n    };\n}\nfunction uintVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4uiv(location, v);\n    };\n}\nfunction floatMat2Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n    };\n}\nfunction floatMat3Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n    };\n}\nfunction floatMat4Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n    };\n}\nfunction floatMat23Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x3fv(location, false, v);\n    };\n}\nfunction floatMat32Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x2fv(location, false, v);\n    };\n}\nfunction floatMat24Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x4fv(location, false, v);\n    };\n}\nfunction floatMat42Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x2fv(location, false, v);\n    };\n}\nfunction floatMat34Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x4fv(location, false, v);\n    };\n}\nfunction floatMat43Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x3fv(location, false, v);\n    };\n}\nfunction samplerSetter(gl, type, unit, location) {\n    const bindPoint = getBindPointForSamplerType(type);\n    return (texture) => {\n        gl.uniform1i(location, unit);\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(bindPoint, texture._texture);\n    };\n}\nfunction samplerArraySetter(gl, type, unit, location, size) {\n    const bindPoint = getBindPointForSamplerType(type);\n    const units = new Int32Array(size);\n    for (let i = 0; i < size; ++i) {\n        units[i] = unit + i;\n    }\n    return (textures) => {\n        gl.uniform1iv(location, units);\n        for (const index in textures) {\n            gl.activeTexture(gl.TEXTURE0 + units[index]);\n            gl.bindTexture(bindPoint, textures[index]._texture);\n        }\n    };\n}\nfunction isSamplerInfo(info) {\n    return info.Type === null;\n}\nconst typeMap = {\n    [GL_TYPE.FLOAT]: {\n        Type: Float32Array,\n        size: 4,\n        setter: floatSetter,\n        arraySetter: floatArraySetter,\n    },\n    [GL_TYPE.FLOAT_VEC2]: {\n        Type: Float32Array,\n        size: 8,\n        setter: floatVec2Setter,\n    },\n    [GL_TYPE.FLOAT_VEC3]: {\n        Type: Float32Array,\n        size: 12,\n        setter: floatVec3Setter,\n    },\n    [GL_TYPE.FLOAT_VEC4]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatVec4Setter,\n    },\n    [GL_TYPE.INT]: {\n        Type: Int32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.INT_VEC2]: { Type: Int32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.INT_VEC3]: { Type: Int32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.INT_VEC4]: { Type: Int32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.UNSIGNED_INT]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: uintSetter,\n        arraySetter: uintArraySetter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        Type: Uint32Array,\n        size: 8,\n        setter: uintVec2Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        Type: Uint32Array,\n        size: 12,\n        setter: uintVec3Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        Type: Uint32Array,\n        size: 16,\n        setter: uintVec4Setter,\n    },\n    [GL_TYPE.BOOL]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.BOOL_VEC2]: { Type: Uint32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.BOOL_VEC3]: { Type: Uint32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.BOOL_VEC4]: { Type: Uint32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.FLOAT_MAT2]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatMat2Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3]: {\n        Type: Float32Array,\n        size: 36,\n        setter: floatMat3Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4]: {\n        Type: Float32Array,\n        size: 64,\n        setter: floatMat4Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X3]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat23Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X4]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat24Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X2]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat32Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X4]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat34Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X2]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat42Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X3]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat43Setter,\n    },\n    [GL_TYPE.SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.SAMPLER_2D_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_CUBE_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n};\nfunction floatAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribPointer(location, typeInfo.itemSize, GL_TYPE.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n    };\n}\nfunction intAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribIPointer(location, typeInfo.itemSize, GL_TYPE.INT, b.stride || 0, b.offset || 0);\n    };\n}\nfunction matAttribSetter(gl, location, typeInfo) {\n    const defaultSize = typeInfo.size;\n    const count = typeInfo.count;\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        const numComponents = defaultSize;\n        const size = numComponents / count;\n        const typeInfo = typeMap[GL_TYPE.FLOAT];\n        const stride = typeInfo.size * numComponents;\n        const normalize = b.normalize || false;\n        const offset = b.offset || 0;\n        const rowOffset = stride / count;\n        for (let i = 0; i < count; ++i) {\n            gl.enableVertexAttribArray(location + i);\n            gl.vertexAttribPointer(location + i, size, GL_TYPE.FLOAT, normalize, stride, offset + rowOffset * i);\n        }\n    };\n}\nconst attrTypeMap = {\n    [GL_TYPE.FLOAT]: { size: 4, setter: floatAttribSetter, itemSize: 1 },\n    [GL_TYPE.FLOAT_VEC2]: { size: 8, setter: floatAttribSetter, itemSize: 2 },\n    [GL_TYPE.FLOAT_VEC3]: { size: 12, setter: floatAttribSetter, itemSize: 3 },\n    [GL_TYPE.FLOAT_VEC4]: { size: 16, setter: floatAttribSetter, itemSize: 4 },\n    [GL_TYPE.INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.INT_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.INT_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.INT_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.UNSIGNED_INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        size: 8,\n        setter: intAttribSetter,\n        itemSize: 2,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        size: 12,\n        setter: intAttribSetter,\n        itemSize: 3,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        size: 16,\n        setter: intAttribSetter,\n        itemSize: 4,\n    },\n    [GL_TYPE.BOOL]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.BOOL_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.BOOL_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.BOOL_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.FLOAT_MAT2]: { size: 4, setter: matAttribSetter, count: 2 },\n    [GL_TYPE.FLOAT_MAT3]: { size: 9, setter: matAttribSetter, count: 3 },\n    [GL_TYPE.FLOAT_MAT4]: { size: 16, setter: matAttribSetter, count: 4 },\n};\nexport function createUniformSetters(gl, program) {\n    let textureUnit = 0;\n    function createUniformSetter(program, uniformInfo) {\n        const location = gl.getUniformLocation(program, uniformInfo.name);\n        const isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]';\n        const type = uniformInfo.type;\n        const typeInfo = typeMap[type];\n        if (!typeInfo) {\n            throw new Error('unknown type: 0x' + type.toString(16)); // we should never get here.\n        }\n        if (location == null) {\n            return;\n        }\n        let setter;\n        if (isSamplerInfo(typeInfo)) {\n            // it's a sampler\n            const unit = textureUnit;\n            textureUnit += uniformInfo.size;\n            if (isArray) {\n                setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n            }\n            else {\n                setter = typeInfo.setter(gl, type, unit, location);\n            }\n        }\n        else {\n            if (typeInfo.arraySetter && isArray) {\n                setter = typeInfo.arraySetter(gl, location);\n            }\n            else {\n                setter = typeInfo.setter(gl, location);\n            }\n        }\n        return { setter, location };\n    }\n    const uniformSetters = {};\n    const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < numUniforms; ++i) {\n        const uniformInfo = gl.getActiveUniform(program, i);\n        if (!uniformInfo) {\n            continue;\n        }\n        let name = uniformInfo.name;\n        // remove the array suffix.\n        if (name.substr(-3) === '[0]') {\n            name = name.substr(0, name.length - 3);\n        }\n        if (program) {\n            const setter = createUniformSetter(program, uniformInfo);\n            if (setter) {\n                uniformSetters[name] = setter;\n            }\n        }\n    }\n    return uniformSetters;\n}\nexport function createAttributeSetters(gl, program) {\n    const attribSetters = {};\n    const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < numAttribs; i++) {\n        const attribInfo = gl.getActiveAttrib(program, i);\n        if (!attribInfo) {\n            break;\n        }\n        const location = gl.getAttribLocation(program, attribInfo.name);\n        const typeInfo = attrTypeMap[attribInfo.type];\n        const setter = typeInfo.setter(gl, location, typeInfo);\n        attribSetters[attribInfo.name] = { setter, location };\n    }\n    return attribSetters;\n}\n// Type helpers\nexport const glTypeToTypedArray = {\n    [GL_TYPE.BYTE]: Int8Array,\n    [GL_TYPE.UNSIGNED_BYTE]: Uint8Array,\n    [GL_TYPE.SHORT]: Int16Array,\n    [GL_TYPE.UNSIGNED_SHORT]: Uint16Array,\n    [GL_TYPE.INT]: Int32Array,\n    [GL_TYPE.UNSIGNED_INT]: Uint32Array,\n    [GL_TYPE.FLOAT]: Float32Array,\n    [GL_TYPE.UNSIGNED_SHORT_4_4_4_4]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_5_5_1]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_6_5]: Uint16Array,\n    [GL_TYPE.HALF_FLOAT]: Uint16Array,\n    [GL_TYPE.UNSIGNED_INT_2_10_10_10_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_10F_11F_11F_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_5_9_9_9_REV]: Uint32Array,\n    [GL_TYPE.FLOAT_32_UNSIGNED_INT_24_8_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_24_8]: Uint32Array,\n};\nexport function getGLTypeForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArray instanceof Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArray instanceof Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArray instanceof Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArray instanceof Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArray instanceof Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\nexport function getGLTypeForTypedArrayType(typedArrayType) {\n    if (typedArrayType === Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArrayType === Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArrayType === Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArrayType === Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArrayType === Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArrayType === Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\n// Settings\nexport function applyDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.enable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.blendFunc) {\n        gl.blendFunc.apply(gl, settings.blendFunc);\n    }\n    if (settings.depthFunc != null) {\n        gl.depthFunc(settings.depthFunc);\n    }\n    if (settings.cullFace != null) {\n        gl.cullFace(settings.cullFace);\n    }\n    if (settings.frontFace != null) {\n        gl.frontFace(settings.frontFace);\n    }\n    if (settings.lineWidth != null) {\n        gl.lineWidth(settings.lineWidth);\n    }\n    if (settings.colorMask) {\n        gl.colorMask.apply(gl, settings.colorMask);\n    }\n    if (settings.depthMask != null) {\n        gl.depthMask(settings.depthMask);\n    }\n    if (settings.clearColor) {\n        gl.clearColor.apply(gl, settings.clearColor);\n    }\n    if (settings.clearDepth != null) {\n        gl.clearDepth(settings.clearDepth);\n    }\n    if (settings.clearBits != null) {\n        gl.clear(settings.clearBits);\n    }\n}\nexport function revertDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.enable(setting);\n        }\n    }\n}\n//# sourceMappingURL=render-utils.js.map","import { getGLTypeForTypedArray } from './render-utils';\nlet formCounter = 1;\nexport class Form {\n    constructor(_painter, id = 'Form' + formCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (data.drawType) {\n            this._drawType = gl[data.drawType];\n        }\n        if (data.itemCount) {\n            this._itemCount = data.itemCount;\n        }\n        this._attribs = this._attribs || {};\n        for (const id in data.attribs) {\n            const attribData = data.attribs[id];\n            if (this._attribs[id] == null) {\n                this._attribs[id] = {\n                    buffer: gl.createBuffer(),\n                };\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._attribs[id].buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, attribData.buffer, gl[(attribData.storeType || 'STATIC') + '_DRAW']);\n        }\n        if (data.elements) {\n            const buffer = data.elements.buffer;\n            if (this._elements == null) {\n                this._elements = {\n                    buffer: gl.createBuffer(),\n                    glType: null,\n                };\n            }\n            this._elements.glType = getGLTypeForTypedArray(buffer);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._elements.buffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, buffer, gl[(data.elements.storeType || 'STATIC') + '_DRAW']);\n        }\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        for (const id in this._attribs) {\n            gl.deleteBuffer(this._attribs[id].buffer);\n        }\n        this._attribs = {};\n        if (this._elements) {\n            gl.deleteBuffer(this._elements.buffer);\n            this._elements = undefined;\n        }\n    }\n}\n//# sourceMappingURL=form.js.map","import { defaultTextureSettings } from './asset-lib';\nlet textureCount = 1;\nexport class Texture {\n    constructor(_painter, id = 'Texture' + textureCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this._texture = null;\n        this._data = {};\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (this._texture == null) {\n            this._texture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        if ((data.wrap && data.wrap !== this._data.wrap) ||\n            (data.wrapS && data.wrapS !== this._data.wrapS) ||\n            (data.wrapT && data.wrapT !== this._data.wrapT)) {\n            let wrapS, wrapT;\n            if (data.wrap) {\n                wrapS = wrapT = data.wrap;\n            }\n            else {\n                wrapT = data.wrapT || defaultTextureSettings.wrap;\n                wrapS = data.wrapS || defaultTextureSettings.wrap;\n            }\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n        }\n        else if (!(this._data.wrap || this._data.wrapS || this._data.wrapT)) {\n            this._data.wrap = this._data.wrapT = this._data.wrapS = defaultTextureSettings.wrap;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[this._data.wrap]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[this._data.wrap]);\n        }\n        if (data.magFilter && data.magFilter !== this._data.magFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[data.magFilter]);\n        }\n        else if (!this._data.magFilter) {\n            this._data.magFilter = defaultTextureSettings.magFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[this._data.magFilter]);\n        }\n        if (data.minFilter && data.minFilter !== this._data.minFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[data.minFilter]);\n        }\n        else if (!this._data.minFilter) {\n            this._data.minFilter = defaultTextureSettings.minFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[this._data.minFilter]);\n        }\n        if (data.asset) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data.asset);\n        }\n        if (data.data !== undefined) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, data.type === 'FLOAT' && this._painter.isWebGL2\n                ? gl.RGBA32F\n                : gl.RGBA, data.width, // width and height are required if using custom data\n            data.height, 0, gl.RGBA, gl[data.type || 'UNSIGNED_BYTE'], data.data);\n        }\n        if (data.flipY != null && data.flipY !== this._data.flipY) {\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, data.flipY);\n        }\n        if (data.minFilter && data.minFilter.indexOf('MIPMAP') > 0) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        this._painter.gl.deleteTexture(this._texture);\n        this._data = {};\n        this._texture = null;\n    }\n}\n//# sourceMappingURL=texture.js.map","import { equalObject } from 'tvs-libs/dist/utils/predicates';\nimport { Texture } from './texture';\nlet targetCount = 1;\nexport class RenderTarget {\n    constructor(_painter, id = 'Form' + targetCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.frameBuffer = null;\n        this.textures = [];\n        this.depthBuffer = null;\n        this.bufferStructure = [];\n        this._data = {};\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        const width = data.width || this.width;\n        const height = data.height || this.height;\n        if (!(width && height)) {\n            return this;\n        }\n        else if (width === this.width && height === this.height) {\n            if (!data.bufferStructure)\n                return this;\n            if (data.bufferStructure.length === this.bufferStructure.length &&\n                this.bufferStructure.every((buf, i) => equalObject(buf, data.bufferStructure[i]))) {\n                return this;\n            }\n        }\n        if (this.frameBuffer == null) {\n            this.frameBuffer = gl.createFramebuffer();\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        if (data.bufferStructure && data.bufferStructure.length) {\n            this.bufferStructure = data.bufferStructure;\n            if (this.bufferStructure.some(t => t.type === 'FLOAT')) {\n                if (this._painter.isWebGL2) {\n                    gl.getExtension('EXT_color_buffer_float');\n                }\n                else {\n                    gl.getExtension('OES_texture_float');\n                }\n            }\n        }\n        const texCount = this.bufferStructure.length || 1;\n        const bufferAttachments = [gl.COLOR_ATTACHMENT0];\n        if (texCount > 1) {\n            let glx;\n            if (!this._painter.isWebGL2) {\n                glx = gl.getExtension('WEBGL_draw_buffers');\n            }\n            const attachment = this._painter.isWebGL2\n                ? gl.COLOR_ATTACHMENT0\n                : glx.COLOR_ATTACHMENT0_WEBGL;\n            for (let i = 0; i < texCount; i++) {\n                bufferAttachments[i] = attachment + i;\n            }\n            this._painter.isWebGL2\n                ? gl.drawBuffers(bufferAttachments)\n                : glx.drawBuffersWEBGL(bufferAttachments);\n        }\n        for (let i = 0; i < texCount; i++) {\n            if (!this.textures[i]) {\n                this.textures[i] = new Texture(this._painter, this.id + '_Texture' + i);\n            }\n            const texture = this.textures[i];\n            texture.update(Object.assign(Object.assign({ minFilter: 'NEAREST', magFilter: 'NEAREST' }, this.bufferStructure[i]), { data: null, width,\n                height }));\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, bufferAttachments[i], gl.TEXTURE_2D, texture._texture, 0);\n        }\n        if (this.depthBuffer == null) {\n            this.depthBuffer = gl.createRenderbuffer();\n        }\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n        const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (err !== gl.FRAMEBUFFER_COMPLETE) {\n            console.error('framebuffer error', err, data);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        Object.assign(this._data, data);\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteFramebuffer(this.frameBuffer);\n        gl.deleteRenderbuffer(this.depthBuffer);\n        for (const texture of this.textures) {\n            gl.deleteTexture(texture);\n        }\n        this.textures = [];\n        this.frameBuffer = null;\n        this.depthBuffer = null;\n        this._data = {};\n        this.bufferStructure = [];\n        this.width = 0;\n        this.height = 0;\n    }\n}\n//# sourceMappingURL=render-target.js.map","import { times } from 'tvs-libs/dist/utils/sequence';\nimport { RenderTarget } from './render-target';\nimport { Texture } from './texture';\nlet frameCount = 1;\nexport class Frame {\n    constructor(_painter, id = 'Frame' + frameCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.layers = [];\n        this._data = {};\n        this._targets = [];\n        this._textures = [];\n    }\n    image(i = 0) {\n        return ((this._targets.length &&\n            this._targets[this._targets.length - 1].textures[i]) ||\n            this._textures[i]);\n    }\n    update(data = {}) {\n        const gl = this._painter.gl;\n        const layers = Array.isArray(data.layers)\n            ? data.layers\n            : data.layers\n                ? [data.layers]\n                : this.layers;\n        const selfReferencing = data.selfReferencing || this._data.selfReferencing;\n        const layerCount = layers.reduce((count, layer) => count + (layer._uniforms.length || 1), 0);\n        const targetCount = selfReferencing || layerCount > 1 ? 2 : layerCount;\n        const width = data.width || this._data.width || gl.drawingBufferWidth;\n        const height = data.height || this._data.height || gl.drawingBufferHeight;\n        if (targetCount !== this._targets.length) {\n            this._destroyTargets();\n        }\n        const targetData = Object.assign(Object.assign({}, data), { width, height });\n        if (!this._targets.length && targetCount > 0) {\n            this._targets = times(i => new RenderTarget(this._painter, this.id + '_target' + (i + 1)).update(targetData), targetCount);\n        }\n        else if (this._targets.length) {\n            this._targets.forEach(t => {\n                t.update(targetData);\n            });\n        }\n        if (data.texture) {\n            // Hardcode to one static texture for now\n            if (!this._textures[0]) {\n                this._textures[0] = new Texture(this._painter, this.id + '_Texture0');\n            }\n            data.texture.width = data.texture.width || width;\n            data.texture.height = data.texture.height || height;\n            this._textures[0].update(data.texture);\n        }\n        Object.assign(this._data, data);\n        this.layers = layers;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        this._destroyTargets();\n        this._textures.forEach(tex => tex.destroy());\n        this._textures = [];\n        this._data = {};\n        this.layers = [];\n        this.width = 0;\n        this.height = 0;\n    }\n    _destroyTargets() {\n        this._targets.forEach(t => t.destroy());\n        this._targets = [];\n    }\n    _swapTargets() {\n        if (this._targets.length > 1) {\n            const tmp = this._targets[0];\n            this._targets[0] = this._targets[1];\n            this._targets[1] = tmp;\n        }\n    }\n}\n//# sourceMappingURL=frame.js.map","let layerCount = 1;\nexport class Layer {\n    constructor(id = 'DrawingLayer' + layerCount++) {\n        this.id = id;\n        this.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.sketches) {\n            this.sketches = Array.isArray(data.sketches)\n                ? data.sketches\n                : [data.sketches];\n        }\n        if (data.frag) {\n            const sketch = this.sketches && this.sketches[0];\n            if (sketch) {\n                sketch.shade.update({ frag: data.frag });\n            }\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        for (const sketch of this.sketches) {\n            sketch.destroy();\n        }\n        this._data.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=layer.js.map","import { createAttributeSetters, createUniformSetters } from './render-utils';\nlet shadeCounter = 1;\nexport class Shade {\n    constructor(_painter, id = 'Shade' + shadeCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        const fragSource = (data.frag && data.frag.trim()) || this.fragSource;\n        const vertSource = (data.vert && data.vert.trim()) || this.vertSource;\n        if (!(fragSource &&\n            vertSource &&\n            (fragSource !== this.fragSource || vertSource !== this.vertSource))) {\n            return this;\n        }\n        this.destroy();\n        if (fragSource.indexOf('GL_EXT_draw_buffers') >= 0) {\n            gl.getExtension('WEBGL_draw_buffers');\n        }\n        const program = gl.createProgram();\n        const frag = gl.createShader(gl.FRAGMENT_SHADER);\n        const vert = gl.createShader(gl.VERTEX_SHADER);\n        if (!(program && vert && frag))\n            return;\n        this._program = program;\n        this._frag = frag;\n        this._vert = vert;\n        gl.attachShader(program, vert);\n        gl.attachShader(program, frag);\n        gl.shaderSource(vert, vertSource);\n        gl.shaderSource(frag, fragSource);\n        gl.compileShader(vert);\n        gl.compileShader(frag);\n        if (!gl.getShaderParameter(vert, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Vertex Shader!\\n', gl.getShaderInfoLog(vert), addLineNumbers(vertSource));\n        }\n        if (!gl.getShaderParameter(frag, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Fragment Shader!\\n', gl.getShaderInfoLog(frag), addLineNumbers(fragSource));\n        }\n        gl.linkProgram(program);\n        const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n            const lastError = gl.getProgramInfoLog(program);\n            console.error('Error in program linking:', lastError);\n        }\n        this._uniformSetters = createUniformSetters(gl, program);\n        this._attributeSetters = createAttributeSetters(gl, program);\n        this.fragSource = fragSource;\n        this.vertSource = vertSource;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteProgram(this._program);\n        gl.deleteShader(this._frag);\n        gl.deleteShader(this._vert);\n        this.vertSource = undefined;\n        this.fragSource = undefined;\n        this._attributeSetters = {};\n        this._uniformSetters = {};\n    }\n}\nfunction addLineNumbers(src) {\n    return src\n        .trim()\n        .split('\\n')\n        .map((line, i) => i + 1 + ': ' + line)\n        .join('\\n');\n}\n//# sourceMappingURL=shade.js.map","let sketchCounter = 1;\nexport class Sketch {\n    constructor(id = 'Sketch' + sketchCounter++) {\n        this.id = id;\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.drawSettings) {\n            this._drawSettings = data.drawSettings;\n        }\n        if (data.form) {\n            this.form = data.form;\n        }\n        if (data.shade) {\n            this.shade = data.shade;\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        return this;\n    }\n    destroy() {\n        this.form && this.form.destroy();\n        this.shade && this.shade.destroy();\n        this._drawSettings = undefined;\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=sketch.js.map","import { defaultForms, defaultShaders, getDefaultLayerSettings, } from './asset-lib';\nimport { Form } from './form';\nimport { Frame } from './frame';\nimport { Layer } from './layer';\nimport { applyDrawSettings, revertDrawSettings } from './render-utils';\nimport { Shade } from './shade';\nimport { Sketch } from './sketch';\nimport { resizeCanvas } from './utils/context';\nexport class Painter {\n    constructor(canvas, opts = {}) {\n        this.canvas = canvas;\n        this.isWebGL2 = true;\n        this.maxBufferSamples = 0;\n        let gl = null;\n        if (!opts.useWebGL1) {\n            gl =\n                canvas.getContext('webgl2', opts) ||\n                    canvas.getContext('experimental-webgl2', opts);\n        }\n        if (gl == null) {\n            this.isWebGL2 = false;\n            gl =\n                canvas.getContext('webgl', opts) ||\n                    canvas.getContext('experimental-webgl', opts);\n        }\n        if (gl == null) {\n            throw Error('Cannot initialize WebGL.');\n        }\n        this.gl = gl;\n        this.sizeMultiplier = opts.sizeMultiplier || 1;\n        if (this.isWebGL2) {\n            this.maxBufferSamples = gl.getParameter(gl.MAX_SAMPLES);\n        }\n        this.resize();\n        applyDrawSettings(gl, getDefaultLayerSettings(gl));\n        this._renderQuad = this.createForm().update(defaultForms.renderQuad);\n        this._staticSketch = this.createFlatSketch();\n    }\n    resize() {\n        resizeCanvas(this.gl.canvas, this.sizeMultiplier);\n        return this;\n    }\n    destroy() {\n        this._staticSketch.destroy();\n        this._renderQuad.destroy();\n    }\n    updateDrawSettings(drawSettings) {\n        applyDrawSettings(this.gl, Object.assign({}, drawSettings));\n        return this;\n    }\n    createForm(id) {\n        return new Form(this, id);\n    }\n    createShade(id) {\n        return new Shade(this, id);\n    }\n    createSketch(id) {\n        return new Sketch(id);\n    }\n    createFlatSketch(id) {\n        const s = this.createSketch(id);\n        return s.update({\n            form: this._renderQuad,\n            shade: this.createShade(s.id + '_defaultShade').update(defaultShaders.basicEffect),\n        });\n    }\n    createFrame(id) {\n        return new Frame(this, id);\n    }\n    createLayer(id) {\n        return new Layer(id);\n    }\n    createEffect(id) {\n        const l = this.createLayer(id);\n        return l.update({\n            sketches: this.createFlatSketch(l.id + '_effectSketch'),\n        });\n    }\n    draw(sketch, globalUniforms) {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        draw(gl, sketch, globalUniforms);\n        return this;\n    }\n    compose(...frames) {\n        for (const frame of frames) {\n            renderFrame(this.gl, frame);\n        }\n        return this;\n    }\n    display(frame, idx = 0) {\n        return this.draw(this._staticSketch, { source: frame.image(idx) });\n    }\n}\nfunction draw(gl, sketch, globalUniforms, sources) {\n    const { shade: shade, form: form, _drawSettings: drawSettings, _uniforms: uniforms, } = sketch;\n    if (!(shade && form)) {\n        throw Error('cannot draw, shader or geometry are not set');\n    }\n    gl.useProgram(shade._program);\n    shadeForm(shade, form);\n    if (globalUniforms) {\n        shadeUniforms(shade, globalUniforms, sources);\n    }\n    if (drawSettings) {\n        applyDrawSettings(gl, drawSettings);\n    }\n    for (let i = 0; i < (uniforms.length || 1); i++) {\n        drawInstance(gl, sketch, uniforms[i], sources);\n    }\n    if (drawSettings) {\n        revertDrawSettings(gl, drawSettings);\n    }\n}\nfunction drawInstance(gl, sketch, uniforms, sources) {\n    if (uniforms) {\n        shadeUniforms(sketch.shade, uniforms, sources);\n    }\n    if (sketch.form._elements && sketch.form._elements.glType != null) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, sketch.form._elements.buffer);\n        gl.drawElements(sketch.form._drawType, sketch.form._itemCount, sketch.form._elements.glType, 0);\n    }\n    else {\n        gl.drawArrays(sketch.form._drawType, 0, sketch.form._itemCount);\n    }\n}\nfunction shadeForm(shade, form) {\n    for (const name in form._attribs) {\n        const setter = shade._attributeSetters[name];\n        if (setter) {\n            setter.setter(form._attribs[name]);\n        }\n    }\n}\nfunction shadeUniforms(shade, uniforms, sources) {\n    for (const name in uniforms) {\n        const setter = shade._uniformSetters[name];\n        if (setter) {\n            let value = uniforms[name];\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (typeof value === 'string' && sources) {\n                setter.setter(sources[value]);\n            }\n            else {\n                setter.setter(value);\n            }\n        }\n    }\n}\nfunction renderLayer(gl, layer, uniforms, target, source) {\n    if (target) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, target.frameBuffer);\n        gl.viewport(0, 0, target.width, target.height);\n    }\n    else {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    }\n    if (layer._data.drawSettings) {\n        applyDrawSettings(gl, layer._data.drawSettings);\n    }\n    for (const sketch of layer.sketches) {\n        draw(gl, sketch, uniforms, source);\n    }\n    if (layer._data.drawSettings) {\n        revertDrawSettings(gl, layer._data.drawSettings);\n    }\n}\nfunction renderFrame(gl, frame) {\n    for (let i = 0; i < frame.layers.length; i++) {\n        const layer = frame.layers[i];\n        const layerPasses = layer._uniforms.length || 1;\n        for (let j = 0; j < layerPasses; j++) {\n            const target = frame._targets[0];\n            const sources = i + j === 0 && frame._textures.length\n                ? frame._textures\n                : frame._targets[1] && frame._targets[1].textures;\n            renderLayer(gl, layer, layer._uniforms[j], target, sources);\n            frame._swapTargets();\n        }\n    }\n}\n//# sourceMappingURL=painter.js.map","import { once } from './scheduler'\nimport { windowSize } from 'tvs-libs/dist/events/dom'\nimport { keyboard, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { mouse, MouseState } from 'tvs-libs/dist/events/mouse'\nimport { deepOverride } from 'tvs-libs/dist/utils/object'\nimport { PainterOptions } from 'tvs-painter'\nimport { Form } from 'tvs-painter/dist/form'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport { Layer } from 'tvs-painter/dist/layer'\nimport { Painter } from 'tvs-painter/dist/painter'\nimport { Shade } from 'tvs-painter/dist/shade'\nimport { Sketch } from 'tvs-painter/dist/sketch'\n\n// === Painter ===\n\nlet currentCanvas: HTMLCanvasElement\nlet painter: Painter\n\nexport function getPainter(canvas: HTMLCanvasElement, opts?: PainterOptions) {\n\tinit(canvas, opts)\n\treturn painter\n}\n\nconst forms: { [id: string]: Form } = {}\nexport function getForm(painter: Painter, id: string) {\n\treturn forms[id] || (forms[id] = painter.createForm('Form_' + id))\n}\n\nconst shades: { [id: string]: Shade } = {}\nexport function getShade(painter: Painter, id: string) {\n\treturn shades[id] || (shades[id] = painter.createShade('Shade_' + id))\n}\n\nconst sketches: { [id: string]: Sketch } = {}\nexport function getSketch(painter: Painter, id: string) {\n\treturn sketches[id] || (sketches[id] = painter.createSketch('Sketch_' + id))\n}\n\nconst layers: { [id: string]: Layer } = {}\nexport function getLayer(painter: Painter, id: string) {\n\treturn layers[id] || (layers[id] = painter.createLayer('Layer_' + id))\n}\n\nconst frames: { [id: string]: Frame } = {}\nexport function getFrame(painter: Painter, id: string) {\n\treturn frames[id] || (frames[id] = painter.createFrame('Frame_' + id))\n}\n\nconst effects: { [id: string]: Layer } = {}\nexport function getEffect(painter: Painter, id: string) {\n\treturn effects[id] || (effects[id] = painter.createEffect('Effect_' + id))\n}\n\n// === State ===\n\nexport interface BaseState {\n\tdevice: {\n\t\ttpf: number\n\t\tcanvas: HTMLCanvasElement\n\t\tmouse: MouseState\n\t\tkeys: KeyState\n\t\tsizeMultiplier: number\n\t\tkeepCanvasSize?: boolean\n\t}\n}\n\nexport const state: BaseState = {\n\tdevice: {\n\t\ttpf: 0,\n\t\tsizeMultiplier: 1,\n\t},\n} as BaseState\n;(window as any).state = state\n\nexport function get<\n\tS extends BaseState = BaseState,\n\tK extends keyof S = keyof S\n>(prop: K): S[K] {\n\treturn (state as S)[prop]\n}\n\nexport function set<\n\tS extends BaseState = BaseState,\n\tK extends keyof S = keyof S\n>(key: K, val: S[K], opts?: { reset: any }) {\n\tconst s = state as S\n\tif (s[key]) {\n\t\tconst reset = opts && opts.reset\n\t\tif (reset !== true) {\n\t\t\tval = deepOverride(val, s[key], { ignore: reset })\n\t\t}\n\t}\n\ts[key] = val\n}\n\nexport function getState<S extends BaseState>() {\n\treturn state as S\n}\n\n// === Systems ===\n\ntype ActionHandler<S extends BaseState = BaseState> = (\n\tevent: string,\n\tstate: S,\n) => void\n\nconst systems: { [id: string]: ActionHandler<any> } = {}\n\nexport function addSystem<S extends BaseState = BaseState>(\n\tid: string,\n\ts: ActionHandler<S>,\n) {\n\tsystems[id] = s\n}\n\nexport function dispatch(event: string) {\n\tfor (const k in systems) {\n\t\tsystems[k](event, state)\n\t}\n}\n\nexport const baseEvents = {\n\tFRAME: 'frame',\n\tRESIZE: 'resize',\n}\n\n// === Init ===\n\nlet cancelWindow: () => void\nlet cancelMouse: () => void\nlet cancelKeys: () => void\n\nexport function init(canvas: HTMLCanvasElement, opts?: PainterOptions) {\n\tif (canvas !== currentCanvas) {\n\t\tcurrentCanvas = canvas\n\n\t\tpainter = new Painter(canvas, opts)\n\n\t\tstate.device.canvas = canvas\n\n\t\tcancelWindow && cancelWindow()\n\t\tcancelMouse && cancelMouse()\n\t\tcancelKeys && cancelKeys()\n\n\t\tcancelWindow = windowSize(() =>\n\t\t\tonce(() => {\n\t\t\t\tpainter.sizeMultiplier = state.device.sizeMultiplier\n\t\t\t\tpainter.resize()\n\t\t\t\tdispatch(baseEvents.RESIZE)\n\t\t\t}, 'resize'),\n\t\t)\n\n\t\tcancelMouse = mouse(\n\t\t\t{ element: canvas, enableRightButton: true },\n\t\t\tm => (state.device.mouse = m),\n\t\t)\n\n\t\tcancelKeys = keyboard(k => (state.device.keys = k))\n\t}\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function deepmerge(obj1, obj2) {\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        const result = Object.assign({}, obj1);\n        for (const key in obj2) {\n            const val1 = obj1[key];\n            const val2 = obj2[key];\n            if (typeof val2 !== 'undefined') {\n                result[key] = deepmerge(val1, val2);\n            }\n            else {\n                delete result[key];\n            }\n        }\n        return result;\n    }\n    return obj2;\n}\nexport function deepOverride(obj1, obj2, opt) {\n    const ignore = opt && opt.ignore;\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        for (const key in obj1) {\n            if (obj1.hasOwnProperty(key) &&\n                !(ignore && key in ignore && ignore[key] === true)) {\n                const val1 = obj1[key];\n                const val2 = obj2[key];\n                if (val2 !== undefined) {\n                    obj1[key] = deepOverride(val1, val2, {\n                        ignore: ignore && ignore[key],\n                    });\n                }\n            }\n        }\n        return obj1;\n    }\n    return obj2;\n}\n//# sourceMappingURL=object.js.map","export function plane(width, height, widthSegments, heightSegments) {\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    const gridX = widthSegments || 1;\n    const gridY = heightSegments || 1;\n    const gridX1 = gridX + 1;\n    const gridY1 = gridY + 1;\n    const segmentWidth = width / gridX;\n    const segmentHeight = height / gridY;\n    const vertices = new Float32Array(gridX1 * gridY1 * 3);\n    const normals = new Float32Array(gridX1 * gridY1 * 3);\n    const uvs = new Float32Array(gridX1 * gridY1 * 2);\n    let iy, ix;\n    let offset = 0;\n    let offset2 = 0;\n    for (iy = 0; iy < gridY1; iy++) {\n        const y = iy * segmentHeight - heightHalf;\n        for (ix = 0; ix < gridX1; ix++) {\n            const x = ix * segmentWidth - widthHalf;\n            vertices[offset] = x;\n            vertices[offset + 1] = -y;\n            normals[offset + 2] = 1;\n            uvs[offset2] = ix / gridX;\n            uvs[offset2 + 1] = 1 - iy / gridY;\n            offset += 3;\n            offset2 += 2;\n        }\n    }\n    offset = 0;\n    const indices = new (vertices.length / 3 > 65535 ? Uint32Array : Uint16Array)(gridX * gridY * 6);\n    for (iy = 0; iy < gridY; iy++) {\n        for (ix = 0; ix < gridX; ix++) {\n            const a = ix + gridX1 * iy;\n            const b = ix + gridX1 * (iy + 1);\n            const c = ix + 1 + gridX1 * (iy + 1);\n            const d = ix + 1 + gridX1 * iy;\n            indices[offset] = a;\n            indices[offset + 1] = b;\n            indices[offset + 2] = d;\n            indices[offset + 3] = b;\n            indices[offset + 4] = c;\n            indices[offset + 5] = d;\n            offset += 6;\n        }\n    }\n    return {\n        attribs: {\n            position: {\n                buffer: vertices,\n            },\n            normal: {\n                buffer: normals,\n            },\n            uv: {\n                buffer: uvs,\n            },\n        },\n        elements: {\n            buffer: indices,\n        },\n        drawType: 'TRIANGLES',\n        itemCount: indices.length,\n    };\n}\n//# sourceMappingURL=plane.js.map","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import { randInt, randIntInRange } from '../math/random';\nexport function pickRandom(arr) {\n    return arr[randInt(arr.length)];\n}\nexport function doTimes(fn, count) {\n    for (let i = 0; i < count; i++) {\n        fn(i);\n    }\n}\nexport function times(fn, count, res = []) {\n    for (let i = 0; i < count; i++) {\n        res[i] = fn(i);\n    }\n    return res;\n}\nexport function zip(fn, as, bs, res = []) {\n    const length = Math.min(as.length, bs.length);\n    for (let i = 0; i < length; i++) {\n        res[i] = fn(as[i], bs[i]);\n    }\n    return res;\n}\nexport function flatten(array, res = []) {\n    for (const subarray of array) {\n        const currentLength = res.length;\n        for (let i = 0; i < subarray.length; i++) {\n            res[i + currentLength] = subarray[i];\n        }\n    }\n    return res;\n}\nexport function mapcat(fn, array, res = []) {\n    return flatten(array.map(fn), res);\n}\nexport function shuffle(arr) {\n    const shuffled = [];\n    for (let i = 0; i < arr.length; i++) {\n        const j = randIntInRange(i, arr.length);\n        const temp = shuffled[i] !== undefined ? shuffled[i] : arr[i];\n        shuffled[i] = shuffled[j] !== undefined ? shuffled[j] : arr[j];\n        shuffled[j] = temp;\n    }\n    return shuffled;\n}\nexport function map(fn, coll) {\n    if (Array.isArray(coll)) {\n        return coll.map(fn);\n    }\n    else {\n        const obj = {};\n        for (const key in coll) {\n            obj[key] = fn(coll[key], key);\n        }\n        return obj;\n    }\n}\nexport function each(fn, coll) {\n    for (const key in coll) {\n        fn(coll[key], key);\n    }\n}\n//# sourceMappingURL=sequence.js.map","export var Keys;\n(function (Keys) {\n    Keys[Keys[\"CANCEL\"] = 3] = \"CANCEL\";\n    Keys[Keys[\"HELP\"] = 6] = \"HELP\";\n    Keys[Keys[\"BACK_SPACE\"] = 8] = \"BACK_SPACE\";\n    Keys[Keys[\"TAB\"] = 9] = \"TAB\";\n    Keys[Keys[\"CLEAR\"] = 12] = \"CLEAR\";\n    Keys[Keys[\"RETURN\"] = 13] = \"RETURN\";\n    Keys[Keys[\"ENTER\"] = 14] = \"ENTER\";\n    Keys[Keys[\"SHIFT\"] = 16] = \"SHIFT\";\n    Keys[Keys[\"CONTROL\"] = 17] = \"CONTROL\";\n    Keys[Keys[\"ALT\"] = 18] = \"ALT\";\n    Keys[Keys[\"PAUSE\"] = 19] = \"PAUSE\";\n    Keys[Keys[\"CAPS_LOCK\"] = 20] = \"CAPS_LOCK\";\n    Keys[Keys[\"ESCAPE\"] = 27] = \"ESCAPE\";\n    Keys[Keys[\"SPACE\"] = 32] = \"SPACE\";\n    Keys[Keys[\"PAGE_UP\"] = 33] = \"PAGE_UP\";\n    Keys[Keys[\"PAGE_DOWN\"] = 34] = \"PAGE_DOWN\";\n    Keys[Keys[\"END\"] = 35] = \"END\";\n    Keys[Keys[\"HOME\"] = 36] = \"HOME\";\n    Keys[Keys[\"LEFT\"] = 37] = \"LEFT\";\n    Keys[Keys[\"UP\"] = 38] = \"UP\";\n    Keys[Keys[\"RIGHT\"] = 39] = \"RIGHT\";\n    Keys[Keys[\"DOWN\"] = 40] = \"DOWN\";\n    Keys[Keys[\"PRINTSCREEN\"] = 44] = \"PRINTSCREEN\";\n    Keys[Keys[\"INSERT\"] = 45] = \"INSERT\";\n    Keys[Keys[\"DELETE\"] = 46] = \"DELETE\";\n    Keys[Keys[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    Keys[Keys[\"DIGIT_1\"] = 49] = \"DIGIT_1\";\n    Keys[Keys[\"DIGIT_2\"] = 50] = \"DIGIT_2\";\n    Keys[Keys[\"DIGIT_3\"] = 51] = \"DIGIT_3\";\n    Keys[Keys[\"DIGIT_4\"] = 52] = \"DIGIT_4\";\n    Keys[Keys[\"DIGIT_5\"] = 53] = \"DIGIT_5\";\n    Keys[Keys[\"DIGIT_6\"] = 54] = \"DIGIT_6\";\n    Keys[Keys[\"DIGIT_7\"] = 55] = \"DIGIT_7\";\n    Keys[Keys[\"DIGIT_8\"] = 56] = \"DIGIT_8\";\n    Keys[Keys[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    Keys[Keys[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    Keys[Keys[\"EQUALS\"] = 61] = \"EQUALS\";\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    Keys[Keys[\"CONTEXT_MENU\"] = 93] = \"CONTEXT_MENU\";\n    Keys[Keys[\"NUMPAD0\"] = 96] = \"NUMPAD0\";\n    Keys[Keys[\"NUMPAD1\"] = 97] = \"NUMPAD1\";\n    Keys[Keys[\"NUMPAD2\"] = 98] = \"NUMPAD2\";\n    Keys[Keys[\"NUMPAD3\"] = 99] = \"NUMPAD3\";\n    Keys[Keys[\"NUMPAD4\"] = 100] = \"NUMPAD4\";\n    Keys[Keys[\"NUMPAD5\"] = 101] = \"NUMPAD5\";\n    Keys[Keys[\"NUMPAD6\"] = 102] = \"NUMPAD6\";\n    Keys[Keys[\"NUMPAD7\"] = 103] = \"NUMPAD7\";\n    Keys[Keys[\"NUMPAD8\"] = 104] = \"NUMPAD8\";\n    Keys[Keys[\"NUMPAD9\"] = 105] = \"NUMPAD9\";\n    Keys[Keys[\"MULTIPLY\"] = 106] = \"MULTIPLY\";\n    Keys[Keys[\"ADD\"] = 107] = \"ADD\";\n    Keys[Keys[\"SEPARATOR\"] = 108] = \"SEPARATOR\";\n    Keys[Keys[\"SUBTRACT\"] = 109] = \"SUBTRACT\";\n    Keys[Keys[\"DECIMAL\"] = 110] = \"DECIMAL\";\n    Keys[Keys[\"DIVIDE\"] = 111] = \"DIVIDE\";\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    Keys[Keys[\"F13\"] = 124] = \"F13\";\n    Keys[Keys[\"F14\"] = 125] = \"F14\";\n    Keys[Keys[\"F15\"] = 126] = \"F15\";\n    Keys[Keys[\"F16\"] = 127] = \"F16\";\n    Keys[Keys[\"F17\"] = 128] = \"F17\";\n    Keys[Keys[\"F18\"] = 129] = \"F18\";\n    Keys[Keys[\"F19\"] = 130] = \"F19\";\n    Keys[Keys[\"F20\"] = 131] = \"F20\";\n    Keys[Keys[\"F21\"] = 132] = \"F21\";\n    Keys[Keys[\"F22\"] = 133] = \"F22\";\n    Keys[Keys[\"F23\"] = 134] = \"F23\";\n    Keys[Keys[\"F24\"] = 135] = \"F24\";\n    Keys[Keys[\"NUM_LOCK\"] = 144] = \"NUM_LOCK\";\n    Keys[Keys[\"SCROLL_LOCK\"] = 145] = \"SCROLL_LOCK\";\n    Keys[Keys[\"COMMA\"] = 188] = \"COMMA\";\n    Keys[Keys[\"PERIOD\"] = 190] = \"PERIOD\";\n    Keys[Keys[\"SLASH\"] = 191] = \"SLASH\";\n    Keys[Keys[\"BACK_QUOTE\"] = 192] = \"BACK_QUOTE\";\n    Keys[Keys[\"OPEN_BRACKET\"] = 219] = \"OPEN_BRACKET\";\n    Keys[Keys[\"BACK_SLASH\"] = 220] = \"BACK_SLASH\";\n    Keys[Keys[\"CLOSE_BRACKET\"] = 221] = \"CLOSE_BRACKET\";\n    Keys[Keys[\"QUOTE\"] = 222] = \"QUOTE\";\n    Keys[Keys[\"META\"] = 224] = \"META\";\n})(Keys || (Keys = {}));\nexport function keyboard(opts, callback) {\n    const cb = callback || opts;\n    const { element = window } = opts;\n    const pressed = {};\n    function onKeydown(event) {\n        pressed[event.keyCode] = Date.now();\n        cb(pressed);\n    }\n    function onKeyup(event) {\n        delete pressed[event.keyCode];\n        cb(pressed);\n    }\n    element.addEventListener('keyup', onKeyup, false);\n    element.addEventListener('keydown', onKeydown, false);\n    cb(pressed);\n    return function stop() {\n        element.removeEventListener('keyup', onKeyup);\n        element.removeEventListener('keydown', onKeydown);\n    };\n}\nexport function keyboardObserver(opts) {\n    const observer = {\n        Keys,\n        state: { pressed: {} },\n        destroy: () => { },\n    };\n    function callback(pressed) {\n        observer.state.pressed = pressed;\n    }\n    observer.destroy = keyboard(callback, opts);\n    return observer;\n}\n//# sourceMappingURL=keyboard.js.map","import { baseEvents, getPainter } from '../../shared-utils/painterState'\n\nexport const canvas = document.getElementById('canvas') as HTMLCanvasElement\nexport const paint = document.getElementById('paint') as HTMLCanvasElement\n\nexport const painter = getPainter(canvas)\n\nexport const gl = painter.gl\n\nexport const events = {\n\t...baseEvents,\n\tPROCESS_PAINT: 'process_paint',\n\tCLEANUP_PAINT: 'cleanup_paint',\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { addSystem } from '../../shared-utils/painterState'\nimport { events, paint } from './context'\n\nconst ctx = paint.getContext('2d')\nif (!ctx) throw Error('unable to initialize 2d context')\n\nconst data = ctx.getImageData(0, 0, paint.width, paint.height)\n\nfor (let i = 0; i < data.data.length; i += 4) {\n\tdata.data[i] = Math.random() > 0.5 ? 255 : 0\n\tdata.data[i + 3] = 255\n}\n\nctx.putImageData(data, 0, 0)\n\naddSystem('paint', (e, s) => {\n\tif (e === events.CLEANUP_PAINT) {\n\t\tctx.fillStyle = 'black'\n\t\tctx.fillRect(0, 0, paint.width, paint.height)\n\t}\n\n\tconst d = s.device\n\tif (e === events.PROCESS_PAINT && d.mouse.dragging && d.mouse.drag.event) {\n\t\tconst { clientX, clientY } = d.mouse.drag.event\n\t\tconst x = Math.floor((clientX / window.innerWidth) * paint.width)\n\t\tconst y = Math.floor((clientY / window.innerHeight) * paint.height)\n\t\tctx.fillStyle = 'white'\n\t\tctx.fillRect(x, y, 1, 1)\n\t}\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { mat4 } from 'gl-matrix'\nimport {\n\taddSystem,\n\tgetEffect,\n\tgetForm,\n\tgetFrame,\n\tgetShade,\n\tgetSketch,\n} from '../../shared-utils/painterState'\nimport { makeClear } from 'tvs-painter/dist/utils/context'\nimport { plane } from 'tvs-painter/dist/utils/geometry/plane'\nimport { events, gl, paint, painter } from './context'\nimport base from './glsl/base.frag'\nimport planeFrag from './glsl/plane-material.frag'\nimport planeVert from './glsl/plane-material.vert'\n\n// ===== gof layers =====\n\nconst paintFrame = getFrame(painter, 'paint')\n\nconst bufferSize = 256\n\nconst effect = getEffect(painter, 'layer').update({\n\tfrag: base,\n\tuniforms: {\n\t\tsize: bufferSize,\n\t\tpaint: () => paintFrame.image(),\n\t\tprevious: '0',\n\t},\n})\n\nexport const automaton = getFrame(painter, 'automaton').update({\n\tlayers: effect,\n\tselfReferencing: true,\n\twidth: bufferSize,\n\theight: bufferSize,\n\tbufferStructure: [\n\t\t{\n\t\t\tflipY: true,\n\t\t\twrap: 'REPEAT',\n\t\t},\n\t],\n})\n\n// ===== scene =====\n\nconst planMat = mat4.fromTranslation(mat4.create(), [0, 0, -3])\nconst rotation = 0.001\nconst projection = mat4.perspective(mat4.create(), 45, 1, 0.01, 10)\n\nconst form = getForm(painter, 'plane').update(plane(2, 2))\n\nconst shade = getShade(painter, 'plane').update({\n\tvert: planeVert,\n\tfrag: planeFrag,\n})\n\nexport const sketch = getSketch(painter, 'plane').update({\n\tform,\n\tshade,\n\tuniforms: {\n\t\tprojection,\n\t\ttransform: () => mat4.rotateY(planMat, planMat, rotation),\n\t\ttex: () => automaton.image(),\n\t},\n\tdrawSettings: {\n\t\tclearColor: [0.0, 1.0, 0.0, 1.0],\n\t\tclearBits: makeClear(gl, 'color'),\n\t},\n})\n\n// ===== state =====\n\naddSystem('renderer', e => {\n\tif (e === events.FRAME) {\n\t\tpaintFrame.update({ texture: { asset: paint } })\n\t}\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D paint;\\nuniform sampler2D previous;\\nuniform float size;\\nvarying vec2 coords;\\n\\nint getCell(vec2 uv) {\\n\\tvec4 paintTex = texture2D(paint, uv);\\n\\tvec4 prevTex = texture2D(previous, uv);\\n\\tif (paintTex.r > 0.0 || prevTex.r > 0.0) {\\n\\t\\treturn 1;\\n\\t} else {\\n\\t\\treturn 0;\\n\\t}\\n}\\n\\nvoid main() {\\n\\tfloat one = 1.0 / size;\\n\\tvec2 uvR = vec2(coords.x + one, coords.y);\\n\\tvec2 uvL = vec2(coords.x - one, coords.y);\\n\\tvec2 uvRT = vec2(coords.x + one, coords.y - one);\\n\\tvec2 uvLT = vec2(coords.x - one, coords.y - one);\\n\\tvec2 uvRB = vec2(coords.x + one, coords.y + one);\\n\\tvec2 uvLB = vec2(coords.x - one, coords.y + one);\\n\\tvec2 uvT = vec2(coords.x, coords.y - one);\\n\\tvec2 uvB = vec2(coords.x, coords.y + one);\\n\\n\\tvec4 paintTex = texture2D(paint, coords);\\n\\tvec4 prevTex = texture2D(previous, coords);\\n\\n\\tint cellL = getCell(uvL);\\n\\tint cellR = getCell(uvR);\\n\\tint cellT = getCell(uvT);\\n\\tint cellB = getCell(uvB);\\n\\tint cellTL = getCell(uvLT);\\n\\tint cellTR = getCell(uvRT);\\n\\tint cellBL = getCell(uvLB);\\n\\tint cellBR = getCell(uvRB);\\n\\n\\tint neighbours = cellL + cellR + cellT + cellB + cellTL + cellTR + cellBL + cellBR;\\n\\n\\tvec4 color = vec4(vec3(0.0), 1.0);\\n\\tif (neighbours == 3 || (neighbours == 2 && prevTex.r > 0.0) || paintTex.r > 0.0) {\\n\\t\\tcolor = vec4(1.0, 0.0, 1.0, 1.0);\\n\\t}\\n\\n\\tgl_FragColor = color;\\n}\\n\";","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\nattribute vec2 uv;\\nuniform mat4 projection;\\nuniform mat4 transform;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = projection * transform * vec4(position, 1.0);\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\nuniform sampler2D tex;\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\tgl_FragColor = texture2D(tex, vUv);\\n}\\n\";","import { dispatch, get } from '../../shared-utils/painterState'\nimport { repeat } from '../../shared-utils/scheduler'\nimport { events, painter } from './context'\nimport './paint'\nimport { automaton, sketch } from './renderer'\n\nrepeat(tpf => {\n\tget('device').tpf = tpf\n\tdispatch(events.PROCESS_PAINT)\n\tdispatch(events.FRAME)\n\tpainter.compose(automaton)\n\tpainter.draw(sketch)\n\tdispatch(events.CLEANUP_PAINT)\n}, 'loop')\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function randInt(int) {\n    return Math.floor(Math.random() * int);\n}\nexport function randIntInRange(from, to) {\n    return randInt(to - from) + from;\n}\nexport function normalRand() {\n    return (Math.random() + Math.random() + Math.random()) / 3;\n}\n//# sourceMappingURL=random.js.map","// onNextTick\n// schedule actions on next animation frame\n\ntype Callback = (n: number) => void\n\nlet updateOnce: { [id: string]: Callback } | null = null\nconst updateRepeat: { [id: string]: Callback } = {}\n\nlet willUpdate = false\n\nlet uidCounter = 0\n\nlet oldTime = 0\n\nfunction processUpdates(time: number) {\n\tconst tpf = oldTime ? time - oldTime : oldTime\n\toldTime = time\n\n\tif (updateOnce) {\n\t\tfor (const id in updateOnce) {\n\t\t\tupdateOnce[id](tpf)\n\t\t}\n\t\tupdateOnce = null\n\t}\n\n\tlet updates = 0\n\tfor (const id in updateRepeat) {\n\t\tupdates++\n\t\tupdateRepeat[id](tpf)\n\t}\n\n\tif (!updates) {\n\t\twillUpdate = false\n\t\toldTime = 0\n\t} else {\n\t\trequestAnimationFrame(processUpdates)\n\t}\n}\n\nexport function once(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateOnce = updateOnce || {}\n\tupdateOnce[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n}\n\nexport function repeat(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateRepeat[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n\n\treturn id\n}\n\nexport function stop(id: Callback | string | number) {\n\tif (typeof id === 'function') {\n\t\tid = id.name\n\t}\n\tdelete updateRepeat[id]\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export const and = (p1, p2) => (a, b) => p1(a, b) && p2(a, b);\nexport const not = (p) => (...args) => !p(...args);\nexport const defined = a => a != null;\nexport const notEmpty = a => a && a.length;\nexport const unequal = (a, b) => a !== b;\nexport const equal = (a, b) => a === b;\nexport function equalArray(arr1, arr2) {\n    if (arr1 === arr2) {\n        return true;\n    }\n    if (!arr2 || !arr1) {\n        return false;\n    }\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalObject(obj1, obj2) {\n    if (obj1 === obj2) {\n        return true;\n    }\n    if (!obj2) {\n        return false;\n    }\n    const k1 = Object.keys(obj1);\n    const k2 = Object.keys(obj2);\n    if (!equalArray(k1, k2)) {\n        return false;\n    }\n    for (const key of k1) {\n        if (obj1[key] !== obj2[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=predicates.js.map","export function makeClear(gl, ...clearArray) {\n    return clearArray.reduce((res, item) => res | gl[item.toUpperCase() + '_BUFFER_BIT'], 0);\n}\nexport function setBlendFunc(gl, blendOpts) {\n    gl.blendFunc.apply(gl, blendOpts.map(opt => gl[opt.toUpperCase()]));\n}\n/**\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] optional `window.devicePixelRatio`.\n * @return {boolean} true if the canvas was resized.\n */\nexport function resizeCanvas(canvas, multiplier = 1) {\n    const width = (canvas.clientWidth * multiplier) | 0;\n    const height = (canvas.clientHeight * multiplier) | 0;\n    if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=context.js.map"],"sourceRoot":""}