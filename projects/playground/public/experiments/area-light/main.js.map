{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/contants.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/dom.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/asset-lib.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/render-utils.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/form.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/texture.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/render-target.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/frame.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/layer.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/shade.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/sketch.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/painter.js","webpack:///./shared-utils/painterState.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/object.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/predicates.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/utils/context.js","webpack:///./shared-utils/vr/camera.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/common.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/mat4.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/vec3.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/vec4.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/quat.js","webpack:////Users/trival/projects/personal/trivialspace/playground/node_modules/gl-matrix/esm/mat3.js","webpack:///./shared-utils/vr/perspectiveViewport.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/sequence.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/utils/geometry/plane.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/keyboard.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/math/random.js","webpack:///./experiments/area-light/context.ts","webpack:///./experiments/area-light/state.ts","webpack:///./experiments/area-light/renderer.ts","webpack:///./experiments/area-light/shaders/geo-frag.glsl","webpack:///./experiments/area-light/shaders/geo-vert.glsl","webpack:///./experiments/area-light/shaders/light-frag.glsl","webpack:///./experiments/area-light/index.ts","webpack:///./shared-utils/scheduler.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/pointer.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GEOMETRY_PROP_POSITION","GEOMETRY_PROP_NORMAL","GEOMETRY_PROP_UV","UNIFORM_SOURCE_TEXTURE","VARYING_UV_COORDS","GL_TYPE","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","FLOAT_MAT2X3","FLOAT_MAT2X4","FLOAT_MAT3X2","FLOAT_MAT3X4","FLOAT_MAT4X2","FLOAT_MAT4X3","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_3D","TEXTURE_2D_ARRAY","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","FLOAT_32_UNSIGNED_INT_24_8_REV","UNSIGNED_INT_24_8","TEXTURE_FORMAT","TEXTURE_FORMAT_INTERNAL","windowSize","callback","resize","width","window","innerWidth","height","innerHeight","addEventListener","removeEventListener","defaultTextureSettings","defaultForms","renderQuad","attribs","buffer","Float32Array","storeType","drawType","itemCount","defaultShaders","basicEffect","vert","frag","getBindPointForSamplerType","type","typeMap","bindPoint","intSetter","gl","location","v","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","texture","activeTexture","TEXTURE0","bindTexture","_texture","samplerArraySetter","size","units","Int32Array","textures","index","Type","setter","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Uint32Array","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","floatAttribSetter","typeInfo","b","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","itemSize","normalize","stride","offset","intAttribSetter","vertexAttribIPointer","matAttribSetter","defaultSize","count","numComponents","rowOffset","attrTypeMap","Int8Array","Uint8Array","Int16Array","Uint16Array","applyDrawSettings","settings","enable","setting","disable","blendFunc","apply","depthFunc","cullFace","frontFace","lineWidth","colorMask","depthMask","clearColor","clearDepth","clearBits","clear","revertDrawSettings","formCounter","_painter","id","this","data","_drawType","_itemCount","_attribs","attribData","createBuffer","bufferData","elements","_elements","glType","typedArray","Uint8ClampedArray","Error","getGLTypeForTypedArray","ELEMENT_ARRAY_BUFFER","deleteBuffer","undefined","textureCount","_data","createTexture","wrap","wrapS","wrapT","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","magFilter","TEXTURE_MAG_FILTER","minFilter","TEXTURE_MIN_FILTER","asset","texImage2D","RGBA","isWebGL2","RGBA32F","flipY","pixelStorei","UNPACK_FLIP_Y_WEBGL","indexOf","generateMipmap","assign","deleteTexture","antialias","frameBuffer","antiAliasFrameBuffer","antiAliasRenderBuffer","depthBuffer","bufferStructure","_a","length","every","buf","createFramebuffer","createRenderbuffer","some","getExtension","texCount","bufferAttachments","COLOR_ATTACHMENT0","bindFramebuffer","FRAMEBUFFER","glx","attachment","COLOR_ATTACHMENT0_WEBGL","drawBuffers","drawBuffersWEBGL","gl2","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","Math","min","getParameter","MAX_SAMPLES","RGBA8","framebufferRenderbuffer","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","renderbufferStorage","update","framebufferTexture2D","err","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","console","error","deleteFramebuffer","deleteRenderbuffer","frameCount","layers","_targets","_textures","Array","isArray","selfReferencing","layerCount","reduce","layer","_uniforms","targetCount","drawingBufferWidth","drawingBufferHeight","_destroyTargets","targetData","forEach","tex","destroy","tmp","Layer","sketches","sketch","shade","uniforms","shadeCounter","fragSource","trim","vertSource","program","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","_program","_frag","_vert","attachShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","addLineNumbers","linkProgram","getProgramParameter","LINK_STATUS","lastError","getProgramInfoLog","_uniformSetters","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","substr","toString","uniformSetters","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","createUniformSetters","_attributeSetters","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","createAttributeSetters","deleteProgram","deleteShader","src","split","map","line","join","sketchCounter","Sketch","drawSettings","_drawSettings","form","canvas","opts","maxBufferSamples","useWebGL1","getContext","sizeMultiplier","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","getDefaultLayerSettings","_renderQuad","createForm","_staticSketch","createFlatSketch","createSketch","createShade","createLayer","globalUniforms","viewport","draw","frames","frame","renderFrame","idx","source","image","sources","useProgram","shadeForm","shadeUniforms","drawInstance","drawElements","drawArrays","renderLayer","target","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","clearBufferfv","COLOR","blitFramebuffer","COLOR_BUFFER_BIT","LINEAR","layerPasses","j","_swapTargets","currentCanvas","painter","getPainter","state","device","cancelWindow","cancelPointer","cancelKeys","dispatch","baseEvents","RESIZE","pointer","element","enableRightButton","holdRadius","holdDelay","keyboard","k","keys","init","getForm","shades","getShade","getSketch","getLayer","getFrame","createFrame","effects","getEffect","createEffect","tpf","prop","set","val","reset","deepOverride","obj1","obj2","opt","ignore","val1","val2","getState","systems","addSystem","event","FRAME","equalArray","arr1","arr2","equalObject","k1","makeClear","clearArray","res","item","toUpperCase","resizeCanvas","multiplier","clientWidth","clientHeight","PerspectiveCamera","props","position","rotationX","rotationY","rotationXMat","rotationYMat","projectionMat","viewMat","needsUpdateView","updateRotationX","updateRotationY","amount","fromXRotation","fromYRotation","dist","fromValues","add","scale","fromTranslation","multiply","invert","super","fovy","PI","aspect","near","far","needsUpdateProjection","perspective","WithKeyNavigation","Cam","speed","UP","W","holding","pressed","RIGHT","moveForward","DOWN","S","LEFT","A","moveLeft","D","WithMouseRotation","_oldMouse","x","y","dragging","deltaX","drag","deltaY","EPSILON","ARRAY_TYPE","RANDOM","random","out","clone","a","copy","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","identity","transpose","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","b0","b1","b2","b3","translate","z","rotate","rad","axis","b12","b20","b21","b22","len","hypot","sin","cos","rotateX","rotateY","rotateZ","fromScaling","fromRotation","fromZRotation","fromRotationTranslation","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","sqrt","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","left","right","bottom","top","rl","tb","nf","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","targetTo","str","frob","subtract","multiplyScalar","multiplyScalarAndAdd","exactEquals","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","max","arguments","mul","sub","divide","ceil","floor","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","mag","cosine","acos","zero","vec","div","sqrDist","sqrLen","fn","arg","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","dot","invDot","conjugate","fromMat3","fRoot","fTrace","fromEuler","halfToRad","cx","cy","cz","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","rotationTo","sqlerp","setAxes","view","ViewPort","moveSpeed","lookSpeed","camera","initPerspectiveViewport","e","viewPort","updatePosFromInput","updateRotFromPointer","pickRandom","arr","doTimes","times","zip","as","bs","flatten","array","subarray","currentLength","mapcat","coll","obj","each","plane","widthSegments","heightSegments","widthHalf","heightHalf","gridX","gridY","gridX1","gridY1","segmentWidth","segmentHeight","vertices","normals","uvs","iy","ix","offset2","indices","normal","uv","Keys","cb","onKeydown","keyCode","Date","now","onKeyup","randInt","int","randIntInRange","from","to","normalRand","document","getElementById","events","scene","time","groundColor","groundTransform","rotationSpeed","lightRotation","lightPosition","lightColor","lightBackColor","lightTransforms","geometry","planeForm","geoShade","img","Image","onload","groundSketch","transform","color","lightSketch","CULL_FACE","sceneLayer","projection","DEPTH_TEST","bufferSpec","lightLayer","eyePosition","lightMat","positions","colors","BLEND","light","compose","display","updateOnce","updateRepeat","willUpdate","uidCounter","oldTime","processUpdates","updates","requestAnimationFrame","once","repeat","stop","Buttons","MIDDLE","dX","dY","xMax","yMax","oX","oY","timeout","onPointerDown","isPrimary","button","clientX","clientY","clearTimeout","setTimeout","onPointerUp","_e","onPointerMove","preventDefault"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,I,iCClFrD,4MAAO,MAAMC,EAAyB,WACzBC,EAAuB,SACvBC,EAAmB,KACnBC,EAAyB,SACzBC,EAAoB,SACpBC,EAAU,CACnBC,MAAO,KACPC,WAAY,MACZC,WAAY,MACZC,WAAY,MACZC,IAAK,KACLC,SAAU,MACVC,SAAU,MACVC,SAAU,MACVC,KAAM,MACNC,UAAW,MACXC,UAAW,MACXC,UAAW,MACXC,WAAY,MACZC,WAAY,MACZC,WAAY,MACZC,WAAY,MACZC,aAAc,MACdC,WAAY,MACZC,kBAAmB,MACnBC,aAAc,MACdC,aAAc,MACdC,aAAc,MACdC,aAAc,MACdC,aAAc,MACdC,aAAc,MACdC,iBAAkB,MAClBC,wBAAyB,MACzBC,oBAAqB,MACrBC,aAAc,KACdC,kBAAmB,MACnBC,kBAAmB,MACnBC,kBAAmB,MACnBC,eAAgB,MAChBC,eAAgB,MAChBC,iBAAkB,MAClBC,qBAAsB,MACtBC,wBAAyB,MACzBC,wBAAyB,MACzBC,0BAA2B,MAC3BC,8BAA+B,MAC/BC,WAAY,KACZC,iBAAkB,MAClBC,WAAY,MACZC,iBAAkB,MAClBC,KAAM,KACNC,cAAe,KACfC,MAAO,KACPC,eAAgB,KAChBC,uBAAwB,MACxBC,uBAAwB,MACxBC,qBAAsB,MACtBC,WAAY,KACZC,4BAA6B,MAC7BC,6BAA8B,MAC9BC,yBAA0B,MAC1BC,+BAAgC,MAChCC,kBAAmB,OAEVC,EACJ,KADIA,EAEL,MAFKA,EAGJ,KAHIA,EAIH,KAJGA,EASQ,KAERC,EACL,MADKA,EAEJ,MAFIA,EAGH,MAHGA,EAIF,MAJEA,EAKH,MALGA,EAMF,MANEA,EAOD,MAPCA,EAQA,MARAA,EAyBF,MAzBEA,EA0BD,MA1BCA,EA2BA,MA3BAA,EA4BC,MA5BDA,EAiCF,MAjCEA,EAkCD,MAlCCA,EAmCA,MAnCAA,EAoCC,MApCDA,EA8CU,MA9CVA,EA+CU,MA/CVA,EAgDW,MAGnB3D,EAAQ8C,cAMR9C,EAAQgD,eAORhD,EAAQ6B,aAOR7B,EAAQC,O,ifClJN,SAAS2D,EAAWC,GACvB,SAASC,IACLD,EAAS,CACLE,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,cAKvB,OAFAH,OAAOI,iBAAiB,SAAUN,GAClCA,IACO,WACHE,OAAOK,oBAAoB,SAAUP,I,sBCTtC,MAAMQ,EACH,gBADGA,EAEE,SAFFA,EAGE,UAQR,MAAMC,EAAe,CACxBC,WAAY,CACRC,QAAS,CACL,CAAC,KAAmC,CAChCC,OAAQ,IAAIC,aAAa,EAAE,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,IACnDC,UAAW,UAEf,CAAC,KAA6B,CAC1BF,OAAQ,IAAIC,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC/CC,UAAW,WAGnBC,SAAU,iBACVC,UAAW,IAGNC,EAAiB,CAC1BC,YAAa,CACTC,KAAM,oBACG,wBACA,sBACF,0BAEZ,SAAiC,8BACd,qBAEdC,KAAM,+CACM,sBACL,mDAEa,QAAqC,aCxCjE,SAASC,EAA2BC,GAChC,OAAOC,EAAQD,GAAME,UA2BzB,SAASC,EAAUC,EAAIC,GACnB,OAAQC,IACJF,EAAGG,UAAUF,EAAUC,IAG/B,SAASE,EAAeJ,EAAIC,GACxB,OAAQC,IACJF,EAAGK,WAAWJ,EAAUC,IAGhC,SAASI,EAAcN,EAAIC,GACvB,OAAQC,IACJF,EAAGO,WAAWN,EAAUC,IAGhC,SAASM,EAAcR,EAAIC,GACvB,OAAQC,IACJF,EAAGS,WAAWR,EAAUC,IAGhC,SAASQ,EAAcV,EAAIC,GACvB,OAAQC,IACJF,EAAGW,WAAWV,EAAUC,IAyEhC,SAASU,EAAcZ,EAAIJ,EAAMiB,EAAMZ,GACnC,MAAMH,EAAYH,EAA2BC,GAC7C,OAAQkB,IACJd,EAAGG,UAAUF,EAAUY,GACvBb,EAAGe,cAAcf,EAAGgB,SAAWH,GAC/Bb,EAAGiB,YAAYnB,EAAWgB,EAAQI,WAG1C,SAASC,EAAmBnB,EAAIJ,EAAMiB,EAAMZ,EAAUmB,GAClD,MAAMtB,EAAYH,EAA2BC,GACvCyB,EAAQ,IAAIC,WAAWF,GAC7B,IAAK,IAAIjJ,EAAI,EAAGA,EAAIiJ,IAAQjJ,EACxBkJ,EAAMlJ,GAAK0I,EAAO1I,EAEtB,OAAQoJ,IACJvB,EAAGK,WAAWJ,EAAUoB,GACxB,IAAK,MAAMG,KAASD,EAChBvB,EAAGe,cAAcf,EAAGgB,SAAWK,EAAMG,IACrCxB,EAAGiB,YAAYnB,EAAWyB,EAASC,GAAON,WAOtD,MAAMrB,EAAU,CACZ,CAAC,IAAQpF,OAAQ,CACbgH,KAAMtC,aACNiC,KAAM,EACNM,OArJR,SAAqB1B,EAAIC,GACrB,OAAQC,IACJF,EAAG2B,UAAU1B,EAAUC,KAoJvB0B,YAjJR,SAA0B5B,EAAIC,GAC1B,OAAQC,IACJF,EAAG6B,WAAW5B,EAAUC,MAiJ5B,CAAC,IAAQxF,YAAa,CAClB+G,KAAMtC,aACNiC,KAAM,EACNM,OAjJR,SAAyB1B,EAAIC,GACzB,OAAQC,IACJF,EAAG8B,WAAW7B,EAAUC,MAiJ5B,CAAC,IAAQvF,YAAa,CAClB8G,KAAMtC,aACNiC,KAAM,GACNM,OAjJR,SAAyB1B,EAAIC,GACzB,OAAQC,IACJF,EAAG+B,WAAW9B,EAAUC,MAiJ5B,CAAC,IAAQtF,YAAa,CAClB6G,KAAMtC,aACNiC,KAAM,GACNM,OAjJR,SAAyB1B,EAAIC,GACzB,OAAQC,IACJF,EAAGgC,WAAW/B,EAAUC,MAiJ5B,CAAC,IAAQrF,KAAM,CACX4G,KAAMH,WACNF,KAAM,EACNM,OAAQ3B,EACR6B,YAAaxB,GAEjB,CAAC,IAAQtF,UAAW,CAAE2G,KAAMH,WAAYF,KAAM,EAAGM,OAAQpB,GACzD,CAAC,IAAQvF,UAAW,CAAE0G,KAAMH,WAAYF,KAAM,GAAIM,OAAQlB,GAC1D,CAAC,IAAQxF,UAAW,CAAEyG,KAAMH,WAAYF,KAAM,GAAIM,OAAQhB,GAC1D,CAAC,IAAQrE,cAAe,CACpBoF,KAAMQ,YACNb,KAAM,EACNM,OAjIR,SAAoB1B,EAAIC,GACpB,OAAQC,IACJF,EAAGkC,WAAWjC,EAAUC,KAgIxB0B,YA7HR,SAAyB5B,EAAIC,GACzB,OAAQC,IACJF,EAAGmC,YAAYlC,EAAUC,MA6H7B,CAAC,IAAQ5D,mBAAoB,CACzBmF,KAAMQ,YACNb,KAAM,EACNM,OA7HR,SAAwB1B,EAAIC,GACxB,OAAQC,IACJF,EAAGoC,YAAYnC,EAAUC,MA6H7B,CAAC,IAAQ3D,mBAAoB,CACzBkF,KAAMQ,YACNb,KAAM,GACNM,OA7HR,SAAwB1B,EAAIC,GACxB,OAAQC,IACJF,EAAGqC,YAAYpC,EAAUC,MA6H7B,CAAC,IAAQ1D,mBAAoB,CACzBiF,KAAMQ,YACNb,KAAM,GACNM,OA7HR,SAAwB1B,EAAIC,GACxB,OAAQC,IACJF,EAAGsC,YAAYrC,EAAUC,MA6H7B,CAAC,IAAQjF,MAAO,CACZwG,KAAMQ,YACNb,KAAM,EACNM,OAAQ3B,EACR6B,YAAaxB,GAEjB,CAAC,IAAQlF,WAAY,CAAEuG,KAAMQ,YAAab,KAAM,EAAGM,OAAQpB,GAC3D,CAAC,IAAQnF,WAAY,CAAEsG,KAAMQ,YAAab,KAAM,GAAIM,OAAQlB,GAC5D,CAAC,IAAQpF,WAAY,CAAEqG,KAAMQ,YAAab,KAAM,GAAIM,OAAQhB,GAC5D,CAAC,IAAQrF,YAAa,CAClBoG,KAAMtC,aACNiC,KAAM,GACNM,OAtIR,SAAyB1B,EAAIC,GACzB,OAAQC,IACJF,EAAGuC,iBAAiBtC,GAAU,EAAOC,MAsIzC,CAAC,IAAQ5E,YAAa,CAClBmG,KAAMtC,aACNiC,KAAM,GACNM,OAtIR,SAAyB1B,EAAIC,GACzB,OAAQC,IACJF,EAAGwC,iBAAiBvC,GAAU,EAAOC,MAsIzC,CAAC,IAAQ3E,YAAa,CAClBkG,KAAMtC,aACNiC,KAAM,GACNM,OAtIR,SAAyB1B,EAAIC,GACzB,OAAQC,IACJF,EAAGyC,iBAAiBxC,GAAU,EAAOC,MAsIzC,CAAC,IAAQtE,cAAe,CACpB6F,KAAMtC,aACNiC,KAAM,GACNM,OAtIR,SAA0B1B,EAAIC,GAC1B,OAAQC,IACJF,EAAG0C,mBAAmBzC,GAAU,EAAOC,MAsI3C,CAAC,IAAQrE,cAAe,CACpB4F,KAAMtC,aACNiC,KAAM,GACNM,OAjIR,SAA0B1B,EAAIC,GAC1B,OAAQC,IACJF,EAAG2C,mBAAmB1C,GAAU,EAAOC,MAiI3C,CAAC,IAAQpE,cAAe,CACpB2F,KAAMtC,aACNiC,KAAM,GACNM,OA3IR,SAA0B1B,EAAIC,GAC1B,OAAQC,IACJF,EAAG4C,mBAAmB3C,GAAU,EAAOC,MA2I3C,CAAC,IAAQnE,cAAe,CACpB0F,KAAMtC,aACNiC,KAAM,GACNM,OAjIR,SAA0B1B,EAAIC,GAC1B,OAAQC,IACJF,EAAG6C,mBAAmB5C,GAAU,EAAOC,MAiI3C,CAAC,IAAQlE,cAAe,CACpByF,KAAMtC,aACNiC,KAAM,GACNM,OA3IR,SAA0B1B,EAAIC,GAC1B,OAAQC,IACJF,EAAG8C,mBAAmB7C,GAAU,EAAOC,MA2I3C,CAAC,IAAQjE,cAAe,CACpBwF,KAAMtC,aACNiC,KAAM,GACNM,OAtIR,SAA0B1B,EAAIC,GAC1B,OAAQC,IACJF,EAAG+C,mBAAmB9C,GAAU,EAAOC,MAsI3C,CAAC,IAAQ1E,YAAa,CAClBiG,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ7C,YAEvB,CAAC,IAAQxB,cAAe,CACpBgG,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ5C,kBAEvB,CAAC,IAAQxB,YAAa,CAClB+F,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ3C,YAEvB,CAAC,IAAQxB,mBAAoB,CACzB8F,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ7C,YAEvB,CAAC,IAAQf,kBAAmB,CACxBuF,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ1C,kBAEvB,CAAC,IAAQjB,yBAA0B,CAC/BsF,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ1C,kBAEvB,CAAC,IAAQhB,qBAAsB,CAC3BqF,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ5C,kBAEvB,CAAC,IAAQT,gBAAiB,CACtBgF,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ7C,YAEvB,CAAC,IAAQP,gBAAiB,CACtB+E,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ3C,YAEvB,CAAC,IAAQR,kBAAmB,CACxB8E,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ5C,kBAEvB,CAAC,IAAQN,sBAAuB,CAC5B6E,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ1C,kBAEvB,CAAC,IAAQP,yBAA0B,CAC/B4E,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ7C,YAEvB,CAAC,IAAQH,yBAA0B,CAC/B2E,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ3C,YAEvB,CAAC,IAAQJ,2BAA4B,CACjC0E,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ5C,kBAEvB,CAAC,IAAQF,+BAAgC,CACrCyE,KAAM,KACNL,KAAM,EACNM,OAAQd,EACRgB,YAAaT,EACbrB,UAAW,IAAQ1C,mBAG3B,SAAS4F,EAAkBhD,EAAIC,EAAUgD,GACrC,OAAQC,IACJlD,EAAGmD,WAAWnD,EAAGoD,aAAcF,EAAEhE,QACjCc,EAAGqD,wBAAwBpD,GAC3BD,EAAGsD,oBAAoBrD,EAAUgD,EAASM,SAAU,IAAQ9I,MAAOyI,EAAEM,YAAa,EAAON,EAAEO,QAAU,EAAGP,EAAEQ,QAAU,IAG5H,SAASC,EAAgB3D,EAAIC,EAAUgD,GACnC,OAAQC,IACJlD,EAAGmD,WAAWnD,EAAGoD,aAAcF,EAAEhE,QACjCc,EAAGqD,wBAAwBpD,GAC3BD,EAAG4D,qBAAqB3D,EAAUgD,EAASM,SAAU,IAAQ1I,IAAKqI,EAAEO,QAAU,EAAGP,EAAEQ,QAAU,IAGrG,SAASG,EAAgB7D,EAAIC,EAAUgD,GACnC,MAAMa,EAAcb,EAAS7B,KACvB2C,EAAQd,EAASc,MACvB,OAAQb,IACJlD,EAAGmD,WAAWnD,EAAGoD,aAAcF,EAAEhE,QACjC,MAAM8E,EAAgBF,EAChB1C,EAAO4C,EAAgBD,EAEvBN,EADW5D,EAAQ,IAAQpF,OACT2G,KAAO4C,EACzBR,EAAYN,EAAEM,YAAa,EAC3BE,EAASR,EAAEQ,QAAU,EACrBO,EAAYR,EAASM,EAC3B,IAAK,IAAI5L,EAAI,EAAGA,EAAI4L,IAAS5L,EACzB6H,EAAGqD,wBAAwBpD,EAAW9H,GACtC6H,EAAGsD,oBAAoBrD,EAAW9H,EAAGiJ,EAAM,IAAQ3G,MAAO+I,EAAWC,EAAQC,EAASO,EAAY9L,IAI9G,MAAM+L,EAAc,CAChB,CAAC,IAAQzJ,OAAQ,CAAE2G,KAAM,EAAGM,OAAQsB,EAAmBO,SAAU,GACjE,CAAC,IAAQ7I,YAAa,CAAE0G,KAAM,EAAGM,OAAQsB,EAAmBO,SAAU,GACtE,CAAC,IAAQ5I,YAAa,CAAEyG,KAAM,GAAIM,OAAQsB,EAAmBO,SAAU,GACvE,CAAC,IAAQ3I,YAAa,CAAEwG,KAAM,GAAIM,OAAQsB,EAAmBO,SAAU,GACvE,CAAC,IAAQ1I,KAAM,CAAEuG,KAAM,EAAGM,OAAQiC,EAAiBJ,SAAU,GAC7D,CAAC,IAAQzI,UAAW,CAAEsG,KAAM,EAAGM,OAAQiC,EAAiBJ,SAAU,GAClE,CAAC,IAAQxI,UAAW,CAAEqG,KAAM,GAAIM,OAAQiC,EAAiBJ,SAAU,GACnE,CAAC,IAAQvI,UAAW,CAAEoG,KAAM,GAAIM,OAAQiC,EAAiBJ,SAAU,GACnE,CAAC,IAAQlH,cAAe,CAAE+E,KAAM,EAAGM,OAAQiC,EAAiBJ,SAAU,GACtE,CAAC,IAAQjH,mBAAoB,CACzB8E,KAAM,EACNM,OAAQiC,EACRJ,SAAU,GAEd,CAAC,IAAQhH,mBAAoB,CACzB6E,KAAM,GACNM,OAAQiC,EACRJ,SAAU,GAEd,CAAC,IAAQ/G,mBAAoB,CACzB4E,KAAM,GACNM,OAAQiC,EACRJ,SAAU,GAEd,CAAC,IAAQtI,MAAO,CAAEmG,KAAM,EAAGM,OAAQiC,EAAiBJ,SAAU,GAC9D,CAAC,IAAQrI,WAAY,CAAEkG,KAAM,EAAGM,OAAQiC,EAAiBJ,SAAU,GACnE,CAAC,IAAQpI,WAAY,CAAEiG,KAAM,GAAIM,OAAQiC,EAAiBJ,SAAU,GACpE,CAAC,IAAQnI,WAAY,CAAEgG,KAAM,GAAIM,OAAQiC,EAAiBJ,SAAU,GACpE,CAAC,IAAQlI,YAAa,CAAE+F,KAAM,EAAGM,OAAQmC,EAAiBE,MAAO,GACjE,CAAC,IAAQzI,YAAa,CAAE8F,KAAM,EAAGM,OAAQmC,EAAiBE,MAAO,GACjE,CAAC,IAAQxI,YAAa,CAAE6F,KAAM,GAAIM,OAAQmC,EAAiBE,MAAO,IA2EjE,IAAQ1G,KAAO8G,UACf,IAAQ7G,cAAgB8G,WACxB,IAAQ7G,MAAQ8G,WAChB,IAAQ7G,eAAiB8G,YACzB,IAAQzJ,IAAMyG,WACd,IAAQjF,aAAe4F,YACvB,IAAQxH,MAAQ0E,aAChB,IAAQ1B,uBAAyB6G,YACjC,IAAQ5G,uBAAyB4G,YACjC,IAAQ3G,qBAAuB2G,YAC/B,IAAQ1G,WAAa0G,YACrB,IAAQzG,4BAA8BoE,YACtC,IAAQnE,6BAA+BmE,YACvC,IAAQlE,yBAA2BkE,YACnC,IAAQjE,+BAAiCiE,YACzC,IAAQhE,kBAAoBgE,YAyD1B,SAASsC,EAAkBvE,EAAIwE,GAClC,GAAIA,EAASC,OACT,IAAK,MAAMC,KAAWF,EAASC,OAC3BzE,EAAGyE,OAAOC,GAGlB,GAAIF,EAASG,QACT,IAAK,MAAMD,KAAWF,EAASG,QAC3B3E,EAAG2E,QAAQD,GAGfF,EAASI,WACT5E,EAAG4E,UAAUC,MAAM7E,EAAIwE,EAASI,WAEV,MAAtBJ,EAASM,WACT9E,EAAG8E,UAAUN,EAASM,WAED,MAArBN,EAASO,UACT/E,EAAG+E,SAASP,EAASO,UAEC,MAAtBP,EAASQ,WACThF,EAAGgF,UAAUR,EAASQ,WAEA,MAAtBR,EAASS,WACTjF,EAAGiF,UAAUT,EAASS,WAEtBT,EAASU,WACTlF,EAAGkF,UAAUL,MAAM7E,EAAIwE,EAASU,WAEV,MAAtBV,EAASW,WACTnF,EAAGmF,UAAUX,EAASW,WAEtBX,EAASY,YACTpF,EAAGoF,WAAWP,MAAM7E,EAAIwE,EAASY,YAEV,MAAvBZ,EAASa,YACTrF,EAAGqF,WAAWb,EAASa,YAED,MAAtBb,EAASc,WACTtF,EAAGuF,MAAMf,EAASc,WAGnB,SAASE,EAAmBxF,EAAIwE,GACnC,GAAIA,EAASC,OACT,IAAK,MAAMC,KAAWF,EAASC,OAC3BzE,EAAG2E,QAAQD,GAGnB,GAAIF,EAASG,QACT,IAAK,MAAMD,KAAWF,EAASG,QAC3B3E,EAAGyE,OAAOC,GC7mBtB,IAAIe,EAAc,EACX,MAAM,EACT,YAAYC,EAAUC,EAAK,OAASF,KAChCG,KAAKF,SAAWA,EAChBE,KAAKD,GAAKA,EAEd,OAAOE,GACH,MAAM7F,EAAK4F,KAAKF,SAAS1F,GACrB6F,EAAKxG,WACLuG,KAAKE,UAAY9F,EAAG6F,EAAKxG,WAEzBwG,EAAKvG,YACLsG,KAAKG,WAAaF,EAAKvG,WAE3BsG,KAAKI,SAAWJ,KAAKI,UAAY,GACjC,IAAK,MAAML,KAAME,EAAK5G,QAAS,CAC3B,MAAMgH,EAAaJ,EAAK5G,QAAQ0G,GACP,MAArBC,KAAKI,SAASL,KACdC,KAAKI,SAASL,GAAM,CAChBzG,OAAQc,EAAGkG,iBAGnBlG,EAAGmD,WAAWnD,EAAGoD,aAAcwC,KAAKI,SAASL,GAAIzG,QACjDc,EAAGmG,WAAWnG,EAAGoD,aAAc6C,EAAW/G,OAAQc,GAAIiG,EAAW7G,WAAa,UAAY,UAE9F,GAAIyG,EAAKO,SAAU,CACf,MAAMlH,EAAS2G,EAAKO,SAASlH,OACP,MAAlB0G,KAAKS,YACLT,KAAKS,UAAY,CACbnH,OAAQc,EAAGkG,eACXI,OAAQ,OAGhBV,KAAKS,UAAUC,ODmepB,SAAgCC,GACnC,GAAIA,aAAsBpC,UACtB,OAAO,IAAQ9G,KAEnB,GAAIkJ,aAAsBnC,WACtB,OAAO,IAAQ9G,cAEnB,GAAIiJ,aAAsBC,kBACtB,OAAO,IAAQlJ,cAEnB,GAAIiJ,aAAsBlC,WACtB,OAAO,IAAQ9G,MAEnB,GAAIgJ,aAAsBjC,YACtB,OAAO,IAAQ9G,eAEnB,GAAI+I,aAAsBjF,WACtB,OAAO,IAAQzG,IAEnB,GAAI0L,aAAsBtE,YACtB,OAAO,IAAQ5F,aAEnB,GAAIkK,aAAsBpH,aACtB,OAAO,IAAQ1E,MAEnB,MAAM,IAAIgM,MAAM,gCC5fgBC,CAAuBxH,GAC/Cc,EAAGmD,WAAWnD,EAAG2G,qBAAsBf,KAAKS,UAAUnH,QACtDc,EAAGmG,WAAWnG,EAAG2G,qBAAsBzH,EAAQc,GAAI6F,EAAKO,SAAShH,WAAa,UAAY,UAE9F,OAAOwG,KAEX,UACI,MAAM5F,EAAK4F,KAAKF,SAAS1F,GACzB,IAAK,MAAM2F,KAAMC,KAAKI,SAClBhG,EAAG4G,aAAahB,KAAKI,SAASL,GAAIzG,QAEtC0G,KAAKI,SAAW,GACZJ,KAAKS,YACLrG,EAAG4G,aAAahB,KAAKS,UAAUnH,QAC/B0G,KAAKS,eAAYQ,I,mBC/C7B,IAAIC,EAAe,EACZ,MAAM,EACT,YAAYpB,EAAUC,EAAK,UAAYmB,KACnClB,KAAKF,SAAWA,EAChBE,KAAKD,GAAKA,EACVC,KAAK1E,SAAW,KAChB0E,KAAKmB,MAAQ,GAEjB,OAAOlB,GACH,MAAM7F,EAAK4F,KAAKF,SAAS1F,GAKzB,GAJqB,MAAjB4F,KAAK1E,WACL0E,KAAK1E,SAAWlB,EAAGgH,iBAEvBhH,EAAGiB,YAAYjB,EAAG/C,WAAY2I,KAAK1E,UAC9B2E,EAAKoB,MAAQpB,EAAKoB,OAASrB,KAAKmB,MAAME,MACtCpB,EAAKqB,OAASrB,EAAKqB,QAAUtB,KAAKmB,MAAMG,OACxCrB,EAAKsB,OAAStB,EAAKsB,QAAUvB,KAAKmB,MAAMI,MAAQ,CACjD,IAAID,EAAOC,EACPtB,EAAKoB,KACLC,EAAQC,EAAQtB,EAAKoB,MAGrBE,EAAQtB,EAAKsB,OAASrI,EACtBoI,EAAQrB,EAAKqB,OAASpI,GAE1BkB,EAAGoH,cAAcpH,EAAG/C,WAAY+C,EAAGqH,eAAgBrH,EAAGkH,IACtDlH,EAAGoH,cAAcpH,EAAG/C,WAAY+C,EAAGsH,eAAgBtH,EAAGmH,SAE/CvB,KAAKmB,MAAME,MAAQrB,KAAKmB,MAAMG,OAAStB,KAAKmB,MAAMI,QACzDvB,KAAKmB,MAAME,KAAOrB,KAAKmB,MAAMI,MAAQvB,KAAKmB,MAAMG,MAAQpI,EACxDkB,EAAGoH,cAAcpH,EAAG/C,WAAY+C,EAAGqH,eAAgBrH,EAAG4F,KAAKmB,MAAME,OACjEjH,EAAGoH,cAAcpH,EAAG/C,WAAY+C,EAAGsH,eAAgBtH,EAAG4F,KAAKmB,MAAME,QAiCrE,OA/BIpB,EAAK0B,WAAa1B,EAAK0B,YAAc3B,KAAKmB,MAAMQ,UAChDvH,EAAGoH,cAAcpH,EAAG/C,WAAY+C,EAAGwH,mBAAoBxH,EAAG6F,EAAK0B,YAEzD3B,KAAKmB,MAAMQ,YACjB3B,KAAKmB,MAAMQ,UAAYzI,EACvBkB,EAAGoH,cAAcpH,EAAG/C,WAAY+C,EAAGwH,mBAAoBxH,EAAG4F,KAAKmB,MAAMQ,aAErE1B,EAAK4B,WAAa5B,EAAK4B,YAAc7B,KAAKmB,MAAMU,UAChDzH,EAAGoH,cAAcpH,EAAG/C,WAAY+C,EAAG0H,mBAAoB1H,EAAG6F,EAAK4B,YAEzD7B,KAAKmB,MAAMU,YACjB7B,KAAKmB,MAAMU,UAAY3I,EACvBkB,EAAGoH,cAAcpH,EAAG/C,WAAY+C,EAAG0H,mBAAoB1H,EAAG4F,KAAKmB,MAAMU,aAErE5B,EAAK8B,OACL3H,EAAG4H,WAAW5H,EAAG/C,WAAY,EAAG+C,EAAG6H,KAAM7H,EAAG6H,KAAM7H,EAAG1C,cAAeuI,EAAK8B,YAE3Dd,IAAdhB,EAAKA,MACL7F,EAAG4H,WAAW5H,EAAG/C,WAAY,EAAiB,UAAd4I,EAAKjG,MAAoBgG,KAAKF,SAASoC,SACjE9H,EAAG+H,QACH/H,EAAG6H,KAAMhC,EAAKtH,MACpBsH,EAAKnH,OAAQ,EAAGsB,EAAG6H,KAAM7H,EAAG6F,EAAKjG,MAAQ,iBAAkBiG,EAAKA,MAElD,MAAdA,EAAKmC,OAAiBnC,EAAKmC,QAAUpC,KAAKmB,MAAMiB,OAChDhI,EAAGiI,YAAYjI,EAAGkI,oBAAqBrC,EAAKmC,OAE5CnC,EAAK4B,WAAa5B,EAAK4B,UAAUU,QAAQ,UAAY,GACrDnI,EAAGoI,eAAepI,EAAG/C,YAEzB+C,EAAGiB,YAAYjB,EAAG/C,WAAY,MAC9BpE,OAAOwP,OAAOzC,KAAKmB,MAAOlB,GACnBD,KAEX,UACIA,KAAKF,SAAS1F,GAAGsI,cAAc1C,KAAK1E,UACpC0E,KAAKmB,MAAQ,GACbnB,KAAK1E,SAAW,MCpExB,IAAI,EAAc,EACX,MAAM,EACT,YAAYwE,EAAUC,EAAK,OAAS,KAChCC,KAAKF,SAAWA,EAChBE,KAAKD,GAAKA,EACVC,KAAKrH,MAAQ,EACbqH,KAAKlH,OAAS,EACdkH,KAAK2C,WAAY,EACjB3C,KAAK4C,YAAc,KACnB5C,KAAK6C,qBAAuB,KAC5B7C,KAAK8C,sBAAwB,KAC7B9C,KAAKrE,SAAW,GAChBqE,KAAK+C,YAAc,KACnB/C,KAAKgD,gBAAkB,GACvBhD,KAAKmB,MAAQ,GAEjB,OAAOlB,GACH,IAAIgD,EACJ,MAAM7I,EAAK4F,KAAKF,SAAS1F,GACnBzB,EAAQsH,EAAKtH,OAASqH,KAAKrH,MAC3BG,EAASmH,EAAKnH,QAAUkH,KAAKlH,OACnC,IAAMH,IAASG,EACX,OAAOkH,KAEN,GAAIrH,IAAUqH,KAAKrH,OAASG,IAAWkH,KAAKlH,OAAQ,CACrD,IAAKmH,EAAK+C,gBACN,OAAOhD,KACX,GAAIC,EAAK+C,gBAAgBE,SAAWlD,KAAKgD,gBAAgBE,QACrDlD,KAAKgD,gBAAgBG,MAAM,CAACC,EAAK7Q,IAAM,YAAY6Q,EAAKnD,EAAK+C,gBAAgBzQ,KAC7E,OAAOyN,KAGS,MAApBA,KAAK4C,cACL5C,KAAK4C,YAAcxI,EAAGiJ,qBAEF,MAApBrD,KAAK+C,cACL/C,KAAK+C,YAAc3I,EAAGkJ,sBAEtBrD,EAAK+C,iBAAmB/C,EAAK+C,gBAAgBE,SAC7ClD,KAAKgD,gBAAkB/C,EAAK+C,gBACxBhD,KAAKgD,gBAAgBO,KAAK9P,GAAgB,UAAXA,EAAEuG,QAC7BgG,KAAKF,SAASoC,SACd9H,EAAGoJ,aAAa,0BAGhBpJ,EAAGoJ,aAAa,uBAI5B,MAAMC,EAAWzD,KAAKgD,gBAAgBE,QAAU,EAC1CQ,EAAoB,CAACtJ,EAAGuJ,mBAE9B,GADAvJ,EAAGwJ,gBAAgBxJ,EAAGyJ,YAAa7D,KAAK4C,aACpCa,EAAW,EAAG,CACd,IAAIK,EACC9D,KAAKF,SAASoC,WACf4B,EAAM1J,EAAGoJ,aAAa,uBAE1B,MAAMO,EAAa/D,KAAKF,SAASoC,SAC3B9H,EAAGuJ,kBACHG,EAAIE,wBACV,IAAK,IAAIzR,EAAI,EAAGA,EAAIkR,EAAUlR,IAC1BmR,EAAkBnR,GAAKwR,EAAaxR,EAExCyN,KAAKF,SAASoC,SACR9H,EAAG6J,YAAYP,GACfI,EAAII,iBAAiBR,GAM/B,GAJA1D,KAAK2C,UACY,IAAbc,GACIzD,KAAKF,SAASoC,WACbjC,EAAK0C,YAAoC,QAArBM,EAAKjD,KAAKmB,aAA0B,IAAP8B,OAAgB,EAASA,EAAGN,YAClF3C,KAAK2C,UAAW,CAChB,MAAMwB,EAAM/J,EACqB,MAA7B4F,KAAK6C,uBACL7C,KAAK6C,qBAAuBzI,EAAGiJ,qBAED,MAA9BrD,KAAK8C,wBACL9C,KAAK8C,sBAAwB1I,EAAGkJ,sBAEpClJ,EAAGwJ,gBAAgBxJ,EAAGyJ,YAAa7D,KAAK6C,sBACxCzI,EAAGgK,iBAAiBhK,EAAGiK,aAAcrE,KAAK8C,uBAC1CqB,EAAIG,+BAA+BlK,EAAGiK,aAAcE,KAAKC,IAAI,EAAGpK,EAAGqK,aAAaN,EAAIO,cAAeP,EAAIQ,MAAOhM,EAAOG,GACrHsB,EAAGwK,wBAAwBxK,EAAGyJ,YAAazJ,EAAGuJ,kBAAmBvJ,EAAGiK,aAAcrE,KAAK8C,uBACvF1I,EAAGgK,iBAAiBhK,EAAGiK,aAAcrE,KAAK+C,aAC1CoB,EAAIG,+BAA+BlK,EAAGiK,aAAcE,KAAKC,IAAI,EAAGpK,EAAGqK,aAAaN,EAAIO,cAAetK,EAAGyK,kBAAmBlM,EAAOG,GAChIsB,EAAGwK,wBAAwBxK,EAAGyJ,YAAazJ,EAAG0K,iBAAkB1K,EAAGiK,aAAcrE,KAAK+C,aACtF3I,EAAGwJ,gBAAgBxJ,EAAGyJ,YAAa7D,KAAK4C,kBAGxCxI,EAAGgK,iBAAiBhK,EAAGiK,aAAcrE,KAAK+C,aAC1C3I,EAAG2K,oBAAoB3K,EAAGiK,aAAcjK,EAAGyK,kBAAmBlM,EAAOG,GACrEsB,EAAGwK,wBAAwBxK,EAAGyJ,YAAazJ,EAAG0K,iBAAkB1K,EAAGiK,aAAcrE,KAAK+C,aAE1F,IAAK,IAAIxQ,EAAI,EAAGA,EAAIkR,EAAUlR,IAAK,CAC1ByN,KAAKrE,SAASpJ,KACfyN,KAAKrE,SAASpJ,GAAK,IAAI,EAAQyN,KAAKF,SAAUE,KAAKD,GAAK,WAAaxN,IAEzE,MAAM2I,EAAU8E,KAAKrE,SAASpJ,GAC9B2I,EAAQ8J,OAAO/R,OAAOwP,OAAOxP,OAAOwP,OAAO,CAAEZ,UAAW,UAAWF,UAAW,WAAa3B,KAAKgD,gBAAgBzQ,IAAK,CAAE0N,KAAM,KAAMtH,QAC/HG,YACJsB,EAAG6K,qBAAqB7K,EAAGyJ,YAAaH,EAAkBnR,GAAI6H,EAAG/C,WAAY6D,EAAQI,SAAU,GAEnG,GAAI0E,KAAK2C,UAAW,CAChBvI,EAAGwJ,gBAAgBxJ,EAAGyJ,YAAa7D,KAAK6C,sBACxC,MAAMqC,EAAM9K,EAAG+K,uBAAuB/K,EAAGyJ,aACrCqB,IAAQ9K,EAAGgL,sBACXC,QAAQC,MAAM,8BAA+BJ,EAAKjF,GAEtD7F,EAAGwJ,gBAAgBxJ,EAAGyJ,YAAa7D,KAAK4C,aAE5C,MAAMsC,EAAM9K,EAAG+K,uBAAuB/K,EAAGyJ,aAUzC,OATIqB,IAAQ9K,EAAGgL,sBACXC,QAAQC,MAAM,oBAAqBJ,EAAKjF,GAE5C7F,EAAGwJ,gBAAgBxJ,EAAGyJ,YAAa,MACnCzJ,EAAGiB,YAAYjB,EAAG/C,WAAY,MAC9B+C,EAAGgK,iBAAiBhK,EAAGiK,aAAc,MACrCpR,OAAOwP,OAAOzC,KAAKmB,MAAOlB,GAC1BD,KAAKrH,MAAQA,EACbqH,KAAKlH,OAASA,EACPkH,KAEX,UACI,MAAM5F,EAAK4F,KAAKF,SAAS1F,GACzBA,EAAGmL,kBAAkBvF,KAAK4C,aAC1BxI,EAAGoL,mBAAmBxF,KAAK+C,aAC3B,IAAK,MAAM7H,KAAW8E,KAAKrE,SACvBvB,EAAGsI,cAAcxH,GAEjB8E,KAAK6C,sBACLzI,EAAGmL,kBAAkBvF,KAAK6C,sBAE1B7C,KAAK8C,uBACL1I,EAAGoL,mBAAmBxF,KAAK8C,uBAE/B9C,KAAKrE,SAAW,GAChBqE,KAAK4C,YAAc,KACnB5C,KAAK+C,YAAc,KACnB/C,KAAKmB,MAAQ,GACbnB,KAAKgD,gBAAkB,GACvBhD,KAAKrH,MAAQ,EACbqH,KAAKlH,OAAS,GC5ItB,IAAI2M,EAAa,EACV,MAAM,EACT,YAAY3F,EAAUC,EAAK,QAAU0F,KACjCzF,KAAKF,SAAWA,EAChBE,KAAKD,GAAKA,EACVC,KAAKrH,MAAQ,EACbqH,KAAKlH,OAAS,EACdkH,KAAK0F,OAAS,GACd1F,KAAKmB,MAAQ,GACbnB,KAAK2F,SAAW,GAChB3F,KAAK4F,UAAY,GAErB,MAAMrT,EAAI,GACN,OAASyN,KAAK2F,SAASzC,QACnBlD,KAAK2F,SAAS3F,KAAK2F,SAASzC,OAAS,GAAGvH,SAASpJ,IACjDyN,KAAK4F,UAAUrT,GAEvB,OAAO0N,EAAO,IACV,MAAM7F,EAAK4F,KAAKF,SAAS1F,GACnBsL,EAASG,MAAMC,QAAQ7F,EAAKyF,QAC5BzF,EAAKyF,OACLzF,EAAKyF,OACD,CAACzF,EAAKyF,QACN1F,KAAK0F,OACTK,EAAkB9F,EAAK8F,iBAAmB/F,KAAKmB,MAAM4E,gBACrDC,EAAaN,EAAOO,OAAO,CAAC9H,EAAO+H,IAAU/H,GAAS+H,EAAMC,UAAUjD,QAAU,GAAI,GACpFkD,EAAcL,GAAmBC,EAAa,EAAI,EAAIA,EACtDrN,EAAQsH,EAAKtH,OAASqH,KAAKmB,MAAMxI,OAASyB,EAAGiM,mBAC7CvN,EAASmH,EAAKnH,QAAUkH,KAAKmB,MAAMrI,QAAUsB,EAAGkM,oBAChD3D,EAAY1C,EAAK0C,WAAa3C,KAAKmB,MAAMwB,YAAa,EACxDyD,IAAgBpG,KAAK2F,SAASzC,QAC9BlD,KAAKuG,kBAET,MAAMC,EAAavT,OAAOwP,OAAOxP,OAAOwP,OAAO,GAAIxC,GAAO,CAAEtH,QAAOG,SAAQ6J,cAsB3E,OArBK3C,KAAK2F,SAASzC,QAAUkD,EAAc,EACvCpG,KAAK2F,SAAW,YAAMpT,GAAK,IAAI,EAAayN,KAAKF,SAAUE,KAAKD,GAAK,WAAaxN,EAAI,IAAIyS,OAAOwB,GAAaJ,GAEzGpG,KAAK2F,SAASzC,QACnBlD,KAAK2F,SAASc,QAAQhT,IAClBA,EAAEuR,OAAOwB,KAGbvG,EAAK/E,UAEA8E,KAAK4F,UAAU,KAChB5F,KAAK4F,UAAU,GAAK,IAAI,EAAQ5F,KAAKF,SAAUE,KAAKD,GAAK,cAE7DE,EAAK/E,QAAQvC,MAAQsH,EAAK/E,QAAQvC,OAASA,EAC3CsH,EAAK/E,QAAQpC,OAASmH,EAAK/E,QAAQpC,QAAUA,EAC7CkH,KAAK4F,UAAU,GAAGZ,OAAO/E,EAAK/E,UAElCjI,OAAOwP,OAAOzC,KAAKmB,MAAOlB,GAC1BD,KAAK0F,OAASA,EACd1F,KAAKrH,MAAQA,EACbqH,KAAKlH,OAASA,EACPkH,KAEX,UACIA,KAAKuG,kBACLvG,KAAK4F,UAAUa,QAAQC,GAAOA,EAAIC,WAClC3G,KAAK4F,UAAY,GACjB5F,KAAKmB,MAAQ,GACbnB,KAAK0F,OAAS,GACd1F,KAAKrH,MAAQ,EACbqH,KAAKlH,OAAS,EAElB,kBACIkH,KAAK2F,SAASc,QAAQhT,GAAKA,EAAEkT,WAC7B3G,KAAK2F,SAAW,GAEpB,eACI,GAAI3F,KAAK2F,SAASzC,OAAS,EAAG,CAC1B,MAAM0D,EAAM5G,KAAK2F,SAAS,GAC1B3F,KAAK2F,SAAS,GAAK3F,KAAK2F,SAAS,GACjC3F,KAAK2F,SAAS,GAAKiB,IC7E/B,IAAI,EAAa,EACV,MAAMC,EACT,YAAY9G,EAAK,eAAiB,KAC9BC,KAAKD,GAAKA,EACVC,KAAK8G,SAAW,GAChB9G,KAAKmB,MAAQ,GACbnB,KAAKmG,UAAY,GAErB,OAAOlG,GAMH,GALIA,EAAK6G,WACL9G,KAAK8G,SAAWjB,MAAMC,QAAQ7F,EAAK6G,UAC7B7G,EAAK6G,SACL,CAAC7G,EAAK6G,WAEZ7G,EAAKnG,KAAM,CACX,MAAMiN,EAAS/G,KAAK8G,UAAY9G,KAAK8G,SAAS,GAC1CC,GACAA,EAAOC,MAAMhC,OAAO,CAAElL,KAAMmG,EAAKnG,OASzC,OANImG,EAAKgH,WACLjH,KAAKmG,UAAYN,MAAMC,QAAQ7F,EAAKgH,UAC9BhH,EAAKgH,SACL,CAAChH,EAAKgH,WAEhBhU,OAAOwP,OAAOzC,KAAKmB,MAAOlB,GACnBD,KAEX,UACI,IAAK,MAAM+G,KAAU/G,KAAK8G,SACtBC,EAAOJ,UAEX3G,KAAKmB,MAAM2F,SAAW,GACtB9G,KAAKmB,MAAQ,GACbnB,KAAKmG,UAAY,ICjCzB,IAAIe,EAAe,EACZ,MAAM,EACT,YAAYpH,EAAUC,EAAK,QAAUmH,KACjClH,KAAKF,SAAWA,EAChBE,KAAKD,GAAKA,EAEd,OAAOE,GACH,MAAM7F,EAAK4F,KAAKF,SAAS1F,GACnB+M,EAAclH,EAAKnG,MAAQmG,EAAKnG,KAAKsN,QAAWpH,KAAKmH,WACrDE,EAAcpH,EAAKpG,MAAQoG,EAAKpG,KAAKuN,QAAWpH,KAAKqH,WAC3D,IAAMF,IACFE,GACCF,IAAenH,KAAKmH,YAAcE,IAAerH,KAAKqH,WACvD,OAAOrH,KAEXA,KAAK2G,UACDQ,EAAW5E,QAAQ,wBAA0B,GAC7CnI,EAAGoJ,aAAa,sBAEpB,MAAM8D,EAAUlN,EAAGmN,gBACbzN,EAAOM,EAAGoN,aAAapN,EAAGqN,iBAC1B5N,EAAOO,EAAGoN,aAAapN,EAAGsN,eAChC,GAAMJ,GAAWzN,GAAQC,EAAzB,CAmBA,GAjBAkG,KAAK2H,SAAWL,EAChBtH,KAAK4H,MAAQ9N,EACbkG,KAAK6H,MAAQhO,EACbO,EAAG0N,aAAaR,EAASzN,GACzBO,EAAG0N,aAAaR,EAASxN,GACzBM,EAAG2N,aAAalO,EAAMwN,GACtBjN,EAAG2N,aAAajO,EAAMqN,GACtB/M,EAAG4N,cAAcnO,GACjBO,EAAG4N,cAAclO,GACZM,EAAG6N,mBAAmBpO,EAAMO,EAAG8N,iBAChC7C,QAAQC,MAAM,mCAAoClL,EAAG+N,iBAAiBtO,GAAOuO,EAAef,IAE3FjN,EAAG6N,mBAAmBnO,EAAMM,EAAG8N,iBAChC7C,QAAQC,MAAM,qCAAsClL,EAAG+N,iBAAiBrO,GAAOsO,EAAejB,IAElG/M,EAAGiO,YAAYf,IACAlN,EAAGkO,oBAAoBhB,EAASlN,EAAGmO,aACrC,CACT,MAAMC,EAAYpO,EAAGqO,kBAAkBnB,GACvCjC,QAAQC,MAAM,4BAA6BkD,GAM/C,OAJAxI,KAAK0I,gBN6XN,SAA8BtO,EAAIkN,GACrC,IAAIqB,EAAc,EAClB,SAASC,EAAoBtB,EAASuB,GAClC,MAAMxO,EAAWD,EAAG0O,mBAAmBxB,EAASuB,EAAY/V,MACtDgT,EAAU+C,EAAYrN,KAAO,GAAqC,QAAhCqN,EAAY/V,KAAKiW,QAAQ,GAC3D/O,EAAO6O,EAAY7O,KACnBqD,EAAWpD,EAAQD,GACzB,IAAKqD,EACD,MAAM,IAAIwD,MAAM,mBAAqB7G,EAAKgP,SAAS,KAEvD,GAAgB,MAAZ3O,EACA,OAEJ,IAAIyB,EACJ,GArSiB,OAqSCuB,EArSVxB,KAqSqB,CAEzB,MAAMZ,EAAO0N,EACbA,GAAeE,EAAYrN,KAEvBM,EADAgK,EACSzI,EAASrB,YAAY5B,EAAIJ,EAAMiB,EAAMZ,EAAUwO,EAAYrN,MAG3D6B,EAASvB,OAAO1B,EAAIJ,EAAMiB,EAAMZ,QAKzCyB,EADAuB,EAASrB,aAAe8J,EACfzI,EAASrB,YAAY5B,EAAIC,GAGzBgD,EAASvB,OAAO1B,EAAIC,GAGrC,MAAO,CAAEyB,SAAQzB,YAErB,MAAM4O,EAAiB,GACjBC,EAAc9O,EAAGkO,oBAAoBhB,EAASlN,EAAG+O,iBACvD,IAAK,IAAI5W,EAAI,EAAGA,EAAI2W,IAAe3W,EAAG,CAClC,MAAMsW,EAAczO,EAAGgP,iBAAiB9B,EAAS/U,GACjD,IAAKsW,EACD,SAEJ,IAAI/V,EAAO+V,EAAY/V,KAKvB,GAHwB,QAApBA,EAAKiW,QAAQ,KACbjW,EAAOA,EAAKiW,OAAO,EAAGjW,EAAKoQ,OAAS,IAEpCoE,EAAS,CACT,MAAMxL,EAAS8M,EAAoBtB,EAASuB,GACxC/M,IACAmN,EAAenW,GAAQgJ,IAInC,OAAOmN,EMnboBI,CAAqBjP,EAAIkN,GAChDtH,KAAKsJ,kBNobN,SAAgClP,EAAIkN,GACvC,MAAMiC,EAAgB,GAChBC,EAAapP,EAAGkO,oBAAoBhB,EAASlN,EAAGqP,mBACtD,IAAK,IAAIlX,EAAI,EAAGA,EAAIiX,EAAYjX,IAAK,CACjC,MAAMmX,EAAatP,EAAGuP,gBAAgBrC,EAAS/U,GAC/C,IAAKmX,EACD,MAEJ,MAAMrP,EAAWD,EAAGwP,kBAAkBtC,EAASoC,EAAW5W,MACpDuK,EAAWiB,EAAYoL,EAAW1P,MAClC8B,EAASuB,EAASvB,OAAO1B,EAAIC,EAAUgD,GAC7CkM,EAAcG,EAAW5W,MAAQ,CAAEgJ,SAAQzB,YAE/C,OAAOkP,EMjcsBM,CAAuBzP,EAAIkN,GACpDtH,KAAKmH,WAAaA,EAClBnH,KAAKqH,WAAaA,EACXrH,MAEX,UACI,MAAM5F,EAAK4F,KAAKF,SAAS1F,GACzBA,EAAG0P,cAAc9J,KAAK2H,UACtBvN,EAAG2P,aAAa/J,KAAK4H,OACrBxN,EAAG2P,aAAa/J,KAAK6H,OACrB7H,KAAKqH,gBAAapG,EAClBjB,KAAKmH,gBAAalG,EAClBjB,KAAKsJ,kBAAoB,GACzBtJ,KAAK0I,gBAAkB,IAG/B,SAASN,EAAe4B,GACpB,OAAOA,EACF5C,OACA6C,MAAM,MACNC,IAAI,CAACC,EAAM5X,IAAMA,EAAI,EAAI,KAAO4X,GAChCC,KAAK,MCpEd,IAAIC,EAAgB,EACb,MAAMC,EACT,YAAYvK,EAAK,SAAWsK,KACxBrK,KAAKD,GAAKA,EACVC,KAAKmG,UAAY,GAErB,OAAOlG,GAeH,OAdIA,EAAKsK,eACLvK,KAAKwK,cAAgBvK,EAAKsK,cAE1BtK,EAAKwK,OACLzK,KAAKyK,KAAOxK,EAAKwK,MAEjBxK,EAAK+G,QACLhH,KAAKgH,MAAQ/G,EAAK+G,OAElB/G,EAAKgH,WACLjH,KAAKmG,UAAYN,MAAMC,QAAQ7F,EAAKgH,UAC9BhH,EAAKgH,SACL,CAAChH,EAAKgH,WAETjH,KAEX,UACIA,KAAKyK,MAAQzK,KAAKyK,KAAK9D,UACvB3G,KAAKgH,OAAShH,KAAKgH,MAAML,UACzB3G,KAAKwK,mBAAgBvJ,EACrBjB,KAAKmG,UAAY,I,YCnBlB,MAAM,EACT,YAAYuE,EAAQC,EAAO,IACvB3K,KAAK0K,OAASA,EACd1K,KAAKkC,UAAW,EAChBlC,KAAK4K,iBAAmB,EACxB,IAAIxQ,EAAK,KAYT,GAXKuQ,EAAKE,YACNzQ,EACIsQ,EAAOI,WAAW,SAAUH,IACxBD,EAAOI,WAAW,sBAAuBH,IAE3C,MAANvQ,IACA4F,KAAKkC,UAAW,EAChB9H,EACIsQ,EAAOI,WAAW,QAASH,IACvBD,EAAOI,WAAW,qBAAsBH,IAE1C,MAANvQ,EACA,MAAMyG,MAAM,4BAEhBb,KAAK5F,GAAKA,EACV4F,KAAK+K,eAAiBJ,EAAKI,gBAAkB,EACzC/K,KAAKkC,WACLlC,KAAK4K,iBAAmBxQ,EAAGqK,aAAarK,EAAGsK,cAE/C1E,KAAKtH,SACLiG,EAAkBvE,ET5BnB,SAAiCA,GACpC,MAAO,CACHoF,WAAY,CAAC,EAAK,EAAK,EAAK,GAC5BR,UAAW,CAAC5E,EAAG4Q,UAAW5Q,EAAG6Q,sBSyBPC,CAAwB9Q,IAC9C4F,KAAKmL,YAAcnL,KAAKoL,aAAapG,OAAO7L,EAAaC,YACzD4G,KAAKqL,cAAgBrL,KAAKsL,mBAE9B,SAEI,OADA,YAAatL,KAAK5F,GAAGsQ,OAAQ1K,KAAK+K,gBAC3B/K,KAEX,UACIA,KAAKqL,cAAc1E,UACnB3G,KAAKmL,YAAYxE,UAErB,mBAAmB4D,GAEf,OADA5L,EAAkBqB,KAAK5F,GAAInH,OAAOwP,OAAO,GAAI8H,IACtCvK,KAEX,WAAWD,GACP,OAAO,IAAI,EAAKC,KAAMD,GAE1B,YAAYA,GACR,OAAO,IAAI,EAAMC,KAAMD,GAE3B,aAAaA,GACT,OAAO,IAAIuK,EAAOvK,GAEtB,iBAAiBA,GACb,MAAMzL,EAAI0L,KAAKuL,aAAaxL,GAC5B,OAAOzL,EAAE0Q,OAAO,CACZyF,KAAMzK,KAAKmL,YACXnE,MAAOhH,KAAKwL,YAAYlX,EAAEyL,GAAK,iBAAiBiF,OAAOrL,EAAeC,eAG9E,YAAYmG,GACR,OAAO,IAAI,EAAMC,KAAMD,GAE3B,YAAYA,GACR,OAAO,IAAI8G,EAAM9G,GAErB,aAAaA,GACT,MAAMvN,EAAIwN,KAAKyL,YAAY1L,GAC3B,OAAOvN,EAAEwS,OAAO,CACZ8B,SAAU9G,KAAKsL,iBAAiB9Y,EAAEuN,GAAK,mBAG/C,KAAKgH,EAAQ2E,GACT,MAAMtR,EAAK4F,KAAK5F,GAIhB,OAHAA,EAAGwJ,gBAAgBxJ,EAAGyJ,YAAa,MACnCzJ,EAAGuR,SAAS,EAAG,EAAGvR,EAAGiM,mBAAoBjM,EAAGkM,qBAC5CsF,EAAKxR,EAAI2M,EAAQ2E,GACV1L,KAEX,WAAW6L,GACP,IAAK,MAAMC,KAASD,EAChBE,EAAY/L,KAAK5F,GAAI0R,GAEzB,OAAO9L,KAEX,QAAQ8L,EAAOE,EAAM,GACjB,OAAOhM,KAAK4L,KAAK5L,KAAKqL,cAAe,CAAEY,OAAQH,EAAMI,MAAMF,MAGnE,SAASJ,EAAKxR,EAAI2M,EAAQ2E,EAAgBS,GACtC,MAAQnF,MAAOA,EAAOyD,KAAMA,EAAMD,cAAeD,EAAcpE,UAAWc,GAAcF,EACxF,IAAMC,IAASyD,EACX,MAAM5J,MAAM,+CAEhBzG,EAAGgS,WAAWpF,EAAMW,UA2BxB,SAAmBX,EAAOyD,GACtB,IAAK,MAAM3X,KAAQ2X,EAAKrK,SAAU,CAC9B,MAAMtE,EAASkL,EAAMsC,kBAAkBxW,GACnCgJ,GACAA,EAAOA,OAAO2O,EAAKrK,SAAStN,KA9BpCuZ,CAAUrF,EAAOyD,GACbiB,GACAY,EAActF,EAAO0E,EAAgBS,GAErC5B,GACA5L,EAAkBvE,EAAImQ,GAE1B,IAAK,IAAIhY,EAAI,EAAGA,GAAK0U,EAAS/D,QAAU,GAAI3Q,IACxCga,EAAanS,EAAI2M,EAAQE,EAAS1U,GAAI4Z,GAEtC5B,GACA3K,EAAmBxF,EAAImQ,GAG/B,SAASgC,EAAanS,EAAI2M,EAAQE,EAAUkF,GACpClF,GACAqF,EAAcvF,EAAOC,MAAOC,EAAUkF,GAEtCpF,EAAO0D,KAAKhK,WAA6C,MAAhCsG,EAAO0D,KAAKhK,UAAUC,QAC/CtG,EAAGmD,WAAWnD,EAAG2G,qBAAsBgG,EAAO0D,KAAKhK,UAAUnH,QAC7Dc,EAAGoS,aAAazF,EAAO0D,KAAKvK,UAAW6G,EAAO0D,KAAKtK,WAAY4G,EAAO0D,KAAKhK,UAAUC,OAAQ,IAG7FtG,EAAGqS,WAAW1F,EAAO0D,KAAKvK,UAAW,EAAG6G,EAAO0D,KAAKtK,YAW5D,SAASmM,EAActF,EAAOC,EAAUkF,GACpC,IAAK,MAAMrZ,KAAQmU,EAAU,CACzB,MAAMnL,EAASkL,EAAM0B,gBAAgB5V,GACrC,GAAIgJ,EAAQ,CACR,IAAItI,EAAQyT,EAASnU,GACA,mBAAVU,IACPA,EAAQA,KAES,iBAAVA,GAAsB2Y,EAC7BrQ,EAAOA,OAAOqQ,EAAQ3Y,IAGtBsI,EAAOA,OAAOtI,KAK9B,SAASkZ,EAAYtS,EAAI8L,EAAOe,EAAU0F,EAAQV,GAC1CU,GACAvS,EAAGwJ,gBAAgBxJ,EAAGyJ,YAAa8I,EAAOhK,UAAYgK,EAAO9J,qBAAuB8J,EAAO/J,aAC3FxI,EAAGuR,SAAS,EAAG,EAAGgB,EAAOhU,MAAOgU,EAAO7T,UAGvCsB,EAAGwJ,gBAAgBxJ,EAAGyJ,YAAa,MACnCzJ,EAAGuR,SAAS,EAAG,EAAGvR,EAAGiM,mBAAoBjM,EAAGkM,sBAE5CJ,EAAM/E,MAAMoJ,cACZ5L,EAAkBvE,EAAI8L,EAAM/E,MAAMoJ,cAEtC,IAAK,MAAMxD,KAAUb,EAAMY,SACvB8E,EAAKxR,EAAI2M,EAAQE,EAAUgF,GAE/B,GAAIU,GAAUA,EAAOhK,UAAW,CAC5B,MAAMwB,EAAM/J,EAEZA,EAAGwJ,gBAAgBO,EAAIyI,iBAAkBD,EAAO9J,sBAChDzI,EAAGwJ,gBAAgBO,EAAI0I,iBAAkBF,EAAO/J,aAChDuB,EAAI2I,cAAc3I,EAAI4I,MAAO,EAAG,CAAC,EAAK,EAAK,EAAK,IAChD5I,EAAI6I,gBAAgB,EAAG,EAAGL,EAAOhU,MAAOgU,EAAO7T,OAAQ,EAAG,EAAG6T,EAAOhU,MAAOgU,EAAO7T,OAAQsB,EAAG6S,iBAAkB7S,EAAG8S,QAElHhH,EAAM/E,MAAMoJ,cACZ3K,EAAmBxF,EAAI8L,EAAM/E,MAAMoJ,cAG3C,SAASwB,EAAY3R,EAAI0R,GACrB,IAAK,IAAIvZ,EAAI,EAAGA,EAAIuZ,EAAMpG,OAAOxC,OAAQ3Q,IAAK,CAC1C,MAAM2T,EAAQ4F,EAAMpG,OAAOnT,GACrB4a,EAAcjH,EAAMC,UAAUjD,QAAU,EAC9C,IAAK,IAAIkK,EAAI,EAAGA,EAAID,EAAaC,IAAK,CAClC,MAAMT,EAASb,EAAMnG,SAAS,GACxBwG,EAAU5Z,EAAI6a,IAAM,GAAKtB,EAAMlG,UAAU1C,OACzC4I,EAAMlG,UACNkG,EAAMnG,SAAS,IAAMmG,EAAMnG,SAAS,GAAGhK,SAC7C+Q,EAAYtS,EAAI8L,EAAOA,EAAMC,UAAUiH,GAAIT,EAAQR,GACnDL,EAAMuB,iB,WC9KlB,IAAIC,EACAC,EAEG,SAASC,GAAW9C,EAA2BC,GAErD,OAgHM,SAAcD,EAA2BC,GAC3CD,IAAW4C,IACdA,EAAgB5C,EAEhB6C,EAAU,IAAI,EAAQ7C,EAAQC,GAE9B8C,GAAMC,OAAOhD,OAASA,EAEtBiD,IAAgBA,KAChBC,IAAiBA,KACjBC,IAAcA,KAEdF,GAAenV,EAAW,IACzB,YAAK,KACJ+U,EAAQxC,eAAiB0C,GAAMC,OAAO3C,eACtCwC,EAAQ7U,SACRoV,GAASC,GAAWC,SAClB,WAGJJ,GAAgB,OAAAK,EAAA,GACf,CACCC,QAASxD,EACTyD,mBAAmB,EACnBC,WAAY,EACZC,UAAW,KAEZ1b,GAAM8a,GAAMC,OAAOO,QAAUtb,GAG9Bkb,GAAa,OAAAS,EAAA,GAASC,GAAMd,GAAMC,OAAOc,KAAOD,IA/IjDE,CAAK/D,EAAQC,GACN4C,EAGR,MAAM,GAAgC,GAC/B,SAASmB,GAAQnB,EAAkBxN,GACzC,OAAO,GAAMA,KAAQ,GAAMA,GAAMwN,EAAQnC,WAAW,QAAUrL,IAG/D,MAAM4O,GAAkC,GACjC,SAASC,GAASrB,EAAkBxN,GAC1C,OAAO4O,GAAO5O,KAAQ4O,GAAO5O,GAAMwN,EAAQ/B,YAAY,SAAWzL,IAGnE,MAAM+G,GAAqC,GACpC,SAAS+H,GAAUtB,EAAkBxN,GAC3C,OAAO+G,GAAS/G,KAAQ+G,GAAS/G,GAAMwN,EAAQhC,aAAa,UAAYxL,IAGzE,MAAM,GAAkC,GACjC,SAAS+O,GAASvB,EAAkBxN,GAC1C,OAAO,GAAOA,KAAQ,GAAOA,GAAMwN,EAAQ9B,YAAY,SAAW1L,IAGnE,MAAM,GAAkC,GACjC,SAASgP,GAASxB,EAAkBxN,GAC1C,OAAO,GAAOA,KAAQ,GAAOA,GAAMwN,EAAQyB,YAAY,SAAWjP,IAGnE,MAAMkP,GAAmC,GAClC,SAASC,GAAU3B,EAAkBxN,GAC3C,OAAOkP,GAAQlP,KAAQkP,GAAQlP,GAAMwN,EAAQ4B,aAAa,UAAYpP,IAgBhE,MAAM0N,GAAmB,CAC/BC,OAAQ,CACP0B,IAAK,EACLrE,eAAgB,IAKX,SAAS3X,GAGdic,GACD,OAAQ5B,GAAY4B,GAGd,SAASC,GAGdxb,EAAQyb,EAAW5E,GACpB,MAAMrW,EAAImZ,GACV,GAAInZ,EAAER,GAAM,CACX,MAAM0b,EAAQ7E,GAAQA,EAAK6E,OACb,IAAVA,IACHD,ECpEI,SAASE,EAAaC,EAAMC,EAAMC,GACrC,MAAMC,EAASD,GAAOA,EAAIC,OAC1B,GAAoB,iBAATH,GACS,iBAATC,IACN9J,MAAMC,QAAQ4J,KACd7J,MAAMC,QAAQ6J,IACfD,IAASC,EAAM,CACf,IAAK,MAAM7b,KAAO4b,EACd,GAAIA,EAAKtb,eAAeN,MAClB+b,KAAU/b,KAAO+b,KAA0B,IAAhBA,EAAO/b,IAAgB,CACpD,MAAMgc,EAAOJ,EAAK5b,GACZic,EAAOJ,EAAK7b,QACLmN,IAAT8O,IACAL,EAAK5b,GAAO2b,EAAaK,EAAMC,EAAM,CACjCF,OAAQA,GAAUA,EAAO/b,MAKzC,OAAO4b,EAEX,OAAOC,ED+CFF,CAAaF,EAAKjb,EAAER,GAAM,CAAE+b,OAAQL,KAG5Clb,EAAER,GAAOyb,EAGH,SAASS,KACf,OAAOvC,GAxBN7U,OAAe6U,MAAQA,GAkCzB,MAAMwC,GAAgD,GAE/C,SAASC,GACfnQ,EACAzL,GAEA2b,GAAQlQ,GAAMzL,EAGR,SAASwZ,GAASqC,GACxB,IAAK,MAAM5B,KAAK0B,GACfA,GAAQ1B,GAAG4B,EAAO1C,IAIb,MAAMM,GAAa,CACzBqC,MAAO,QACPpC,OAAQ,UAKT,IAAIL,GACAC,GACAC,I,gCElIJ,oEAMO,SAASwC,EAAWC,EAAMC,GAC7B,GAAID,IAASC,EACT,OAAO,EAEX,IAAKA,IAASD,EACV,OAAO,EAEX,GAAIA,EAAKpN,SAAWqN,EAAKrN,OACrB,OAAO,EAEX,IAAK,IAAI3Q,EAAI,EAAGA,EAAI+d,EAAKpN,OAAQ3Q,IAC7B,GAAI+d,EAAK/d,KAAOge,EAAKhe,GACjB,OAAO,EAGf,OAAO,EAEJ,SAASie,EAAYd,EAAMC,GAC9B,GAAID,IAASC,EACT,OAAO,EAEX,IAAKA,EACD,OAAO,EAEX,MAAMc,EAAKxd,OAAOub,KAAKkB,GAEvB,IAAKW,EAAWI,EADLxd,OAAOub,KAAKmB,IAEnB,OAAO,EAEX,IAAK,MAAM7b,KAAO2c,EACd,GAAIf,EAAK5b,KAAS6b,EAAK7b,GACnB,OAAO,EAGf,OAAO,I,gCCxCJ,SAAS4c,EAAUtW,KAAOuW,GAC7B,OAAOA,EAAW1K,OAAO,CAAC2K,EAAKC,IAASD,EAAMxW,EAAGyW,EAAKC,cAAgB,eAAgB,GAUnF,SAASC,EAAarG,EAAQsG,EAAa,GAC9C,IAAIrY,EAAQ+R,EAAO/R,MACfG,EAAS4R,EAAO5R,OAKpB,MAJI,gBAAiB4R,GAAU,iBAAkBA,IAC7C/R,EAAS+R,EAAOuG,YAAcD,EAAc,EAC5ClY,EAAU4R,EAAOwG,aAAeF,EAAc,IAE9CtG,EAAO/R,QAAUA,GAAS+R,EAAO5R,SAAWA,KAC5C4R,EAAO/R,MAAQA,EACf+R,EAAO5R,OAASA,GACT,GArBf,qE,gCCAA,+HA0EO,MAAMqY,UArEN,MAUN,YAAYC,GATZ,KAAAC,SAAiB,CAAC,EAAG,EAAG,GACxB,KAAAC,UAAY,EACZ,KAAAC,UAAY,EACZ,KAAAC,aAAe,IAAK3d,SACpB,KAAA4d,aAAe,IAAK5d,SACpB,KAAA6d,cAAgB,IAAK7d,SACrB,KAAA8d,QAAU,IAAK9d,SACf,KAAA+d,iBAAkB,EAGjB3e,OAAOwP,OAAOzC,KAAMoR,GACpBpR,KAAK6R,kBACL7R,KAAK8R,kBAGN,gBAAgBC,EAAiB,GAChC/R,KAAKsR,WAAaS,EAClB,IAAKC,cAAchS,KAAKwR,aAAcxR,KAAKsR,WAC3CtR,KAAK4R,iBAAkB,EAGxB,gBAAgBG,EAAiB,GAChC/R,KAAKuR,WAAaQ,EAClB,IAAKE,cAAcjS,KAAKyR,aAAczR,KAAKuR,WAC3CvR,KAAK4R,iBAAkB,EAGxB,YAAYM,GACX,MAAM5X,EAAI,IAAK6X,WACdnS,KAAKyR,aAAa,GAClBzR,KAAKyR,aAAa,GAClBzR,KAAKyR,aAAa,KAEnB,IAAKW,IAAIpS,KAAKqR,SAAiBrR,KAAKqR,SAAU,IAAKgB,MAAM/X,EAAGA,GAAI4X,IAChElS,KAAK4R,iBAAkB,EAGxB,SAASM,GACR,MAAM5X,EAAI,IAAK6X,WACdnS,KAAKyR,aAAa,GAClBzR,KAAKyR,aAAa,GAClBzR,KAAKyR,aAAa,IAEnB,IAAKW,IAAIpS,KAAKqR,SAAiBrR,KAAKqR,SAAU,IAAKgB,MAAM/X,EAAGA,GAAI4X,IAChElS,KAAK4R,iBAAkB,EAGxB,OAAOM,GACN,MAAM5X,EAAI,IAAK6X,WACdnS,KAAKyR,aAAa,GAClBzR,KAAKyR,aAAa,GAClBzR,KAAKyR,aAAa,IAEnB,IAAKW,IAAIpS,KAAKqR,SAAiBrR,KAAKqR,SAAU,IAAKgB,MAAM/X,EAAGA,EAAG4X,IAC/DlS,KAAK4R,iBAAkB,EAGxB,SACK5R,KAAK4R,kBACR,IAAKU,gBAAgBtS,KAAK2R,QAAS3R,KAAKqR,UACxC,IAAKkB,SAASvS,KAAK2R,QAAS3R,KAAK2R,QAAS3R,KAAKyR,cAC/C,IAAKc,SAASvS,KAAK2R,QAAS3R,KAAK2R,QAAS3R,KAAKwR,cAC/C,IAAKgB,OAAOxS,KAAK2R,QAAS3R,KAAK2R,SAC/B3R,KAAK4R,iBAAkB,KAYzB,YAAYR,GACXqB,MAAMrB,GAPP,KAAAsB,KAAiB,GAAVnO,KAAKoO,GACZ,KAAAC,OAAS,EACT,KAAAC,KAAO,GACP,KAAAC,IAAM,IACN,KAAAC,uBAAwB,EAIvB9f,OAAOwP,OAAOzC,KAAMoR,GACpBpR,KAAKgF,SAGN,SACCyN,MAAMzN,SAEFhF,KAAK+S,wBACR,IAAKC,YACJhT,KAAK0R,cACL1R,KAAK0S,KACL1S,KAAK4S,OACL5S,KAAK6S,KACL7S,KAAK8S,KAEN9S,KAAK+S,uBAAwB,IAKzB,SAASE,EAAiDC,GAChE,OAAO,cAAcA,EACpB,mBAAmBC,EAAe3E,EAAiBP,IAC5CO,GAAQP,OAEbO,aAAI,EAAJA,EAAO,IAAK4E,OACZ5E,aAAI,EAAJA,EAAO,IAAK6E,MACXpF,aAAO,EAAPA,EAASqF,WAAYrF,EAAQsF,QAAQ,IAAQC,SAE9CxT,KAAKyT,YAAYN,KAGjB3E,aAAI,EAAJA,EAAO,IAAKkF,SACZlF,aAAI,EAAJA,EAAO,IAAKmF,MACZ1F,aAAO,EAAPA,EAASsF,QAAQ,IAAQC,UAEzBxT,KAAKyT,aAAaN,KAEf3E,aAAI,EAAJA,EAAO,IAAKoF,SAASpF,aAAI,EAAJA,EAAO,IAAKqF,MACpC7T,KAAK8T,SAASX,KAEX3E,aAAI,EAAJA,EAAO,IAAKgF,UAAUhF,aAAI,EAAJA,EAAO,IAAKuF,MACrC/T,KAAK8T,UAAUX,MAMZ,SAASa,EAAiDd,GAChE,OAAO,cAAcA,EAAd,c,oBACN,KAAAe,UAAY,CAAEC,EAAG,EAAGC,EAAG,GAEvB,qBAAqBhB,EAAexgB,GACnC,GAAIA,EAAEyhB,SAAU,CACf,MAAMC,EAASrU,KAAKiU,UAAUC,EAAIvhB,EAAE2hB,KAAKJ,EACnCK,EAASvU,KAAKiU,UAAUE,EAAIxhB,EAAE2hB,KAAKH,EACzCnU,KAAKiU,UAAUC,EAAIvhB,EAAE2hB,KAAKJ,EAC1BlU,KAAKiU,UAAUE,EAAIxhB,EAAE2hB,KAAKH,EAC1BI,GAAUvU,KAAK6R,gBAAgB0C,EAASpB,GACxCkB,GAAUrU,KAAK8R,gBAAgBuC,EAASlB,QAExCnT,KAAKiU,UAAUC,IAAMlU,KAAKiU,UAAUC,EAAI,GACxClU,KAAKiU,UAAUE,IAAMnU,KAAKiU,UAAUE,EAAI,O,+lLC5IrC,IAAIK,EAAU,KACVC,EAAqC,oBAAjBlb,aAA+BA,aAAesM,MAClE6O,EAASnQ,KAAKoQ,OAUZpQ,KAAKoO,GCLX,SAAS9e,IACd,IAAI+gB,EAAM,IAAI,EAAoB,IAqBlC,OAnBI,GAAuBrb,eACzBqb,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,GAGZA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EASF,SAASC,EAAMC,GACpB,IAAIF,EAAM,IAAI,EAAoB,IAiBlC,OAhBAA,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACLF,EAUF,SAASG,EAAKH,EAAKE,GAiBxB,OAhBAF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACLF,EAwBF,SAASzC,EAAW6C,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GACpG,IAAInB,EAAM,IAAI,EAAoB,IAiBlC,OAhBAA,EAAI,GAAKI,EACTJ,EAAI,GAAKK,EACTL,EAAI,GAAKM,EACTN,EAAI,GAAKO,EACTP,EAAI,GAAKQ,EACTR,EAAI,GAAKS,EACTT,EAAI,GAAKU,EACTV,EAAI,GAAKW,EACTX,EAAI,GAAKY,EACTZ,EAAI,GAAKa,EACTb,EAAI,IAAMc,EACVd,EAAI,IAAMe,EACVf,EAAI,IAAMgB,EACVhB,EAAI,IAAMiB,EACVjB,EAAI,IAAMkB,EACVlB,EAAI,IAAMmB,EACHnB,EAyBF,SAAStF,EAAIsF,EAAKI,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAiBlG,OAhBAnB,EAAI,GAAKI,EACTJ,EAAI,GAAKK,EACTL,EAAI,GAAKM,EACTN,EAAI,GAAKO,EACTP,EAAI,GAAKQ,EACTR,EAAI,GAAKS,EACTT,EAAI,GAAKU,EACTV,EAAI,GAAKW,EACTX,EAAI,GAAKY,EACTZ,EAAI,GAAKa,EACTb,EAAI,IAAMc,EACVd,EAAI,IAAMe,EACVf,EAAI,IAAMgB,EACVhB,EAAI,IAAMiB,EACVjB,EAAI,IAAMkB,EACVlB,EAAI,IAAMmB,EACHnB,EASF,SAASoB,EAASpB,GAiBvB,OAhBAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAUF,SAASqB,EAAUrB,EAAKE,GAE7B,GAAIF,IAAQE,EAAG,CACb,IAAIoB,EAAMpB,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACRyB,EAAMzB,EAAE,IACZF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,IACXF,EAAI,GAAKsB,EACTtB,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,IACXF,EAAI,GAAKuB,EACTvB,EAAI,GAAKyB,EACTzB,EAAI,IAAME,EAAE,IACZF,EAAI,IAAMwB,EACVxB,EAAI,IAAM0B,EACV1B,EAAI,IAAM2B,OAEV3B,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,IACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,IACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,GACZF,EAAI,IAAME,EAAE,GACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IAGd,OAAOF,EAUF,SAASpC,EAAOoC,EAAKE,GAC1B,IAAI0B,EAAM1B,EAAE,GACRoB,EAAMpB,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACR2B,EAAM3B,EAAE,GACR4B,EAAM5B,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACR6B,EAAM7B,EAAE,GACR8B,EAAM9B,EAAE,GACR+B,EAAM/B,EAAE,IACRyB,EAAMzB,EAAE,IACRgC,EAAMhC,EAAE,IACRiC,EAAMjC,EAAE,IACRkC,EAAMlC,EAAE,IACRmC,EAAMnC,EAAE,IACRoC,EAAMV,EAAME,EAAMR,EAAMO,EACxBU,EAAMX,EAAMH,EAAMF,EAAMM,EACxBW,EAAMZ,EAAMF,EAAMF,EAAMK,EACxBY,EAAMnB,EAAMG,EAAMF,EAAMO,EACxBY,EAAMpB,EAAMI,EAAMF,EAAMM,EACxBa,EAAMpB,EAAMG,EAAMF,EAAMC,EACxBmB,EAAMb,EAAMI,EAAMH,EAAME,EACxBW,EAAMd,EAAMK,EAAMH,EAAMC,EACxBY,EAAMf,EAAMM,EAAMV,EAAMO,EACxBa,EAAMf,EAAMI,EAAMH,EAAME,EACxBa,EAAMhB,EAAMK,EAAMV,EAAMQ,EACxBc,EAAMhB,EAAMI,EAAMV,EAAMS,EAExBc,EAAMZ,EAAMW,EAAMV,EAAMS,EAAMR,EAAMO,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE5E,OAAKM,GAILA,EAAM,EAAMA,EACZlD,EAAI,IAAM8B,EAAMmB,EAAMxB,EAAMuB,EAAMtB,EAAMqB,GAAOG,EAC/ClD,EAAI,IAAMuB,EAAMyB,EAAM1B,EAAM2B,EAAMzB,EAAMuB,GAAOG,EAC/ClD,EAAI,IAAMmC,EAAMQ,EAAMP,EAAMM,EAAML,EAAMI,GAAOS,EAC/ClD,EAAI,IAAMiC,EAAMS,EAAMV,EAAMW,EAAMhB,EAAMc,GAAOS,EAC/ClD,EAAI,IAAMyB,EAAMqB,EAAMjB,EAAMoB,EAAMvB,EAAMmB,GAAOK,EAC/ClD,EAAI,IAAM4B,EAAMqB,EAAM1B,EAAMuB,EAAMtB,EAAMqB,GAAOK,EAC/ClD,EAAI,IAAMoC,EAAMI,EAAMN,EAAMS,EAAMN,EAAME,GAAOW,EAC/ClD,EAAI,IAAM+B,EAAMY,EAAMV,EAAMO,EAAMb,EAAMY,GAAOW,EAC/ClD,EAAI,IAAM6B,EAAMmB,EAAMlB,EAAMgB,EAAMpB,EAAMkB,GAAOM,EAC/ClD,EAAI,IAAMsB,EAAMwB,EAAMlB,EAAMoB,EAAMxB,EAAMoB,GAAOM,EAC/ClD,EAAI,KAAOkC,EAAMQ,EAAMP,EAAMK,EAAMH,EAAMC,GAAOY,EAChDlD,EAAI,KAAOgC,EAAMQ,EAAMT,EAAMW,EAAMf,EAAMW,GAAOY,EAChDlD,EAAI,KAAO8B,EAAMe,EAAMhB,EAAMkB,EAAMtB,EAAMmB,GAAOM,EAChDlD,EAAI,KAAO4B,EAAMmB,EAAMzB,EAAMuB,EAAMtB,EAAMqB,GAAOM,EAChDlD,EAAI,KAAOmC,EAAMI,EAAML,EAAMO,EAAML,EAAME,GAAOY,EAChDlD,EAAI,KAAO+B,EAAMU,EAAMT,EAAMO,EAAMN,EAAMK,GAAOY,EACzClD,GApBE,KA8BJ,SAASmD,EAAQnD,EAAKE,GAC3B,IAAI0B,EAAM1B,EAAE,GACRoB,EAAMpB,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACR2B,EAAM3B,EAAE,GACR4B,EAAM5B,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACR6B,EAAM7B,EAAE,GACR8B,EAAM9B,EAAE,GACR+B,EAAM/B,EAAE,IACRyB,EAAMzB,EAAE,IACRgC,EAAMhC,EAAE,IACRiC,EAAMjC,EAAE,IACRkC,EAAMlC,EAAE,IACRmC,EAAMnC,EAAE,IAiBZ,OAhBAF,EAAI,GAAK8B,GAAOG,EAAMI,EAAMV,EAAMS,GAAOJ,GAAOP,EAAMY,EAAMX,EAAMU,GAAOD,GAAOV,EAAME,EAAMD,EAAMO,GAClGjC,EAAI,KAAOsB,GAAOW,EAAMI,EAAMV,EAAMS,GAAOJ,GAAOT,EAAMc,EAAMb,EAAMY,GAAOD,GAAOZ,EAAMI,EAAMH,EAAMS,IACpGjC,EAAI,GAAKsB,GAAOG,EAAMY,EAAMX,EAAMU,GAAON,GAAOP,EAAMc,EAAMb,EAAMY,GAAOD,GAAOZ,EAAMG,EAAMF,EAAMC,GAClGzB,EAAI,KAAOsB,GAAOG,EAAME,EAAMD,EAAMO,GAAOH,GAAOP,EAAMI,EAAMH,EAAMS,GAAOD,GAAOT,EAAMG,EAAMF,EAAMC,IACpGzB,EAAI,KAAO6B,GAAOI,EAAMI,EAAMV,EAAMS,GAAOL,GAAON,EAAMY,EAAMX,EAAMU,GAAOF,GAAOT,EAAME,EAAMD,EAAMO,IACpGjC,EAAI,GAAK4B,GAAOK,EAAMI,EAAMV,EAAMS,GAAOL,GAAOR,EAAMc,EAAMb,EAAMY,GAAOF,GAAOX,EAAMI,EAAMH,EAAMS,GAClGjC,EAAI,KAAO4B,GAAOH,EAAMY,EAAMX,EAAMU,GAAOP,GAAON,EAAMc,EAAMb,EAAMY,GAAOF,GAAOX,EAAMG,EAAMF,EAAMC,IACpGzB,EAAI,GAAK4B,GAAOH,EAAME,EAAMD,EAAMO,GAAOJ,GAAON,EAAMI,EAAMH,EAAMS,GAAOF,GAAOR,EAAMG,EAAMF,EAAMC,GAClGzB,EAAI,GAAK6B,GAAOG,EAAMK,EAAMV,EAAMQ,GAAOJ,GAAOD,EAAMO,EAAMX,EAAMS,GAAOD,GAAOJ,EAAMH,EAAMD,EAAMM,GAClGhC,EAAI,KAAO4B,GAAOI,EAAMK,EAAMV,EAAMQ,GAAOJ,GAAOT,EAAMe,EAAMb,EAAMW,GAAOD,GAAOZ,EAAMK,EAAMH,EAAMQ,IACpGhC,EAAI,IAAM4B,GAAOE,EAAMO,EAAMX,EAAMS,GAAON,GAAOP,EAAMe,EAAMb,EAAMW,GAAOD,GAAOZ,EAAMI,EAAMF,EAAMM,GACnG9B,EAAI,MAAQ4B,GAAOE,EAAMH,EAAMD,EAAMM,GAAOH,GAAOP,EAAMK,EAAMH,EAAMQ,GAAOD,GAAOT,EAAMI,EAAMF,EAAMM,IACrG9B,EAAI,MAAQ6B,GAAOG,EAAMI,EAAMH,EAAME,GAAOJ,GAAOD,EAAMM,EAAMX,EAAMU,GAAOD,GAAOJ,EAAMG,EAAMR,EAAMO,IACrGhC,EAAI,IAAM4B,GAAOI,EAAMI,EAAMH,EAAME,GAAOJ,GAAOT,EAAMc,EAAMb,EAAMY,GAAOD,GAAOZ,EAAMW,EAAMV,EAAMS,GACnGhC,EAAI,MAAQ4B,GAAOE,EAAMM,EAAMX,EAAMU,GAAON,GAAOP,EAAMc,EAAMb,EAAMY,GAAOD,GAAOZ,EAAMG,EAAMF,EAAMO,IACrG9B,EAAI,IAAM4B,GAAOE,EAAMG,EAAMR,EAAMO,GAAOH,GAAOP,EAAMW,EAAMV,EAAMS,GAAOD,GAAOT,EAAMG,EAAMF,EAAMO,GAC5F9B,EASF,SAASoD,EAAYlD,GAC1B,IAAI0B,EAAM1B,EAAE,GACRoB,EAAMpB,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACR2B,EAAM3B,EAAE,GACR4B,EAAM5B,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACR6B,EAAM7B,EAAE,GACR8B,EAAM9B,EAAE,GACR+B,EAAM/B,EAAE,IACRyB,EAAMzB,EAAE,IACRgC,EAAMhC,EAAE,IACRiC,EAAMjC,EAAE,IACRkC,EAAMlC,EAAE,IACRmC,EAAMnC,EAAE,IAcZ,OAbU0B,EAAME,EAAMR,EAAMO,IAWlBI,EAAMI,EAAMV,EAAMS,IAVlBR,EAAMH,EAAMF,EAAMM,IASlBG,EAAMK,EAAMV,EAAMQ,IARlBP,EAAMF,EAAMF,EAAMK,IAOlBG,EAAMI,EAAMH,EAAME,IANlBb,EAAMG,EAAMF,EAAMO,IAKlBC,EAAMM,EAAMV,EAAMO,IAJlBZ,EAAMI,EAAMF,EAAMM,IAGlBC,EAAMK,EAAMH,EAAMC,IAFlBX,EAAMG,EAAMF,EAAMC,IAClBM,EAAMI,EAAMH,EAAME,GAkBvB,SAASvE,EAASqC,EAAKE,EAAGxX,GAC/B,IAAIkZ,EAAM1B,EAAE,GACRoB,EAAMpB,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACR2B,EAAM3B,EAAE,GACR4B,EAAM5B,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACR6B,EAAM7B,EAAE,GACR8B,EAAM9B,EAAE,GACR+B,EAAM/B,EAAE,IACRyB,EAAMzB,EAAE,IACRgC,EAAMhC,EAAE,IACRiC,EAAMjC,EAAE,IACRkC,EAAMlC,EAAE,IACRmC,EAAMnC,EAAE,IAERmD,EAAK3a,EAAE,GACP4a,EAAK5a,EAAE,GACP6a,EAAK7a,EAAE,GACP8a,EAAK9a,EAAE,GA6BX,OA5BAsX,EAAI,GAAKqD,EAAKzB,EAAM0B,EAAKzB,EAAM0B,EAAKxB,EAAMyB,EAAKtB,EAC/ClC,EAAI,GAAKqD,EAAK/B,EAAMgC,EAAKxB,EAAMyB,EAAKvB,EAAMwB,EAAKrB,EAC/CnC,EAAI,GAAKqD,EAAK9B,EAAM+B,EAAK7B,EAAM8B,EAAKtB,EAAMuB,EAAKpB,EAC/CpC,EAAI,GAAKqD,EAAK7B,EAAM8B,EAAK5B,EAAM6B,EAAK5B,EAAM6B,EAAKnB,EAC/CgB,EAAK3a,EAAE,GACP4a,EAAK5a,EAAE,GACP6a,EAAK7a,EAAE,GACP8a,EAAK9a,EAAE,GACPsX,EAAI,GAAKqD,EAAKzB,EAAM0B,EAAKzB,EAAM0B,EAAKxB,EAAMyB,EAAKtB,EAC/ClC,EAAI,GAAKqD,EAAK/B,EAAMgC,EAAKxB,EAAMyB,EAAKvB,EAAMwB,EAAKrB,EAC/CnC,EAAI,GAAKqD,EAAK9B,EAAM+B,EAAK7B,EAAM8B,EAAKtB,EAAMuB,EAAKpB,EAC/CpC,EAAI,GAAKqD,EAAK7B,EAAM8B,EAAK5B,EAAM6B,EAAK5B,EAAM6B,EAAKnB,EAC/CgB,EAAK3a,EAAE,GACP4a,EAAK5a,EAAE,GACP6a,EAAK7a,EAAE,IACP8a,EAAK9a,EAAE,IACPsX,EAAI,GAAKqD,EAAKzB,EAAM0B,EAAKzB,EAAM0B,EAAKxB,EAAMyB,EAAKtB,EAC/ClC,EAAI,GAAKqD,EAAK/B,EAAMgC,EAAKxB,EAAMyB,EAAKvB,EAAMwB,EAAKrB,EAC/CnC,EAAI,IAAMqD,EAAK9B,EAAM+B,EAAK7B,EAAM8B,EAAKtB,EAAMuB,EAAKpB,EAChDpC,EAAI,IAAMqD,EAAK7B,EAAM8B,EAAK5B,EAAM6B,EAAK5B,EAAM6B,EAAKnB,EAChDgB,EAAK3a,EAAE,IACP4a,EAAK5a,EAAE,IACP6a,EAAK7a,EAAE,IACP8a,EAAK9a,EAAE,IACPsX,EAAI,IAAMqD,EAAKzB,EAAM0B,EAAKzB,EAAM0B,EAAKxB,EAAMyB,EAAKtB,EAChDlC,EAAI,IAAMqD,EAAK/B,EAAMgC,EAAKxB,EAAMyB,EAAKvB,EAAMwB,EAAKrB,EAChDnC,EAAI,IAAMqD,EAAK9B,EAAM+B,EAAK7B,EAAM8B,EAAKtB,EAAMuB,EAAKpB,EAChDpC,EAAI,IAAMqD,EAAK7B,EAAM8B,EAAK5B,EAAM6B,EAAK5B,EAAM6B,EAAKnB,EACzCrC,EAWF,SAASyD,EAAUzD,EAAKE,EAAGxa,GAChC,IAGIkc,EAAKN,EAAKC,EAAKC,EACfK,EAAKC,EAAKL,EAAKC,EACfK,EAAKC,EAAKC,EAAKN,EALfrC,EAAI5Z,EAAE,GACN6Z,EAAI7Z,EAAE,GACNge,EAAIhe,EAAE,GAyCV,OApCIwa,IAAMF,GACRA,EAAI,IAAME,EAAE,GAAKZ,EAAIY,EAAE,GAAKX,EAAIW,EAAE,GAAKwD,EAAIxD,EAAE,IAC7CF,EAAI,IAAME,EAAE,GAAKZ,EAAIY,EAAE,GAAKX,EAAIW,EAAE,GAAKwD,EAAIxD,EAAE,IAC7CF,EAAI,IAAME,EAAE,GAAKZ,EAAIY,EAAE,GAAKX,EAAIW,EAAE,IAAMwD,EAAIxD,EAAE,IAC9CF,EAAI,IAAME,EAAE,GAAKZ,EAAIY,EAAE,GAAKX,EAAIW,EAAE,IAAMwD,EAAIxD,EAAE,MAE9C0B,EAAM1B,EAAE,GACRoB,EAAMpB,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACR2B,EAAM3B,EAAE,GACR4B,EAAM5B,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACR6B,EAAM7B,EAAE,GACR8B,EAAM9B,EAAE,GACR+B,EAAM/B,EAAE,IACRyB,EAAMzB,EAAE,IACRF,EAAI,GAAK4B,EACT5B,EAAI,GAAKsB,EACTtB,EAAI,GAAKuB,EACTvB,EAAI,GAAKwB,EACTxB,EAAI,GAAK6B,EACT7B,EAAI,GAAK8B,EACT9B,EAAI,GAAKyB,EACTzB,EAAI,GAAK0B,EACT1B,EAAI,GAAK+B,EACT/B,EAAI,GAAKgC,EACThC,EAAI,IAAMiC,EACVjC,EAAI,IAAM2B,EACV3B,EAAI,IAAM4B,EAAMtC,EAAIuC,EAAMtC,EAAIwC,EAAM2B,EAAIxD,EAAE,IAC1CF,EAAI,IAAMsB,EAAMhC,EAAIwC,EAAMvC,EAAIyC,EAAM0B,EAAIxD,EAAE,IAC1CF,EAAI,IAAMuB,EAAMjC,EAAImC,EAAMlC,EAAI0C,EAAMyB,EAAIxD,EAAE,IAC1CF,EAAI,IAAMwB,EAAMlC,EAAIoC,EAAMnC,EAAIoC,EAAM+B,EAAIxD,EAAE,KAGrCF,EAWF,SAAS,EAAMA,EAAKE,EAAGxa,GAC5B,IAAI4Z,EAAI5Z,EAAE,GACN6Z,EAAI7Z,EAAE,GACNge,EAAIhe,EAAE,GAiBV,OAhBAsa,EAAI,GAAKE,EAAE,GAAKZ,EAChBU,EAAI,GAAKE,EAAE,GAAKZ,EAChBU,EAAI,GAAKE,EAAE,GAAKZ,EAChBU,EAAI,GAAKE,EAAE,GAAKZ,EAChBU,EAAI,GAAKE,EAAE,GAAKX,EAChBS,EAAI,GAAKE,EAAE,GAAKX,EAChBS,EAAI,GAAKE,EAAE,GAAKX,EAChBS,EAAI,GAAKE,EAAE,GAAKX,EAChBS,EAAI,GAAKE,EAAE,GAAKwD,EAChB1D,EAAI,GAAKE,EAAE,GAAKwD,EAChB1D,EAAI,IAAME,EAAE,IAAMwD,EAClB1D,EAAI,IAAME,EAAE,IAAMwD,EAClB1D,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACLF,EAYF,SAAS2D,EAAO3D,EAAKE,EAAG0D,EAAKC,GAClC,IAIInkB,EAAG1B,EAAGa,EACN+iB,EAAKN,EAAKC,EAAKC,EACfK,EAAKC,EAAKL,EAAKC,EACfK,EAAKC,EAAKC,EAAKN,EACfW,EAAKC,EAAKC,EACVQ,EAAKC,EAAKa,EACVC,EAAKC,EAAKC,EAVV3E,EAAIuE,EAAK,GACTtE,EAAIsE,EAAK,GACTH,EAAIG,EAAK,GACTK,EAAMvU,KAAKwU,MAAM7E,EAAGC,EAAGmE,GAS3B,OAAIQ,EAAM,EACD,MAIT5E,GADA4E,EAAM,EAAIA,EAEV3E,GAAK2E,EACLR,GAAKQ,EACLxkB,EAAIiQ,KAAKyU,IAAIR,GAEb/kB,EAAI,GADJb,EAAI2R,KAAK0U,IAAIT,IAEbhC,EAAM1B,EAAE,GACRoB,EAAMpB,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACR2B,EAAM3B,EAAE,GACR4B,EAAM5B,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACR6B,EAAM7B,EAAE,GACR8B,EAAM9B,EAAE,GACR+B,EAAM/B,EAAE,IACRyB,EAAMzB,EAAE,IAERoC,EAAMhD,EAAIA,EAAIzgB,EAAIb,EAClBukB,EAAMhD,EAAID,EAAIzgB,EAAI6kB,EAAIhkB,EACtB8iB,EAAMkB,EAAIpE,EAAIzgB,EAAI0gB,EAAI7f,EACtBsjB,EAAM1D,EAAIC,EAAI1gB,EAAI6kB,EAAIhkB,EACtBujB,EAAM1D,EAAIA,EAAI1gB,EAAIb,EAClB8lB,EAAMJ,EAAInE,EAAI1gB,EAAIygB,EAAI5f,EACtBqkB,EAAMzE,EAAIoE,EAAI7kB,EAAI0gB,EAAI7f,EACtBskB,EAAMzE,EAAImE,EAAI7kB,EAAIygB,EAAI5f,EACtBukB,EAAMP,EAAIA,EAAI7kB,EAAIb,EAElBgiB,EAAI,GAAK4B,EAAMU,EAAMT,EAAMU,EAAMR,EAAMS,EACvCxC,EAAI,GAAKsB,EAAMgB,EAAMR,EAAMS,EAAMP,EAAMQ,EACvCxC,EAAI,GAAKuB,EAAMe,EAAMb,EAAMc,EAAMN,EAAMO,EACvCxC,EAAI,GAAKwB,EAAMc,EAAMZ,EAAMa,EAAMZ,EAAMa,EACvCxC,EAAI,GAAK4B,EAAMoB,EAAMnB,EAAMoB,EAAMlB,EAAM+B,EACvC9D,EAAI,GAAKsB,EAAM0B,EAAMlB,EAAMmB,EAAMjB,EAAM8B,EACvC9D,EAAI,GAAKuB,EAAMyB,EAAMvB,EAAMwB,EAAMhB,EAAM6B,EACvC9D,EAAI,GAAKwB,EAAMwB,EAAMtB,EAAMuB,EAAMtB,EAAMmC,EACvC9D,EAAI,GAAK4B,EAAMmC,EAAMlC,EAAMmC,EAAMjC,EAAMkC,EACvCjE,EAAI,GAAKsB,EAAMyC,EAAMjC,EAAMkC,EAAMhC,EAAMiC,EACvCjE,EAAI,IAAMuB,EAAMwC,EAAMtC,EAAMuC,EAAM/B,EAAMgC,EACxCjE,EAAI,IAAMwB,EAAMuC,EAAMrC,EAAMsC,EAAMrC,EAAMsC,EAEpC/D,IAAMF,IAERA,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,KAGPF,GAWF,SAASsE,EAAQtE,EAAKE,EAAG0D,GAC9B,IAAIlkB,EAAIiQ,KAAKyU,IAAIR,GACb5lB,EAAI2R,KAAK0U,IAAIT,GACb/B,EAAM3B,EAAE,GACR4B,EAAM5B,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GACR6B,EAAM7B,EAAE,GACR8B,EAAM9B,EAAE,GACR+B,EAAM/B,EAAE,IACRyB,EAAMzB,EAAE,IAuBZ,OArBIA,IAAMF,IAERA,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,KAIdF,EAAI,GAAK6B,EAAM7jB,EAAI+jB,EAAMriB,EACzBsgB,EAAI,GAAK8B,EAAM9jB,EAAIgkB,EAAMtiB,EACzBsgB,EAAI,GAAKyB,EAAMzjB,EAAIikB,EAAMviB,EACzBsgB,EAAI,GAAK0B,EAAM1jB,EAAI2jB,EAAMjiB,EACzBsgB,EAAI,GAAK+B,EAAM/jB,EAAI6jB,EAAMniB,EACzBsgB,EAAI,GAAKgC,EAAMhkB,EAAI8jB,EAAMpiB,EACzBsgB,EAAI,IAAMiC,EAAMjkB,EAAIyjB,EAAM/hB,EAC1BsgB,EAAI,IAAM2B,EAAM3jB,EAAI0jB,EAAMhiB,EACnBsgB,EAWF,SAASuE,EAAQvE,EAAKE,EAAG0D,GAC9B,IAAIlkB,EAAIiQ,KAAKyU,IAAIR,GACb5lB,EAAI2R,KAAK0U,IAAIT,GACbhC,EAAM1B,EAAE,GACRoB,EAAMpB,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACR6B,EAAM7B,EAAE,GACR8B,EAAM9B,EAAE,GACR+B,EAAM/B,EAAE,IACRyB,EAAMzB,EAAE,IAuBZ,OArBIA,IAAMF,IAERA,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,KAIdF,EAAI,GAAK4B,EAAM5jB,EAAI+jB,EAAMriB,EACzBsgB,EAAI,GAAKsB,EAAMtjB,EAAIgkB,EAAMtiB,EACzBsgB,EAAI,GAAKuB,EAAMvjB,EAAIikB,EAAMviB,EACzBsgB,EAAI,GAAKwB,EAAMxjB,EAAI2jB,EAAMjiB,EACzBsgB,EAAI,GAAK4B,EAAMliB,EAAIqiB,EAAM/jB,EACzBgiB,EAAI,GAAKsB,EAAM5hB,EAAIsiB,EAAMhkB,EACzBgiB,EAAI,IAAMuB,EAAM7hB,EAAIuiB,EAAMjkB,EAC1BgiB,EAAI,IAAMwB,EAAM9hB,EAAIiiB,EAAM3jB,EACnBgiB,EAWF,SAASwE,EAAQxE,EAAKE,EAAG0D,GAC9B,IAAIlkB,EAAIiQ,KAAKyU,IAAIR,GACb5lB,EAAI2R,KAAK0U,IAAIT,GACbhC,EAAM1B,EAAE,GACRoB,EAAMpB,EAAE,GACRqB,EAAMrB,EAAE,GACRsB,EAAMtB,EAAE,GACR2B,EAAM3B,EAAE,GACR4B,EAAM5B,EAAE,GACRuB,EAAMvB,EAAE,GACRwB,EAAMxB,EAAE,GAuBZ,OArBIA,IAAMF,IAERA,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,IACZF,EAAI,IAAME,EAAE,KAIdF,EAAI,GAAK4B,EAAM5jB,EAAI6jB,EAAMniB,EACzBsgB,EAAI,GAAKsB,EAAMtjB,EAAI8jB,EAAMpiB,EACzBsgB,EAAI,GAAKuB,EAAMvjB,EAAIyjB,EAAM/hB,EACzBsgB,EAAI,GAAKwB,EAAMxjB,EAAI0jB,EAAMhiB,EACzBsgB,EAAI,GAAK6B,EAAM7jB,EAAI4jB,EAAMliB,EACzBsgB,EAAI,GAAK8B,EAAM9jB,EAAIsjB,EAAM5hB,EACzBsgB,EAAI,GAAKyB,EAAMzjB,EAAIujB,EAAM7hB,EACzBsgB,EAAI,GAAK0B,EAAM1jB,EAAIwjB,EAAM9hB,EAClBsgB,EAcF,SAAStC,EAAgBsC,EAAKta,GAiBnC,OAhBAsa,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAMta,EAAE,GACZsa,EAAI,IAAMta,EAAE,GACZsa,EAAI,IAAMta,EAAE,GACZsa,EAAI,IAAM,EACHA,EAcF,SAASyE,EAAYzE,EAAKta,GAiB/B,OAhBAsa,EAAI,GAAKta,EAAE,GACXsa,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAKta,EAAE,GACXsa,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAMta,EAAE,GACZsa,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAeF,SAAS0E,EAAa1E,EAAK4D,EAAKC,GACrC,IAIInkB,EAAG1B,EAAGa,EAJNygB,EAAIuE,EAAK,GACTtE,EAAIsE,EAAK,GACTH,EAAIG,EAAK,GACTK,EAAMvU,KAAKwU,MAAM7E,EAAGC,EAAGmE,GAG3B,OAAIQ,EAAM,EACD,MAIT5E,GADA4E,EAAM,EAAIA,EAEV3E,GAAK2E,EACLR,GAAKQ,EACLxkB,EAAIiQ,KAAKyU,IAAIR,GAEb/kB,EAAI,GADJb,EAAI2R,KAAK0U,IAAIT,IAGb5D,EAAI,GAAKV,EAAIA,EAAIzgB,EAAIb,EACrBgiB,EAAI,GAAKT,EAAID,EAAIzgB,EAAI6kB,EAAIhkB,EACzBsgB,EAAI,GAAK0D,EAAIpE,EAAIzgB,EAAI0gB,EAAI7f,EACzBsgB,EAAI,GAAK,EACTA,EAAI,GAAKV,EAAIC,EAAI1gB,EAAI6kB,EAAIhkB,EACzBsgB,EAAI,GAAKT,EAAIA,EAAI1gB,EAAIb,EACrBgiB,EAAI,GAAK0D,EAAInE,EAAI1gB,EAAIygB,EAAI5f,EACzBsgB,EAAI,GAAK,EACTA,EAAI,GAAKV,EAAIoE,EAAI7kB,EAAI0gB,EAAI7f,EACzBsgB,EAAI,GAAKT,EAAImE,EAAI7kB,EAAIygB,EAAI5f,EACzBsgB,EAAI,IAAM0D,EAAIA,EAAI7kB,EAAIb,EACtBgiB,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,GAcF,SAAS5C,EAAc4C,EAAK4D,GACjC,IAAIlkB,EAAIiQ,KAAKyU,IAAIR,GACb5lB,EAAI2R,KAAK0U,IAAIT,GAkBjB,OAhBA5D,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAKhiB,EACTgiB,EAAI,GAAKtgB,EACTsgB,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAMtgB,EACVsgB,EAAI,IAAMhiB,EACVgiB,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAcF,SAAS3C,EAAc2C,EAAK4D,GACjC,IAAIlkB,EAAIiQ,KAAKyU,IAAIR,GACb5lB,EAAI2R,KAAK0U,IAAIT,GAkBjB,OAhBA5D,EAAI,GAAKhiB,EACTgiB,EAAI,GAAK,EACTA,EAAI,IAAMtgB,EACVsgB,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAKtgB,EACTsgB,EAAI,GAAK,EACTA,EAAI,IAAMhiB,EACVgiB,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAcF,SAAS2E,EAAc3E,EAAK4D,GACjC,IAAIlkB,EAAIiQ,KAAKyU,IAAIR,GACb5lB,EAAI2R,KAAK0U,IAAIT,GAkBjB,OAhBA5D,EAAI,GAAKhiB,EACTgiB,EAAI,GAAKtgB,EACTsgB,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAMtgB,EACVsgB,EAAI,GAAKhiB,EACTgiB,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAkBF,SAAS4E,EAAwB5E,EAAK6E,EAAGnf,GAE9C,IAAI4Z,EAAIuF,EAAE,GACNtF,EAAIsF,EAAE,GACNnB,EAAImB,EAAE,GACNC,EAAID,EAAE,GACNE,EAAKzF,EAAIA,EACT0F,EAAKzF,EAAIA,EACT0F,EAAKvB,EAAIA,EACTwB,EAAK5F,EAAIyF,EACTI,EAAK7F,EAAI0F,EACTI,EAAK9F,EAAI2F,EACTI,EAAK9F,EAAIyF,EACTM,EAAK/F,EAAI0F,EACTM,EAAK7B,EAAIuB,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EAiBb,OAhBAjF,EAAI,GAAK,GAAKqF,EAAKE,GACnBvF,EAAI,GAAKmF,EAAKO,EACd1F,EAAI,GAAKoF,EAAKK,EACdzF,EAAI,GAAK,EACTA,EAAI,GAAKmF,EAAKO,EACd1F,EAAI,GAAK,GAAKkF,EAAKK,GACnBvF,EAAI,GAAKsF,EAAKE,EACdxF,EAAI,GAAK,EACTA,EAAI,GAAKoF,EAAKK,EACdzF,EAAI,GAAKsF,EAAKE,EACdxF,EAAI,IAAM,GAAKkF,EAAKG,GACpBrF,EAAI,IAAM,EACVA,EAAI,IAAMta,EAAE,GACZsa,EAAI,IAAMta,EAAE,GACZsa,EAAI,IAAMta,EAAE,GACZsa,EAAI,IAAM,EACHA,EAUF,SAAS2F,EAAU3F,EAAKE,GAC7B,IAAI0F,EAAc,IAAI,EAAoB,GACtCC,GAAM3F,EAAE,GACR4F,GAAM5F,EAAE,GACR6F,GAAM7F,EAAE,GACR8F,EAAK9F,EAAE,GACP+F,EAAK/F,EAAE,GACPgG,EAAKhG,EAAE,GACPiG,EAAKjG,EAAE,GACPkG,EAAKlG,EAAE,GACPmG,EAAYR,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAanD,OAXIK,EAAY,GACdT,EAAY,GAA+C,GAAzCK,EAAKD,EAAKI,EAAKP,EAAKK,EAAKH,EAAKI,EAAKL,GAAUO,EAC/DT,EAAY,GAA+C,GAAzCM,EAAKF,EAAKI,EAAKN,EAAKK,EAAKN,EAAKI,EAAKF,GAAUM,EAC/DT,EAAY,GAA+C,GAAzCO,EAAKH,EAAKI,EAAKL,EAAKE,EAAKH,EAAKI,EAAKL,GAAUQ,IAE/DT,EAAY,GAA+C,GAAzCK,EAAKD,EAAKI,EAAKP,EAAKK,EAAKH,EAAKI,EAAKL,GACrDF,EAAY,GAA+C,GAAzCM,EAAKF,EAAKI,EAAKN,EAAKK,EAAKN,EAAKI,EAAKF,GACrDH,EAAY,GAA+C,GAAzCO,EAAKH,EAAKI,EAAKL,EAAKE,EAAKH,EAAKI,EAAKL,IAGvDjB,EAAwB5E,EAAKE,EAAG0F,GACzB5F,EAYF,SAASsG,EAAetG,EAAKuG,GAIlC,OAHAvG,EAAI,GAAKuG,EAAI,IACbvG,EAAI,GAAKuG,EAAI,IACbvG,EAAI,GAAKuG,EAAI,IACNvG,EAaF,SAASwG,EAAWxG,EAAKuG,GAC9B,IAAI9F,EAAM8F,EAAI,GACV7F,EAAM6F,EAAI,GACV5F,EAAM4F,EAAI,GACV1F,EAAM0F,EAAI,GACVzF,EAAMyF,EAAI,GACVxF,EAAMwF,EAAI,GACVtF,EAAMsF,EAAI,GACVrF,EAAMqF,EAAI,GACVpF,EAAMoF,EAAI,IAId,OAHAvG,EAAI,GAAKrQ,KAAKwU,MAAM1D,EAAKC,EAAKC,GAC9BX,EAAI,GAAKrQ,KAAKwU,MAAMtD,EAAKC,EAAKC,GAC9Bf,EAAI,GAAKrQ,KAAKwU,MAAMlD,EAAKC,EAAKC,GACvBnB,EAYF,SAASyG,EAAYzG,EAAKuG,GAC/B,IAAIG,EAAU,IAAI,EAAoB,GACtCF,EAAWE,EAASH,GACpB,IAAII,EAAM,EAAID,EAAQ,GAClBE,EAAM,EAAIF,EAAQ,GAClBG,EAAM,EAAIH,EAAQ,GAClBI,EAAOP,EAAI,GAAKI,EAChBI,EAAOR,EAAI,GAAKK,EAChBI,EAAOT,EAAI,GAAKM,EAChBI,EAAOV,EAAI,GAAKI,EAChBO,EAAOX,EAAI,GAAKK,EAChBO,EAAOZ,EAAI,GAAKM,EAChBO,EAAOb,EAAI,GAAKI,EAChBU,EAAOd,EAAI,GAAKK,EAChBU,EAAOf,EAAI,IAAMM,EACjBU,EAAQT,EAAOI,EAAOI,EACtBvI,EAAI,EA4BR,OA1BIwI,EAAQ,GACVxI,EAA6B,EAAzBpP,KAAK6X,KAAKD,EAAQ,GACtBvH,EAAI,GAAK,IAAOjB,EAChBiB,EAAI,IAAMmH,EAAOE,GAAQtI,EACzBiB,EAAI,IAAMoH,EAAOJ,GAAQjI,EACzBiB,EAAI,IAAM+G,EAAOE,GAAQlI,GAChB+H,EAAOI,GAAQJ,EAAOQ,GAC/BvI,EAA0C,EAAtCpP,KAAK6X,KAAK,EAAMV,EAAOI,EAAOI,GAClCtH,EAAI,IAAMmH,EAAOE,GAAQtI,EACzBiB,EAAI,GAAK,IAAOjB,EAChBiB,EAAI,IAAM+G,EAAOE,GAAQlI,EACzBiB,EAAI,IAAMoH,EAAOJ,GAAQjI,GAChBmI,EAAOI,GAChBvI,EAA0C,EAAtCpP,KAAK6X,KAAK,EAAMN,EAAOJ,EAAOQ,GAClCtH,EAAI,IAAMoH,EAAOJ,GAAQjI,EACzBiB,EAAI,IAAM+G,EAAOE,GAAQlI,EACzBiB,EAAI,GAAK,IAAOjB,EAChBiB,EAAI,IAAMmH,EAAOE,GAAQtI,IAEzBA,EAA0C,EAAtCpP,KAAK6X,KAAK,EAAMF,EAAOR,EAAOI,GAClClH,EAAI,IAAM+G,EAAOE,GAAQlI,EACzBiB,EAAI,IAAMoH,EAAOJ,GAAQjI,EACzBiB,EAAI,IAAMmH,EAAOE,GAAQtI,EACzBiB,EAAI,GAAK,IAAOjB,GAGXiB,EAoBF,SAASyH,EAA6BzH,EAAK6E,EAAGnf,EAAGhG,GAEtD,IAAI4f,EAAIuF,EAAE,GACNtF,EAAIsF,EAAE,GACNnB,EAAImB,EAAE,GACNC,EAAID,EAAE,GACNE,EAAKzF,EAAIA,EACT0F,EAAKzF,EAAIA,EACT0F,EAAKvB,EAAIA,EACTwB,EAAK5F,EAAIyF,EACTI,EAAK7F,EAAI0F,EACTI,EAAK9F,EAAI2F,EACTI,EAAK9F,EAAIyF,EACTM,EAAK/F,EAAI0F,EACTM,EAAK7B,EAAIuB,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EACTyC,EAAKhoB,EAAE,GACPioB,EAAKjoB,EAAE,GACPkoB,EAAKloB,EAAE,GAiBX,OAhBAsgB,EAAI,IAAM,GAAKqF,EAAKE,IAAOmC,EAC3B1H,EAAI,IAAMmF,EAAKO,GAAMgC,EACrB1H,EAAI,IAAMoF,EAAKK,GAAMiC,EACrB1H,EAAI,GAAK,EACTA,EAAI,IAAMmF,EAAKO,GAAMiC,EACrB3H,EAAI,IAAM,GAAKkF,EAAKK,IAAOoC,EAC3B3H,EAAI,IAAMsF,EAAKE,GAAMmC,EACrB3H,EAAI,GAAK,EACTA,EAAI,IAAMoF,EAAKK,GAAMmC,EACrB5H,EAAI,IAAMsF,EAAKE,GAAMoC,EACrB5H,EAAI,KAAO,GAAKkF,EAAKG,IAAOuC,EAC5B5H,EAAI,IAAM,EACVA,EAAI,IAAMta,EAAE,GACZsa,EAAI,IAAMta,EAAE,GACZsa,EAAI,IAAMta,EAAE,GACZsa,EAAI,IAAM,EACHA,EAuBF,SAAS6H,EAAmC7H,EAAK6E,EAAGnf,EAAGhG,EAAGtB,GAE/D,IAAIkhB,EAAIuF,EAAE,GACNtF,EAAIsF,EAAE,GACNnB,EAAImB,EAAE,GACNC,EAAID,EAAE,GACNE,EAAKzF,EAAIA,EACT0F,EAAKzF,EAAIA,EACT0F,EAAKvB,EAAIA,EACTwB,EAAK5F,EAAIyF,EACTI,EAAK7F,EAAI0F,EACTI,EAAK9F,EAAI2F,EACTI,EAAK9F,EAAIyF,EACTM,EAAK/F,EAAI0F,EACTM,EAAK7B,EAAIuB,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EACTyC,EAAKhoB,EAAE,GACPioB,EAAKjoB,EAAE,GACPkoB,EAAKloB,EAAE,GACPooB,EAAK1pB,EAAE,GACP2pB,EAAK3pB,EAAE,GACP4pB,EAAK5pB,EAAE,GACP6pB,GAAQ,GAAK5C,EAAKE,IAAOmC,EACzBQ,GAAQ/C,EAAKO,GAAMgC,EACnBS,GAAQ/C,EAAKK,GAAMiC,EACnBU,GAAQjD,EAAKO,GAAMiC,EACnBU,GAAQ,GAAKnD,EAAKK,IAAOoC,EACzBW,GAAQhD,EAAKE,GAAMmC,EACnBY,GAAQnD,EAAKK,GAAMmC,EACnBY,GAAQlD,EAAKE,GAAMoC,EACnBa,GAAS,GAAKvD,EAAKG,IAAOuC,EAiB9B,OAhBA5H,EAAI,GAAKiI,EACTjI,EAAI,GAAKkI,EACTlI,EAAI,GAAKmI,EACTnI,EAAI,GAAK,EACTA,EAAI,GAAKoI,EACTpI,EAAI,GAAKqI,EACTrI,EAAI,GAAKsI,EACTtI,EAAI,GAAK,EACTA,EAAI,GAAKuI,EACTvI,EAAI,GAAKwI,EACTxI,EAAI,IAAMyI,EACVzI,EAAI,IAAM,EACVA,EAAI,IAAMta,EAAE,GAAKoiB,GAAMG,EAAOH,EAAKM,EAAOL,EAAKQ,EAAOP,GACtDhI,EAAI,IAAMta,EAAE,GAAKqiB,GAAMG,EAAOJ,EAAKO,EAAON,EAAKS,EAAOR,GACtDhI,EAAI,IAAMta,EAAE,GAAKsiB,GAAMG,EAAOL,EAAKQ,EAAOP,EAAKU,EAAQT,GACvDhI,EAAI,IAAM,EACHA,EAWF,SAAS0I,EAAS1I,EAAK6E,GAC5B,IAAIvF,EAAIuF,EAAE,GACNtF,EAAIsF,EAAE,GACNnB,EAAImB,EAAE,GACNC,EAAID,EAAE,GACNE,EAAKzF,EAAIA,EACT0F,EAAKzF,EAAIA,EACT0F,EAAKvB,EAAIA,EACTwB,EAAK5F,EAAIyF,EACT4D,EAAKpJ,EAAIwF,EACTM,EAAK9F,EAAIyF,EACT4D,EAAKlF,EAAIqB,EACT8D,EAAKnF,EAAIsB,EACTO,EAAK7B,EAAIuB,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EAiBb,OAhBAjF,EAAI,GAAK,EAAIqF,EAAKE,EAClBvF,EAAI,GAAK2I,EAAKjD,EACd1F,EAAI,GAAK4I,EAAKnD,EACdzF,EAAI,GAAK,EACTA,EAAI,GAAK2I,EAAKjD,EACd1F,EAAI,GAAK,EAAIkF,EAAKK,EAClBvF,EAAI,GAAK6I,EAAKrD,EACdxF,EAAI,GAAK,EACTA,EAAI,GAAK4I,EAAKnD,EACdzF,EAAI,GAAK6I,EAAKrD,EACdxF,EAAI,IAAM,EAAIkF,EAAKG,EACnBrF,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAeF,SAAS8I,EAAQ9I,EAAK+I,EAAMC,EAAOC,EAAQC,EAAKjL,EAAMC,GAC3D,IAAIiL,EAAK,GAAKH,EAAQD,GAClBK,EAAK,GAAKF,EAAMD,GAChBI,EAAK,GAAKpL,EAAOC,GAiBrB,OAhBA8B,EAAI,GAAY,EAAP/B,EAAWkL,EACpBnJ,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAY,EAAP/B,EAAWmL,EACpBpJ,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAMgJ,EAAQD,GAAQI,EAC1BnJ,EAAI,IAAMkJ,EAAMD,GAAUG,EAC1BpJ,EAAI,KAAO9B,EAAMD,GAAQoL,EACzBrJ,EAAI,KAAO,EACXA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM9B,EAAMD,EAAO,EAAIoL,EAC3BrJ,EAAI,IAAM,EACHA,EAcF,SAAS5B,EAAY4B,EAAKlC,EAAME,EAAQC,EAAMC,GACnD,IACImL,EADAC,EAAI,EAAM3Z,KAAK4Z,IAAIzL,EAAO,GA0B9B,OAxBAkC,EAAI,GAAKsJ,EAAItL,EACbgC,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAKsJ,EACTtJ,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,KAAO,EACXA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EAEC,MAAP9B,GAAeA,IAAQsL,KACzBH,EAAK,GAAKpL,EAAOC,GACjB8B,EAAI,KAAO9B,EAAMD,GAAQoL,EACzBrJ,EAAI,IAAM,EAAI9B,EAAMD,EAAOoL,IAE3BrJ,EAAI,KAAO,EACXA,EAAI,KAAO,EAAI/B,GAGV+B,EAcF,SAASyJ,EAA2BzJ,EAAK0J,EAAKzL,EAAMC,GACzD,IAAIyL,EAAQha,KAAK4Z,IAAIG,EAAIE,UAAYja,KAAKoO,GAAK,KAC3C8L,EAAUla,KAAK4Z,IAAIG,EAAII,YAAcna,KAAKoO,GAAK,KAC/CgM,EAAUpa,KAAK4Z,IAAIG,EAAIM,YAAcra,KAAKoO,GAAK,KAC/CkM,EAAWta,KAAK4Z,IAAIG,EAAIQ,aAAeva,KAAKoO,GAAK,KACjDoM,EAAS,GAAOJ,EAAUE,GAC1BG,EAAS,GAAOT,EAAQE,GAiB5B,OAhBA7J,EAAI,GAAKmK,EACTnK,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAKoK,EACTpK,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,KAAQ+J,EAAUE,GAAYE,EAAS,GAC3CnK,EAAI,IAAM2J,EAAQE,GAAWO,EAAS,GACtCpK,EAAI,IAAM9B,GAAOD,EAAOC,GACxB8B,EAAI,KAAO,EACXA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM9B,EAAMD,GAAQA,EAAOC,GAC/B8B,EAAI,IAAM,EACHA,EAeF,SAASqK,EAAMrK,EAAK+I,EAAMC,EAAOC,EAAQC,EAAKjL,EAAMC,GACzD,IAAIoM,EAAK,GAAKvB,EAAOC,GACjBuB,EAAK,GAAKtB,EAASC,GACnBG,EAAK,GAAKpL,EAAOC,GAiBrB,OAhBA8B,EAAI,IAAM,EAAIsK,EACdtK,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EAAIuK,EACdvK,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EAAIqJ,EACdrJ,EAAI,IAAM,EACVA,EAAI,KAAO+I,EAAOC,GAASsB,EAC3BtK,EAAI,KAAOkJ,EAAMD,GAAUsB,EAC3BvK,EAAI,KAAO9B,EAAMD,GAAQoL,EACzBrJ,EAAI,IAAM,EACHA,EAaF,SAASwK,EAAOxK,EAAKyK,EAAKC,EAAQC,GACvC,IAAIC,EAAIC,EAAI9F,EAAI+F,EAAIC,EAAI/F,EAAIgG,EAAIC,EAAIhG,EAAIf,EACpCgH,EAAOT,EAAI,GACXU,EAAOV,EAAI,GACXW,EAAOX,EAAI,GACXY,EAAMV,EAAG,GACTW,EAAMX,EAAG,GACTY,EAAMZ,EAAG,GACTa,EAAUd,EAAO,GACjBe,EAAUf,EAAO,GACjBgB,EAAUhB,EAAO,GAErB,OAAI/a,KAAKgc,IAAIT,EAAOM,GAAW,GAAoB7b,KAAKgc,IAAIR,EAAOM,GAAW,GAAoB9b,KAAKgc,IAAIP,EAAOM,GAAW,EACpHtK,EAASpB,IAGlBgL,EAAKE,EAAOM,EACZP,EAAKE,EAAOM,EACZxG,EAAKmG,EAAOM,EAKZd,EAAKU,GADLrG,GAHAf,EAAM,EAAIvU,KAAKwU,MAAM6G,EAAIC,EAAIhG,IAIbsG,GAFhBN,GAAM/G,GAGN2G,EAAKU,GAJLP,GAAM9G,GAIUmH,EAAMpG,EACtBF,EAAKsG,EAAMJ,EAAKK,EAAMN,GACtB9G,EAAMvU,KAAKwU,MAAMyG,EAAIC,EAAI9F,KAQvB6F,GADA1G,EAAM,EAAIA,EAEV2G,GAAM3G,EACNa,GAAMb,IAPN0G,EAAK,EACLC,EAAK,EACL9F,EAAK,GAQP+F,EAAKG,EAAKlG,EAAKE,EAAK4F,EACpBE,EAAK9F,EAAK2F,EAAKI,EAAKjG,EACpBC,EAAKgG,EAAKH,EAAKI,EAAKL,GACpB1G,EAAMvU,KAAKwU,MAAM2G,EAAIC,EAAI/F,KAQvB8F,GADA5G,EAAM,EAAIA,EAEV6G,GAAM7G,EACNc,GAAMd,IAPN4G,EAAK,EACLC,EAAK,EACL/F,EAAK,GAQPhF,EAAI,GAAK4K,EACT5K,EAAI,GAAK8K,EACT9K,EAAI,GAAKgL,EACThL,EAAI,GAAK,EACTA,EAAI,GAAK6K,EACT7K,EAAI,GAAK+K,EACT/K,EAAI,GAAKiL,EACTjL,EAAI,GAAK,EACTA,EAAI,GAAK+E,EACT/E,EAAI,GAAKgF,EACThF,EAAI,IAAMiF,EACVjF,EAAI,IAAM,EACVA,EAAI,MAAQ4K,EAAKM,EAAOL,EAAKM,EAAOpG,EAAKqG,GACzCpL,EAAI,MAAQ8K,EAAKI,EAAOH,EAAKI,EAAOnG,EAAKoG,GACzCpL,EAAI,MAAQgL,EAAKE,EAAOD,EAAKE,EAAOlG,EAAKmG,GACzCpL,EAAI,IAAM,EACHA,GAYF,SAAS4L,EAAS5L,EAAKyK,EAAK1S,EAAQ4S,GACzC,IAAIO,EAAOT,EAAI,GACXU,EAAOV,EAAI,GACXW,EAAOX,EAAI,GACXY,EAAMV,EAAG,GACTW,EAAMX,EAAG,GACTY,EAAMZ,EAAG,GACTK,EAAKE,EAAOnT,EAAO,GACnBkT,EAAKE,EAAOpT,EAAO,GACnBkN,EAAKmG,EAAOrT,EAAO,GACnBmM,EAAM8G,EAAKA,EAAKC,EAAKA,EAAKhG,EAAKA,EAE/Bf,EAAM,IAER8G,GADA9G,EAAM,EAAIvU,KAAK6X,KAAKtD,GAEpB+G,GAAM/G,EACNe,GAAMf,GAGR,IAAI0G,EAAKU,EAAMrG,EAAKsG,EAAMN,EACtBJ,EAAKU,EAAMP,EAAKK,EAAMpG,EACtBF,EAAKsG,EAAMJ,EAAKK,EAAMN,EA0B1B,OAzBA9G,EAAM0G,EAAKA,EAAKC,EAAKA,EAAK9F,EAAKA,GAErB,IAER6F,GADA1G,EAAM,EAAIvU,KAAK6X,KAAKtD,GAEpB2G,GAAM3G,EACNa,GAAMb,GAGRlE,EAAI,GAAK4K,EACT5K,EAAI,GAAK6K,EACT7K,EAAI,GAAK+E,EACT/E,EAAI,GAAK,EACTA,EAAI,GAAKiL,EAAKlG,EAAKE,EAAK4F,EACxB7K,EAAI,GAAKiF,EAAK2F,EAAKI,EAAKjG,EACxB/E,EAAI,GAAKgL,EAAKH,EAAKI,EAAKL,EACxB5K,EAAI,GAAK,EACTA,EAAI,GAAKgL,EACThL,EAAI,GAAKiL,EACTjL,EAAI,IAAMiF,EACVjF,EAAI,IAAM,EACVA,EAAI,IAAMkL,EACVlL,EAAI,IAAMmL,EACVnL,EAAI,IAAMoL,EACVpL,EAAI,IAAM,EACHA,EASF,SAAS6L,EAAI3L,GAClB,MAAO,QAAUA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,IAAM,KAAOA,EAAE,IAAM,KAAOA,EAAE,IAAM,KAAOA,EAAE,IAAM,KAAOA,EAAE,IAAM,KAAOA,EAAE,IAAM,IAS3O,SAAS4L,EAAK5L,GACnB,OAAOvQ,KAAKwU,MAAMjE,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAAKA,EAAE,IAAKA,EAAE,IAAKA,EAAE,IAAKA,EAAE,IAAKA,EAAE,KAW9G,SAAS1C,EAAIwC,EAAKE,EAAGxX,GAiB1B,OAhBAsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,IAAME,EAAE,IAAMxX,EAAE,IACpBsX,EAAI,IAAME,EAAE,IAAMxX,EAAE,IACpBsX,EAAI,IAAME,EAAE,IAAMxX,EAAE,IACpBsX,EAAI,IAAME,EAAE,IAAMxX,EAAE,IACpBsX,EAAI,IAAME,EAAE,IAAMxX,EAAE,IACpBsX,EAAI,IAAME,EAAE,IAAMxX,EAAE,IACbsX,EAWF,SAAS+L,EAAS/L,EAAKE,EAAGxX,GAiB/B,OAhBAsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,IAAME,EAAE,IAAMxX,EAAE,IACpBsX,EAAI,IAAME,EAAE,IAAMxX,EAAE,IACpBsX,EAAI,IAAME,EAAE,IAAMxX,EAAE,IACpBsX,EAAI,IAAME,EAAE,IAAMxX,EAAE,IACpBsX,EAAI,IAAME,EAAE,IAAMxX,EAAE,IACpBsX,EAAI,IAAME,EAAE,IAAMxX,EAAE,IACbsX,EAWF,SAASgM,EAAehM,EAAKE,EAAGxX,GAiBrC,OAhBAsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,IAAME,EAAE,IAAMxX,EAClBsX,EAAI,IAAME,EAAE,IAAMxX,EAClBsX,EAAI,IAAME,EAAE,IAAMxX,EAClBsX,EAAI,IAAME,EAAE,IAAMxX,EAClBsX,EAAI,IAAME,EAAE,IAAMxX,EAClBsX,EAAI,IAAME,EAAE,IAAMxX,EACXsX,EAYF,SAASiM,EAAqBjM,EAAKE,EAAGxX,EAAG+U,GAiB9C,OAhBAuC,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAAK+U,EACvBuC,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAAK+U,EACvBuC,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAAK+U,EACvBuC,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAAK+U,EACvBuC,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAAK+U,EACvBuC,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAAK+U,EACvBuC,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAAK+U,EACvBuC,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAAK+U,EACvBuC,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAAK+U,EACvBuC,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAAK+U,EACvBuC,EAAI,IAAME,EAAE,IAAMxX,EAAE,IAAM+U,EAC1BuC,EAAI,IAAME,EAAE,IAAMxX,EAAE,IAAM+U,EAC1BuC,EAAI,IAAME,EAAE,IAAMxX,EAAE,IAAM+U,EAC1BuC,EAAI,IAAME,EAAE,IAAMxX,EAAE,IAAM+U,EAC1BuC,EAAI,IAAME,EAAE,IAAMxX,EAAE,IAAM+U,EAC1BuC,EAAI,IAAME,EAAE,IAAMxX,EAAE,IAAM+U,EACnBuC,EAUF,SAASkM,EAAYhM,EAAGxX,GAC7B,OAAOwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,MAAQxX,EAAE,KAAOwX,EAAE,MAAQxX,EAAE,KAAOwX,EAAE,MAAQxX,EAAE,KAAOwX,EAAE,MAAQxX,EAAE,KAAOwX,EAAE,MAAQxX,EAAE,KAAOwX,EAAE,MAAQxX,EAAE,IAUvR,SAAS,EAAOwX,EAAGxX,GACxB,IAAIyjB,EAAKjM,EAAE,GACPkM,EAAKlM,EAAE,GACPmM,EAAKnM,EAAE,GACPoM,EAAKpM,EAAE,GACPqM,EAAKrM,EAAE,GACPsM,EAAKtM,EAAE,GACPuM,EAAKvM,EAAE,GACPwM,EAAKxM,EAAE,GACPyM,EAAKzM,EAAE,GACP0M,EAAK1M,EAAE,GACP2B,EAAM3B,EAAE,IACR4B,EAAM5B,EAAE,IACRuB,EAAMvB,EAAE,IACRwB,EAAMxB,EAAE,IACR2M,EAAM3M,EAAE,IACR4M,EAAM5M,EAAE,IACRmD,EAAK3a,EAAE,GACP4a,EAAK5a,EAAE,GACP6a,EAAK7a,EAAE,GACP8a,EAAK9a,EAAE,GACPqkB,EAAKrkB,EAAE,GACPskB,EAAKtkB,EAAE,GACPukB,EAAKvkB,EAAE,GACPwkB,EAAKxkB,EAAE,GACPykB,EAAKzkB,EAAE,GACP0kB,EAAK1kB,EAAE,GACPsa,EAAMta,EAAE,IACRua,EAAMva,EAAE,IACRob,EAAMpb,EAAE,IACR2kB,EAAM3kB,EAAE,IACR4kB,EAAM5kB,EAAE,IACR6kB,EAAM7kB,EAAE,IACZ,OAAOiH,KAAKgc,IAAIQ,EAAK9I,IAAO,EAAmB1T,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIQ,GAAKxc,KAAKgc,IAAItI,KAAQ1T,KAAKgc,IAAIS,EAAK9I,IAAO,EAAmB3T,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIS,GAAKzc,KAAKgc,IAAIrI,KAAQ3T,KAAKgc,IAAIU,EAAK9I,IAAO,EAAmB5T,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIU,GAAK1c,KAAKgc,IAAIpI,KAAQ5T,KAAKgc,IAAIW,EAAK9I,IAAO,EAAmB7T,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIW,GAAK3c,KAAKgc,IAAInI,KAAQ7T,KAAKgc,IAAIY,EAAKQ,IAAO,EAAmBpd,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIY,GAAK5c,KAAKgc,IAAIoB,KAAQpd,KAAKgc,IAAIa,EAAKQ,IAAO,EAAmBrd,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIa,GAAK7c,KAAKgc,IAAIqB,KAAQrd,KAAKgc,IAAIc,EAAKQ,IAAO,EAAmBtd,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIc,GAAK9c,KAAKgc,IAAIsB,KAAQtd,KAAKgc,IAAIe,EAAKQ,IAAO,EAAmBvd,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIe,GAAK/c,KAAKgc,IAAIuB,KAAQvd,KAAKgc,IAAIgB,EAAKQ,IAAO,EAAmBxd,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIgB,GAAKhd,KAAKgc,IAAIwB,KAAQxd,KAAKgc,IAAIiB,EAAKQ,IAAO,EAAmBzd,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIiB,GAAKjd,KAAKgc,IAAIyB,KAAQzd,KAAKgc,IAAI9J,EAAMmB,IAAQ,EAAmBrT,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAI9J,GAAMlS,KAAKgc,IAAI3I,KAASrT,KAAKgc,IAAI7J,EAAMmB,IAAQ,EAAmBtT,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAI7J,GAAMnS,KAAKgc,IAAI1I,KAAStT,KAAKgc,IAAIlK,EAAMqC,IAAQ,EAAmBnU,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIlK,GAAM9R,KAAKgc,IAAI7H,KAASnU,KAAKgc,IAAIjK,EAAM2L,IAAQ,EAAmB1d,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIjK,GAAM/R,KAAKgc,IAAI0B,KAAS1d,KAAKgc,IAAIkB,EAAMS,IAAQ,EAAmB3d,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIkB,GAAMld,KAAKgc,IAAI2B,KAAS3d,KAAKgc,IAAImB,EAAMS,IAAQ,EAAmB5d,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAImB,GAAMnd,KAAKgc,IAAI4B,IDhuDn2C5d,KAAKwU,QAAOxU,KAAKwU,MAAQ,WAI5B,IAHA,IAAI5E,EAAI,EACJ5hB,EAAI8vB,UAAUnf,OAEX3Q,KACL4hB,GAAKkO,UAAU9vB,GAAK8vB,UAAU9vB,GAGhC,OAAOgS,KAAK6X,KAAKjI,KC+tDZ,IAAImO,GAAM/P,EAMNgQ,GAAM5B,ECzwDV,SAAS,KACd,IAAI/L,EAAM,IAAI,EAAoB,GAQlC,OANI,GAAuBrb,eACzBqb,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,GAGJA,EASF,SAAS,GAAME,GACpB,IAAIF,EAAM,IAAI,EAAoB,GAIlC,OAHAA,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACJF,EASF,SAAS,GAAOE,GACrB,IAAIZ,EAAIY,EAAE,GACNX,EAAIW,EAAE,GACNwD,EAAIxD,EAAE,GACV,OAAOvQ,KAAKwU,MAAM7E,EAAGC,EAAGmE,GAWnB,SAAS,GAAWpE,EAAGC,EAAGmE,GAC/B,IAAI1D,EAAM,IAAI,EAAoB,GAIlC,OAHAA,EAAI,GAAKV,EACTU,EAAI,GAAKT,EACTS,EAAI,GAAK0D,EACF1D,EAUF,SAAS,GAAKA,EAAKE,GAIxB,OAHAF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACJF,EAYF,SAAS,GAAIA,EAAKV,EAAGC,EAAGmE,GAI7B,OAHA1D,EAAI,GAAKV,EACTU,EAAI,GAAKT,EACTS,EAAI,GAAK0D,EACF1D,EAWF,SAAS,GAAIA,EAAKE,EAAGxX,GAI1B,OAHAsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GACXsX,EAWF,SAAS,GAASA,EAAKE,EAAGxX,GAI/B,OAHAsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GACXsX,EAWF,SAAS,GAASA,EAAKE,EAAGxX,GAI/B,OAHAsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GACXsX,EAWF,SAAS4N,GAAO5N,EAAKE,EAAGxX,GAI7B,OAHAsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GACXsX,EAUF,SAAS6N,GAAK7N,EAAKE,GAIxB,OAHAF,EAAI,GAAKrQ,KAAKke,KAAK3N,EAAE,IACrBF,EAAI,GAAKrQ,KAAKke,KAAK3N,EAAE,IACrBF,EAAI,GAAKrQ,KAAKke,KAAK3N,EAAE,IACdF,EAUF,SAAS8N,GAAM9N,EAAKE,GAIzB,OAHAF,EAAI,GAAKrQ,KAAKme,MAAM5N,EAAE,IACtBF,EAAI,GAAKrQ,KAAKme,MAAM5N,EAAE,IACtBF,EAAI,GAAKrQ,KAAKme,MAAM5N,EAAE,IACfF,EAWF,SAASpQ,GAAIoQ,EAAKE,EAAGxX,GAI1B,OAHAsX,EAAI,GAAKrQ,KAAKC,IAAIsQ,EAAE,GAAIxX,EAAE,IAC1BsX,EAAI,GAAKrQ,KAAKC,IAAIsQ,EAAE,GAAIxX,EAAE,IAC1BsX,EAAI,GAAKrQ,KAAKC,IAAIsQ,EAAE,GAAIxX,EAAE,IACnBsX,EAWF,SAASwN,GAAIxN,EAAKE,EAAGxX,GAI1B,OAHAsX,EAAI,GAAKrQ,KAAK6d,IAAItN,EAAE,GAAIxX,EAAE,IAC1BsX,EAAI,GAAKrQ,KAAK6d,IAAItN,EAAE,GAAIxX,EAAE,IAC1BsX,EAAI,GAAKrQ,KAAK6d,IAAItN,EAAE,GAAIxX,EAAE,IACnBsX,EAUF,SAAS+N,GAAM/N,EAAKE,GAIzB,OAHAF,EAAI,GAAKrQ,KAAKoe,MAAM7N,EAAE,IACtBF,EAAI,GAAKrQ,KAAKoe,MAAM7N,EAAE,IACtBF,EAAI,GAAKrQ,KAAKoe,MAAM7N,EAAE,IACfF,EAWF,SAAS,GAAMA,EAAKE,EAAGxX,GAI5B,OAHAsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EACTsX,EAYF,SAASgO,GAAYhO,EAAKE,EAAGxX,EAAG+U,GAIrC,OAHAuC,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAAK+U,EACvBuC,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAAK+U,EACvBuC,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAAK+U,EAChBuC,EAUF,SAASiO,GAAS/N,EAAGxX,GAC1B,IAAI4W,EAAI5W,EAAE,GAAKwX,EAAE,GACbX,EAAI7W,EAAE,GAAKwX,EAAE,GACbwD,EAAIhb,EAAE,GAAKwX,EAAE,GACjB,OAAOvQ,KAAKwU,MAAM7E,EAAGC,EAAGmE,GAUnB,SAASwK,GAAgBhO,EAAGxX,GACjC,IAAI4W,EAAI5W,EAAE,GAAKwX,EAAE,GACbX,EAAI7W,EAAE,GAAKwX,EAAE,GACbwD,EAAIhb,EAAE,GAAKwX,EAAE,GACjB,OAAOZ,EAAIA,EAAIC,EAAIA,EAAImE,EAAIA,EAStB,SAASyK,GAAcjO,GAC5B,IAAIZ,EAAIY,EAAE,GACNX,EAAIW,EAAE,GACNwD,EAAIxD,EAAE,GACV,OAAOZ,EAAIA,EAAIC,EAAIA,EAAImE,EAAIA,EAUtB,SAAS0K,GAAOpO,EAAKE,GAI1B,OAHAF,EAAI,IAAME,EAAE,GACZF,EAAI,IAAME,EAAE,GACZF,EAAI,IAAME,EAAE,GACLF,EAUF,SAASqO,GAAQrO,EAAKE,GAI3B,OAHAF,EAAI,GAAK,EAAME,EAAE,GACjBF,EAAI,GAAK,EAAME,EAAE,GACjBF,EAAI,GAAK,EAAME,EAAE,GACVF,EAUF,SAAShX,GAAUgX,EAAKE,GAC7B,IAAIZ,EAAIY,EAAE,GACNX,EAAIW,EAAE,GACNwD,EAAIxD,EAAE,GACNgE,EAAM5E,EAAIA,EAAIC,EAAIA,EAAImE,EAAIA,EAU9B,OARIQ,EAAM,IAERA,EAAM,EAAIvU,KAAK6X,KAAKtD,IAGtBlE,EAAI,GAAKE,EAAE,GAAKgE,EAChBlE,EAAI,GAAKE,EAAE,GAAKgE,EAChBlE,EAAI,GAAKE,EAAE,GAAKgE,EACTlE,EAUF,SAAS,GAAIE,EAAGxX,GACrB,OAAOwX,EAAE,GAAKxX,EAAE,GAAKwX,EAAE,GAAKxX,EAAE,GAAKwX,EAAE,GAAKxX,EAAE,GAWvC,SAAS4lB,GAAMtO,EAAKE,EAAGxX,GAC5B,IAAIud,EAAK/F,EAAE,GACPgG,EAAKhG,EAAE,GACPiG,EAAKjG,EAAE,GACP2F,EAAKnd,EAAE,GACPod,EAAKpd,EAAE,GACPqd,EAAKrd,EAAE,GAIX,OAHAsX,EAAI,GAAKkG,EAAKH,EAAKI,EAAKL,EACxB9F,EAAI,GAAKmG,EAAKN,EAAKI,EAAKF,EACxB/F,EAAI,GAAKiG,EAAKH,EAAKI,EAAKL,EACjB7F,EAYF,SAASuO,GAAKvO,EAAKE,EAAGxX,EAAG7J,GAC9B,IAAIonB,EAAK/F,EAAE,GACPgG,EAAKhG,EAAE,GACPiG,EAAKjG,EAAE,GAIX,OAHAF,EAAI,GAAKiG,EAAKpnB,GAAK6J,EAAE,GAAKud,GAC1BjG,EAAI,GAAKkG,EAAKrnB,GAAK6J,EAAE,GAAKwd,GAC1BlG,EAAI,GAAKmG,EAAKtnB,GAAK6J,EAAE,GAAKyd,GACnBnG,EAcF,SAASwO,GAAQxO,EAAKE,EAAGxX,EAAG1K,EAAGC,EAAGY,GACvC,IAAI4vB,EAAe5vB,EAAIA,EACnB6vB,EAAUD,GAAgB,EAAI5vB,EAAI,GAAK,EACvC8vB,EAAUF,GAAgB5vB,EAAI,GAAKA,EACnC+vB,EAAUH,GAAgB5vB,EAAI,GAC9BgwB,EAAUJ,GAAgB,EAAI,EAAI5vB,GAItC,OAHAmhB,EAAI,GAAKE,EAAE,GAAKwO,EAAUhmB,EAAE,GAAKimB,EAAU3wB,EAAE,GAAK4wB,EAAU3wB,EAAE,GAAK4wB,EACnE7O,EAAI,GAAKE,EAAE,GAAKwO,EAAUhmB,EAAE,GAAKimB,EAAU3wB,EAAE,GAAK4wB,EAAU3wB,EAAE,GAAK4wB,EACnE7O,EAAI,GAAKE,EAAE,GAAKwO,EAAUhmB,EAAE,GAAKimB,EAAU3wB,EAAE,GAAK4wB,EAAU3wB,EAAE,GAAK4wB,EAC5D7O,EAcF,SAAS8O,GAAO9O,EAAKE,EAAGxX,EAAG1K,EAAGC,EAAGY,GACtC,IAAIkwB,EAAgB,EAAIlwB,EACpBmwB,EAAwBD,EAAgBA,EACxCN,EAAe5vB,EAAIA,EACnB6vB,EAAUM,EAAwBD,EAClCJ,EAAU,EAAI9vB,EAAImwB,EAClBJ,EAAU,EAAIH,EAAeM,EAC7BF,EAAUJ,EAAe5vB,EAI7B,OAHAmhB,EAAI,GAAKE,EAAE,GAAKwO,EAAUhmB,EAAE,GAAKimB,EAAU3wB,EAAE,GAAK4wB,EAAU3wB,EAAE,GAAK4wB,EACnE7O,EAAI,GAAKE,EAAE,GAAKwO,EAAUhmB,EAAE,GAAKimB,EAAU3wB,EAAE,GAAK4wB,EAAU3wB,EAAE,GAAK4wB,EACnE7O,EAAI,GAAKE,EAAE,GAAKwO,EAAUhmB,EAAE,GAAKimB,EAAU3wB,EAAE,GAAK4wB,EAAU3wB,EAAE,GAAK4wB,EAC5D7O,EAUF,SAASD,GAAOC,EAAKvC,GAC1BA,EAAQA,GAAS,EACjB,IAAIhf,EAAwB,EAApB,IAA0BkR,KAAKoO,GACnC2F,EAAwB,EAApB,IAA0B,EAC9BuL,EAAStf,KAAK6X,KAAK,EAAM9D,EAAIA,GAAKjG,EAItC,OAHAuC,EAAI,GAAKrQ,KAAK0U,IAAI5lB,GAAKwwB,EACvBjP,EAAI,GAAKrQ,KAAKyU,IAAI3lB,GAAKwwB,EACvBjP,EAAI,GAAK0D,EAAIjG,EACNuC,EAYF,SAASkP,GAAclP,EAAKE,EAAGniB,GACpC,IAAIuhB,EAAIY,EAAE,GACNX,EAAIW,EAAE,GACNwD,EAAIxD,EAAE,GACN4E,EAAI/mB,EAAE,GAAKuhB,EAAIvhB,EAAE,GAAKwhB,EAAIxhB,EAAE,IAAM2lB,EAAI3lB,EAAE,IAK5C,OAJA+mB,EAAIA,GAAK,EACT9E,EAAI,IAAMjiB,EAAE,GAAKuhB,EAAIvhB,EAAE,GAAKwhB,EAAIxhB,EAAE,GAAK2lB,EAAI3lB,EAAE,KAAO+mB,EACpD9E,EAAI,IAAMjiB,EAAE,GAAKuhB,EAAIvhB,EAAE,GAAKwhB,EAAIxhB,EAAE,GAAK2lB,EAAI3lB,EAAE,KAAO+mB,EACpD9E,EAAI,IAAMjiB,EAAE,GAAKuhB,EAAIvhB,EAAE,GAAKwhB,EAAIxhB,EAAE,IAAM2lB,EAAI3lB,EAAE,KAAO+mB,EAC9C9E,EAWF,SAASmP,GAAcnP,EAAKE,EAAGniB,GACpC,IAAIuhB,EAAIY,EAAE,GACNX,EAAIW,EAAE,GACNwD,EAAIxD,EAAE,GAIV,OAHAF,EAAI,GAAKV,EAAIvhB,EAAE,GAAKwhB,EAAIxhB,EAAE,GAAK2lB,EAAI3lB,EAAE,GACrCiiB,EAAI,GAAKV,EAAIvhB,EAAE,GAAKwhB,EAAIxhB,EAAE,GAAK2lB,EAAI3lB,EAAE,GACrCiiB,EAAI,GAAKV,EAAIvhB,EAAE,GAAKwhB,EAAIxhB,EAAE,GAAK2lB,EAAI3lB,EAAE,GAC9BiiB,EAYF,SAASoP,GAAcpP,EAAKE,EAAG2E,GAEpC,IAAIwK,EAAKxK,EAAE,GACPyK,EAAKzK,EAAE,GACP0K,EAAK1K,EAAE,GACP2K,EAAK3K,EAAE,GACPvF,EAAIY,EAAE,GACNX,EAAIW,EAAE,GACNwD,EAAIxD,EAAE,GAGNuP,EAAMH,EAAK5L,EAAI6L,EAAKhQ,EACpBmQ,EAAMH,EAAKjQ,EAAI+P,EAAK3L,EACpBiM,EAAMN,EAAK9P,EAAI+P,EAAKhQ,EAEpBsQ,EAAON,EAAKK,EAAMJ,EAAKG,EACvBG,EAAON,EAAKE,EAAMJ,EAAKM,EACvBG,EAAOT,EAAKK,EAAMJ,EAAKG,EAEvBM,EAAU,EAALP,EAYT,OAXAC,GAAOM,EACPL,GAAOK,EACPJ,GAAOI,EAEPH,GAAQ,EACRC,GAAQ,EACRC,GAAQ,EAER9P,EAAI,GAAKV,EAAImQ,EAAMG,EACnB5P,EAAI,GAAKT,EAAImQ,EAAMG,EACnB7P,EAAI,GAAK0D,EAAIiM,EAAMG,EACZ9P,EAWF,SAAS,GAAQA,EAAKE,EAAGxX,EAAGkb,GACjC,IAAInkB,EAAI,GACJhB,EAAI,GAaR,OAXAgB,EAAE,GAAKygB,EAAE,GAAKxX,EAAE,GAChBjJ,EAAE,GAAKygB,EAAE,GAAKxX,EAAE,GAChBjJ,EAAE,GAAKygB,EAAE,GAAKxX,EAAE,GAEhBjK,EAAE,GAAKgB,EAAE,GACThB,EAAE,GAAKgB,EAAE,GAAKkQ,KAAK0U,IAAIT,GAAOnkB,EAAE,GAAKkQ,KAAKyU,IAAIR,GAC9CnlB,EAAE,GAAKgB,EAAE,GAAKkQ,KAAKyU,IAAIR,GAAOnkB,EAAE,GAAKkQ,KAAK0U,IAAIT,GAE9C5D,EAAI,GAAKvhB,EAAE,GAAKiK,EAAE,GAClBsX,EAAI,GAAKvhB,EAAE,GAAKiK,EAAE,GAClBsX,EAAI,GAAKvhB,EAAE,GAAKiK,EAAE,GACXsX,EAWF,SAAS,GAAQA,EAAKE,EAAGxX,EAAGkb,GACjC,IAAInkB,EAAI,GACJhB,EAAI,GAaR,OAXAgB,EAAE,GAAKygB,EAAE,GAAKxX,EAAE,GAChBjJ,EAAE,GAAKygB,EAAE,GAAKxX,EAAE,GAChBjJ,EAAE,GAAKygB,EAAE,GAAKxX,EAAE,GAEhBjK,EAAE,GAAKgB,EAAE,GAAKkQ,KAAKyU,IAAIR,GAAOnkB,EAAE,GAAKkQ,KAAK0U,IAAIT,GAC9CnlB,EAAE,GAAKgB,EAAE,GACThB,EAAE,GAAKgB,EAAE,GAAKkQ,KAAK0U,IAAIT,GAAOnkB,EAAE,GAAKkQ,KAAKyU,IAAIR,GAE9C5D,EAAI,GAAKvhB,EAAE,GAAKiK,EAAE,GAClBsX,EAAI,GAAKvhB,EAAE,GAAKiK,EAAE,GAClBsX,EAAI,GAAKvhB,EAAE,GAAKiK,EAAE,GACXsX,EAWF,SAAS,GAAQA,EAAKE,EAAGxX,EAAGkb,GACjC,IAAInkB,EAAI,GACJhB,EAAI,GAaR,OAXAgB,EAAE,GAAKygB,EAAE,GAAKxX,EAAE,GAChBjJ,EAAE,GAAKygB,EAAE,GAAKxX,EAAE,GAChBjJ,EAAE,GAAKygB,EAAE,GAAKxX,EAAE,GAEhBjK,EAAE,GAAKgB,EAAE,GAAKkQ,KAAK0U,IAAIT,GAAOnkB,EAAE,GAAKkQ,KAAKyU,IAAIR,GAC9CnlB,EAAE,GAAKgB,EAAE,GAAKkQ,KAAKyU,IAAIR,GAAOnkB,EAAE,GAAKkQ,KAAK0U,IAAIT,GAC9CnlB,EAAE,GAAKgB,EAAE,GAETugB,EAAI,GAAKvhB,EAAE,GAAKiK,EAAE,GAClBsX,EAAI,GAAKvhB,EAAE,GAAKiK,EAAE,GAClBsX,EAAI,GAAKvhB,EAAE,GAAKiK,EAAE,GACXsX,EASF,SAASgQ,GAAM9P,EAAGxX,GACvB,IAAIud,EAAK/F,EAAE,GACPgG,EAAKhG,EAAE,GACPiG,EAAKjG,EAAE,GACP2F,EAAKnd,EAAE,GACPod,EAAKpd,EAAE,GACPqd,EAAKrd,EAAE,GAGPunB,EAFOtgB,KAAK6X,KAAKvB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,GACnCxW,KAAK6X,KAAK3B,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,GAE1CmK,EAASD,GAAO,GAAI/P,EAAGxX,GAAKunB,EAChC,OAAOtgB,KAAKwgB,KAAKxgB,KAAKC,IAAID,KAAK6d,IAAI0C,GAAS,GAAI,IAS3C,SAASE,GAAKpQ,GAInB,OAHAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EASF,SAAS,GAAIE,GAClB,MAAO,QAAUA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,IAU/C,SAAS,GAAYA,EAAGxX,GAC7B,OAAOwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,GAU/C,SAAS,GAAOwX,EAAGxX,GACxB,IAAIyjB,EAAKjM,EAAE,GACPkM,EAAKlM,EAAE,GACPmM,EAAKnM,EAAE,GACPmD,EAAK3a,EAAE,GACP4a,EAAK5a,EAAE,GACP6a,EAAK7a,EAAE,GACX,OAAOiH,KAAKgc,IAAIQ,EAAK9I,IAAO,EAAmB1T,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIQ,GAAKxc,KAAKgc,IAAItI,KAAQ1T,KAAKgc,IAAIS,EAAK9I,IAAO,EAAmB3T,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIS,GAAKzc,KAAKgc,IAAIrI,KAAQ3T,KAAKgc,IAAIU,EAAK9I,IAAO,EAAmB5T,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIU,GAAK1c,KAAKgc,IAAIpI,IAOzP,IAmDD8M,GAnDK,GAAM,GAMN,GAAM,GAMNC,GAAM1C,GAMNtQ,GAAO2Q,GAMPsC,GAAUrC,GAMV,GAAM,GAMNsC,GAASrC,GAcTtc,IACLwe,GAAM,KACH,SAAUnQ,EAAGjX,EAAQC,EAAQK,EAAOknB,EAAIC,GAC7C,IAAI/yB,EAAGC,EAgBP,IAdKqL,IACHA,EAAS,GAGNC,IACHA,EAAS,GAITtL,EADE2L,EACEoG,KAAKC,IAAIrG,EAAQN,EAASC,EAAQgX,EAAE5R,QAEpC4R,EAAE5R,OAGH3Q,EAAIuL,EAAQvL,EAAIC,EAAGD,GAAKsL,EAC3BonB,GAAI,GAAKnQ,EAAEviB,GACX0yB,GAAI,GAAKnQ,EAAEviB,EAAI,GACf0yB,GAAI,GAAKnQ,EAAEviB,EAAI,GACf8yB,EAAGJ,GAAKA,GAAKK,GACbxQ,EAAEviB,GAAK0yB,GAAI,GACXnQ,EAAEviB,EAAI,GAAK0yB,GAAI,GACfnQ,EAAEviB,EAAI,GAAK0yB,GAAI,GAGjB,OAAOnQ,ICneJ,SAAS,GAAOA,GACrB,IAAIZ,EAAIY,EAAE,GACNX,EAAIW,EAAE,GACNwD,EAAIxD,EAAE,GACN4E,EAAI5E,EAAE,GACV,OAAOvQ,KAAKwU,MAAM7E,EAAGC,EAAGmE,EAAGoB,GAStB,SAAS,GAAc5E,GAC5B,IAAIZ,EAAIY,EAAE,GACNX,EAAIW,EAAE,GACNwD,EAAIxD,EAAE,GACN4E,EAAI5E,EAAE,GACV,OAAOZ,EAAIA,EAAIC,EAAIA,EAAImE,EAAIA,EAAIoB,EAAIA,GAqThB,WACnB,IAzmBI9E,EAymBAqQ,GAzmBArQ,EAAM,IAAI,EAAoB,GAE9B,GAAuBrb,eACzBqb,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,GAGJA,GA+lBY,GCtmBd,SAAS,KACd,IAAIA,EAAM,IAAI,EAAoB,GASlC,OAPI,GAAuBrb,eACzBqb,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,GAGXA,EAAI,GAAK,EACFA,EASF,SAAS,GAASA,GAKvB,OAJAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EAYF,SAAS2Q,GAAa3Q,EAAK6D,EAAMD,GACtCA,GAAY,GACZ,IAAIlkB,EAAIiQ,KAAKyU,IAAIR,GAKjB,OAJA5D,EAAI,GAAKtgB,EAAImkB,EAAK,GAClB7D,EAAI,GAAKtgB,EAAImkB,EAAK,GAClB7D,EAAI,GAAKtgB,EAAImkB,EAAK,GAClB7D,EAAI,GAAKrQ,KAAK0U,IAAIT,GACX5D,EAgBF,SAAS4Q,GAAaC,EAAUhM,GACrC,IAAIjB,EAAwB,EAAlBjU,KAAKwgB,KAAKtL,EAAE,IAClBnlB,EAAIiQ,KAAKyU,IAAIR,EAAM,GAavB,OAXIlkB,EAAI,GACNmxB,EAAS,GAAKhM,EAAE,GAAKnlB,EACrBmxB,EAAS,GAAKhM,EAAE,GAAKnlB,EACrBmxB,EAAS,GAAKhM,EAAE,GAAKnlB,IAGrBmxB,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,GAAK,GAGTjN,EAUF,SAASkN,GAAS5Q,EAAGxX,GAC1B,IAAIqoB,EAAa,GAAI7Q,EAAGxX,GACxB,OAAOiH,KAAKwgB,KAAK,EAAIY,EAAaA,EAAa,GAW1C,SAAS,GAAS/Q,EAAKE,EAAGxX,GAC/B,IAAIud,EAAK/F,EAAE,GACPgG,EAAKhG,EAAE,GACPiG,EAAKjG,EAAE,GACPkG,EAAKlG,EAAE,GACP2F,EAAKnd,EAAE,GACPod,EAAKpd,EAAE,GACPqd,EAAKrd,EAAE,GACPsd,EAAKtd,EAAE,GAKX,OAJAsX,EAAI,GAAKiG,EAAKD,EAAKI,EAAKP,EAAKK,EAAKH,EAAKI,EAAKL,EAC5C9F,EAAI,GAAKkG,EAAKF,EAAKI,EAAKN,EAAKK,EAAKN,EAAKI,EAAKF,EAC5C/F,EAAI,GAAKmG,EAAKH,EAAKI,EAAKL,EAAKE,EAAKH,EAAKI,EAAKL,EAC5C7F,EAAI,GAAKoG,EAAKJ,EAAKC,EAAKJ,EAAKK,EAAKJ,EAAKK,EAAKJ,EACrC/F,EAWF,SAAS,GAAQA,EAAKE,EAAG0D,GAC9BA,GAAO,GACP,IAAIqC,EAAK/F,EAAE,GACPgG,EAAKhG,EAAE,GACPiG,EAAKjG,EAAE,GACPkG,EAAKlG,EAAE,GACP2F,EAAKlW,KAAKyU,IAAIR,GACdoC,EAAKrW,KAAK0U,IAAIT,GAKlB,OAJA5D,EAAI,GAAKiG,EAAKD,EAAKI,EAAKP,EACxB7F,EAAI,GAAKkG,EAAKF,EAAKG,EAAKN,EACxB7F,EAAI,GAAKmG,EAAKH,EAAKE,EAAKL,EACxB7F,EAAI,GAAKoG,EAAKJ,EAAKC,EAAKJ,EACjB7F,EAWF,SAAS,GAAQA,EAAKE,EAAG0D,GAC9BA,GAAO,GACP,IAAIqC,EAAK/F,EAAE,GACPgG,EAAKhG,EAAE,GACPiG,EAAKjG,EAAE,GACPkG,EAAKlG,EAAE,GACP4F,EAAKnW,KAAKyU,IAAIR,GACdoC,EAAKrW,KAAK0U,IAAIT,GAKlB,OAJA5D,EAAI,GAAKiG,EAAKD,EAAKG,EAAKL,EACxB9F,EAAI,GAAKkG,EAAKF,EAAKI,EAAKN,EACxB9F,EAAI,GAAKmG,EAAKH,EAAKC,EAAKH,EACxB9F,EAAI,GAAKoG,EAAKJ,EAAKE,EAAKJ,EACjB9F,EAWF,SAAS,GAAQA,EAAKE,EAAG0D,GAC9BA,GAAO,GACP,IAAIqC,EAAK/F,EAAE,GACPgG,EAAKhG,EAAE,GACPiG,EAAKjG,EAAE,GACPkG,EAAKlG,EAAE,GACP6F,EAAKpW,KAAKyU,IAAIR,GACdoC,EAAKrW,KAAK0U,IAAIT,GAKlB,OAJA5D,EAAI,GAAKiG,EAAKD,EAAKE,EAAKH,EACxB/F,EAAI,GAAKkG,EAAKF,EAAKC,EAAKF,EACxB/F,EAAI,GAAKmG,EAAKH,EAAKI,EAAKL,EACxB/F,EAAI,GAAKoG,EAAKJ,EAAKG,EAAKJ,EACjB/F,EAYF,SAASgR,GAAWhR,EAAKE,GAC9B,IAAIZ,EAAIY,EAAE,GACNX,EAAIW,EAAE,GACNwD,EAAIxD,EAAE,GAKV,OAJAF,EAAI,GAAKV,EACTU,EAAI,GAAKT,EACTS,EAAI,GAAK0D,EACT1D,EAAI,GAAKrQ,KAAK6X,KAAK7X,KAAKgc,IAAI,EAAMrM,EAAIA,EAAIC,EAAIA,EAAImE,EAAIA,IAC/C1D,EAUF,SAASiR,GAAIjR,EAAKE,GACvB,IAAIZ,EAAIY,EAAE,GACNX,EAAIW,EAAE,GACNwD,EAAIxD,EAAE,GACN4E,EAAI5E,EAAE,GACNzhB,EAAIkR,KAAK6X,KAAKlI,EAAIA,EAAIC,EAAIA,EAAImE,EAAIA,GAClCwN,EAAKvhB,KAAKshB,IAAInM,GACdplB,EAAIjB,EAAI,EAAIyyB,EAAKvhB,KAAKyU,IAAI3lB,GAAKA,EAAI,EAKvC,OAJAuhB,EAAI,GAAKV,EAAI5f,EACbsgB,EAAI,GAAKT,EAAI7f,EACbsgB,EAAI,GAAK0D,EAAIhkB,EACbsgB,EAAI,GAAKkR,EAAKvhB,KAAK0U,IAAI5lB,GAChBuhB,EAUF,SAASmR,GAAGnR,EAAKE,GACtB,IAAIZ,EAAIY,EAAE,GACNX,EAAIW,EAAE,GACNwD,EAAIxD,EAAE,GACN4E,EAAI5E,EAAE,GACNzhB,EAAIkR,KAAK6X,KAAKlI,EAAIA,EAAIC,EAAIA,EAAImE,EAAIA,GAClC7kB,EAAIJ,EAAI,EAAIkR,KAAKyhB,MAAM3yB,EAAGqmB,GAAKrmB,EAAI,EAKvC,OAJAuhB,EAAI,GAAKV,EAAIzgB,EACbmhB,EAAI,GAAKT,EAAI1gB,EACbmhB,EAAI,GAAK0D,EAAI7kB,EACbmhB,EAAI,GAAK,GAAMrQ,KAAK0hB,IAAI/R,EAAIA,EAAIC,EAAIA,EAAImE,EAAIA,EAAIoB,EAAIA,GAC7C9E,EAWF,SAASsR,GAAItR,EAAKE,EAAGxX,GAI1B,OAHAyoB,GAAGnR,EAAKE,GACR,GAAMF,EAAKA,EAAKtX,GAChBuoB,GAAIjR,EAAKA,GACFA,EAYF,SAASuR,GAAMvR,EAAKE,EAAGxX,EAAG7J,GAG/B,IAQI2yB,EAAOC,EAAOC,EAAOC,EAAQC,EAR7B3L,EAAK/F,EAAE,GACPgG,EAAKhG,EAAE,GACPiG,EAAKjG,EAAE,GACPkG,EAAKlG,EAAE,GACP2F,EAAKnd,EAAE,GACPod,EAAKpd,EAAE,GACPqd,EAAKrd,EAAE,GACPsd,EAAKtd,EAAE,GAgCX,OA7BA+oB,EAAQxL,EAAKJ,EAAKK,EAAKJ,EAAKK,EAAKJ,EAAKK,EAAKJ,GAE/B,IACVyL,GAASA,EACT5L,GAAMA,EACNC,GAAMA,EACNC,GAAMA,EACNC,GAAMA,GAIJ,EAAMyL,EAAQ,GAEhBD,EAAQ7hB,KAAKwgB,KAAKsB,GAClBC,EAAQ/hB,KAAKyU,IAAIoN,GACjBG,EAAShiB,KAAKyU,KAAK,EAAMvlB,GAAK2yB,GAASE,EACvCE,EAASjiB,KAAKyU,IAAIvlB,EAAI2yB,GAASE,IAI/BC,EAAS,EAAM9yB,EACf+yB,EAAS/yB,GAIXmhB,EAAI,GAAK2R,EAAS1L,EAAK2L,EAAS/L,EAChC7F,EAAI,GAAK2R,EAASzL,EAAK0L,EAAS9L,EAChC9F,EAAI,GAAK2R,EAASxL,EAAKyL,EAAS7L,EAChC/F,EAAI,GAAK2R,EAASvL,EAAKwL,EAAS5L,EACzBhG,EASF,SAAS,GAAOA,GAGrB,IAAI6R,EAAK,IACLC,EAAK,IACLC,EAAK,IACLC,EAAeriB,KAAK6X,KAAK,EAAIqK,GAC7BI,EAAStiB,KAAK6X,KAAKqK,GAKvB,OAJA7R,EAAI,GAAKgS,EAAeriB,KAAKyU,IAAI,EAAMzU,KAAKoO,GAAK+T,GACjD9R,EAAI,GAAKgS,EAAeriB,KAAK0U,IAAI,EAAM1U,KAAKoO,GAAK+T,GACjD9R,EAAI,GAAKiS,EAAStiB,KAAKyU,IAAI,EAAMzU,KAAKoO,GAAKgU,GAC3C/R,EAAI,GAAKiS,EAAStiB,KAAK0U,IAAI,EAAM1U,KAAKoO,GAAKgU,GACpC/R,EAUF,SAAS,GAAOA,EAAKE,GAC1B,IAAIiM,EAAKjM,EAAE,GACPkM,EAAKlM,EAAE,GACPmM,EAAKnM,EAAE,GACPoM,EAAKpM,EAAE,GACPgS,EAAM/F,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EACzC6F,EAASD,EAAM,EAAMA,EAAM,EAM/B,OAJAlS,EAAI,IAAMmM,EAAKgG,EACfnS,EAAI,IAAMoM,EAAK+F,EACfnS,EAAI,IAAMqM,EAAK8F,EACfnS,EAAI,GAAKsM,EAAK6F,EACPnS,EAWF,SAASoS,GAAUpS,EAAKE,GAK7B,OAJAF,EAAI,IAAME,EAAE,GACZF,EAAI,IAAME,EAAE,GACZF,EAAI,IAAME,EAAE,GACZF,EAAI,GAAKE,EAAE,GACJF,EAcF,SAASqS,GAASrS,EAAKjiB,GAG5B,IACIu0B,EADAC,EAASx0B,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAG7B,GAAIw0B,EAAS,EAEXD,EAAQ3iB,KAAK6X,KAAK+K,EAAS,GAE3BvS,EAAI,GAAK,GAAMsS,EACfA,EAAQ,GAAMA,EAEdtS,EAAI,IAAMjiB,EAAE,GAAKA,EAAE,IAAMu0B,EACzBtS,EAAI,IAAMjiB,EAAE,GAAKA,EAAE,IAAMu0B,EACzBtS,EAAI,IAAMjiB,EAAE,GAAKA,EAAE,IAAMu0B,MACpB,CAEL,IAAI30B,EAAI,EACJI,EAAE,GAAKA,EAAE,KAAIJ,EAAI,GACjBI,EAAE,GAAKA,EAAM,EAAJJ,EAAQA,KAAIA,EAAI,GAC7B,IAAI6a,GAAK7a,EAAI,GAAK,EACdgc,GAAKhc,EAAI,GAAK,EAClB20B,EAAQ3iB,KAAK6X,KAAKzpB,EAAM,EAAJJ,EAAQA,GAAKI,EAAM,EAAJya,EAAQA,GAAKza,EAAM,EAAJ4b,EAAQA,GAAK,GAC/DqG,EAAIriB,GAAK,GAAM20B,EACfA,EAAQ,GAAMA,EACdtS,EAAI,IAAMjiB,EAAM,EAAJya,EAAQmB,GAAK5b,EAAM,EAAJ4b,EAAQnB,IAAM8Z,EACzCtS,EAAIxH,IAAMza,EAAM,EAAJya,EAAQ7a,GAAKI,EAAM,EAAJJ,EAAQ6a,IAAM8Z,EACzCtS,EAAIrG,IAAM5b,EAAM,EAAJ4b,EAAQhc,GAAKI,EAAM,EAAJJ,EAAQgc,IAAM2Y,EAG3C,OAAOtS,EAaF,SAASwS,GAAUxS,EAAKV,EAAGC,EAAGmE,GACnC,IAAI+O,EAAY,GAAM9iB,KAAKoO,GAAK,IAChCuB,GAAKmT,EACLlT,GAAKkT,EACL/O,GAAK+O,EACL,IAAI/K,EAAK/X,KAAKyU,IAAI9E,GACdoT,EAAK/iB,KAAK0U,IAAI/E,GACdqI,EAAKhY,KAAKyU,IAAI7E,GACdoT,EAAKhjB,KAAK0U,IAAI9E,GACdqI,EAAKjY,KAAKyU,IAAIV,GACdkP,EAAKjjB,KAAK0U,IAAIX,GAKlB,OAJA1D,EAAI,GAAK0H,EAAKiL,EAAKC,EAAKF,EAAK/K,EAAKC,EAClC5H,EAAI,GAAK0S,EAAK/K,EAAKiL,EAAKlL,EAAKiL,EAAK/K,EAClC5H,EAAI,GAAK0S,EAAKC,EAAK/K,EAAKF,EAAKC,EAAKiL,EAClC5S,EAAI,GAAK0S,EAAKC,EAAKC,EAAKlL,EAAKC,EAAKC,EAC3B5H,EASF,SAAS,GAAIE,GAClB,MAAO,QAAUA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,IAU7D,IA4JD2S,GACAC,GACAC,GAuCAC,GACAC,GCvpBAjT,GD2qBAkT,GA1NK,GD/bJ,SAAehT,GACpB,IAAIF,EAAM,IAAI,EAAoB,GAKlC,OAJAA,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACJF,GCqcE,GDzbJ,SAAoBV,EAAGC,EAAGmE,EAAGoB,GAClC,IAAI9E,EAAM,IAAI,EAAoB,GAKlC,OAJAA,EAAI,GAAKV,EACTU,EAAI,GAAKT,EACTS,EAAI,GAAK0D,EACT1D,EAAI,GAAK8E,EACF9E,GC6bE,GDnbJ,SAAcA,EAAKE,GAKxB,OAJAF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACXF,EAAI,GAAKE,EAAE,GACJF,GC2bE,GD9aJ,SAAaA,EAAKV,EAAGC,EAAGmE,EAAGoB,GAKhC,OAJA9E,EAAI,GAAKV,EACTU,EAAI,GAAKT,EACTS,EAAI,GAAK0D,EACT1D,EAAI,GAAK8E,EACF9E,GCobE,GDzaJ,SAAaA,EAAKE,EAAGxX,GAK1B,OAJAsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GAClBsX,EAAI,GAAKE,EAAE,GAAKxX,EAAE,GACXsX,GC0aE,GAAM,GAWN,GD7SJ,SAAeA,EAAKE,EAAGxX,GAK5B,OAJAsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EAChBsX,EAAI,GAAKE,EAAE,GAAKxX,EACTsX,GCkTE,GDtKJ,SAAaE,EAAGxX,GACrB,OAAOwX,EAAE,GAAKxX,EAAE,GAAKwX,EAAE,GAAKxX,EAAE,GAAKwX,EAAE,GAAKxX,EAAE,GAAKwX,EAAE,GAAKxX,EAAE,ICiLjD,GD1IJ,SAAcsX,EAAKE,EAAGxX,EAAG7J,GAC9B,IAAIonB,EAAK/F,EAAE,GACPgG,EAAKhG,EAAE,GACPiG,EAAKjG,EAAE,GACPkG,EAAKlG,EAAE,GAKX,OAJAF,EAAI,GAAKiG,EAAKpnB,GAAK6J,EAAE,GAAKud,GAC1BjG,EAAI,GAAKkG,EAAKrnB,GAAK6J,EAAE,GAAKwd,GAC1BlG,EAAI,GAAKmG,EAAKtnB,GAAK6J,EAAE,GAAKyd,GAC1BnG,EAAI,GAAKoG,EAAKvnB,GAAK6J,EAAE,GAAK0d,GACnBpG,GCyIE,GAAS,GAMT,GAAM,GASN,GAAgB,GAMhB,GAAS,GAUT,GDlPJ,SAAmBA,EAAKE,GAC7B,IAAIZ,EAAIY,EAAE,GACNX,EAAIW,EAAE,GACNwD,EAAIxD,EAAE,GACN4E,EAAI5E,EAAE,GACNgE,EAAM5E,EAAIA,EAAIC,EAAIA,EAAImE,EAAIA,EAAIoB,EAAIA,EAUtC,OARIZ,EAAM,IACRA,EAAM,EAAIvU,KAAK6X,KAAKtD,IAGtBlE,EAAI,GAAKV,EAAI4E,EACblE,EAAI,GAAKT,EAAI2E,EACblE,EAAI,GAAK0D,EAAIQ,EACblE,EAAI,GAAK8E,EAAIZ,EACNlE,GC4OE,GD3DJ,SAAqBE,EAAGxX,GAC7B,OAAOwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,IAAMwX,EAAE,KAAOxX,EAAE,ICmE5D,GDzDJ,SAAgBwX,EAAGxX,GACxB,IAAIyjB,EAAKjM,EAAE,GACPkM,EAAKlM,EAAE,GACPmM,EAAKnM,EAAE,GACPoM,EAAKpM,EAAE,GACPmD,EAAK3a,EAAE,GACP4a,EAAK5a,EAAE,GACP6a,EAAK7a,EAAE,GACP8a,EAAK9a,EAAE,GACX,OAAOiH,KAAKgc,IAAIQ,EAAK9I,IAAO,EAAmB1T,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIQ,GAAKxc,KAAKgc,IAAItI,KAAQ1T,KAAKgc,IAAIS,EAAK9I,IAAO,EAAmB3T,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIS,GAAKzc,KAAKgc,IAAIrI,KAAQ3T,KAAKgc,IAAIU,EAAK9I,IAAO,EAAmB5T,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIU,GAAK1c,KAAKgc,IAAIpI,KAAQ5T,KAAKgc,IAAIW,EAAK9I,IAAO,EAAmB7T,KAAK6d,IAAI,EAAK7d,KAAKgc,IAAIW,GAAK3c,KAAKgc,IAAInI,KC6D1U2P,IACLN,GAAU,KACVC,GAAY,GAAgB,EAAG,EAAG,GAClCC,GAAY,GAAgB,EAAG,EAAG,GAC/B,SAAU/S,EAAKE,EAAGxX,GACvB,IAAIwpB,EAAM,GAAShS,EAAGxX,GAEtB,OAAIwpB,GAAO,SACT,GAAWW,GAASC,GAAW5S,GAC3B,GAAS2S,IAAW,MAAU,GAAWA,GAASE,GAAW7S,GACjE,GAAe2S,GAASA,IACxBlC,GAAa3Q,EAAK6S,GAASljB,KAAKoO,IACzBiC,GACEkS,EAAM,SACflS,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,IAEP,GAAW6S,GAAS3S,EAAGxX,GACvBsX,EAAI,GAAK6S,GAAQ,GACjB7S,EAAI,GAAK6S,GAAQ,GACjB7S,EAAI,GAAK6S,GAAQ,GACjB7S,EAAI,GAAK,EAAIkS,EACN,GAAUlS,EAAKA,MAgBjBoT,IACLJ,GAAQ,KACRC,GAAQ,KACL,SAAUjT,EAAKE,EAAGxX,EAAG1K,EAAGC,EAAGY,GAIhC,OAHA0yB,GAAMyB,GAAO9S,EAAGjiB,EAAGY,GACnB0yB,GAAM0B,GAAOvqB,EAAG1K,EAAGa,GACnB0yB,GAAMvR,EAAKgT,GAAOC,GAAO,EAAIp0B,GAAK,EAAIA,IAC/BmhB,IAcAqT,IC1qBLrT,GAAM,IAAI,EAAoB,GAE9B,GAAuBrb,eACzBqb,GAAI,GAAK,EACTA,GAAI,GAAK,EACTA,GAAI,GAAK,EACTA,GAAI,GAAK,EACTA,GAAI,GAAK,EACTA,GAAI,GAAK,GAGXA,GAAI,GAAK,EACTA,GAAI,GAAK,EACTA,GAAI,GAAK,ED8pBLkT,GC7pBGlT,GD8pBA,SAAUA,EAAKsT,EAAMtK,EAAO2B,GAUjC,OATAuI,GAAK,GAAKlK,EAAM,GAChBkK,GAAK,GAAKlK,EAAM,GAChBkK,GAAK,GAAKlK,EAAM,GAChBkK,GAAK,GAAKvI,EAAG,GACbuI,GAAK,GAAKvI,EAAG,GACbuI,GAAK,GAAKvI,EAAG,GACbuI,GAAK,IAAMI,EAAK,GAChBJ,GAAK,IAAMI,EAAK,GAChBJ,GAAK,IAAMI,EAAK,GACT,GAAUtT,EAAKqS,GAASrS,EAAKkT,Q,gCEnsBxC,qDAWO,MAAMK,EAAb,cACC,KAAAC,UAAY,EACZ,KAAAC,UAAY,GACZ,KAAAC,OAAS,IAAK,WAAD,CAAmB,YAAkB,MAAzC,CAA8D,CACtE5V,KAAgB,GAAVnO,KAAKoO,GACXtB,SAAU,CAAC,EAAG,EAAG,MAiCZ,SAASkX,GAAwB,UACvCF,EAAS,UACTD,EAAS,SACT/W,EAAQ,UACRE,EAAS,UACTD,EAAS,KACToB,GACa,IACb,MAAMpY,EAAI,IAAI6tB,EACVE,IACH/tB,EAAE+tB,UAAYA,GAEXD,IACH9tB,EAAE8tB,UAAYA,GAEX1V,IACHpY,EAAEguB,OAAO5V,KAAOA,EAChBpY,EAAEguB,OAAOvV,uBAAwB,GAE9B1B,IACH/W,EAAEguB,OAAOjX,SAAWA,EACpB/W,EAAEguB,OAAO1W,iBAAkB,GAExBN,IACHhX,EAAEguB,OAAOhX,UAAYA,EACrBhX,EAAEguB,OAAOzW,mBAENN,IACHjX,EAAEguB,OAAO/W,UAAYA,EACrBjX,EAAEguB,OAAOxW,mBAEV,YAA8B,WAAYxX,EAAG,CAC5CkV,MAAO,CAAE4Y,WAAW,EAAMC,WAAW,KA7DvC,YAAoC,WAAY,CAACG,EAAGl0B,KACnD,MAAMgG,EAAIhG,EAAEm0B,SACZ,OAAQD,GACP,KAAK,IAAWpY,MACf,MAAMhB,EAAM9a,EAAEoZ,OAAO0B,IAAM,IAQ3B,OAPA9U,EAAEguB,OAAOI,mBACRpuB,EAAE8tB,UAAYhZ,EACd9a,EAAEoZ,OAAOc,KACTla,EAAEoZ,OAAOO,SAEV3T,EAAEguB,OAAOK,qBAAqBruB,EAAE+tB,UAAYjZ,EAAK9a,EAAEoZ,OAAOO,cAC1D3T,EAAEguB,OAAOtjB,SAGV,KAAK,IAAWgJ,OACf1T,EAAEguB,OAAO1V,OAASte,EAAEoZ,OAAOhD,OAAO/R,MAAQrE,EAAEoZ,OAAOhD,OAAO5R,OAC1DwB,EAAEguB,OAAOvV,uBAAwB,M,+BCpCpC,2RACO,SAAS6V,EAAWC,GACvB,OAAOA,EAAI,YAAQA,EAAI3lB,SAEpB,SAAS4lB,EAAQzD,EAAIlnB,GACxB,IAAK,IAAI5L,EAAI,EAAGA,EAAI4L,EAAO5L,IACvB8yB,EAAG9yB,GAGJ,SAASw2B,EAAM1D,EAAIlnB,EAAOyS,EAAM,IACnC,IAAK,IAAIre,EAAI,EAAGA,EAAI4L,EAAO5L,IACvBqe,EAAIre,GAAK8yB,EAAG9yB,GAEhB,OAAOqe,EAEJ,SAASoY,EAAI3D,EAAI4D,EAAIC,EAAItY,EAAM,IAClC,MAAM1N,EAASqB,KAAKC,IAAIykB,EAAG/lB,OAAQgmB,EAAGhmB,QACtC,IAAK,IAAI3Q,EAAI,EAAGA,EAAI2Q,EAAQ3Q,IACxBqe,EAAIre,GAAK8yB,EAAG4D,EAAG12B,GAAI22B,EAAG32B,IAE1B,OAAOqe,EAEJ,SAASuY,EAAQC,EAAOxY,EAAM,IACjC,IAAK,MAAMyY,KAAYD,EAAO,CAC1B,MAAME,EAAgB1Y,EAAI1N,OAC1B,IAAK,IAAI3Q,EAAI,EAAGA,EAAI82B,EAASnmB,OAAQ3Q,IACjCqe,EAAIre,EAAI+2B,GAAiBD,EAAS92B,GAG1C,OAAOqe,EAEJ,SAAS2Y,EAAOlE,EAAI+D,EAAOxY,EAAM,IACpC,OAAOuY,EAAQC,EAAMlf,IAAImb,GAAKzU,GAY3B,SAAS1G,EAAImb,EAAImE,GACpB,GAAI3jB,MAAMC,QAAQ0jB,GACd,OAAOA,EAAKtf,IAAImb,GAEf,CACD,MAAMoE,EAAM,GACZ,IAAK,MAAM31B,KAAO01B,EACdC,EAAI31B,GAAOuxB,EAAGmE,EAAK11B,GAAMA,GAE7B,OAAO21B,GAGR,SAASC,EAAKrE,EAAImE,GACrB,IAAK,MAAM11B,KAAO01B,EACdnE,EAAGmE,EAAK11B,GAAMA,K,gCC1Df,SAAS61B,EAAMhxB,EAAOG,EAAQ8wB,EAAeC,GAChD,MAAMC,EAAYnxB,EAAQ,EACpBoxB,EAAajxB,EAAS,EACtBkxB,EAAQJ,GAAiB,EACzBK,EAAQJ,GAAkB,EAC1BK,EAASF,EAAQ,EACjBG,EAASF,EAAQ,EACjBG,EAAezxB,EAAQqxB,EACvBK,EAAgBvxB,EAASmxB,EACzBK,EAAW,IAAI/wB,aAAa2wB,EAASC,EAAS,GAC9CI,EAAU,IAAIhxB,aAAa2wB,EAASC,EAAS,GAC7CK,EAAM,IAAIjxB,aAAa2wB,EAASC,EAAS,GAC/C,IAAIM,EAAIC,EACJ5sB,EAAS,EACT6sB,EAAU,EACd,IAAKF,EAAK,EAAGA,EAAKN,EAAQM,IAAM,CAC5B,MAAMtW,EAAIsW,EAAKJ,EAAgBN,EAC/B,IAAKW,EAAK,EAAGA,EAAKR,EAAQQ,IAAM,CAC5B,MAAMxW,EAAIwW,EAAKN,EAAeN,EAC9BQ,EAASxsB,GAAUoW,EACnBoW,EAASxsB,EAAS,IAAMqW,EACxBoW,EAAQzsB,EAAS,GAAK,EACtB0sB,EAAIG,GAAWD,EAAKV,EACpBQ,EAAIG,EAAU,GAAK,EAAIF,EAAKR,EAC5BnsB,GAAU,EACV6sB,GAAW,GAGnB7sB,EAAS,EACT,MAAM8sB,EAAU,IAAKN,EAASpnB,OAAS,EAAI,MAAQ7G,YAAcqC,aAAasrB,EAAQC,EAAQ,GAC9F,IAAKQ,EAAK,EAAGA,EAAKR,EAAOQ,IACrB,IAAKC,EAAK,EAAGA,EAAKV,EAAOU,IAAM,CAC3B,MAAM5V,EAAI4V,EAAKR,EAASO,EAClBntB,EAAIotB,EAAKR,GAAUO,EAAK,GACxB73B,EAAI83B,EAAK,EAAIR,GAAUO,EAAK,GAC5B53B,EAAI63B,EAAK,EAAIR,EAASO,EAC5BG,EAAQ9sB,GAAUgX,EAClB8V,EAAQ9sB,EAAS,GAAKR,EACtBstB,EAAQ9sB,EAAS,GAAKjL,EACtB+3B,EAAQ9sB,EAAS,GAAKR,EACtBstB,EAAQ9sB,EAAS,GAAKlL,EACtBg4B,EAAQ9sB,EAAS,GAAKjL,EACtBiL,GAAU,EAGlB,MAAO,CACHzE,QAAS,CACLgY,SAAU,CACN/X,OAAQgxB,GAEZO,OAAQ,CACJvxB,OAAQixB,GAEZO,GAAI,CACAxxB,OAAQkxB,IAGhBhqB,SAAU,CACNlH,OAAQsxB,GAEZnxB,SAAU,YACVC,UAAWkxB,EAAQ1nB,QA7D3B,mC,+BCAO,IAAI6nB,EAsHJ,SAASzc,EAAS3D,EAAMlS,GAC3B,MAAMuyB,EAAKvyB,GAAYkS,GACjB,QAAEuD,EAAUtV,QAAW+R,EACvB4I,EAAU,GAChB,SAAS0X,EAAU9a,GACfoD,EAAQpD,EAAM+a,SAAWC,KAAKC,MAC9BJ,EAAGzX,GAEP,SAAS8X,EAAQlb,UACNoD,EAAQpD,EAAM+a,SACrBF,EAAGzX,GAKP,OAHArF,EAAQlV,iBAAiB,QAASqyB,GAAS,GAC3Cnd,EAAQlV,iBAAiB,UAAWiyB,GAAW,GAC/CD,EAAGzX,GACI,WACHrF,EAAQjV,oBAAoB,QAASoyB,GACrCnd,EAAQjV,oBAAoB,UAAWgyB,IAvI/C,oEACA,SAAWF,GACPA,EAAKA,EAAa,OAAI,GAAK,SAC3BA,EAAKA,EAAW,KAAI,GAAK,OACzBA,EAAKA,EAAiB,WAAI,GAAK,aAC/BA,EAAKA,EAAU,IAAI,GAAK,MACxBA,EAAKA,EAAY,MAAI,IAAM,QAC3BA,EAAKA,EAAa,OAAI,IAAM,SAC5BA,EAAKA,EAAY,MAAI,IAAM,QAC3BA,EAAKA,EAAY,MAAI,IAAM,QAC3BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAU,IAAI,IAAM,MACzBA,EAAKA,EAAY,MAAI,IAAM,QAC3BA,EAAKA,EAAgB,UAAI,IAAM,YAC/BA,EAAKA,EAAa,OAAI,IAAM,SAC5BA,EAAKA,EAAY,MAAI,IAAM,QAC3BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAgB,UAAI,IAAM,YAC/BA,EAAKA,EAAU,IAAI,IAAM,MACzBA,EAAKA,EAAW,KAAI,IAAM,OAC1BA,EAAKA,EAAW,KAAI,IAAM,OAC1BA,EAAKA,EAAS,GAAI,IAAM,KACxBA,EAAKA,EAAY,MAAI,IAAM,QAC3BA,EAAKA,EAAW,KAAI,IAAM,OAC1BA,EAAKA,EAAkB,YAAI,IAAM,cACjCA,EAAKA,EAAa,OAAI,IAAM,SAC5BA,EAAKA,EAAa,OAAI,IAAM,SAC5BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAgB,UAAI,IAAM,YAC/BA,EAAKA,EAAa,OAAI,IAAM,SAC5BA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAQ,EAAI,IAAM,IACvBA,EAAKA,EAAmB,aAAI,IAAM,eAClCA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAe,SAAI,KAAO,WAC/BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAgB,UAAI,KAAO,YAChCA,EAAKA,EAAe,SAAI,KAAO,WAC/BA,EAAKA,EAAc,QAAI,KAAO,UAC9BA,EAAKA,EAAa,OAAI,KAAO,SAC7BA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAS,GAAI,KAAO,KACzBA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAU,IAAI,KAAO,MAC1BA,EAAKA,EAAe,SAAI,KAAO,WAC/BA,EAAKA,EAAkB,YAAI,KAAO,cAClCA,EAAKA,EAAY,MAAI,KAAO,QAC5BA,EAAKA,EAAa,OAAI,KAAO,SAC7BA,EAAKA,EAAY,MAAI,KAAO,QAC5BA,EAAKA,EAAiB,WAAI,KAAO,aACjCA,EAAKA,EAAmB,aAAI,KAAO,eACnCA,EAAKA,EAAiB,WAAI,KAAO,aACjCA,EAAKA,EAAoB,cAAI,KAAO,gBACpCA,EAAKA,EAAY,MAAI,KAAO,QAC5BA,EAAKA,EAAW,KAAI,KAAO,OAnH/B,CAoHGA,IAASA,EAAO,M,mECrHZ,SAASO,EAAQC,GACpB,OAAOhnB,KAAKme,MAAMne,KAAKoQ,SAAW4W,GAE/B,SAASC,EAAeC,EAAMC,GACjC,OAAOJ,EAAQI,EAAKD,GAAQA,EAEzB,SAASE,IACZ,OAAQpnB,KAAKoQ,SAAWpQ,KAAKoQ,SAAWpQ,KAAKoQ,UAAY,EAP7D,uG,yDCYO,MAAMjK,EAASkhB,SAASC,eAAe,UAEjCte,EAAU,YAAW7C,GAErBtQ,EAAKmT,EAAQnT,GAEbqT,EAAQ,cAERqe,EAAS,OAAH,UACf,KCkBJ,YAAiB,WAAY,CAACtD,EAAGl0B,KAChC,OAAQk0B,GACP,KAAKsD,EAAO1b,MAEX,YADA9b,EAAEy3B,MAAM/mB,OAAO1Q,EAAEoZ,OAAO0B,QAK3B,YAAW,QAAS,IA3Cb,MAaN,cAZA,KAAA4c,KAAO,EAEP,KAAAC,YAAc,CAAC,GAAK,GAAK,GAAK,GAC9B,KAAAC,gBAAkB,IAAKr4B,SAEvB,KAAAs4B,cAAgB,KAChB,KAAAC,cAA2B,IAAV7nB,KAAKoO,GACtB,KAAA0Z,cAAsB,CAAC,EAAG,IAAK,GAC/B,KAAAC,WAAa,CAAC,EAAK,EAAK,EAAK,GAC7B,KAAAC,eAAiB,CAAC,EAAK,EAAK,GAAK,GACjC,KAAAC,gBAAkB,CAAC,IAAK34B,SAAU,IAAKA,UAGtC,IAAKqlB,QAAQlZ,KAAKksB,gBAAiBlsB,KAAKksB,gBAAiB3nB,KAAKoO,GAAK,GACnE,IAAKN,MAAMrS,KAAKksB,gBAAiBlsB,KAAKksB,gBAAiB,CAAC,GAAI,GAAI,KAChElsB,KAAKgF,OAAO,GAGb,OAAOoK,GACNpP,KAAKgsB,MAAQ5c,EACbpP,KAAKosB,eAAiBpsB,KAAKmsB,cAAgB/c,EAE3CpP,KAAKqsB,cAAc,IAAmC,IAA7B9nB,KAAKyU,IAAIhZ,KAAKgsB,KAAO,KAE9C,IAAK1Z,gBAAgBtS,KAAKwsB,gBAAgB,GAAIxsB,KAAKqsB,eACnD,IAAKnT,QACJlZ,KAAKwsB,gBAAgB,GACrBxsB,KAAKwsB,gBAAgB,GACrBxsB,KAAKosB,eAEN,IAAKlT,QAAQlZ,KAAKwsB,gBAAgB,GAAIxsB,KAAKwsB,gBAAgB,GAAIjoB,KAAKoO,O,mCCjBtE,YAAwB,CACvBD,KAAgB,GAAVnO,KAAKoO,GACXtB,SAAU,CAAC,GAAI,GAAI,GACnBE,UAAW,IAKZ,MAAMkb,EAAW,OAAA9C,EAAA,GAAM,GAAI,GAAI,EAAG,GAC5B+C,EAAY,YAAQnf,EAAS,SAASvI,OAAOynB,GAI7CE,EAAW,YAASpf,EAAS,OAAOvI,OAAO,CAChDlL,KChCc,gaDiCdD,KEjCc,yZFsCTqB,EAAU,YAASqS,EAAS,OAAOvI,OAAO,CAAE9J,QAAS,KAErD0xB,EAAM,IAAIC,MAChBD,EAAIE,OAAS,KACZ5xB,EAAQ8J,OAAO,CACd9J,QAAS,CACR6G,MAAO6qB,EACP/qB,UAAW,uBACXF,UAAW,aAIdirB,EAAI5iB,IAAM,WAIV,MAAM+iB,EAAe,YAAUxf,EAAS,UAAUvI,OAAO,CACxDyF,KAAMiiB,EACN1lB,MAAO2lB,EACP1lB,SAAU,CACT+lB,UAAW,IAAMvf,EAAMse,MAAMG,gBAC7Be,MAAO,IAAMxf,EAAMse,MAAME,eAIrBiB,EAAc,YAAU3f,EAAS,SAASvI,OAAO,CACtDyF,KAAMiiB,EACN1lB,MAAO2lB,EACP1lB,SAAU,CACT,CACC+lB,UAAW,IAAMvf,EAAMse,MAAMS,gBAAgB,GAC7CS,MAAO,IAAMxf,EAAMse,MAAMO,YAE1B,CACCU,UAAW,IAAMvf,EAAMse,MAAMS,gBAAgB,GAC7CS,MAAO,IAAMxf,EAAMse,MAAMQ,iBAG3BhiB,aAAc,CACb1L,OAAQ,CAACzE,EAAG+yB,cAMRC,EAAa,YAAS7f,EAAS,SAASvI,OAAO,CACpD8B,SAAU,CAAComB,EAAaH,GACxB9lB,SAAU,CACTihB,KAAM,IAAMza,EAAMgb,SAASH,OAAO3W,QAClC0b,WAAY,IAAM5f,EAAMgb,SAASH,OAAO5W,eAEzCnH,aAAc,CACb1L,OAAQ,CAACzE,EAAGkzB,YACZ5tB,UAAW,YAAUtF,EAAI,QAAS,YAI9BmzB,EAA0B,CAAEvzB,KAAM,SAC3B+xB,EAAQ,YAASxe,EAAS,SAASvI,OAAO,CACtDU,OAAQ0nB,EACRpqB,gBAAiB,CAACuqB,EAAYA,EAAYA,EAAYA,KAGjDC,EAAa,YAAUjgB,EAAS,SAASvI,OAAO,CACrDlL,KGtGc,u6IHuGdmN,SAAU,CACTwmB,YAAa,IAAMhgB,EAAMgb,SAASH,OAAOjX,SACzCqc,SAAU,IAAMjgB,EAAMse,MAAMS,gBAAgB,GAC5CtE,KAAM,IAAMza,EAAMgb,SAASH,OAAO3W,QAClCjL,IAAK,IAAMxL,EAAQgR,QACnByhB,UAAW5B,EAAM7f,MAAM,GACvBqe,QAASwB,EAAM7f,MAAM,GACrBse,IAAKuB,EAAM7f,MAAM,GACjB0hB,OAAQ7B,EAAM7f,MAAM,IAErB3B,aAAc,CACb1L,OAAQ,CAACzE,EAAGyzB,OACZnuB,UAAW,YAAUtF,EAAI,YAId0zB,EAAQ,YAASvgB,EAAS,SAASvI,OAAO,CACtDU,OAAQ8nB,IAGT,YAAiB,WAAYhF,IACxBA,IAAMsD,EAAO9d,QAChB+d,EAAM/mB,WItHR,YAAOoK,IACN,YAAI,UAAUA,IAAMA,EACpB,YAAS0c,EAAO1b,OAChB7C,EAAQwgB,QAAQhC,EAAO+B,GAAOE,QAAQF,IACpC,S,+BCXH,sGAKA,IAAIG,EAAgD,KACpD,MAAMC,EAA2C,GAEjD,IAAIC,GAAa,EAEbC,EAAa,EAEbC,EAAU,EAEd,SAASC,EAAetC,GACvB,MAAM5c,EAAMif,EAAUrC,EAAOqC,EAAUA,EAGvC,GAFAA,EAAUrC,EAENiC,EAAY,CACf,IAAK,MAAMluB,KAAMkuB,EAChBA,EAAWluB,GAAIqP,GAEhB6e,EAAa,KAGd,IAAIM,EAAU,EACd,IAAK,MAAMxuB,KAAMmuB,EAChBK,IACAL,EAAanuB,GAAIqP,GAGbmf,EAIJC,sBAAsBF,IAHtBH,GAAa,EACbE,EAAU,GAML,SAASI,EAAKpJ,EAActlB,GAClCA,EAAKA,GAAMslB,EAAGvyB,MAAQs7B,IACtBH,EAAaA,GAAc,GAC3BA,EAAWluB,GAAMslB,EAEZ8I,IACJK,sBAAsBF,GACtBH,GAAa,GAIR,SAASO,EAAOrJ,EAActlB,GASpC,OARAA,EAAKA,GAAMslB,EAAGvyB,MAAQs7B,IACtBF,EAAanuB,GAAMslB,EAEd8I,IACJK,sBAAsBF,GACtBH,GAAa,GAGPpuB,EAGD,SAAS4uB,EAAK5uB,GACF,mBAAPA,IACVA,EAAKA,EAAGjN,aAEFo7B,EAAanuB,K,+BClErB,oEAAO,MAAM6uB,EAAU,CACnBhb,KAAM,EACNib,OAAQ,EACRrb,MAAO,GAEJ,SAASvF,EAAQtD,EAAMlS,GAC1B,MAAMuyB,EAAKvyB,GAAYkS,GACjB,QAAEuD,EAAU0d,SAAQ,kBAAEzd,EAAiB,UAAEE,EAAY,IAAG,WAAED,EAAa,GAAOzD,EAC9E8C,EAAQ,CACV8F,QAAS,GACTe,KAAM,CAAEJ,EAAG,EAAGC,EAAG,EAAG2a,GAAI,EAAGC,GAAI,EAAGC,KAAM,EAAGC,KAAM,GACjD7a,UAAU,EACVd,SAAS,GAEb,IAAIY,EAAI,EAAGC,EAAI,EAAG+a,EAAK,EAAGC,EAAK,EAAGC,EAAU,KAC5C,SAASC,EAAc7G,GACfA,EAAE8G,WACF7hB,EAAM8F,QAAQiV,EAAE+G,QAAU/G,EAC1BtU,EAAIgb,EAAK1G,EAAEgH,QACXrb,EAAIgb,EAAK3G,EAAEiH,QACXhiB,EAAM2G,UAAW,EACN,MAAXgb,GAAmBM,aAAaN,GAChCA,EAAUO,WAAW,KACbliB,EAAM6G,KAAK0a,KAAO5gB,GAAcX,EAAM6G,KAAK2a,KAAO7gB,IAClDX,EAAM6F,SAAU,EAChB0X,EAAGvd,KAERY,IAGHZ,EAAM8F,QAAQqb,EAAQpb,OAASgV,EAEnCwC,EAAGvd,GAEP,SAASmiB,EAAYC,GACjBpiB,EAAM8F,QAAU,UACT9F,EAAM6G,KAAKnE,MAClB1C,EAAM6G,KAAKJ,EAAI,EACfzG,EAAM6G,KAAKH,EAAI,EACf1G,EAAM6G,KAAKwa,GAAK,EAChBrhB,EAAM6G,KAAKya,GAAK,EAChBthB,EAAM6G,KAAK0a,KAAO,EAClBvhB,EAAM6G,KAAK2a,KAAO,EAClBxhB,EAAM2G,UAAW,EACjB3G,EAAM6F,SAAU,EACL,MAAX8b,GAAmBM,aAAaN,GAChCA,EAAU,KACVpE,EAAGvd,GAEP,SAASqiB,EAActH,GACf/a,EAAM2G,WACN3G,EAAM6G,KAAKnE,MAAQqY,EACnB/a,EAAM6G,KAAKJ,EAAIA,EAAIsU,EAAEgH,QACrB/hB,EAAM6G,KAAKH,EAAIA,EAAIqU,EAAEiH,QACrBhiB,EAAM6G,KAAKwa,GAAKI,EAAK1G,EAAEgH,QACvB/hB,EAAM6G,KAAKya,GAAKI,EAAK3G,EAAEiH,QACvBhiB,EAAM6G,KAAK0a,KAAOzqB,KAAK6d,IAAI7d,KAAKgc,IAAI9S,EAAM6G,KAAKJ,GAAIzG,EAAM6G,KAAK0a,MAC9DvhB,EAAM6G,KAAK2a,KAAO1qB,KAAK6d,IAAI7d,KAAKgc,IAAI9S,EAAM6G,KAAKH,GAAI1G,EAAM6G,KAAK2a,MAC9DC,EAAK1G,EAAEgH,QACPL,EAAK3G,EAAEiH,QACPzE,EAAGvd,IAGX,SAASsiB,EAAevH,GACpBA,EAAEuH,iBAWN,OATA7hB,EAAQlV,iBAAiB,cAAeq2B,GACxCzD,SAAS5yB,iBAAiB,cAAe82B,GACzClE,SAAS5yB,iBAAiB,YAAa42B,GACvChE,SAAS5yB,iBAAiB,eAAgB42B,GAC1ChE,SAAS5yB,iBAAiB,gBAAiB42B,GACvCzhB,GACAD,EAAQlV,iBAAiB,cAAe+2B,GAE5C/E,EAAGvd,GACI,WACHS,EAAQjV,oBAAoB,cAAeo2B,GAC3CzD,SAAS3yB,oBAAoB,cAAe62B,GAC5ClE,SAAS3yB,oBAAoB,YAAa22B,GAC1ChE,SAAS3yB,oBAAoB,eAAgB22B,GAC7ChE,SAAS3yB,oBAAoB,gBAAiB22B,GAC1CzhB,GACAD,EAAQjV,oBAAoB,cAAe82B","file":"experiments/area-light/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 65);\n","export const GEOMETRY_PROP_POSITION = 'position';\nexport const GEOMETRY_PROP_NORMAL = 'normal';\nexport const GEOMETRY_PROP_UV = 'uv';\nexport const UNIFORM_SOURCE_TEXTURE = 'source';\nexport const VARYING_UV_COORDS = 'coords';\nexport const GL_TYPE = {\n    FLOAT: 0x1406,\n    FLOAT_VEC2: 0x8b50,\n    FLOAT_VEC3: 0x8b51,\n    FLOAT_VEC4: 0x8b52,\n    INT: 0x1404,\n    INT_VEC2: 0x8b53,\n    INT_VEC3: 0x8b54,\n    INT_VEC4: 0x8b55,\n    BOOL: 0x8b56,\n    BOOL_VEC2: 0x8b57,\n    BOOL_VEC3: 0x8b58,\n    BOOL_VEC4: 0x8b59,\n    FLOAT_MAT2: 0x8b5a,\n    FLOAT_MAT3: 0x8b5b,\n    FLOAT_MAT4: 0x8b5c,\n    SAMPLER_2D: 0x8b5e,\n    SAMPLER_CUBE: 0x8b60,\n    SAMPLER_3D: 0x8b5f,\n    SAMPLER_2D_SHADOW: 0x8b62,\n    FLOAT_MAT2X3: 0x8b65,\n    FLOAT_MAT2X4: 0x8b66,\n    FLOAT_MAT3X2: 0x8b67,\n    FLOAT_MAT3X4: 0x8b68,\n    FLOAT_MAT4X2: 0x8b69,\n    FLOAT_MAT4X3: 0x8b6a,\n    SAMPLER_2D_ARRAY: 0x8dc1,\n    SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n    SAMPLER_CUBE_SHADOW: 0x8dc5,\n    UNSIGNED_INT: 0x1405,\n    UNSIGNED_INT_VEC2: 0x8dc6,\n    UNSIGNED_INT_VEC3: 0x8dc7,\n    UNSIGNED_INT_VEC4: 0x8dc8,\n    INT_SAMPLER_2D: 0x8dca,\n    INT_SAMPLER_3D: 0x8dcb,\n    INT_SAMPLER_CUBE: 0x8dcc,\n    INT_SAMPLER_2D_ARRAY: 0x8dcf,\n    UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n    UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n    UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n    TEXTURE_2D: 0x0de1,\n    TEXTURE_CUBE_MAP: 0x8513,\n    TEXTURE_3D: 0x806f,\n    TEXTURE_2D_ARRAY: 0x8c1a,\n    BYTE: 0x1400,\n    UNSIGNED_BYTE: 0x1401,\n    SHORT: 0x1402,\n    UNSIGNED_SHORT: 0x1403,\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\n    UNSIGNED_SHORT_5_6_5: 0x8363,\n    HALF_FLOAT: 0x140b,\n    UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n    UNSIGNED_INT_10F_11F_11F_REV: 0x8c3b,\n    UNSIGNED_INT_5_9_9_9_REV: 0x8c3e,\n    FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8dad,\n    UNSIGNED_INT_24_8: 0x84fa,\n};\nexport const TEXTURE_FORMAT = {\n    RED: 0x1903,\n    RG: 0x8227,\n    RGB: 0x1907,\n    RGBA: 0x1908,\n    RED_INTEGER: 0x8d94,\n    RG_INTEGER: 0x8228,\n    RGB_INTEGER: 0x8d98,\n    RGBA_INTEGER: 0x8d99,\n    DEPTH_COMPONENT: 0x1902,\n};\nexport const TEXTURE_FORMAT_INTERNAL = {\n    R8: 0x8229,\n    RG8: 0x822b,\n    RGB8: 0x8051,\n    RGBA8: 0x8058,\n    R16F: 0x822d,\n    RG16F: 0x822f,\n    RGB16F: 0x881b,\n    RGBA16F: 0x881a,\n    R32F: 0x822e,\n    RG32F: 0x8230,\n    RGB32F: 0x8815,\n    RGBA32F: 0x8814,\n    R8I: 0x8231,\n    RG8I: 0x8237,\n    RGB8I: 0x8d8f,\n    RGBA8I: 0x8d8e,\n    R8UI: 0x8232,\n    RG8UI: 0x8238,\n    RGB8UI: 0x8d7d,\n    RGBA8UI: 0x8d7c,\n    R16I: 0x8233,\n    RG16I: 0x8239,\n    RGB16I: 0x8d89,\n    RGBA16I: 0x8d88,\n    R16UI: 0x8234,\n    RG16UI: 0x823a,\n    RGB16UI: 0x8d77,\n    RGBA16UI: 0x8d76,\n    R32I: 0x8235,\n    RG32I: 0x823b,\n    RGB32I: 0x8d83,\n    RGBA32I: 0x8d82,\n    R32UI: 0x8236,\n    RG32UI: 0x823c,\n    RGB32UI: 0x8d71,\n    RGBA32UI: 0x8d70,\n    RGB10_A2: 0x8059,\n    RGB10_A2UI: 0x906f,\n    SRGB: 0x8c40,\n    SRGB8: 0x8c41,\n    SRGB8_ALPHA8: 0x8c43,\n    R8_SNORM: 0x8f94,\n    RG8_SNORM: 0x8f95,\n    RGB8_SNORM: 0x8f96,\n    RGBA8_SNORM: 0x8f97,\n    DEPTH_COMPONENT16: 0x81a5,\n    DEPTH_COMPONENT24: 0x81a6,\n    DEPTH_COMPONENT32F: 0x8cac,\n};\nexport const TEXTURE_FORMAT_DEFAULTS = {\n    [GL_TYPE.UNSIGNED_BYTE]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R8,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG8,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB8,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA8,\n    },\n    [GL_TYPE.UNSIGNED_SHORT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT16,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16UI,\n    },\n    [GL_TYPE.UNSIGNED_INT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT24,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R32UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG32UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB32UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA32UI,\n    },\n    [GL_TYPE.FLOAT]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16F,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16F,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16F,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16F,\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT32F,\n    },\n    COMPRESSED_TYPES: {},\n};\n//# sourceMappingURL=contants.js.map","export function windowSize(callback) {\n    function resize() {\n        callback({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    }\n    window.addEventListener('resize', resize);\n    resize();\n    return function stop() {\n        window.removeEventListener('resize', resize);\n    };\n}\nexport function windowSizeObserver() {\n    const state = {\n        size: { width: 0, height: 0 },\n    };\n    const destroy = windowSize(s => (state.size = s));\n    return { state, destroy };\n}\n//# sourceMappingURL=dom.js.map","import * as constants from './contants';\nexport const defaultTextureSettings = {\n    wrap: 'CLAMP_TO_EDGE',\n    minFilter: 'LINEAR',\n    magFilter: 'NEAREST',\n};\nexport function getDefaultLayerSettings(gl) {\n    return {\n        clearColor: [0.0, 0.0, 0.0, 1.0],\n        blendFunc: [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA],\n    };\n}\nexport const defaultForms = {\n    renderQuad: {\n        attribs: {\n            [constants.GEOMETRY_PROP_POSITION]: {\n                buffer: new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1]),\n                storeType: 'STATIC',\n            },\n            [constants.GEOMETRY_PROP_UV]: {\n                buffer: new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]),\n                storeType: 'STATIC',\n            },\n        },\n        drawType: 'TRIANGLE_STRIP',\n        itemCount: 4,\n    },\n};\nexport const defaultShaders = {\n    basicEffect: {\n        vert: `\nattribute vec2 ${constants.GEOMETRY_PROP_POSITION};\nattribute vec2 ${constants.GEOMETRY_PROP_UV};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\t${constants.VARYING_UV_COORDS} = ${constants.GEOMETRY_PROP_UV};\n\tgl_Position = vec4(${constants.GEOMETRY_PROP_POSITION}, 0.0, 1.0);\n}`,\n        frag: `precision mediump float;\nuniform sampler2D ${constants.UNIFORM_SOURCE_TEXTURE};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\tgl_FragColor = texture2D(${constants.UNIFORM_SOURCE_TEXTURE}, ${constants.VARYING_UV_COORDS});\n}`,\n    },\n};\n//# sourceMappingURL=asset-lib.js.map","import { GL_TYPE } from './contants';\n// Attrib and Uniform Setters\nfunction getBindPointForSamplerType(type) {\n    return typeMap[type].bindPoint;\n}\nfunction floatSetter(gl, location) {\n    return (v) => {\n        gl.uniform1f(location, v);\n    };\n}\nfunction floatArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1fv(location, v);\n    };\n}\nfunction floatVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2fv(location, v);\n    };\n}\nfunction floatVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3fv(location, v);\n    };\n}\nfunction floatVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4fv(location, v);\n    };\n}\nfunction intSetter(gl, location) {\n    return (v) => {\n        gl.uniform1i(location, v);\n    };\n}\nfunction intArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1iv(location, v);\n    };\n}\nfunction intVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2iv(location, v);\n    };\n}\nfunction intVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3iv(location, v);\n    };\n}\nfunction intVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4iv(location, v);\n    };\n}\nfunction uintSetter(gl, location) {\n    return (v) => {\n        gl.uniform1ui(location, v);\n    };\n}\nfunction uintArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1uiv(location, v);\n    };\n}\nfunction uintVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2uiv(location, v);\n    };\n}\nfunction uintVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3uiv(location, v);\n    };\n}\nfunction uintVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4uiv(location, v);\n    };\n}\nfunction floatMat2Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n    };\n}\nfunction floatMat3Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n    };\n}\nfunction floatMat4Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n    };\n}\nfunction floatMat23Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x3fv(location, false, v);\n    };\n}\nfunction floatMat32Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x2fv(location, false, v);\n    };\n}\nfunction floatMat24Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x4fv(location, false, v);\n    };\n}\nfunction floatMat42Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x2fv(location, false, v);\n    };\n}\nfunction floatMat34Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x4fv(location, false, v);\n    };\n}\nfunction floatMat43Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x3fv(location, false, v);\n    };\n}\nfunction samplerSetter(gl, type, unit, location) {\n    const bindPoint = getBindPointForSamplerType(type);\n    return (texture) => {\n        gl.uniform1i(location, unit);\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(bindPoint, texture._texture);\n    };\n}\nfunction samplerArraySetter(gl, type, unit, location, size) {\n    const bindPoint = getBindPointForSamplerType(type);\n    const units = new Int32Array(size);\n    for (let i = 0; i < size; ++i) {\n        units[i] = unit + i;\n    }\n    return (textures) => {\n        gl.uniform1iv(location, units);\n        for (const index in textures) {\n            gl.activeTexture(gl.TEXTURE0 + units[index]);\n            gl.bindTexture(bindPoint, textures[index]._texture);\n        }\n    };\n}\nfunction isSamplerInfo(info) {\n    return info.Type === null;\n}\nconst typeMap = {\n    [GL_TYPE.FLOAT]: {\n        Type: Float32Array,\n        size: 4,\n        setter: floatSetter,\n        arraySetter: floatArraySetter,\n    },\n    [GL_TYPE.FLOAT_VEC2]: {\n        Type: Float32Array,\n        size: 8,\n        setter: floatVec2Setter,\n    },\n    [GL_TYPE.FLOAT_VEC3]: {\n        Type: Float32Array,\n        size: 12,\n        setter: floatVec3Setter,\n    },\n    [GL_TYPE.FLOAT_VEC4]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatVec4Setter,\n    },\n    [GL_TYPE.INT]: {\n        Type: Int32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.INT_VEC2]: { Type: Int32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.INT_VEC3]: { Type: Int32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.INT_VEC4]: { Type: Int32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.UNSIGNED_INT]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: uintSetter,\n        arraySetter: uintArraySetter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        Type: Uint32Array,\n        size: 8,\n        setter: uintVec2Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        Type: Uint32Array,\n        size: 12,\n        setter: uintVec3Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        Type: Uint32Array,\n        size: 16,\n        setter: uintVec4Setter,\n    },\n    [GL_TYPE.BOOL]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.BOOL_VEC2]: { Type: Uint32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.BOOL_VEC3]: { Type: Uint32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.BOOL_VEC4]: { Type: Uint32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.FLOAT_MAT2]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatMat2Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3]: {\n        Type: Float32Array,\n        size: 36,\n        setter: floatMat3Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4]: {\n        Type: Float32Array,\n        size: 64,\n        setter: floatMat4Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X3]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat23Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X4]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat24Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X2]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat32Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X4]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat34Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X2]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat42Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X3]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat43Setter,\n    },\n    [GL_TYPE.SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.SAMPLER_2D_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_CUBE_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n};\nfunction floatAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribPointer(location, typeInfo.itemSize, GL_TYPE.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n    };\n}\nfunction intAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribIPointer(location, typeInfo.itemSize, GL_TYPE.INT, b.stride || 0, b.offset || 0);\n    };\n}\nfunction matAttribSetter(gl, location, typeInfo) {\n    const defaultSize = typeInfo.size;\n    const count = typeInfo.count;\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        const numComponents = defaultSize;\n        const size = numComponents / count;\n        const typeInfo = typeMap[GL_TYPE.FLOAT];\n        const stride = typeInfo.size * numComponents;\n        const normalize = b.normalize || false;\n        const offset = b.offset || 0;\n        const rowOffset = stride / count;\n        for (let i = 0; i < count; ++i) {\n            gl.enableVertexAttribArray(location + i);\n            gl.vertexAttribPointer(location + i, size, GL_TYPE.FLOAT, normalize, stride, offset + rowOffset * i);\n        }\n    };\n}\nconst attrTypeMap = {\n    [GL_TYPE.FLOAT]: { size: 4, setter: floatAttribSetter, itemSize: 1 },\n    [GL_TYPE.FLOAT_VEC2]: { size: 8, setter: floatAttribSetter, itemSize: 2 },\n    [GL_TYPE.FLOAT_VEC3]: { size: 12, setter: floatAttribSetter, itemSize: 3 },\n    [GL_TYPE.FLOAT_VEC4]: { size: 16, setter: floatAttribSetter, itemSize: 4 },\n    [GL_TYPE.INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.INT_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.INT_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.INT_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.UNSIGNED_INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        size: 8,\n        setter: intAttribSetter,\n        itemSize: 2,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        size: 12,\n        setter: intAttribSetter,\n        itemSize: 3,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        size: 16,\n        setter: intAttribSetter,\n        itemSize: 4,\n    },\n    [GL_TYPE.BOOL]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.BOOL_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.BOOL_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.BOOL_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.FLOAT_MAT2]: { size: 4, setter: matAttribSetter, count: 2 },\n    [GL_TYPE.FLOAT_MAT3]: { size: 9, setter: matAttribSetter, count: 3 },\n    [GL_TYPE.FLOAT_MAT4]: { size: 16, setter: matAttribSetter, count: 4 },\n};\nexport function createUniformSetters(gl, program) {\n    let textureUnit = 0;\n    function createUniformSetter(program, uniformInfo) {\n        const location = gl.getUniformLocation(program, uniformInfo.name);\n        const isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]';\n        const type = uniformInfo.type;\n        const typeInfo = typeMap[type];\n        if (!typeInfo) {\n            throw new Error('unknown type: 0x' + type.toString(16)); // we should never get here.\n        }\n        if (location == null) {\n            return;\n        }\n        let setter;\n        if (isSamplerInfo(typeInfo)) {\n            // it's a sampler\n            const unit = textureUnit;\n            textureUnit += uniformInfo.size;\n            if (isArray) {\n                setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n            }\n            else {\n                setter = typeInfo.setter(gl, type, unit, location);\n            }\n        }\n        else {\n            if (typeInfo.arraySetter && isArray) {\n                setter = typeInfo.arraySetter(gl, location);\n            }\n            else {\n                setter = typeInfo.setter(gl, location);\n            }\n        }\n        return { setter, location };\n    }\n    const uniformSetters = {};\n    const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < numUniforms; ++i) {\n        const uniformInfo = gl.getActiveUniform(program, i);\n        if (!uniformInfo) {\n            continue;\n        }\n        let name = uniformInfo.name;\n        // remove the array suffix.\n        if (name.substr(-3) === '[0]') {\n            name = name.substr(0, name.length - 3);\n        }\n        if (program) {\n            const setter = createUniformSetter(program, uniformInfo);\n            if (setter) {\n                uniformSetters[name] = setter;\n            }\n        }\n    }\n    return uniformSetters;\n}\nexport function createAttributeSetters(gl, program) {\n    const attribSetters = {};\n    const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < numAttribs; i++) {\n        const attribInfo = gl.getActiveAttrib(program, i);\n        if (!attribInfo) {\n            break;\n        }\n        const location = gl.getAttribLocation(program, attribInfo.name);\n        const typeInfo = attrTypeMap[attribInfo.type];\n        const setter = typeInfo.setter(gl, location, typeInfo);\n        attribSetters[attribInfo.name] = { setter, location };\n    }\n    return attribSetters;\n}\n// Type helpers\nexport const glTypeToTypedArray = {\n    [GL_TYPE.BYTE]: Int8Array,\n    [GL_TYPE.UNSIGNED_BYTE]: Uint8Array,\n    [GL_TYPE.SHORT]: Int16Array,\n    [GL_TYPE.UNSIGNED_SHORT]: Uint16Array,\n    [GL_TYPE.INT]: Int32Array,\n    [GL_TYPE.UNSIGNED_INT]: Uint32Array,\n    [GL_TYPE.FLOAT]: Float32Array,\n    [GL_TYPE.UNSIGNED_SHORT_4_4_4_4]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_5_5_1]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_6_5]: Uint16Array,\n    [GL_TYPE.HALF_FLOAT]: Uint16Array,\n    [GL_TYPE.UNSIGNED_INT_2_10_10_10_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_10F_11F_11F_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_5_9_9_9_REV]: Uint32Array,\n    [GL_TYPE.FLOAT_32_UNSIGNED_INT_24_8_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_24_8]: Uint32Array,\n};\nexport function getGLTypeForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArray instanceof Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArray instanceof Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArray instanceof Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArray instanceof Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArray instanceof Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\nexport function getGLTypeForTypedArrayType(typedArrayType) {\n    if (typedArrayType === Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArrayType === Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArrayType === Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArrayType === Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArrayType === Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArrayType === Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\n// Settings\nexport function applyDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.enable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.blendFunc) {\n        gl.blendFunc.apply(gl, settings.blendFunc);\n    }\n    if (settings.depthFunc != null) {\n        gl.depthFunc(settings.depthFunc);\n    }\n    if (settings.cullFace != null) {\n        gl.cullFace(settings.cullFace);\n    }\n    if (settings.frontFace != null) {\n        gl.frontFace(settings.frontFace);\n    }\n    if (settings.lineWidth != null) {\n        gl.lineWidth(settings.lineWidth);\n    }\n    if (settings.colorMask) {\n        gl.colorMask.apply(gl, settings.colorMask);\n    }\n    if (settings.depthMask != null) {\n        gl.depthMask(settings.depthMask);\n    }\n    if (settings.clearColor) {\n        gl.clearColor.apply(gl, settings.clearColor);\n    }\n    if (settings.clearDepth != null) {\n        gl.clearDepth(settings.clearDepth);\n    }\n    if (settings.clearBits != null) {\n        gl.clear(settings.clearBits);\n    }\n}\nexport function revertDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.enable(setting);\n        }\n    }\n}\n//# sourceMappingURL=render-utils.js.map","import { getGLTypeForTypedArray } from './render-utils';\nlet formCounter = 1;\nexport class Form {\n    constructor(_painter, id = 'Form' + formCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (data.drawType) {\n            this._drawType = gl[data.drawType];\n        }\n        if (data.itemCount) {\n            this._itemCount = data.itemCount;\n        }\n        this._attribs = this._attribs || {};\n        for (const id in data.attribs) {\n            const attribData = data.attribs[id];\n            if (this._attribs[id] == null) {\n                this._attribs[id] = {\n                    buffer: gl.createBuffer(),\n                };\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._attribs[id].buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, attribData.buffer, gl[(attribData.storeType || 'STATIC') + '_DRAW']);\n        }\n        if (data.elements) {\n            const buffer = data.elements.buffer;\n            if (this._elements == null) {\n                this._elements = {\n                    buffer: gl.createBuffer(),\n                    glType: null,\n                };\n            }\n            this._elements.glType = getGLTypeForTypedArray(buffer);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._elements.buffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, buffer, gl[(data.elements.storeType || 'STATIC') + '_DRAW']);\n        }\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        for (const id in this._attribs) {\n            gl.deleteBuffer(this._attribs[id].buffer);\n        }\n        this._attribs = {};\n        if (this._elements) {\n            gl.deleteBuffer(this._elements.buffer);\n            this._elements = undefined;\n        }\n    }\n}\n//# sourceMappingURL=form.js.map","import { defaultTextureSettings } from './asset-lib';\nlet textureCount = 1;\nexport class Texture {\n    constructor(_painter, id = 'Texture' + textureCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this._texture = null;\n        this._data = {};\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (this._texture == null) {\n            this._texture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        if ((data.wrap && data.wrap !== this._data.wrap) ||\n            (data.wrapS && data.wrapS !== this._data.wrapS) ||\n            (data.wrapT && data.wrapT !== this._data.wrapT)) {\n            let wrapS, wrapT;\n            if (data.wrap) {\n                wrapS = wrapT = data.wrap;\n            }\n            else {\n                wrapT = data.wrapT || defaultTextureSettings.wrap;\n                wrapS = data.wrapS || defaultTextureSettings.wrap;\n            }\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n        }\n        else if (!(this._data.wrap || this._data.wrapS || this._data.wrapT)) {\n            this._data.wrap = this._data.wrapT = this._data.wrapS = defaultTextureSettings.wrap;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[this._data.wrap]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[this._data.wrap]);\n        }\n        if (data.magFilter && data.magFilter !== this._data.magFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[data.magFilter]);\n        }\n        else if (!this._data.magFilter) {\n            this._data.magFilter = defaultTextureSettings.magFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[this._data.magFilter]);\n        }\n        if (data.minFilter && data.minFilter !== this._data.minFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[data.minFilter]);\n        }\n        else if (!this._data.minFilter) {\n            this._data.minFilter = defaultTextureSettings.minFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[this._data.minFilter]);\n        }\n        if (data.asset) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data.asset);\n        }\n        if (data.data !== undefined) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, data.type === 'FLOAT' && this._painter.isWebGL2\n                ? gl.RGBA32F\n                : gl.RGBA, data.width, // width and height are required if using custom data\n            data.height, 0, gl.RGBA, gl[data.type || 'UNSIGNED_BYTE'], data.data);\n        }\n        if (data.flipY != null && data.flipY !== this._data.flipY) {\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, data.flipY);\n        }\n        if (data.minFilter && data.minFilter.indexOf('MIPMAP') > 0) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        this._painter.gl.deleteTexture(this._texture);\n        this._data = {};\n        this._texture = null;\n    }\n}\n//# sourceMappingURL=texture.js.map","import { equalObject } from 'tvs-libs/dist/utils/predicates';\nimport { Texture } from './texture';\nlet targetCount = 1;\nexport class RenderTarget {\n    constructor(_painter, id = 'Form' + targetCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.antialias = false;\n        this.frameBuffer = null;\n        this.antiAliasFrameBuffer = null;\n        this.antiAliasRenderBuffer = null;\n        this.textures = [];\n        this.depthBuffer = null;\n        this.bufferStructure = [];\n        this._data = {};\n    }\n    update(data) {\n        var _a;\n        const gl = this._painter.gl;\n        const width = data.width || this.width;\n        const height = data.height || this.height;\n        if (!(width && height)) {\n            return this;\n        }\n        else if (width === this.width && height === this.height) {\n            if (!data.bufferStructure)\n                return this;\n            if (data.bufferStructure.length === this.bufferStructure.length &&\n                this.bufferStructure.every((buf, i) => equalObject(buf, data.bufferStructure[i]))) {\n                return this;\n            }\n        }\n        if (this.frameBuffer == null) {\n            this.frameBuffer = gl.createFramebuffer();\n        }\n        if (this.depthBuffer == null) {\n            this.depthBuffer = gl.createRenderbuffer();\n        }\n        if (data.bufferStructure && data.bufferStructure.length) {\n            this.bufferStructure = data.bufferStructure;\n            if (this.bufferStructure.some(t => t.type === 'FLOAT')) {\n                if (this._painter.isWebGL2) {\n                    gl.getExtension('EXT_color_buffer_float');\n                }\n                else {\n                    gl.getExtension('OES_texture_float');\n                }\n            }\n        }\n        const texCount = this.bufferStructure.length || 1;\n        const bufferAttachments = [gl.COLOR_ATTACHMENT0];\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        if (texCount > 1) {\n            let glx;\n            if (!this._painter.isWebGL2) {\n                glx = gl.getExtension('WEBGL_draw_buffers');\n            }\n            const attachment = this._painter.isWebGL2\n                ? gl.COLOR_ATTACHMENT0\n                : glx.COLOR_ATTACHMENT0_WEBGL;\n            for (let i = 0; i < texCount; i++) {\n                bufferAttachments[i] = attachment + i;\n            }\n            this._painter.isWebGL2\n                ? gl.drawBuffers(bufferAttachments)\n                : glx.drawBuffersWEBGL(bufferAttachments);\n        }\n        this.antialias =\n            texCount === 1 &&\n                this._painter.isWebGL2 &&\n                (data.antialias || ((_a = this._data) === null || _a === void 0 ? void 0 : _a.antialias));\n        if (this.antialias) {\n            const gl2 = gl;\n            if (this.antiAliasFrameBuffer == null) {\n                this.antiAliasFrameBuffer = gl.createFramebuffer();\n            }\n            if (this.antiAliasRenderBuffer == null) {\n                this.antiAliasRenderBuffer = gl.createRenderbuffer();\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl2.RGBA8, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        else {\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n        }\n        for (let i = 0; i < texCount; i++) {\n            if (!this.textures[i]) {\n                this.textures[i] = new Texture(this._painter, this.id + '_Texture' + i);\n            }\n            const texture = this.textures[i];\n            texture.update(Object.assign(Object.assign({ minFilter: 'NEAREST', magFilter: 'NEAREST' }, this.bufferStructure[i]), { data: null, width,\n                height }));\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, bufferAttachments[i], gl.TEXTURE_2D, texture._texture, 0);\n        }\n        if (this.antialias) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n            if (err !== gl.FRAMEBUFFER_COMPLETE) {\n                console.error('antialias framebuffer error', err, data);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (err !== gl.FRAMEBUFFER_COMPLETE) {\n            console.error('framebuffer error', err, data);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        Object.assign(this._data, data);\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteFramebuffer(this.frameBuffer);\n        gl.deleteRenderbuffer(this.depthBuffer);\n        for (const texture of this.textures) {\n            gl.deleteTexture(texture);\n        }\n        if (this.antiAliasFrameBuffer) {\n            gl.deleteFramebuffer(this.antiAliasFrameBuffer);\n        }\n        if (this.antiAliasRenderBuffer) {\n            gl.deleteRenderbuffer(this.antiAliasRenderBuffer);\n        }\n        this.textures = [];\n        this.frameBuffer = null;\n        this.depthBuffer = null;\n        this._data = {};\n        this.bufferStructure = [];\n        this.width = 0;\n        this.height = 0;\n    }\n}\n//# sourceMappingURL=render-target.js.map","import { times } from 'tvs-libs/dist/utils/sequence';\nimport { RenderTarget } from './render-target';\nimport { Texture } from './texture';\nlet frameCount = 1;\nexport class Frame {\n    constructor(_painter, id = 'Frame' + frameCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.layers = [];\n        this._data = {};\n        this._targets = [];\n        this._textures = [];\n    }\n    image(i = 0) {\n        return ((this._targets.length &&\n            this._targets[this._targets.length - 1].textures[i]) ||\n            this._textures[i]);\n    }\n    update(data = {}) {\n        const gl = this._painter.gl;\n        const layers = Array.isArray(data.layers)\n            ? data.layers\n            : data.layers\n                ? [data.layers]\n                : this.layers;\n        const selfReferencing = data.selfReferencing || this._data.selfReferencing;\n        const layerCount = layers.reduce((count, layer) => count + (layer._uniforms.length || 1), 0);\n        const targetCount = selfReferencing || layerCount > 1 ? 2 : layerCount;\n        const width = data.width || this._data.width || gl.drawingBufferWidth;\n        const height = data.height || this._data.height || gl.drawingBufferHeight;\n        const antialias = data.antialias || this._data.antialias || true;\n        if (targetCount !== this._targets.length) {\n            this._destroyTargets();\n        }\n        const targetData = Object.assign(Object.assign({}, data), { width, height, antialias });\n        if (!this._targets.length && targetCount > 0) {\n            this._targets = times(i => new RenderTarget(this._painter, this.id + '_target' + (i + 1)).update(targetData), targetCount);\n        }\n        else if (this._targets.length) {\n            this._targets.forEach(t => {\n                t.update(targetData);\n            });\n        }\n        if (data.texture) {\n            // Hardcode to one static texture for now\n            if (!this._textures[0]) {\n                this._textures[0] = new Texture(this._painter, this.id + '_Texture0');\n            }\n            data.texture.width = data.texture.width || width;\n            data.texture.height = data.texture.height || height;\n            this._textures[0].update(data.texture);\n        }\n        Object.assign(this._data, data);\n        this.layers = layers;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        this._destroyTargets();\n        this._textures.forEach(tex => tex.destroy());\n        this._textures = [];\n        this._data = {};\n        this.layers = [];\n        this.width = 0;\n        this.height = 0;\n    }\n    _destroyTargets() {\n        this._targets.forEach(t => t.destroy());\n        this._targets = [];\n    }\n    _swapTargets() {\n        if (this._targets.length > 1) {\n            const tmp = this._targets[0];\n            this._targets[0] = this._targets[1];\n            this._targets[1] = tmp;\n        }\n    }\n}\n//# sourceMappingURL=frame.js.map","let layerCount = 1;\nexport class Layer {\n    constructor(id = 'DrawingLayer' + layerCount++) {\n        this.id = id;\n        this.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.sketches) {\n            this.sketches = Array.isArray(data.sketches)\n                ? data.sketches\n                : [data.sketches];\n        }\n        if (data.frag) {\n            const sketch = this.sketches && this.sketches[0];\n            if (sketch) {\n                sketch.shade.update({ frag: data.frag });\n            }\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        for (const sketch of this.sketches) {\n            sketch.destroy();\n        }\n        this._data.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=layer.js.map","import { createAttributeSetters, createUniformSetters } from './render-utils';\nlet shadeCounter = 1;\nexport class Shade {\n    constructor(_painter, id = 'Shade' + shadeCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        const fragSource = (data.frag && data.frag.trim()) || this.fragSource;\n        const vertSource = (data.vert && data.vert.trim()) || this.vertSource;\n        if (!(fragSource &&\n            vertSource &&\n            (fragSource !== this.fragSource || vertSource !== this.vertSource))) {\n            return this;\n        }\n        this.destroy();\n        if (fragSource.indexOf('GL_EXT_draw_buffers') >= 0) {\n            gl.getExtension('WEBGL_draw_buffers');\n        }\n        const program = gl.createProgram();\n        const frag = gl.createShader(gl.FRAGMENT_SHADER);\n        const vert = gl.createShader(gl.VERTEX_SHADER);\n        if (!(program && vert && frag))\n            return;\n        this._program = program;\n        this._frag = frag;\n        this._vert = vert;\n        gl.attachShader(program, vert);\n        gl.attachShader(program, frag);\n        gl.shaderSource(vert, vertSource);\n        gl.shaderSource(frag, fragSource);\n        gl.compileShader(vert);\n        gl.compileShader(frag);\n        if (!gl.getShaderParameter(vert, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Vertex Shader!\\n', gl.getShaderInfoLog(vert), addLineNumbers(vertSource));\n        }\n        if (!gl.getShaderParameter(frag, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Fragment Shader!\\n', gl.getShaderInfoLog(frag), addLineNumbers(fragSource));\n        }\n        gl.linkProgram(program);\n        const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n            const lastError = gl.getProgramInfoLog(program);\n            console.error('Error in program linking:', lastError);\n        }\n        this._uniformSetters = createUniformSetters(gl, program);\n        this._attributeSetters = createAttributeSetters(gl, program);\n        this.fragSource = fragSource;\n        this.vertSource = vertSource;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteProgram(this._program);\n        gl.deleteShader(this._frag);\n        gl.deleteShader(this._vert);\n        this.vertSource = undefined;\n        this.fragSource = undefined;\n        this._attributeSetters = {};\n        this._uniformSetters = {};\n    }\n}\nfunction addLineNumbers(src) {\n    return src\n        .trim()\n        .split('\\n')\n        .map((line, i) => i + 1 + ': ' + line)\n        .join('\\n');\n}\n//# sourceMappingURL=shade.js.map","let sketchCounter = 1;\nexport class Sketch {\n    constructor(id = 'Sketch' + sketchCounter++) {\n        this.id = id;\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.drawSettings) {\n            this._drawSettings = data.drawSettings;\n        }\n        if (data.form) {\n            this.form = data.form;\n        }\n        if (data.shade) {\n            this.shade = data.shade;\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        return this;\n    }\n    destroy() {\n        this.form && this.form.destroy();\n        this.shade && this.shade.destroy();\n        this._drawSettings = undefined;\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=sketch.js.map","import { defaultForms, defaultShaders, getDefaultLayerSettings, } from './asset-lib';\nimport { Form } from './form';\nimport { Frame } from './frame';\nimport { Layer } from './layer';\nimport { applyDrawSettings, revertDrawSettings } from './render-utils';\nimport { Shade } from './shade';\nimport { Sketch } from './sketch';\nimport { resizeCanvas } from './utils/context';\nexport class Painter {\n    constructor(canvas, opts = {}) {\n        this.canvas = canvas;\n        this.isWebGL2 = true;\n        this.maxBufferSamples = 0;\n        let gl = null;\n        if (!opts.useWebGL1) {\n            gl =\n                canvas.getContext('webgl2', opts) ||\n                    canvas.getContext('experimental-webgl2', opts);\n        }\n        if (gl == null) {\n            this.isWebGL2 = false;\n            gl =\n                canvas.getContext('webgl', opts) ||\n                    canvas.getContext('experimental-webgl', opts);\n        }\n        if (gl == null) {\n            throw Error('Cannot initialize WebGL.');\n        }\n        this.gl = gl;\n        this.sizeMultiplier = opts.sizeMultiplier || 1;\n        if (this.isWebGL2) {\n            this.maxBufferSamples = gl.getParameter(gl.MAX_SAMPLES);\n        }\n        this.resize();\n        applyDrawSettings(gl, getDefaultLayerSettings(gl));\n        this._renderQuad = this.createForm().update(defaultForms.renderQuad);\n        this._staticSketch = this.createFlatSketch();\n    }\n    resize() {\n        resizeCanvas(this.gl.canvas, this.sizeMultiplier);\n        return this;\n    }\n    destroy() {\n        this._staticSketch.destroy();\n        this._renderQuad.destroy();\n    }\n    updateDrawSettings(drawSettings) {\n        applyDrawSettings(this.gl, Object.assign({}, drawSettings));\n        return this;\n    }\n    createForm(id) {\n        return new Form(this, id);\n    }\n    createShade(id) {\n        return new Shade(this, id);\n    }\n    createSketch(id) {\n        return new Sketch(id);\n    }\n    createFlatSketch(id) {\n        const s = this.createSketch(id);\n        return s.update({\n            form: this._renderQuad,\n            shade: this.createShade(s.id + '_defaultShade').update(defaultShaders.basicEffect),\n        });\n    }\n    createFrame(id) {\n        return new Frame(this, id);\n    }\n    createLayer(id) {\n        return new Layer(id);\n    }\n    createEffect(id) {\n        const l = this.createLayer(id);\n        return l.update({\n            sketches: this.createFlatSketch(l.id + '_effectSketch'),\n        });\n    }\n    draw(sketch, globalUniforms) {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        draw(gl, sketch, globalUniforms);\n        return this;\n    }\n    compose(...frames) {\n        for (const frame of frames) {\n            renderFrame(this.gl, frame);\n        }\n        return this;\n    }\n    display(frame, idx = 0) {\n        return this.draw(this._staticSketch, { source: frame.image(idx) });\n    }\n}\nfunction draw(gl, sketch, globalUniforms, sources) {\n    const { shade: shade, form: form, _drawSettings: drawSettings, _uniforms: uniforms, } = sketch;\n    if (!(shade && form)) {\n        throw Error('cannot draw, shader or geometry are not set');\n    }\n    gl.useProgram(shade._program);\n    shadeForm(shade, form);\n    if (globalUniforms) {\n        shadeUniforms(shade, globalUniforms, sources);\n    }\n    if (drawSettings) {\n        applyDrawSettings(gl, drawSettings);\n    }\n    for (let i = 0; i < (uniforms.length || 1); i++) {\n        drawInstance(gl, sketch, uniforms[i], sources);\n    }\n    if (drawSettings) {\n        revertDrawSettings(gl, drawSettings);\n    }\n}\nfunction drawInstance(gl, sketch, uniforms, sources) {\n    if (uniforms) {\n        shadeUniforms(sketch.shade, uniforms, sources);\n    }\n    if (sketch.form._elements && sketch.form._elements.glType != null) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, sketch.form._elements.buffer);\n        gl.drawElements(sketch.form._drawType, sketch.form._itemCount, sketch.form._elements.glType, 0);\n    }\n    else {\n        gl.drawArrays(sketch.form._drawType, 0, sketch.form._itemCount);\n    }\n}\nfunction shadeForm(shade, form) {\n    for (const name in form._attribs) {\n        const setter = shade._attributeSetters[name];\n        if (setter) {\n            setter.setter(form._attribs[name]);\n        }\n    }\n}\nfunction shadeUniforms(shade, uniforms, sources) {\n    for (const name in uniforms) {\n        const setter = shade._uniformSetters[name];\n        if (setter) {\n            let value = uniforms[name];\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (typeof value === 'string' && sources) {\n                setter.setter(sources[value]);\n            }\n            else {\n                setter.setter(value);\n            }\n        }\n    }\n}\nfunction renderLayer(gl, layer, uniforms, target, source) {\n    if (target) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, target.antialias ? target.antiAliasFrameBuffer : target.frameBuffer);\n        gl.viewport(0, 0, target.width, target.height);\n    }\n    else {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    }\n    if (layer._data.drawSettings) {\n        applyDrawSettings(gl, layer._data.drawSettings);\n    }\n    for (const sketch of layer.sketches) {\n        draw(gl, sketch, uniforms, source);\n    }\n    if (target && target.antialias) {\n        const gl2 = gl;\n        // \"blit\" the cube into the color buffer, which adds antialiasing\n        gl.bindFramebuffer(gl2.READ_FRAMEBUFFER, target.antiAliasFrameBuffer);\n        gl.bindFramebuffer(gl2.DRAW_FRAMEBUFFER, target.frameBuffer);\n        gl2.clearBufferfv(gl2.COLOR, 0, [1.0, 1.0, 1.0, 1.0]);\n        gl2.blitFramebuffer(0, 0, target.width, target.height, 0, 0, target.width, target.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n    }\n    if (layer._data.drawSettings) {\n        revertDrawSettings(gl, layer._data.drawSettings);\n    }\n}\nfunction renderFrame(gl, frame) {\n    for (let i = 0; i < frame.layers.length; i++) {\n        const layer = frame.layers[i];\n        const layerPasses = layer._uniforms.length || 1;\n        for (let j = 0; j < layerPasses; j++) {\n            const target = frame._targets[0];\n            const sources = i + j === 0 && frame._textures.length\n                ? frame._textures\n                : frame._targets[1] && frame._targets[1].textures;\n            renderLayer(gl, layer, layer._uniforms[j], target, sources);\n            frame._swapTargets();\n        }\n    }\n}\n//# sourceMappingURL=painter.js.map","import { once } from './scheduler'\nimport { windowSize } from 'tvs-libs/dist/events/dom'\nimport { keyboard, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { deepOverride } from 'tvs-libs/dist/utils/object'\nimport { PainterOptions } from 'tvs-painter'\nimport { Form } from 'tvs-painter/dist/form'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport { Layer } from 'tvs-painter/dist/layer'\nimport { Painter } from 'tvs-painter/dist/painter'\nimport { Shade } from 'tvs-painter/dist/shade'\nimport { Sketch } from 'tvs-painter/dist/sketch'\nimport { PointerState, pointer } from 'tvs-libs/dist/events/pointer'\n\n// === Painter ===\n\nlet currentCanvas: HTMLCanvasElement\nlet painter: Painter\n\nexport function getPainter(canvas: HTMLCanvasElement, opts?: PainterOptions) {\n\tinit(canvas, opts)\n\treturn painter\n}\n\nconst forms: { [id: string]: Form } = {}\nexport function getForm(painter: Painter, id: string) {\n\treturn forms[id] || (forms[id] = painter.createForm('Form_' + id))\n}\n\nconst shades: { [id: string]: Shade } = {}\nexport function getShade(painter: Painter, id: string) {\n\treturn shades[id] || (shades[id] = painter.createShade('Shade_' + id))\n}\n\nconst sketches: { [id: string]: Sketch } = {}\nexport function getSketch(painter: Painter, id: string) {\n\treturn sketches[id] || (sketches[id] = painter.createSketch('Sketch_' + id))\n}\n\nconst layers: { [id: string]: Layer } = {}\nexport function getLayer(painter: Painter, id: string) {\n\treturn layers[id] || (layers[id] = painter.createLayer('Layer_' + id))\n}\n\nconst frames: { [id: string]: Frame } = {}\nexport function getFrame(painter: Painter, id: string) {\n\treturn frames[id] || (frames[id] = painter.createFrame('Frame_' + id))\n}\n\nconst effects: { [id: string]: Layer } = {}\nexport function getEffect(painter: Painter, id: string) {\n\treturn effects[id] || (effects[id] = painter.createEffect('Effect_' + id))\n}\n\n// === State ===\n\nexport interface BaseState {\n\tdevice: {\n\t\ttpf: number\n\t\tcanvas: HTMLCanvasElement\n\t\tpointer: PointerState\n\t\tkeys: KeyState\n\t\tsizeMultiplier: number\n\t\tkeepCanvasSize?: boolean\n\t}\n}\n\nexport const state: BaseState = {\n\tdevice: {\n\t\ttpf: 0,\n\t\tsizeMultiplier: 1,\n\t},\n} as BaseState\n;(window as any).state = state\n\nexport function get<\n\tS extends BaseState = BaseState,\n\tK extends keyof S = keyof S\n>(prop: K): S[K] {\n\treturn (state as S)[prop]\n}\n\nexport function set<\n\tS extends BaseState = BaseState,\n\tK extends keyof S = keyof S\n>(key: K, val: S[K], opts?: { reset: any }) {\n\tconst s = state as S\n\tif (s[key]) {\n\t\tconst reset = opts && opts.reset\n\t\tif (reset !== true) {\n\t\t\tval = deepOverride(val, s[key], { ignore: reset })\n\t\t}\n\t}\n\ts[key] = val\n}\n\nexport function getState<S extends BaseState>() {\n\treturn state as S\n}\n\n// === Systems ===\n\ntype ActionHandler<S extends BaseState = BaseState> = (\n\tevent: string,\n\tstate: S,\n) => void\n\nconst systems: { [id: string]: ActionHandler<any> } = {}\n\nexport function addSystem<S extends BaseState = BaseState>(\n\tid: string,\n\ts: ActionHandler<S>,\n) {\n\tsystems[id] = s\n}\n\nexport function dispatch(event: string) {\n\tfor (const k in systems) {\n\t\tsystems[k](event, state)\n\t}\n}\n\nexport const baseEvents = {\n\tFRAME: 'frame',\n\tRESIZE: 'resize',\n}\n\n// === Init ===\n\nlet cancelWindow: () => void\nlet cancelPointer: () => void\nlet cancelKeys: () => void\n\nexport function init(canvas: HTMLCanvasElement, opts?: PainterOptions) {\n\tif (canvas !== currentCanvas) {\n\t\tcurrentCanvas = canvas\n\n\t\tpainter = new Painter(canvas, opts)\n\n\t\tstate.device.canvas = canvas\n\n\t\tcancelWindow && cancelWindow()\n\t\tcancelPointer && cancelPointer()\n\t\tcancelKeys && cancelKeys()\n\n\t\tcancelWindow = windowSize(() =>\n\t\t\tonce(() => {\n\t\t\t\tpainter.sizeMultiplier = state.device.sizeMultiplier\n\t\t\t\tpainter.resize()\n\t\t\t\tdispatch(baseEvents.RESIZE)\n\t\t\t}, 'resize'),\n\t\t)\n\n\t\tcancelPointer = pointer(\n\t\t\t{\n\t\t\t\telement: canvas,\n\t\t\t\tenableRightButton: true,\n\t\t\t\tholdRadius: 7,\n\t\t\t\tholdDelay: 250,\n\t\t\t},\n\t\t\tm => (state.device.pointer = m),\n\t\t)\n\n\t\tcancelKeys = keyboard(k => (state.device.keys = k))\n\t}\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function deepmerge(obj1, obj2) {\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        const result = Object.assign({}, obj1);\n        for (const key in obj2) {\n            const val1 = obj1[key];\n            const val2 = obj2[key];\n            if (typeof val2 !== 'undefined') {\n                result[key] = deepmerge(val1, val2);\n            }\n            else {\n                delete result[key];\n            }\n        }\n        return result;\n    }\n    return obj2;\n}\nexport function deepOverride(obj1, obj2, opt) {\n    const ignore = opt && opt.ignore;\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        for (const key in obj1) {\n            if (obj1.hasOwnProperty(key) &&\n                !(ignore && key in ignore && ignore[key] === true)) {\n                const val1 = obj1[key];\n                const val2 = obj2[key];\n                if (val2 !== undefined) {\n                    obj1[key] = deepOverride(val1, val2, {\n                        ignore: ignore && ignore[key],\n                    });\n                }\n            }\n        }\n        return obj1;\n    }\n    return obj2;\n}\n//# sourceMappingURL=object.js.map","export const and = (p1, p2) => (a, b) => p1(a, b) && p2(a, b);\nexport const not = (p) => (...args) => !p(...args);\nexport const defined = a => a != null;\nexport const notEmpty = a => a && a.length;\nexport const unequal = (a, b) => a !== b;\nexport const equal = (a, b) => a === b;\nexport function equalArray(arr1, arr2) {\n    if (arr1 === arr2) {\n        return true;\n    }\n    if (!arr2 || !arr1) {\n        return false;\n    }\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalObject(obj1, obj2) {\n    if (obj1 === obj2) {\n        return true;\n    }\n    if (!obj2) {\n        return false;\n    }\n    const k1 = Object.keys(obj1);\n    const k2 = Object.keys(obj2);\n    if (!equalArray(k1, k2)) {\n        return false;\n    }\n    for (const key of k1) {\n        if (obj1[key] !== obj2[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=predicates.js.map","export function makeClear(gl, ...clearArray) {\n    return clearArray.reduce((res, item) => res | gl[item.toUpperCase() + '_BUFFER_BIT'], 0);\n}\nexport function setBlendFunc(gl, blendOpts) {\n    gl.blendFunc.apply(gl, blendOpts.map(opt => gl[opt.toUpperCase()]));\n}\n/**\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] optional `window.devicePixelRatio`.\n * @return {boolean} true if the canvas was resized.\n */\nexport function resizeCanvas(canvas, multiplier = 1) {\n    let width = canvas.width;\n    let height = canvas.height;\n    if ('clientWidth' in canvas && 'clientHeight' in canvas) {\n        width = (canvas.clientWidth * multiplier) | 0;\n        height = (canvas.clientHeight * multiplier) | 0;\n    }\n    if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=context.js.map","import { mat4, vec3 } from 'gl-matrix'\nimport { Keys, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { Constructor } from 'tvs-libs/lib/oop/mixins'\nimport { PointerState, Buttons } from 'tvs-libs/dist/events/pointer'\n\nexport class Camera {\n\tposition: vec3 = [0, 0, 0]\n\trotationX = 0\n\trotationY = 0\n\trotationXMat = mat4.create()\n\trotationYMat = mat4.create()\n\tprojectionMat = mat4.create()\n\tviewMat = mat4.create()\n\tneedsUpdateView = true\n\n\tconstructor(props?: Partial<Camera>) {\n\t\tObject.assign(this, props)\n\t\tthis.updateRotationX()\n\t\tthis.updateRotationY()\n\t}\n\n\tupdateRotationX(amount: number = 0) {\n\t\tthis.rotationX += amount\n\t\tmat4.fromXRotation(this.rotationXMat, this.rotationX)\n\t\tthis.needsUpdateView = true\n\t}\n\n\tupdateRotationY(amount: number = 0) {\n\t\tthis.rotationY += amount\n\t\tmat4.fromYRotation(this.rotationYMat, this.rotationY)\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveForward(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[8],\n\t\t\tthis.rotationYMat[9],\n\t\t\tthis.rotationYMat[10],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, -dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveLeft(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[0],\n\t\t\tthis.rotationYMat[1],\n\t\t\tthis.rotationYMat[2],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, -dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveUp(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[4],\n\t\t\tthis.rotationYMat[5],\n\t\t\tthis.rotationYMat[6],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tupdate() {\n\t\tif (this.needsUpdateView) {\n\t\t\tmat4.fromTranslation(this.viewMat, this.position)\n\t\t\tmat4.multiply(this.viewMat, this.viewMat, this.rotationYMat)\n\t\t\tmat4.multiply(this.viewMat, this.viewMat, this.rotationXMat)\n\t\t\tmat4.invert(this.viewMat, this.viewMat)\n\t\t\tthis.needsUpdateView = false\n\t\t}\n\t}\n}\n\nexport class PerspectiveCamera extends Camera {\n\tfovy = Math.PI * 0.6\n\taspect = 1\n\tnear = 0.1\n\tfar = 1000\n\tneedsUpdateProjection = true\n\n\tconstructor(props?: Partial<PerspectiveCamera>) {\n\t\tsuper(props)\n\t\tObject.assign(this, props)\n\t\tthis.update()\n\t}\n\n\tupdate() {\n\t\tsuper.update()\n\n\t\tif (this.needsUpdateProjection) {\n\t\t\tmat4.perspective(\n\t\t\t\tthis.projectionMat,\n\t\t\t\tthis.fovy,\n\t\t\t\tthis.aspect,\n\t\t\t\tthis.near,\n\t\t\t\tthis.far,\n\t\t\t)\n\t\t\tthis.needsUpdateProjection = false\n\t\t}\n\t}\n}\n\nexport function WithKeyNavigation<T extends Constructor<Camera>>(Cam: T) {\n\treturn class extends Cam {\n\t\tupdatePosFromInput(speed: number, keys?: KeyState, pointer?: PointerState) {\n\t\t\tif (!(keys || pointer)) return\n\t\t\tif (\n\t\t\t\tkeys?.[Keys.UP] ||\n\t\t\t\tkeys?.[Keys.W] ||\n\t\t\t\t(pointer?.holding && !pointer.pressed[Buttons.RIGHT])\n\t\t\t) {\n\t\t\t\tthis.moveForward(speed)\n\t\t\t}\n\t\t\tif (\n\t\t\t\tkeys?.[Keys.DOWN] ||\n\t\t\t\tkeys?.[Keys.S] ||\n\t\t\t\tpointer?.pressed[Buttons.RIGHT]\n\t\t\t) {\n\t\t\t\tthis.moveForward(-speed)\n\t\t\t}\n\t\t\tif (keys?.[Keys.LEFT] || keys?.[Keys.A]) {\n\t\t\t\tthis.moveLeft(speed)\n\t\t\t}\n\t\t\tif (keys?.[Keys.RIGHT] || keys?.[Keys.D]) {\n\t\t\t\tthis.moveLeft(-speed)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function WithMouseRotation<T extends Constructor<Camera>>(Cam: T) {\n\treturn class extends Cam {\n\t\t_oldMouse = { x: 0, y: 0 }\n\n\t\tupdateRotFromPointer(speed: number, m: PointerState) {\n\t\t\tif (m.dragging) {\n\t\t\t\tconst deltaX = this._oldMouse.x - m.drag.x\n\t\t\t\tconst deltaY = this._oldMouse.y - m.drag.y\n\t\t\t\tthis._oldMouse.x = m.drag.x\n\t\t\t\tthis._oldMouse.y = m.drag.y\n\t\t\t\tdeltaY && this.updateRotationX(deltaY * speed)\n\t\t\t\tdeltaX && this.updateRotationY(deltaX * speed)\n\t\t\t} else {\n\t\t\t\tthis._oldMouse.x && (this._oldMouse.x = 0)\n\t\t\t\tthis._oldMouse.y && (this._oldMouse.y = 0)\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import { addSystem, set, BaseState, baseEvents } from '../painterState'\nimport {\n\tPerspectiveCamera,\n\tWithKeyNavigation,\n\tWithMouseRotation,\n} from './camera'\n\nexport interface PerspectiveViewportState extends BaseState {\n\tviewPort: ViewPort\n}\n\nexport class ViewPort {\n\tmoveSpeed = 2\n\tlookSpeed = 0.1\n\tcamera = new (WithKeyNavigation(WithMouseRotation(PerspectiveCamera)))({\n\t\tfovy: Math.PI * 0.3,\n\t\tposition: [0, 0, 5],\n\t})\n}\n\naddSystem<PerspectiveViewportState>('viewPort', (e, s) => {\n\tconst v = s.viewPort\n\tswitch (e) {\n\t\tcase baseEvents.FRAME:\n\t\t\tconst tpf = s.device.tpf / 1000\n\t\t\tv.camera.updatePosFromInput(\n\t\t\t\tv.moveSpeed * tpf,\n\t\t\t\ts.device.keys,\n\t\t\t\ts.device.pointer,\n\t\t\t)\n\t\t\tv.camera.updateRotFromPointer(v.lookSpeed * tpf, s.device.pointer)\n\t\t\tv.camera.update()\n\t\t\treturn\n\n\t\tcase baseEvents.RESIZE:\n\t\t\tv.camera.aspect = s.device.canvas.width / s.device.canvas.height\n\t\t\tv.camera.needsUpdateProjection = true\n\t}\n})\n\ninterface InitOpts {\n\tmoveSpeed?: number\n\tlookSpeed?: number\n\tfovy?: number\n\tposition?: [number, number, number]\n\trotationY?: number\n\trotationX?: number\n}\n\nexport function initPerspectiveViewport({\n\tlookSpeed,\n\tmoveSpeed,\n\tposition,\n\trotationY,\n\trotationX,\n\tfovy,\n}: InitOpts = {}) {\n\tconst v = new ViewPort()\n\tif (lookSpeed) {\n\t\tv.lookSpeed = lookSpeed\n\t}\n\tif (moveSpeed) {\n\t\tv.moveSpeed = moveSpeed\n\t}\n\tif (fovy) {\n\t\tv.camera.fovy = fovy\n\t\tv.camera.needsUpdateProjection = true\n\t}\n\tif (position) {\n\t\tv.camera.position = position\n\t\tv.camera.needsUpdateView = true\n\t}\n\tif (rotationX) {\n\t\tv.camera.rotationX = rotationX\n\t\tv.camera.updateRotationX()\n\t}\n\tif (rotationY) {\n\t\tv.camera.rotationY = rotationY\n\t\tv.camera.updateRotationY()\n\t}\n\tset<PerspectiveViewportState>('viewPort', v, {\n\t\treset: { moveSpeed: true, lookSpeed: true },\n\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { randInt, randIntInRange } from '../math/random';\nexport function pickRandom(arr) {\n    return arr[randInt(arr.length)];\n}\nexport function doTimes(fn, count) {\n    for (let i = 0; i < count; i++) {\n        fn(i);\n    }\n}\nexport function times(fn, count, res = []) {\n    for (let i = 0; i < count; i++) {\n        res[i] = fn(i);\n    }\n    return res;\n}\nexport function zip(fn, as, bs, res = []) {\n    const length = Math.min(as.length, bs.length);\n    for (let i = 0; i < length; i++) {\n        res[i] = fn(as[i], bs[i]);\n    }\n    return res;\n}\nexport function flatten(array, res = []) {\n    for (const subarray of array) {\n        const currentLength = res.length;\n        for (let i = 0; i < subarray.length; i++) {\n            res[i + currentLength] = subarray[i];\n        }\n    }\n    return res;\n}\nexport function mapcat(fn, array, res = []) {\n    return flatten(array.map(fn), res);\n}\nexport function shuffle(arr) {\n    const shuffled = [];\n    for (let i = 0; i < arr.length; i++) {\n        const j = randIntInRange(i, arr.length);\n        const temp = shuffled[i] !== undefined ? shuffled[i] : arr[i];\n        shuffled[i] = shuffled[j] !== undefined ? shuffled[j] : arr[j];\n        shuffled[j] = temp;\n    }\n    return shuffled;\n}\nexport function map(fn, coll) {\n    if (Array.isArray(coll)) {\n        return coll.map(fn);\n    }\n    else {\n        const obj = {};\n        for (const key in coll) {\n            obj[key] = fn(coll[key], key);\n        }\n        return obj;\n    }\n}\nexport function each(fn, coll) {\n    for (const key in coll) {\n        fn(coll[key], key);\n    }\n}\n//# sourceMappingURL=sequence.js.map","export function plane(width, height, widthSegments, heightSegments) {\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    const gridX = widthSegments || 1;\n    const gridY = heightSegments || 1;\n    const gridX1 = gridX + 1;\n    const gridY1 = gridY + 1;\n    const segmentWidth = width / gridX;\n    const segmentHeight = height / gridY;\n    const vertices = new Float32Array(gridX1 * gridY1 * 3);\n    const normals = new Float32Array(gridX1 * gridY1 * 3);\n    const uvs = new Float32Array(gridX1 * gridY1 * 2);\n    let iy, ix;\n    let offset = 0;\n    let offset2 = 0;\n    for (iy = 0; iy < gridY1; iy++) {\n        const y = iy * segmentHeight - heightHalf;\n        for (ix = 0; ix < gridX1; ix++) {\n            const x = ix * segmentWidth - widthHalf;\n            vertices[offset] = x;\n            vertices[offset + 1] = -y;\n            normals[offset + 2] = 1;\n            uvs[offset2] = ix / gridX;\n            uvs[offset2 + 1] = 1 - iy / gridY;\n            offset += 3;\n            offset2 += 2;\n        }\n    }\n    offset = 0;\n    const indices = new (vertices.length / 3 > 65535 ? Uint32Array : Uint16Array)(gridX * gridY * 6);\n    for (iy = 0; iy < gridY; iy++) {\n        for (ix = 0; ix < gridX; ix++) {\n            const a = ix + gridX1 * iy;\n            const b = ix + gridX1 * (iy + 1);\n            const c = ix + 1 + gridX1 * (iy + 1);\n            const d = ix + 1 + gridX1 * iy;\n            indices[offset] = a;\n            indices[offset + 1] = b;\n            indices[offset + 2] = d;\n            indices[offset + 3] = b;\n            indices[offset + 4] = c;\n            indices[offset + 5] = d;\n            offset += 6;\n        }\n    }\n    return {\n        attribs: {\n            position: {\n                buffer: vertices,\n            },\n            normal: {\n                buffer: normals,\n            },\n            uv: {\n                buffer: uvs,\n            },\n        },\n        elements: {\n            buffer: indices,\n        },\n        drawType: 'TRIANGLES',\n        itemCount: indices.length,\n    };\n}\n//# sourceMappingURL=plane.js.map","export var Keys;\n(function (Keys) {\n    Keys[Keys[\"CANCEL\"] = 3] = \"CANCEL\";\n    Keys[Keys[\"HELP\"] = 6] = \"HELP\";\n    Keys[Keys[\"BACK_SPACE\"] = 8] = \"BACK_SPACE\";\n    Keys[Keys[\"TAB\"] = 9] = \"TAB\";\n    Keys[Keys[\"CLEAR\"] = 12] = \"CLEAR\";\n    Keys[Keys[\"RETURN\"] = 13] = \"RETURN\";\n    Keys[Keys[\"ENTER\"] = 14] = \"ENTER\";\n    Keys[Keys[\"SHIFT\"] = 16] = \"SHIFT\";\n    Keys[Keys[\"CONTROL\"] = 17] = \"CONTROL\";\n    Keys[Keys[\"ALT\"] = 18] = \"ALT\";\n    Keys[Keys[\"PAUSE\"] = 19] = \"PAUSE\";\n    Keys[Keys[\"CAPS_LOCK\"] = 20] = \"CAPS_LOCK\";\n    Keys[Keys[\"ESCAPE\"] = 27] = \"ESCAPE\";\n    Keys[Keys[\"SPACE\"] = 32] = \"SPACE\";\n    Keys[Keys[\"PAGE_UP\"] = 33] = \"PAGE_UP\";\n    Keys[Keys[\"PAGE_DOWN\"] = 34] = \"PAGE_DOWN\";\n    Keys[Keys[\"END\"] = 35] = \"END\";\n    Keys[Keys[\"HOME\"] = 36] = \"HOME\";\n    Keys[Keys[\"LEFT\"] = 37] = \"LEFT\";\n    Keys[Keys[\"UP\"] = 38] = \"UP\";\n    Keys[Keys[\"RIGHT\"] = 39] = \"RIGHT\";\n    Keys[Keys[\"DOWN\"] = 40] = \"DOWN\";\n    Keys[Keys[\"PRINTSCREEN\"] = 44] = \"PRINTSCREEN\";\n    Keys[Keys[\"INSERT\"] = 45] = \"INSERT\";\n    Keys[Keys[\"DELETE\"] = 46] = \"DELETE\";\n    Keys[Keys[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    Keys[Keys[\"DIGIT_1\"] = 49] = \"DIGIT_1\";\n    Keys[Keys[\"DIGIT_2\"] = 50] = \"DIGIT_2\";\n    Keys[Keys[\"DIGIT_3\"] = 51] = \"DIGIT_3\";\n    Keys[Keys[\"DIGIT_4\"] = 52] = \"DIGIT_4\";\n    Keys[Keys[\"DIGIT_5\"] = 53] = \"DIGIT_5\";\n    Keys[Keys[\"DIGIT_6\"] = 54] = \"DIGIT_6\";\n    Keys[Keys[\"DIGIT_7\"] = 55] = \"DIGIT_7\";\n    Keys[Keys[\"DIGIT_8\"] = 56] = \"DIGIT_8\";\n    Keys[Keys[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    Keys[Keys[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    Keys[Keys[\"EQUALS\"] = 61] = \"EQUALS\";\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    Keys[Keys[\"CONTEXT_MENU\"] = 93] = \"CONTEXT_MENU\";\n    Keys[Keys[\"NUMPAD0\"] = 96] = \"NUMPAD0\";\n    Keys[Keys[\"NUMPAD1\"] = 97] = \"NUMPAD1\";\n    Keys[Keys[\"NUMPAD2\"] = 98] = \"NUMPAD2\";\n    Keys[Keys[\"NUMPAD3\"] = 99] = \"NUMPAD3\";\n    Keys[Keys[\"NUMPAD4\"] = 100] = \"NUMPAD4\";\n    Keys[Keys[\"NUMPAD5\"] = 101] = \"NUMPAD5\";\n    Keys[Keys[\"NUMPAD6\"] = 102] = \"NUMPAD6\";\n    Keys[Keys[\"NUMPAD7\"] = 103] = \"NUMPAD7\";\n    Keys[Keys[\"NUMPAD8\"] = 104] = \"NUMPAD8\";\n    Keys[Keys[\"NUMPAD9\"] = 105] = \"NUMPAD9\";\n    Keys[Keys[\"MULTIPLY\"] = 106] = \"MULTIPLY\";\n    Keys[Keys[\"ADD\"] = 107] = \"ADD\";\n    Keys[Keys[\"SEPARATOR\"] = 108] = \"SEPARATOR\";\n    Keys[Keys[\"SUBTRACT\"] = 109] = \"SUBTRACT\";\n    Keys[Keys[\"DECIMAL\"] = 110] = \"DECIMAL\";\n    Keys[Keys[\"DIVIDE\"] = 111] = \"DIVIDE\";\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    Keys[Keys[\"F13\"] = 124] = \"F13\";\n    Keys[Keys[\"F14\"] = 125] = \"F14\";\n    Keys[Keys[\"F15\"] = 126] = \"F15\";\n    Keys[Keys[\"F16\"] = 127] = \"F16\";\n    Keys[Keys[\"F17\"] = 128] = \"F17\";\n    Keys[Keys[\"F18\"] = 129] = \"F18\";\n    Keys[Keys[\"F19\"] = 130] = \"F19\";\n    Keys[Keys[\"F20\"] = 131] = \"F20\";\n    Keys[Keys[\"F21\"] = 132] = \"F21\";\n    Keys[Keys[\"F22\"] = 133] = \"F22\";\n    Keys[Keys[\"F23\"] = 134] = \"F23\";\n    Keys[Keys[\"F24\"] = 135] = \"F24\";\n    Keys[Keys[\"NUM_LOCK\"] = 144] = \"NUM_LOCK\";\n    Keys[Keys[\"SCROLL_LOCK\"] = 145] = \"SCROLL_LOCK\";\n    Keys[Keys[\"COMMA\"] = 188] = \"COMMA\";\n    Keys[Keys[\"PERIOD\"] = 190] = \"PERIOD\";\n    Keys[Keys[\"SLASH\"] = 191] = \"SLASH\";\n    Keys[Keys[\"BACK_QUOTE\"] = 192] = \"BACK_QUOTE\";\n    Keys[Keys[\"OPEN_BRACKET\"] = 219] = \"OPEN_BRACKET\";\n    Keys[Keys[\"BACK_SLASH\"] = 220] = \"BACK_SLASH\";\n    Keys[Keys[\"CLOSE_BRACKET\"] = 221] = \"CLOSE_BRACKET\";\n    Keys[Keys[\"QUOTE\"] = 222] = \"QUOTE\";\n    Keys[Keys[\"META\"] = 224] = \"META\";\n})(Keys || (Keys = {}));\nexport function keyboard(opts, callback) {\n    const cb = callback || opts;\n    const { element = window } = opts;\n    const pressed = {};\n    function onKeydown(event) {\n        pressed[event.keyCode] = Date.now();\n        cb(pressed);\n    }\n    function onKeyup(event) {\n        delete pressed[event.keyCode];\n        cb(pressed);\n    }\n    element.addEventListener('keyup', onKeyup, false);\n    element.addEventListener('keydown', onKeydown, false);\n    cb(pressed);\n    return function stop() {\n        element.removeEventListener('keyup', onKeyup);\n        element.removeEventListener('keydown', onKeydown);\n    };\n}\nexport function keyboardObserver(opts) {\n    const observer = {\n        Keys,\n        state: { pressed: {} },\n        destroy: () => { },\n    };\n    function callback(pressed) {\n        observer.state.pressed = pressed;\n    }\n    observer.destroy = keyboard(callback, opts);\n    return observer;\n}\n//# sourceMappingURL=keyboard.js.map","export function randInt(int) {\n    return Math.floor(Math.random() * int);\n}\nexport function randIntInRange(from, to) {\n    return randInt(to - from) + from;\n}\nexport function normalRand() {\n    return (Math.random() + Math.random() + Math.random()) / 3;\n}\n//# sourceMappingURL=random.js.map","import {\n\tbaseEvents,\n\tgetPainter,\n\tgetState,\n} from '../../shared-utils/painterState'\nimport { SceneState } from './state'\nimport { PerspectiveViewportState } from '../../shared-utils/vr/perspectiveViewport'\n\nexport interface State extends PerspectiveViewportState {\n\tscene: SceneState\n}\n\nexport const canvas = document.getElementById('canvas') as HTMLCanvasElement\n\nexport const painter = getPainter(canvas)\n\nexport const gl = painter.gl\n\nexport const state = getState<State>()\n\nexport const events = {\n\t...baseEvents,\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { mat4, vec3 } from 'gl-matrix'\nimport { addSystem, set } from '../../shared-utils/painterState'\nimport { events, State } from './context'\n\nexport class SceneState {\n\ttime = 0\n\n\tgroundColor = [0.7, 0.6, 0.9, 1]\n\tgroundTransform = mat4.create()\n\n\trotationSpeed = 0.0002\n\tlightRotation = -Math.PI * 0.8\n\tlightPosition: vec3 = [0, 3.5, 0]\n\tlightColor = [1.0, 1.0, 1.0, 0.0]\n\tlightBackColor = [0.0, 0.0, 0.2, 0.0]\n\tlightTransforms = [mat4.create(), mat4.create()]\n\n\tconstructor() {\n\t\tmat4.rotateX(this.groundTransform, this.groundTransform, Math.PI / 2)\n\t\tmat4.scale(this.groundTransform, this.groundTransform, [10, 10, 10])\n\t\tthis.update(0)\n\t}\n\n\tupdate(tpf: number) {\n\t\tthis.time += tpf\n\t\tthis.lightRotation += this.rotationSpeed * tpf\n\n\t\tthis.lightPosition[1] += Math.sin(this.time / 2000) * 0.05\n\n\t\tmat4.fromTranslation(this.lightTransforms[0], this.lightPosition)\n\t\tmat4.rotateX(\n\t\t\tthis.lightTransforms[0],\n\t\t\tthis.lightTransforms[0],\n\t\t\tthis.lightRotation,\n\t\t)\n\t\tmat4.rotateX(this.lightTransforms[1], this.lightTransforms[0], Math.PI)\n\t}\n}\n\naddSystem<State>('entities', (e, s) => {\n\tswitch (e) {\n\t\tcase events.FRAME:\n\t\t\ts.scene.update(s.device.tpf)\n\t\t\treturn\n\t}\n})\n\nset<State>('scene', new SceneState())\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import {\n\taddSystem,\n\tgetEffect,\n\tgetForm,\n\tgetFrame,\n\tgetLayer,\n\tgetShade,\n\tgetSketch,\n} from '../../shared-utils/painterState'\nimport { TextureData } from 'tvs-painter'\nimport { makeClear } from 'tvs-painter/dist/utils/context'\nimport { plane } from 'tvs-painter/dist/utils/geometry/plane'\nimport { events, gl, painter, state, State } from './context'\nimport frag from './shaders/geo-frag.glsl'\nimport vert from './shaders/geo-vert.glsl'\nimport lightFrag from './shaders/light-frag.glsl'\nimport { initPerspectiveViewport } from '../../shared-utils/vr/perspectiveViewport'\n\ninitPerspectiveViewport({\n\tfovy: Math.PI * 0.3,\n\tposition: [11, 2, -9],\n\trotationY: 2,\n})\n\n// Forms\n\nconst geometry = plane(10, 10, 0, 0)\nconst planeForm = getForm(painter, 'plane').update(geometry)\n\n// Shades\n\nconst geoShade = getShade(painter, 'geo').update({\n\tfrag,\n\tvert,\n})\n\n// Textures\n\nconst texture = getFrame(painter, 'tex').update({ texture: {} })\n\nconst img = new Image()\nimg.onload = () => {\n\ttexture.update({\n\t\ttexture: {\n\t\t\tasset: img,\n\t\t\tminFilter: 'LINEAR_MIPMAP_LINEAR',\n\t\t\tmagFilter: 'LINEAR',\n\t\t},\n\t})\n}\nimg.src = 'tree.jpg'\n\n// Sketches\n\nconst groundSketch = getSketch(painter, 'ground').update({\n\tform: planeForm,\n\tshade: geoShade,\n\tuniforms: {\n\t\ttransform: () => state.scene.groundTransform,\n\t\tcolor: () => state.scene.groundColor,\n\t},\n})\n\nconst lightSketch = getSketch(painter, 'light').update({\n\tform: planeForm,\n\tshade: geoShade,\n\tuniforms: [\n\t\t{\n\t\t\ttransform: () => state.scene.lightTransforms[0],\n\t\t\tcolor: () => state.scene.lightColor,\n\t\t},\n\t\t{\n\t\t\ttransform: () => state.scene.lightTransforms[1],\n\t\t\tcolor: () => state.scene.lightBackColor,\n\t\t},\n\t],\n\tdrawSettings: {\n\t\tenable: [gl.CULL_FACE],\n\t},\n})\n\n// Layers\n\nconst sceneLayer = getLayer(painter, 'scene').update({\n\tsketches: [lightSketch, groundSketch],\n\tuniforms: {\n\t\tview: () => state.viewPort.camera.viewMat,\n\t\tprojection: () => state.viewPort.camera.projectionMat,\n\t},\n\tdrawSettings: {\n\t\tenable: [gl.DEPTH_TEST],\n\t\tclearBits: makeClear(gl, 'color', 'depth'),\n\t},\n})\n\nconst bufferSpec: TextureData = { type: 'FLOAT' }\nexport const scene = getFrame(painter, 'scene').update({\n\tlayers: sceneLayer,\n\tbufferStructure: [bufferSpec, bufferSpec, bufferSpec, bufferSpec],\n})\n\nconst lightLayer = getEffect(painter, 'light').update({\n\tfrag: lightFrag,\n\tuniforms: {\n\t\teyePosition: () => state.viewPort.camera.position,\n\t\tlightMat: () => state.scene.lightTransforms[0],\n\t\tview: () => state.viewPort.camera.viewMat,\n\t\ttex: () => texture.image(),\n\t\tpositions: scene.image(0),\n\t\tnormals: scene.image(1),\n\t\tuvs: scene.image(2),\n\t\tcolors: scene.image(3),\n\t},\n\tdrawSettings: {\n\t\tenable: [gl.BLEND],\n\t\tclearBits: makeClear(gl, 'color'),\n\t},\n})\n\nexport const light = getFrame(painter, 'light').update({\n\tlayers: lightLayer,\n})\n\naddSystem<State>('renderer', e => {\n\tif (e === events.RESIZE) {\n\t\tscene.update()\n\t}\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export default \"#version 300 es\\nprecision highp float;\\n#define GLSLIFY 1\\n\\nuniform vec4 color;\\n\\nin vec4 vPosition;\\nin vec4 vNormal;\\nin vec4 vUv;\\n\\nlayout(location=0) out vec4 fragPosition;\\nlayout(location=1) out vec4 fragNormal;\\nlayout(location=2) out vec4 fragUV;\\nlayout(location=3) out vec4 fragColor;\\n\\nvoid main() {\\n\\tfragPosition = vPosition;\\n\\tfragNormal = vNormal;\\n\\tfragUV = vUv;\\n\\tfragColor = color;\\n}\\n\";","export default \"#version 300 es\\n#define GLSLIFY 1\\nin vec3 position;\\nin vec3 normal;\\nin vec2 uv;\\n\\nuniform mat4 transform;\\nuniform mat4 projection;\\nuniform mat4 view;\\n\\nout vec4 vPosition;\\nout vec4 vNormal;\\nout vec4 vUv;\\n\\nvoid main() {\\n\\tvPosition = transform * vec4(position, 1.0);\\n\\tvNormal = transform * vec4(normal, 0.0);\\n\\tvUv = vec4(uv, 0.0, 0.0);\\n\\tgl_Position = projection * view * vPosition;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\nvec4 diffuseAreaLight(sampler2D tex, mat4 lightMat, vec3 V, vec3 N, vec2 areaSize) {\\n\\tfloat width = areaSize.x / 2.0;\\n\\tfloat height = areaSize.y / 2.0;\\n\\n\\tvec3 right = normalize(lightMat[0].xyz);\\n\\tvec3 up = normalize(lightMat[1].xyz);\\n\\tvec3 normal = normalize(lightMat[2].xyz);\\n\\tvec3 pos = lightMat[3].xyz;\\n\\n\\t/*project onto plane and calculate direction from center to the projection*/\\n\\tfloat dis = dot(normal, V - pos);\\n\\tvec3 projection = V - dis * normal;\\n\\tvec3 dir = projection - pos;\\n\\n\\t/*calculate distance from area*/\\n\\tvec2 diagonal = vec2(dot(dir, right), dot(dir, up));\\n\\tvec2 nearest2D = vec2(clamp(diagonal.x, -width, width), clamp(diagonal.y, -height, height));\\n\\tvec3 nearestPointInside = pos + (right * nearest2D.x + up * nearest2D.y);\\n\\n\\tvec3 L = normalize(nearestPointInside - V);\\n\\n\\tfloat nDotL = dot(-normal, L);\\n\\n\\tfloat d = distance(V, nearestPointInside); //real distance to area rectangle\\n\\n\\tvec4 diff = vec4(0.0);\\n\\n\\tif (nDotL > 0.0) {\\n\\t\\tfloat lod = pow(d, 0.03) * 6.0;\\n\\n\\t\\tvec2 co = ((diagonal.xy / (d + 1.0)) + vec2(width, height)) / areaSize;\\n\\t\\t//co.x = 1.0 - co.x;\\n\\n\\t\\tvec4 t00 = texture2D(tex, co, lod);\\n\\t\\tvec4 t01 = texture2D(tex, co, lod + 1.0);\\n\\n\\t\\tdiff = mix(t00, t01, fract(lod + 1.5));\\n\\n\\t\\tfloat NDotL = clamp(dot(-N, L), 0.0, 1.0);\\n\\t\\tnDotL *= NDotL * 0.5 + 0.5; //distribute over hemisphere, looks better. Should be dependant of area size.\\n\\n\\t\\tfloat attenuation = 1.0 / (1.0 + d);\\n\\n\\t\\tdiff *= nDotL * attenuation;\\n\\t}\\n\\n\\tdiff.a = 1.0;\\n\\treturn diff;\\n}\\n\\nfloat specularAreaLight(mat4 lightMat, vec3 V, vec3 N, vec3 eyePosition, vec2 areaSize, float gloss) {\\n\\n\\tvec3 pos = lightMat[3].xyz;\\n\\tvec3 normal = normalize(lightMat[2].xyz);\\n\\n\\tvec3 direction = eyePosition - V;\\n\\n\\tvec3 R = reflect(normalize(direction), -N);\\n\\tfloat rDotN = dot(normal, R);\\n\\n\\tif (rDotN > 0.0) {\\n\\t\\tvec3 E = V + R * (dot(normal, pos - V) / rDotN); // line-plane intersection\\n\\t\\tvec3 dir = E - pos;\\n\\n\\t\\tfloat width = areaSize.x / 2.0;\\n\\t\\tfloat height = areaSize.y / 2.0;\\n\\n\\t\\tvec3 right = normalize(lightMat[0].xyz);\\n\\t\\tvec3 up = normalize(lightMat[1].xyz);\\n\\n\\t\\t/*calculate distance from area*/\\n\\t\\tvec2 diagonal = vec2(dot(dir, right), dot(dir, up));\\n\\t\\tvec2 nearest2D = vec2(clamp(diagonal.x, -width, width), clamp(diagonal.y, -height, height));\\n\\t\\tvec3 nearestPointInside = pos + (right * nearest2D.x + up * nearest2D.y);\\n\\n\\t\\tfloat dist = distance(V, nearestPointInside); //real distance to area rectangle\\n\\n\\t\\tfloat rDotL = max(0.0, dot(R, normalize(V - nearestPointInside)));\\n\\n\\t\\t// reduce glow of reflected points that are fare outside of the light area\\n\\t\\tfloat falloff = min(1.0, length(vec2(width, height)) / length(diagonal));\\n\\n\\t\\t// remove artefact when intersection point is close to the vertex\\n\\t\\tfloat closeness = clamp(distance(E, V) / dist, 0.0, 1.0);\\n\\t\\t//float closeness = 1.0;\\n\\n\\t\\tfloat attenuation = 1.0 / (pow(dist, 0.5));\\n\\n\\t\\treturn pow(max(rDotL, 0.0), gloss) * falloff * closeness * attenuation;\\n\\t} else {\\n\\t\\treturn 0.0;\\n\\t}\\n}\\n\\nuniform sampler2D colors;\\nuniform sampler2D positions;\\nuniform sampler2D normals;\\nuniform sampler2D uvs;\\nuniform sampler2D tex;\\n\\nuniform vec3 eyePosition;\\nuniform mat4 lightMat;\\nuniform mat4 view;\\n\\nvarying vec2 coords;\\n\\nconst vec2 lightSize = vec2(10.0);\\n\\nvoid main() {\\n\\n\\tvec3 position = texture2D(positions, coords).xyz;\\n\\tvec3 normal = normalize(texture2D(normals, coords).xyz);\\n\\tvec4 uv = texture2D(uvs, coords);\\n\\tvec4 color = texture2D(colors, coords);\\n\\n\\tif (color.a < 1.0) {\\n\\t\\tvec4 texColor = texture2D(tex, uv.xy);\\n\\t\\tgl_FragColor = vec4(texColor.rgb * color.rgb, 1.0);\\n\\t} else {\\n\\t\\t// paint ground grid\\n\\t\\tfloat vertical = fract(uv.x * 100.0);\\n\\t\\tfloat horizontal = fract(uv.y * 100.0);\\n\\t\\tif (vertical >= 0.95 || horizontal >= 0.95) gl_FragColor.b += 0.3;\\n\\n\\t\\t// light calculation\\n\\t\\tvec4 diffuseColor = diffuseAreaLight(tex, lightMat, position, normal, lightSize);\\n\\t\\tdiffuseColor = vec4(\\n\\t\\t\\tpow(diffuseColor.r, 0.7),\\n\\t\\t\\tpow(diffuseColor.g, 0.7),\\n\\t\\t\\tpow(diffuseColor.b, 0.7),\\n\\t\\t\\t1.0\\n\\t\\t);\\n\\t\\tdiffuseColor *= color * 4.0;\\n\\n\\t\\tfloat specularPower = specularAreaLight(lightMat, position, normal, eyePosition, lightSize, 100.0);\\n\\n\\t\\tvec3 specularColor = vec3(0.9) * specularPower * color.xyz;\\n\\t\\t// gl_FragColor += vec4(specularColor / 2.0, 1.0);\\n\\t\\tgl_FragColor += diffuseColor / 1.5;\\n\\t}\\n}\\n\";","import './state'\n\nimport { dispatch, get } from '../../shared-utils/painterState'\nimport { repeat } from '../../shared-utils/scheduler'\nimport { events, painter } from './context'\nimport { light, scene } from './renderer'\n\nrepeat(tpf => {\n\tget('device').tpf = tpf\n\tdispatch(events.FRAME)\n\tpainter.compose(scene, light).display(light)\n}, 'loop')\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","// onNextTick\n// schedule actions on next animation frame\n\ntype Callback = (n: number) => void\n\nlet updateOnce: { [id: string]: Callback } | null = null\nconst updateRepeat: { [id: string]: Callback } = {}\n\nlet willUpdate = false\n\nlet uidCounter = 0\n\nlet oldTime = 0\n\nfunction processUpdates(time: number) {\n\tconst tpf = oldTime ? time - oldTime : oldTime\n\toldTime = time\n\n\tif (updateOnce) {\n\t\tfor (const id in updateOnce) {\n\t\t\tupdateOnce[id](tpf)\n\t\t}\n\t\tupdateOnce = null\n\t}\n\n\tlet updates = 0\n\tfor (const id in updateRepeat) {\n\t\tupdates++\n\t\tupdateRepeat[id](tpf)\n\t}\n\n\tif (!updates) {\n\t\twillUpdate = false\n\t\toldTime = 0\n\t} else {\n\t\trequestAnimationFrame(processUpdates)\n\t}\n}\n\nexport function once(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateOnce = updateOnce || {}\n\tupdateOnce[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n}\n\nexport function repeat(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateRepeat[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n\n\treturn id\n}\n\nexport function stop(id: Callback | string | number) {\n\tif (typeof id === 'function') {\n\t\tid = id.name\n\t}\n\tdelete updateRepeat[id]\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export const Buttons = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n};\nexport function pointer(opts, callback) {\n    const cb = callback || opts;\n    const { element = document, enableRightButton, holdDelay = 400, holdRadius = 5, } = opts;\n    const state = {\n        pressed: {},\n        drag: { x: 0, y: 0, dX: 0, dY: 0, xMax: 0, yMax: 0 },\n        dragging: false,\n        holding: false,\n    };\n    let x = 0, y = 0, oX = 0, oY = 0, timeout = null;\n    function onPointerDown(e) {\n        if (e.isPrimary) {\n            state.pressed[e.button] = e;\n            x = oX = e.clientX;\n            y = oY = e.clientY;\n            state.dragging = true;\n            timeout != null && clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                if (state.drag.xMax < holdRadius && state.drag.yMax < holdRadius) {\n                    state.holding = true;\n                    cb(state);\n                }\n            }, holdDelay);\n        }\n        else {\n            state.pressed[Buttons.RIGHT] = e;\n        }\n        cb(state);\n    }\n    function onPointerUp(_e) {\n        state.pressed = {};\n        delete state.drag.event;\n        state.drag.x = 0;\n        state.drag.y = 0;\n        state.drag.dX = 0;\n        state.drag.dY = 0;\n        state.drag.xMax = 0;\n        state.drag.yMax = 0;\n        state.dragging = false;\n        state.holding = false;\n        timeout != null && clearTimeout(timeout);\n        timeout = null;\n        cb(state);\n    }\n    function onPointerMove(e) {\n        if (state.dragging) {\n            state.drag.event = e;\n            state.drag.x = x - e.clientX;\n            state.drag.y = y - e.clientY;\n            state.drag.dX = oX - e.clientX;\n            state.drag.dY = oY - e.clientY;\n            state.drag.xMax = Math.max(Math.abs(state.drag.x), state.drag.xMax);\n            state.drag.yMax = Math.max(Math.abs(state.drag.y), state.drag.yMax);\n            oX = e.clientX;\n            oY = e.clientY;\n            cb(state);\n        }\n    }\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    element.addEventListener('pointerdown', onPointerDown);\n    document.addEventListener('pointermove', onPointerMove);\n    document.addEventListener('pointerup', onPointerUp);\n    document.addEventListener('pointerleave', onPointerUp);\n    document.addEventListener('pointercancel', onPointerUp);\n    if (enableRightButton) {\n        element.addEventListener('contextmenu', preventDefault);\n    }\n    cb(state);\n    return function destroy() {\n        element.removeEventListener('pointerdown', onPointerDown);\n        document.removeEventListener('pointermove', onPointerMove);\n        document.removeEventListener('pointerup', onPointerUp);\n        document.removeEventListener('pointerleave', onPointerUp);\n        document.removeEventListener('pointercancel', onPointerUp);\n        if (enableRightButton) {\n            element.removeEventListener('contextmenu', preventDefault);\n        }\n    };\n}\nexport function pointerObserver(opts = {}) {\n    const observer = {\n        Buttons,\n        state: {},\n        destroy: () => { },\n    };\n    function callback(state) {\n        observer.state = state;\n    }\n    observer.destroy = pointer(opts, callback);\n    return observer;\n}\n//# sourceMappingURL=pointer.js.map"],"sourceRoot":""}