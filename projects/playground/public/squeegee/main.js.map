{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./shared-utils/scheduler.ts","webpack:///../libs/dist/events/keyboard.js","webpack:///../libs/dist/utils/object.js","webpack:///../painter/dist/contants.js","webpack:///../painter/dist/asset-lib.js","webpack:///../painter/dist/render-utils.js","webpack:///../painter/dist/form.js","webpack:///../libs/dist/utils/sequence.js","webpack:///../painter/dist/texture.js","webpack:///../painter/dist/render-target.js","webpack:///../libs/dist/utils/predicates.js","webpack:///../painter/dist/frame.js","webpack:///../painter/dist/layer.js","webpack:///../painter/dist/shade.js","webpack:///../painter/dist/sketch.js","webpack:///../painter/dist/painter.js","webpack:///../painter/dist/utils/context.js","webpack:///../libs/dist/events/pointer.js","webpack:///./shared-utils/painterState.ts","webpack:///./squeegee/context.ts","webpack:///../libs/dist/events/dom.js","webpack:///../libs/dist/math/vectors.js","webpack:///../node_modules/gl-matrix/esm/common.js","webpack:///../node_modules/gl-matrix/esm/vec3.js","webpack:///../node_modules/gl-matrix/esm/quat.js","webpack:///../node_modules/gl-matrix/esm/vec4.js","webpack:///../node_modules/gl-matrix/esm/mat3.js","webpack:///../libs/dist/fp/core.js","webpack:///./shared-utils/geometry/lines.ts","webpack:///./squeegee/state.ts","webpack:///../node_modules/@thi.ng/checks/is-boolean.js","webpack:///../node_modules/@thi.ng/checks/is-number.js","webpack:///../node_modules/@thi.ng/errors/deferror.js","webpack:///../node_modules/@thi.ng/errors/unsupported.js","webpack:///../node_modules/@thi.ng/checks/is-plain-object.js","webpack:///../node_modules/@thi.ng/shader-ast/ast/checks.js","webpack:///../node_modules/@thi.ng/shader-ast/ast/lit.js","webpack:///../node_modules/@thi.ng/shader-ast/ast/item.js","webpack:///../node_modules/@thi.ng/api/api/logger.js","webpack:///../node_modules/@thi.ng/api/logger.js","webpack:///../node_modules/@thi.ng/defmulti/constants.js","webpack:///../node_modules/@thi.ng/defmulti/defmulti.js","webpack:///../node_modules/@thi.ng/shader-ast/target.js","webpack:///../node_modules/@thi.ng/checks/is-string.js","webpack:///../node_modules/@thi.ng/errors/illegal-arguments.js","webpack:///../node_modules/@thi.ng/shader-ast/ast/idgen.js","webpack:///../node_modules/@thi.ng/shader-ast/ast/sym.js","webpack:///../node_modules/@thi.ng/shader-ast-glsl/api.js","webpack:///../node_modules/@thi.ng/shader-ast-glsl/target.js","webpack:///../node_modules/@thi.ng/checks/is-array.js","webpack:///../node_modules/@thi.ng/associative/node_modules/tslib/tslib.es6.js","webpack:///../node_modules/@thi.ng/api/constants.js","webpack:///../node_modules/@thi.ng/equiv/index.js","webpack:///../node_modules/@thi.ng/associative/dissoc.js","webpack:///../node_modules/@thi.ng/checks/is-iterable.js","webpack:///../node_modules/@thi.ng/transducers/func/compr.js","webpack:///../node_modules/@thi.ng/checks/implements-function.js","webpack:///../node_modules/@thi.ng/transducers/reduced.js","webpack:///../node_modules/@thi.ng/transducers/iterator.js","webpack:///../node_modules/@thi.ng/transducers/internal/ensure.js","webpack:///../node_modules/@thi.ng/transducers/xform/map.js","webpack:///../node_modules/@thi.ng/associative/internal/inspect.js","webpack:///../node_modules/@thi.ng/checks/is-node.js","webpack:///../node_modules/@thi.ng/api/mixin.js","webpack:///../node_modules/@thi.ng/associative/into.js","webpack:///../node_modules/@thi.ng/checks/is-map.js","webpack:///../node_modules/@thi.ng/associative/array-set.js","webpack:///../node_modules/@thi.ng/associative/internal/equiv.js","webpack:///../node_modules/@thi.ng/associative/equiv-map.js","webpack:///../node_modules/@thi.ng/associative/utils.js","webpack:///../node_modules/@thi.ng/associative/union.js","webpack:///../node_modules/@thi.ng/transducers/xform/filter.js","webpack:///../node_modules/@thi.ng/checks/is-arraylike.js","webpack:///../node_modules/@thi.ng/errors/illegal-arity.js","webpack:///../node_modules/@thi.ng/transducers/reduce.js","webpack:///../node_modules/@thi.ng/dgraph/index.js","webpack:///../node_modules/@thi.ng/shader-ast/ast/scope.js","webpack:///../node_modules/@thi.ng/api/assert.js","webpack:///../node_modules/@thi.ng/shader-ast/ast/function.js","webpack:///../node_modules/@thi.ng/shader-ast/ast/assign.js","webpack:///../node_modules/@thi.ng/shader-ast/ast/ops.js","webpack:///../node_modules/@thi.ng/shader-ast/builtin/texture.js","webpack:///../node_modules/@thi.ng/shader-ast/ast/swizzle.js","webpack:///../node_modules/@thi.ng/shader-ast/builtin/math.js","webpack:///../node_modules/@thi.ng/shader-ast/ast/controlflow.js","webpack:///../node_modules/@thi.ng/shader-ast-stdlib/math/fit.js","webpack:///./squeegee/shaders.ts","webpack:///./shared-utils/shaders/ast.ts","webpack:///../libs/dist/math/core.js","webpack:///../libs/dist/math/noise.js","webpack:///./shared-utils/texture-helpers.ts","webpack:///../node_modules/gl-matrix/esm/mat4.js","webpack:///./shared-utils/vr/camera.ts","webpack:///./shared-utils/vr/perspectiveViewport.ts","webpack:///./squeegee/renderer.ts","webpack:///./squeegee/index.ts"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","updateOnce","updateRepeat","willUpdate","uidCounter","oldTime","processUpdates","time","tpf","id","updates","requestAnimationFrame","Keys","deepOverride","obj1","obj2","opt","ignore","Array","isArray","key","hasOwnProperty","val1","val2","undefined","defaultTextureSettings","defaultForms","renderQuad","attribs","buffer","Float32Array","storeType","drawType","itemCount","defaultShaders","vert","frag","getBindPointForSamplerType","type","typeMap","bindPoint","intSetter","gl","location","v","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","texture","activeTexture","TEXTURE0","bindTexture","_texture","samplerArraySetter","size","units","Int32Array","i","textures","index","Type","setter","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Uint32Array","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","floatAttribSetter","typeInfo","b","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","itemSize","normalize","stride","offset","intAttribSetter","vertexAttribIPointer","matAttribSetter","defaultSize","count","numComponents","rowOffset","attrTypeMap","applyDrawSettings","settings","enable","setting","disable","blendFunc","apply","depthFunc","cullFace","frontFace","lineWidth","colorMask","depthMask","clearColor","clearDepth","clearBits","clear","revertDrawSettings","Int8Array","Uint8Array","Int16Array","Uint16Array","formCounter","Form","_painter","this","data","_drawType","_itemCount","_attribs","attribData","createBuffer","bufferData","elements","_elements","glType","typedArray","Uint8ClampedArray","Error","getGLTypeForTypedArray","ELEMENT_ARRAY_BUFFER","deleteBuffer","times","fn","res","concat","arr","arrs","flatten","array","subarray","currentLength","length","flatMap","coll","map","reverse","textureCount","Texture","_data","createTexture","TEXTURE_2D","wrap","wrapS","wrapT","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","magFilter","TEXTURE_MAG_FILTER","minFilter","TEXTURE_MIN_FILTER","asset","texImage2D","RGBA","UNSIGNED_BYTE","isWebGL2","RGBA32F","width","height","flipY","pixelStorei","UNPACK_FLIP_Y_WEBGL","indexOf","generateMipmap","Object","assign","deleteTexture","targetCount","RenderTarget","antialias","frameBuffer","antiAliasFrameBuffer","antiAliasRenderBuffer","depthBuffer","bufferStructure","_a","every","buf","k1","keys","arr1","arr2","equalObject","createFramebuffer","createRenderbuffer","some","t","getExtension","texCount","bufferAttachments","COLOR_ATTACHMENT0","bindFramebuffer","FRAMEBUFFER","glx","attachment","COLOR_ATTACHMENT0_WEBGL","drawBuffers","drawBuffersWEBGL","gl2","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","Math","min","getParameter","MAX_SAMPLES","RGBA8","framebufferRenderbuffer","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","renderbufferStorage","update","framebufferTexture2D","err","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","console","error","deleteFramebuffer","deleteRenderbuffer","frameCount","Frame","layers","_targets","_textures","_b","_c","_d","selfReferencing","layerCount","reduce","layer","_uniforms","canvas","_destroyTargets","targetData","forEach","tex","destroy","tmp","Layer","sketches","sketch","shade","uniforms","shadeCounter","Shade","fragSource","trim","vertSource","program","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","_program","_frag","_vert","attachShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","addLineNumbers","linkProgram","getProgramParameter","LINK_STATUS","lastError","getProgramInfoLog","_uniformSetters","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","name","substr","toString","uniformSetters","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","createUniformSetters","_attributeSetters","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","createAttributeSetters","deleteProgram","deleteShader","src","split","line","join","sketchCounter","Sketch","drawSettings","_drawSettings","form","Painter","opts","maxBufferSamples","useWebGL1","getContext","sizeMultiplier","resize","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","getDefaultLayerSettings","_renderQuad","createForm","_staticSketch","createFlatSketch","multiplier","rect","getBoundingClientRect","resizeCanvas","s","createSketch","createShade","l","createLayer","globalUniforms","viewport","draw","frames","frame","renderFrame","idx","source","image","sources","useProgram","shadeForm","shadeUniforms","drawInstance","drawElements","drawArrays","value","renderLayer","target","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","clearBufferfv","COLOR","blitFramebuffer","COLOR_BUFFER_BIT","LINEAR","layerPasses","j","_swapTargets","Buttons","currentCanvas","painter","getForm","shades","getShade","getSketch","getLayer","getFrame","createFrame","effects","getEffect","createEffect","state","device","window","eventHandlers","baseEvents","FRAME","RESIZE","cancelWindow","cancelPointer","cancelKeys","Q","getPainterContext","callback","innerWidth","innerHeight","addEventListener","removeEventListener","windowSize","once","emit","cb","element","document","enableRightButton","holdDelay","holdRadius","pressed","drag","x","y","dX","dY","xMax","yMax","dragging","holding","oX","oY","timeout","onPointerDown","e","isPrimary","button","clientX","clientY","clearTimeout","setTimeout","onPointerUp","_e","event","onPointerMove","max","abs","preventDefault","pointer","m","onKeydown","keyCode","Date","now","onKeyup","keyboard","k","get","prop","set","val","reset","listen","getElementById","events","add","vec1","vec2","mul","scalar","vec","ARRAY_TYPE","out","z","a","len","sqrt","transformQuat","q","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","random","PI","hypot","arguments","setAxisAngle","axis","rad","sin","cos","ax","ay","az","aw","bx","by","bz","bw","partial","args","bind","lineSegment","vertex","normal","direction","rotQuatNormal","rotQuatDirection","rotQuatTangent","rotQuat","vec3Temp","lineSegmentToPoints","thickness","segment","tangent","v1","v2","cross","isStraight","nextStep","currentTime","duration","segmentLength","turn","step","part","newSegment","directionAngle","normalAngle","tangentAngle","newNormal","newDirection","newVertex","walkLine","squeegee","isBoolean","defError","prefix","suffix","msg","super","UnsupportedOperationError","unsupported","OBJP","getPrototypeOf","RE_VEC","RE_MAT","isVec","test","isMat","lit","info","tag","bool","uint","ctor","wrapFloat","wrapInt","wrapUint","wrapBool","FALSE","FLOAT0","FLOAT1","FLOAT2","FLOAT05","INT0","UINT0","$gvec","SQRT2","init","xs","slice","$vec","$info","$gvec2","$gvec4","LogLevel","NULL_LOGGER","freeze","level","DEFAULT","Symbol","LOGGER","findImpl","impls","rels","parents","p","impl","findAncestors","acc","push","defTarget","f","ancestors","g","warn","addAll","_impls","ok","remove","callable","isa","parent","Set","dependencies","defmulti","isString","IllegalArgumentError","illegalArgs","symID","sym","input","uniform","GLSLVersion","RE_SEMI","targetGLSL","_opts","version","GLES_300","versionPragma","prelude","isVS","$list","body","sep","$fn","$decl","arg","in","uni","loc","smooth","const","prec","replace","itemType","num","array_init","r","ctrl","call","call_i","decl","scope","for","iter","if","String","trunc","op1","post","op","op2","ret","global","swizzle","ternary","while","gl_FragColor","gl_FragCoord","gl_FragData","gl_FrontFacing","gl_PointCoord","gl_PointSize","gl_Position","__decorate","decorators","desc","d","c","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","create","SEMAPHORE","NO_OP","FN","STR","equiv","proto","equivArrayLike","equivSet","Map","equivMap","getTime","RegExp","equivObject","_equiv","sort","dissoc","delete","iterator","compR","rfn","Reduced","deref","iterator1","xform","_","inspect","process","versions","node","inspectSet","inspectMap","inspectable","behaviour","sharedBehaviour","instanceKeys","ownKeys","sharedKeys","typeTag","_mixin","clazz","existing","prototype","configurable","writable","log","enumerable","propertyIsEnumerable","hasInstance","mixin","depth","toStringTag","childOpts","stylize","into","dest","ArraySet_1","__private","WeakMap","__vals","inst","vals","ArraySet","species","$this","has","notFound","eq","splice","o","thisArg","EquivMap_1","__map","EquivMap","pairs","entries","copy","pair","values","union","filter","pred","IllegalArityError","complete","n","illegalArity","parseArgs","$reduce","reduceArray","reduceIterable","DGraph","edges","dependents","addDependency","addNode","dep","depends","deps","transitiveDependencies","transitiveDependents","immediateDependents","immediateDependencies","isLeaf","nodes","isRoot","transitive","sorted","queue","leaves","first","removeEdge","removeNode","scopedChildren","allChildren","isTerm","walk","visit","children","tree","pre","buildCallGraph","graph","syms","env","UMBRELLA_ASSERTS","defArg","defn","_args","_body","returns","$","funcall","defMain","OP_INFO","mave","vema","vefl","mafl","flve","flma","ivin","iniv","uvui","uiuv","_l","_r","rtype","nl","nr","cmp","neq","texRetType","sampler","shadow","$call","bias","$x","$y","$w","primOp1","primOp2","primOp3","fit0111","fs","GLES_100","getFragmentGenerator","vs","vNormal","vUv","aPosition","aUV","projectionMat","viewMat","lineVert","uNoiseTex","noise","noiseVal","lineFrag","uv","p1","perm","permMod12","grad4","noise4d","w","n0","n1","n2","n3","n4","F4","floor","G4","x0","y0","z0","w0","i1","j1","l1","i2","j2","k2","l2","i3","j3","k3","l3","rankx","ranky","rankz","rankw","x1","y1","z1","w1","x2","y2","z2","x3","y3","z3","w3","x4","y4","z4","w4","ii","jj","kk","ll","t0","gi0","t1","gi1","t2","gi2","t3","gi3","t4","gi4","tileNoise","dx","dy","nx","ny","nz","nw","to8Bit","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","PerspectiveCamera","props","position","rotationX","rotationY","rotationXMat","rotationYMat","needsUpdateView","updateRotationX","updateRotationY","amount","dist","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","fovy","aspect","near","far","needsUpdateProjection","nf","tan","Infinity","ViewPort","Cam","moveSpeed","lookSpeed","camera","speed","UP","W","moveForward","DOWN","S","LEFT","A","moveLeft","RIGHT","D","_oldMouse","deltaX","deltaY","ctx","viewPort","updatePosFromInput","dragInfo","updateRotFromPointer","initPerspectiveViewport","noiseTexFrame","startX","startY","noise1","noise2","noise3","noise4","i4","getNoiseTextureData","noiseTex","scene","view","projection","BLEND","withBackFace","withNormals","withUVs","fn1","fn2","item","lineToTriangleStripGeometry","devicePixelRatio","repeat","compose","display"],"mappings":"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GAAIA,IAAW,GAAInB,GAAGW,IAAM,GAAM,KAChD,KAKF,IAEF,GAAOL,GAAGnL,aAAc,GAGvB,EAAG,EAAG,EAAE4K,GAAGY,OD3DQ,IAAC7a,EH7BLsC,EDcKuX,EAAS0B,QOfAxnB,KAAKsQ,GChBtC,MAAMmX,GAAK,CACP,IACA,IACA,IACA,GACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,GACA,IACA,IACA,EACA,IACA,IACA,GACA,IACA,GACA,GACA,IACA,EACA,GACA,GACA,IACA,GACA,GACA,GACA,IACA,EACA,IACA,IACA,IACA,IACA,GACA,EACA,GACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,EACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,GACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,EACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,KAEJ,IAAK,IAAIjyB,EAAI,EAAGA,GAAK,IAAKA,IACtBiyB,GAAG,IAAMjyB,GAAKiyB,GAAGjyB,GAoDHwK,KAAKuP,KAAK,GAAyBvP,KAAKuP,KAAK,GAA/D,MAA0G,kHAC1G,IAAK,IAAI/Z,EAAI,EAAGA,EAAI,IAAKA,IACrBshB,GAAEthB,GAAqB,IAAhBwK,KAAKqQ,SAEhB,IAAK,IAAI7a,EAAI,EAAGA,EAAI,IAAKA,IACrBkyB,GAAKlyB,GAAKshB,GAAM,IAAJthB,GACZmyB,GAAUnyB,GAAKkyB,GAAKlyB,GAAK,GAEf,IAAInC,aAAa,CAC3B,EACA,EACA,GACC,EACD,EACA,EACA,GACC,EACD,GACC,GACA,EACD,EACA,EACA,EACA,GACC,EACD,EACA,EACA,EACA,GACC,GACA,EACD,GACC,EACD,EACA,EACA,EACA,GACC,EACD,EACA,EACA,GACC,EACD,GACC,GACA,IApCL,MAsCMu0B,GAAQ,IAAIv0B,aAAa,CAC3B,EACA,EACA,EACA,EACA,EACA,EACA,GACC,EACD,EACA,GACC,EACD,EACA,EACA,GACC,GACA,EACD,GACC,EACD,EACA,EACA,GACC,EACD,GACC,EACD,GACC,GACA,EACD,EACA,GACC,GACA,GACA,EACD,EACA,EACA,EACA,EACA,EACA,EACA,GACC,EACD,EACA,GACC,EACD,EACA,EACA,GACC,GACA,GACA,EACD,EACA,EACA,GACC,EACD,EACA,GACC,GACA,EACD,GACC,EACD,GACC,EACD,GACC,GACA,EACD,EACA,EACA,EACA,EACA,EACA,EACA,GACC,EACD,GACC,EACD,EACA,EACA,GACC,EACD,GAC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","file":"squeegee/main.js","sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// onNextTick\n// schedule actions on next animation frame\n\ntype Callback = (n: number) => void\n\nlet updateOnce: { [id: string]: Callback } | null = null\nconst updateRepeat: { [id: string]: Callback } = {}\n\nlet willUpdate = false\n\nlet uidCounter = 0\n\nlet oldTime = 0\n\nfunction processUpdates(time: number) {\n\tconst tpf = oldTime ? time - oldTime : oldTime\n\toldTime = time\n\n\tif (updateOnce) {\n\t\tfor (const id in updateOnce) {\n\t\t\tupdateOnce[id](tpf)\n\t\t}\n\t\tupdateOnce = null\n\t}\n\n\tlet updates = 0\n\tfor (const id in updateRepeat) {\n\t\tupdates++\n\t\tupdateRepeat[id](tpf)\n\t}\n\n\tif (!updates) {\n\t\twillUpdate = false\n\t\toldTime = 0\n\t} else {\n\t\trequestAnimationFrame(processUpdates)\n\t}\n}\n\nexport function once(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateOnce = updateOnce || {}\n\tupdateOnce[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n}\n\nexport function repeat(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateRepeat[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n\n\treturn id\n}\n\nexport function stop(id: Callback | string | number) {\n\tif (typeof id === 'function') {\n\t\tid = id.name\n\t}\n\tdelete updateRepeat[id]\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export var Keys;\n(function (Keys) {\n    Keys[Keys[\"CANCEL\"] = 3] = \"CANCEL\";\n    Keys[Keys[\"HELP\"] = 6] = \"HELP\";\n    Keys[Keys[\"BACK_SPACE\"] = 8] = \"BACK_SPACE\";\n    Keys[Keys[\"TAB\"] = 9] = \"TAB\";\n    Keys[Keys[\"CLEAR\"] = 12] = \"CLEAR\";\n    Keys[Keys[\"RETURN\"] = 13] = \"RETURN\";\n    Keys[Keys[\"ENTER\"] = 14] = \"ENTER\";\n    Keys[Keys[\"SHIFT\"] = 16] = \"SHIFT\";\n    Keys[Keys[\"CONTROL\"] = 17] = \"CONTROL\";\n    Keys[Keys[\"ALT\"] = 18] = \"ALT\";\n    Keys[Keys[\"PAUSE\"] = 19] = \"PAUSE\";\n    Keys[Keys[\"CAPS_LOCK\"] = 20] = \"CAPS_LOCK\";\n    Keys[Keys[\"ESCAPE\"] = 27] = \"ESCAPE\";\n    Keys[Keys[\"SPACE\"] = 32] = \"SPACE\";\n    Keys[Keys[\"PAGE_UP\"] = 33] = \"PAGE_UP\";\n    Keys[Keys[\"PAGE_DOWN\"] = 34] = \"PAGE_DOWN\";\n    Keys[Keys[\"END\"] = 35] = \"END\";\n    Keys[Keys[\"HOME\"] = 36] = \"HOME\";\n    Keys[Keys[\"LEFT\"] = 37] = \"LEFT\";\n    Keys[Keys[\"UP\"] = 38] = \"UP\";\n    Keys[Keys[\"RIGHT\"] = 39] = \"RIGHT\";\n    Keys[Keys[\"DOWN\"] = 40] = \"DOWN\";\n    Keys[Keys[\"PRINTSCREEN\"] = 44] = \"PRINTSCREEN\";\n    Keys[Keys[\"INSERT\"] = 45] = \"INSERT\";\n    Keys[Keys[\"DELETE\"] = 46] = \"DELETE\";\n    Keys[Keys[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    Keys[Keys[\"DIGIT_1\"] = 49] = \"DIGIT_1\";\n    Keys[Keys[\"DIGIT_2\"] = 50] = \"DIGIT_2\";\n    Keys[Keys[\"DIGIT_3\"] = 51] = \"DIGIT_3\";\n    Keys[Keys[\"DIGIT_4\"] = 52] = \"DIGIT_4\";\n    Keys[Keys[\"DIGIT_5\"] = 53] = \"DIGIT_5\";\n    Keys[Keys[\"DIGIT_6\"] = 54] = \"DIGIT_6\";\n    Keys[Keys[\"DIGIT_7\"] = 55] = \"DIGIT_7\";\n    Keys[Keys[\"DIGIT_8\"] = 56] = \"DIGIT_8\";\n    Keys[Keys[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    Keys[Keys[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    Keys[Keys[\"EQUALS\"] = 61] = \"EQUALS\";\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    Keys[Keys[\"CONTEXT_MENU\"] = 93] = \"CONTEXT_MENU\";\n    Keys[Keys[\"NUMPAD0\"] = 96] = \"NUMPAD0\";\n    Keys[Keys[\"NUMPAD1\"] = 97] = \"NUMPAD1\";\n    Keys[Keys[\"NUMPAD2\"] = 98] = \"NUMPAD2\";\n    Keys[Keys[\"NUMPAD3\"] = 99] = \"NUMPAD3\";\n    Keys[Keys[\"NUMPAD4\"] = 100] = \"NUMPAD4\";\n    Keys[Keys[\"NUMPAD5\"] = 101] = \"NUMPAD5\";\n    Keys[Keys[\"NUMPAD6\"] = 102] = \"NUMPAD6\";\n    Keys[Keys[\"NUMPAD7\"] = 103] = \"NUMPAD7\";\n    Keys[Keys[\"NUMPAD8\"] = 104] = \"NUMPAD8\";\n    Keys[Keys[\"NUMPAD9\"] = 105] = \"NUMPAD9\";\n    Keys[Keys[\"MULTIPLY\"] = 106] = \"MULTIPLY\";\n    Keys[Keys[\"ADD\"] = 107] = \"ADD\";\n    Keys[Keys[\"SEPARATOR\"] = 108] = \"SEPARATOR\";\n    Keys[Keys[\"SUBTRACT\"] = 109] = \"SUBTRACT\";\n    Keys[Keys[\"DECIMAL\"] = 110] = \"DECIMAL\";\n    Keys[Keys[\"DIVIDE\"] = 111] = \"DIVIDE\";\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    Keys[Keys[\"F13\"] = 124] = \"F13\";\n    Keys[Keys[\"F14\"] = 125] = \"F14\";\n    Keys[Keys[\"F15\"] = 126] = \"F15\";\n    Keys[Keys[\"F16\"] = 127] = \"F16\";\n    Keys[Keys[\"F17\"] = 128] = \"F17\";\n    Keys[Keys[\"F18\"] = 129] = \"F18\";\n    Keys[Keys[\"F19\"] = 130] = \"F19\";\n    Keys[Keys[\"F20\"] = 131] = \"F20\";\n    Keys[Keys[\"F21\"] = 132] = \"F21\";\n    Keys[Keys[\"F22\"] = 133] = \"F22\";\n    Keys[Keys[\"F23\"] = 134] = \"F23\";\n    Keys[Keys[\"F24\"] = 135] = \"F24\";\n    Keys[Keys[\"NUM_LOCK\"] = 144] = \"NUM_LOCK\";\n    Keys[Keys[\"SCROLL_LOCK\"] = 145] = \"SCROLL_LOCK\";\n    Keys[Keys[\"COMMA\"] = 188] = \"COMMA\";\n    Keys[Keys[\"PERIOD\"] = 190] = \"PERIOD\";\n    Keys[Keys[\"SLASH\"] = 191] = \"SLASH\";\n    Keys[Keys[\"BACK_QUOTE\"] = 192] = \"BACK_QUOTE\";\n    Keys[Keys[\"OPEN_BRACKET\"] = 219] = \"OPEN_BRACKET\";\n    Keys[Keys[\"BACK_SLASH\"] = 220] = \"BACK_SLASH\";\n    Keys[Keys[\"CLOSE_BRACKET\"] = 221] = \"CLOSE_BRACKET\";\n    Keys[Keys[\"QUOTE\"] = 222] = \"QUOTE\";\n    Keys[Keys[\"META\"] = 224] = \"META\";\n})(Keys || (Keys = {}));\nexport function keyboard(opts, callback) {\n    const cb = callback || opts;\n    const { element = window } = opts;\n    const pressed = {};\n    function onKeydown(event) {\n        pressed[event.keyCode] = Date.now();\n        cb(pressed);\n    }\n    function onKeyup(event) {\n        delete pressed[event.keyCode];\n        cb(pressed);\n    }\n    element.addEventListener('keyup', onKeyup, false);\n    element.addEventListener('keydown', onKeydown, false);\n    cb(pressed);\n    return function stop() {\n        element.removeEventListener('keyup', onKeyup);\n        element.removeEventListener('keydown', onKeydown);\n    };\n}\nexport function keyboardObserver(opts) {\n    const observer = {\n        Keys,\n        state: { pressed: {} },\n        destroy: () => { },\n    };\n    function callback(pressed) {\n        observer.state.pressed = pressed;\n    }\n    observer.destroy = keyboard(callback, opts);\n    return observer;\n}\n//# sourceMappingURL=keyboard.js.map","export function deepmerge(obj1, obj2) {\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        const result = Object.assign({}, obj1);\n        for (const key in obj2) {\n            const val1 = obj1[key];\n            const val2 = obj2[key];\n            if (typeof val2 !== 'undefined') {\n                result[key] = deepmerge(val1, val2);\n            }\n            else {\n                delete result[key];\n            }\n        }\n        return result;\n    }\n    return obj2;\n}\nexport function deepOverride(obj1, obj2, opt) {\n    const ignore = opt && opt.ignore;\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        for (const key in obj1) {\n            if (obj1.hasOwnProperty(key) &&\n                !(ignore && key in ignore && ignore[key] === true)) {\n                const val1 = obj1[key];\n                const val2 = obj2[key];\n                if (val2 !== undefined) {\n                    obj1[key] = deepOverride(val1, val2, {\n                        ignore: ignore && ignore[key],\n                    });\n                }\n            }\n        }\n        return obj1;\n    }\n    return obj2;\n}\nexport function mapObj(fn, coll, res = {}) {\n    for (const key in coll) {\n        res[key] = fn(coll[key], key);\n    }\n    return res;\n}\n//# sourceMappingURL=object.js.map","export const GEOMETRY_PROP_POSITION = 'position';\nexport const GEOMETRY_PROP_NORMAL = 'normal';\nexport const GEOMETRY_PROP_UV = 'uv';\nexport const UNIFORM_SOURCE_TEXTURE = 'source';\nexport const VARYING_UV_COORDS = 'coords';\nexport const GL_TYPE = {\n    FLOAT: 0x1406,\n    FLOAT_VEC2: 0x8b50,\n    FLOAT_VEC3: 0x8b51,\n    FLOAT_VEC4: 0x8b52,\n    INT: 0x1404,\n    INT_VEC2: 0x8b53,\n    INT_VEC3: 0x8b54,\n    INT_VEC4: 0x8b55,\n    BOOL: 0x8b56,\n    BOOL_VEC2: 0x8b57,\n    BOOL_VEC3: 0x8b58,\n    BOOL_VEC4: 0x8b59,\n    FLOAT_MAT2: 0x8b5a,\n    FLOAT_MAT3: 0x8b5b,\n    FLOAT_MAT4: 0x8b5c,\n    SAMPLER_2D: 0x8b5e,\n    SAMPLER_CUBE: 0x8b60,\n    SAMPLER_3D: 0x8b5f,\n    SAMPLER_2D_SHADOW: 0x8b62,\n    FLOAT_MAT2X3: 0x8b65,\n    FLOAT_MAT2X4: 0x8b66,\n    FLOAT_MAT3X2: 0x8b67,\n    FLOAT_MAT3X4: 0x8b68,\n    FLOAT_MAT4X2: 0x8b69,\n    FLOAT_MAT4X3: 0x8b6a,\n    SAMPLER_2D_ARRAY: 0x8dc1,\n    SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n    SAMPLER_CUBE_SHADOW: 0x8dc5,\n    UNSIGNED_INT: 0x1405,\n    UNSIGNED_INT_VEC2: 0x8dc6,\n    UNSIGNED_INT_VEC3: 0x8dc7,\n    UNSIGNED_INT_VEC4: 0x8dc8,\n    INT_SAMPLER_2D: 0x8dca,\n    INT_SAMPLER_3D: 0x8dcb,\n    INT_SAMPLER_CUBE: 0x8dcc,\n    INT_SAMPLER_2D_ARRAY: 0x8dcf,\n    UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n    UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n    UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n    TEXTURE_2D: 0x0de1,\n    TEXTURE_CUBE_MAP: 0x8513,\n    TEXTURE_3D: 0x806f,\n    TEXTURE_2D_ARRAY: 0x8c1a,\n    BYTE: 0x1400,\n    UNSIGNED_BYTE: 0x1401,\n    SHORT: 0x1402,\n    UNSIGNED_SHORT: 0x1403,\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\n    UNSIGNED_SHORT_5_6_5: 0x8363,\n    HALF_FLOAT: 0x140b,\n    UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n    UNSIGNED_INT_10F_11F_11F_REV: 0x8c3b,\n    UNSIGNED_INT_5_9_9_9_REV: 0x8c3e,\n    FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8dad,\n    UNSIGNED_INT_24_8: 0x84fa,\n};\nexport const TEXTURE_FORMAT = {\n    RED: 0x1903,\n    RG: 0x8227,\n    RGB: 0x1907,\n    RGBA: 0x1908,\n    RED_INTEGER: 0x8d94,\n    RG_INTEGER: 0x8228,\n    RGB_INTEGER: 0x8d98,\n    RGBA_INTEGER: 0x8d99,\n    DEPTH_COMPONENT: 0x1902,\n};\nexport const TEXTURE_FORMAT_INTERNAL = {\n    R8: 0x8229,\n    RG8: 0x822b,\n    RGB8: 0x8051,\n    RGBA8: 0x8058,\n    R16F: 0x822d,\n    RG16F: 0x822f,\n    RGB16F: 0x881b,\n    RGBA16F: 0x881a,\n    R32F: 0x822e,\n    RG32F: 0x8230,\n    RGB32F: 0x8815,\n    RGBA32F: 0x8814,\n    R8I: 0x8231,\n    RG8I: 0x8237,\n    RGB8I: 0x8d8f,\n    RGBA8I: 0x8d8e,\n    R8UI: 0x8232,\n    RG8UI: 0x8238,\n    RGB8UI: 0x8d7d,\n    RGBA8UI: 0x8d7c,\n    R16I: 0x8233,\n    RG16I: 0x8239,\n    RGB16I: 0x8d89,\n    RGBA16I: 0x8d88,\n    R16UI: 0x8234,\n    RG16UI: 0x823a,\n    RGB16UI: 0x8d77,\n    RGBA16UI: 0x8d76,\n    R32I: 0x8235,\n    RG32I: 0x823b,\n    RGB32I: 0x8d83,\n    RGBA32I: 0x8d82,\n    R32UI: 0x8236,\n    RG32UI: 0x823c,\n    RGB32UI: 0x8d71,\n    RGBA32UI: 0x8d70,\n    RGB10_A2: 0x8059,\n    RGB10_A2UI: 0x906f,\n    SRGB: 0x8c40,\n    SRGB8: 0x8c41,\n    SRGB8_ALPHA8: 0x8c43,\n    R8_SNORM: 0x8f94,\n    RG8_SNORM: 0x8f95,\n    RGB8_SNORM: 0x8f96,\n    RGBA8_SNORM: 0x8f97,\n    DEPTH_COMPONENT16: 0x81a5,\n    DEPTH_COMPONENT24: 0x81a6,\n    DEPTH_COMPONENT32F: 0x8cac,\n};\nexport const TEXTURE_FORMAT_DEFAULTS = {\n    [GL_TYPE.UNSIGNED_BYTE]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R8,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG8,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB8,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA8,\n    },\n    [GL_TYPE.UNSIGNED_SHORT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT16,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16UI,\n    },\n    [GL_TYPE.UNSIGNED_INT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT24,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R32UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG32UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB32UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA32UI,\n    },\n    [GL_TYPE.FLOAT]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16F,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16F,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16F,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16F,\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT32F,\n    },\n    COMPRESSED_TYPES: {},\n};\n//# sourceMappingURL=contants.js.map","import * as constants from './contants';\nexport const defaultTextureSettings = {\n    wrap: 'CLAMP_TO_EDGE',\n    minFilter: 'LINEAR',\n    magFilter: 'NEAREST',\n};\nexport function getDefaultLayerSettings(gl) {\n    return {\n        clearColor: [0.0, 0.0, 0.0, 1.0],\n        blendFunc: [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA],\n    };\n}\nexport const defaultForms = {\n    renderQuad: {\n        attribs: {\n            [constants.GEOMETRY_PROP_POSITION]: {\n                buffer: new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1]),\n                storeType: 'STATIC',\n            },\n            [constants.GEOMETRY_PROP_UV]: {\n                buffer: new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]),\n                storeType: 'STATIC',\n            },\n        },\n        drawType: 'TRIANGLE_STRIP',\n        itemCount: 4,\n    },\n};\nexport const defaultShaders = {\n    basicEffect: {\n        vert: `\nattribute vec2 ${constants.GEOMETRY_PROP_POSITION};\nattribute vec2 ${constants.GEOMETRY_PROP_UV};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\t${constants.VARYING_UV_COORDS} = ${constants.GEOMETRY_PROP_UV};\n\tgl_Position = vec4(${constants.GEOMETRY_PROP_POSITION}, 0.0, 1.0);\n}`,\n        frag: `precision mediump float;\nuniform sampler2D ${constants.UNIFORM_SOURCE_TEXTURE};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\tgl_FragColor = texture2D(${constants.UNIFORM_SOURCE_TEXTURE}, ${constants.VARYING_UV_COORDS});\n}`,\n    },\n};\n//# sourceMappingURL=asset-lib.js.map","import { GL_TYPE } from './contants';\n// Attrib and Uniform Setters\nfunction getBindPointForSamplerType(type) {\n    return typeMap[type].bindPoint;\n}\nfunction floatSetter(gl, location) {\n    return (v) => {\n        gl.uniform1f(location, v);\n    };\n}\nfunction floatArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1fv(location, v);\n    };\n}\nfunction floatVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2fv(location, v);\n    };\n}\nfunction floatVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3fv(location, v);\n    };\n}\nfunction floatVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4fv(location, v);\n    };\n}\nfunction intSetter(gl, location) {\n    return (v) => {\n        gl.uniform1i(location, v);\n    };\n}\nfunction intArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1iv(location, v);\n    };\n}\nfunction intVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2iv(location, v);\n    };\n}\nfunction intVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3iv(location, v);\n    };\n}\nfunction intVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4iv(location, v);\n    };\n}\nfunction uintSetter(gl, location) {\n    return (v) => {\n        gl.uniform1ui(location, v);\n    };\n}\nfunction uintArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1uiv(location, v);\n    };\n}\nfunction uintVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2uiv(location, v);\n    };\n}\nfunction uintVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3uiv(location, v);\n    };\n}\nfunction uintVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4uiv(location, v);\n    };\n}\nfunction floatMat2Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n    };\n}\nfunction floatMat3Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n    };\n}\nfunction floatMat4Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n    };\n}\nfunction floatMat23Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x3fv(location, false, v);\n    };\n}\nfunction floatMat32Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x2fv(location, false, v);\n    };\n}\nfunction floatMat24Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x4fv(location, false, v);\n    };\n}\nfunction floatMat42Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x2fv(location, false, v);\n    };\n}\nfunction floatMat34Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x4fv(location, false, v);\n    };\n}\nfunction floatMat43Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x3fv(location, false, v);\n    };\n}\nfunction samplerSetter(gl, type, unit, location) {\n    const bindPoint = getBindPointForSamplerType(type);\n    return (texture) => {\n        gl.uniform1i(location, unit);\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(bindPoint, texture._texture);\n    };\n}\nfunction samplerArraySetter(gl, type, unit, location, size) {\n    const bindPoint = getBindPointForSamplerType(type);\n    const units = new Int32Array(size);\n    for (let i = 0; i < size; ++i) {\n        units[i] = unit + i;\n    }\n    return (textures) => {\n        gl.uniform1iv(location, units);\n        for (const index in textures) {\n            gl.activeTexture(gl.TEXTURE0 + units[index]);\n            gl.bindTexture(bindPoint, textures[index]._texture);\n        }\n    };\n}\nfunction isSamplerInfo(info) {\n    return info.Type === null;\n}\nconst typeMap = {\n    [GL_TYPE.FLOAT]: {\n        Type: Float32Array,\n        size: 4,\n        setter: floatSetter,\n        arraySetter: floatArraySetter,\n    },\n    [GL_TYPE.FLOAT_VEC2]: {\n        Type: Float32Array,\n        size: 8,\n        setter: floatVec2Setter,\n    },\n    [GL_TYPE.FLOAT_VEC3]: {\n        Type: Float32Array,\n        size: 12,\n        setter: floatVec3Setter,\n    },\n    [GL_TYPE.FLOAT_VEC4]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatVec4Setter,\n    },\n    [GL_TYPE.INT]: {\n        Type: Int32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.INT_VEC2]: { Type: Int32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.INT_VEC3]: { Type: Int32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.INT_VEC4]: { Type: Int32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.UNSIGNED_INT]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: uintSetter,\n        arraySetter: uintArraySetter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        Type: Uint32Array,\n        size: 8,\n        setter: uintVec2Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        Type: Uint32Array,\n        size: 12,\n        setter: uintVec3Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        Type: Uint32Array,\n        size: 16,\n        setter: uintVec4Setter,\n    },\n    [GL_TYPE.BOOL]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.BOOL_VEC2]: { Type: Uint32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.BOOL_VEC3]: { Type: Uint32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.BOOL_VEC4]: { Type: Uint32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.FLOAT_MAT2]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatMat2Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3]: {\n        Type: Float32Array,\n        size: 36,\n        setter: floatMat3Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4]: {\n        Type: Float32Array,\n        size: 64,\n        setter: floatMat4Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X3]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat23Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X4]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat24Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X2]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat32Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X4]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat34Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X2]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat42Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X3]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat43Setter,\n    },\n    [GL_TYPE.SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.SAMPLER_2D_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_CUBE_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n};\nfunction floatAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribPointer(location, typeInfo.itemSize, GL_TYPE.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n    };\n}\nfunction intAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribIPointer(location, typeInfo.itemSize, GL_TYPE.INT, b.stride || 0, b.offset || 0);\n    };\n}\nfunction matAttribSetter(gl, location, typeInfo) {\n    const defaultSize = typeInfo.size;\n    const count = typeInfo.count;\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        const numComponents = defaultSize;\n        const size = numComponents / count;\n        const typeInfo = typeMap[GL_TYPE.FLOAT];\n        const stride = typeInfo.size * numComponents;\n        const normalize = b.normalize || false;\n        const offset = b.offset || 0;\n        const rowOffset = stride / count;\n        for (let i = 0; i < count; ++i) {\n            gl.enableVertexAttribArray(location + i);\n            gl.vertexAttribPointer(location + i, size, GL_TYPE.FLOAT, normalize, stride, offset + rowOffset * i);\n        }\n    };\n}\nconst attrTypeMap = {\n    [GL_TYPE.FLOAT]: { size: 4, setter: floatAttribSetter, itemSize: 1 },\n    [GL_TYPE.FLOAT_VEC2]: { size: 8, setter: floatAttribSetter, itemSize: 2 },\n    [GL_TYPE.FLOAT_VEC3]: { size: 12, setter: floatAttribSetter, itemSize: 3 },\n    [GL_TYPE.FLOAT_VEC4]: { size: 16, setter: floatAttribSetter, itemSize: 4 },\n    [GL_TYPE.INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.INT_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.INT_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.INT_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.UNSIGNED_INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        size: 8,\n        setter: intAttribSetter,\n        itemSize: 2,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        size: 12,\n        setter: intAttribSetter,\n        itemSize: 3,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        size: 16,\n        setter: intAttribSetter,\n        itemSize: 4,\n    },\n    [GL_TYPE.BOOL]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.BOOL_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.BOOL_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.BOOL_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.FLOAT_MAT2]: { size: 4, setter: matAttribSetter, count: 2 },\n    [GL_TYPE.FLOAT_MAT3]: { size: 9, setter: matAttribSetter, count: 3 },\n    [GL_TYPE.FLOAT_MAT4]: { size: 16, setter: matAttribSetter, count: 4 },\n};\nexport function createUniformSetters(gl, program) {\n    let textureUnit = 0;\n    function createUniformSetter(program, uniformInfo) {\n        const location = gl.getUniformLocation(program, uniformInfo.name);\n        const isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]';\n        const type = uniformInfo.type;\n        const typeInfo = typeMap[type];\n        if (!typeInfo) {\n            throw new Error('unknown type: 0x' + type.toString(16)); // we should never get here.\n        }\n        if (location == null) {\n            return;\n        }\n        let setter;\n        if (isSamplerInfo(typeInfo)) {\n            // it's a sampler\n            const unit = textureUnit;\n            textureUnit += uniformInfo.size;\n            if (isArray) {\n                setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n            }\n            else {\n                setter = typeInfo.setter(gl, type, unit, location);\n            }\n        }\n        else {\n            if (typeInfo.arraySetter && isArray) {\n                setter = typeInfo.arraySetter(gl, location);\n            }\n            else {\n                setter = typeInfo.setter(gl, location);\n            }\n        }\n        return { setter, location };\n    }\n    const uniformSetters = {};\n    const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < numUniforms; ++i) {\n        const uniformInfo = gl.getActiveUniform(program, i);\n        if (!uniformInfo) {\n            continue;\n        }\n        let name = uniformInfo.name;\n        // remove the array suffix.\n        if (name.substr(-3) === '[0]') {\n            name = name.substr(0, name.length - 3);\n        }\n        if (program) {\n            const setter = createUniformSetter(program, uniformInfo);\n            if (setter) {\n                uniformSetters[name] = setter;\n            }\n        }\n    }\n    return uniformSetters;\n}\nexport function createAttributeSetters(gl, program) {\n    const attribSetters = {};\n    const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < numAttribs; i++) {\n        const attribInfo = gl.getActiveAttrib(program, i);\n        if (!attribInfo) {\n            break;\n        }\n        const location = gl.getAttribLocation(program, attribInfo.name);\n        const typeInfo = attrTypeMap[attribInfo.type];\n        const setter = typeInfo.setter(gl, location, typeInfo);\n        attribSetters[attribInfo.name] = { setter, location };\n    }\n    return attribSetters;\n}\n// Type helpers\nexport const glTypeToTypedArray = {\n    [GL_TYPE.BYTE]: Int8Array,\n    [GL_TYPE.UNSIGNED_BYTE]: Uint8Array,\n    [GL_TYPE.SHORT]: Int16Array,\n    [GL_TYPE.UNSIGNED_SHORT]: Uint16Array,\n    [GL_TYPE.INT]: Int32Array,\n    [GL_TYPE.UNSIGNED_INT]: Uint32Array,\n    [GL_TYPE.FLOAT]: Float32Array,\n    [GL_TYPE.UNSIGNED_SHORT_4_4_4_4]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_5_5_1]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_6_5]: Uint16Array,\n    [GL_TYPE.HALF_FLOAT]: Uint16Array,\n    [GL_TYPE.UNSIGNED_INT_2_10_10_10_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_10F_11F_11F_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_5_9_9_9_REV]: Uint32Array,\n    [GL_TYPE.FLOAT_32_UNSIGNED_INT_24_8_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_24_8]: Uint32Array,\n};\nexport function getGLTypeForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArray instanceof Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArray instanceof Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArray instanceof Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArray instanceof Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArray instanceof Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\nexport function getGLTypeForTypedArrayType(typedArrayType) {\n    if (typedArrayType === Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArrayType === Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArrayType === Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArrayType === Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArrayType === Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArrayType === Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\n// Settings\nexport function applyDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.enable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.blendFunc) {\n        gl.blendFunc.apply(gl, settings.blendFunc);\n    }\n    if (settings.depthFunc != null) {\n        gl.depthFunc(settings.depthFunc);\n    }\n    if (settings.cullFace != null) {\n        gl.cullFace(settings.cullFace);\n    }\n    if (settings.frontFace != null) {\n        gl.frontFace(settings.frontFace);\n    }\n    if (settings.lineWidth != null) {\n        gl.lineWidth(settings.lineWidth);\n    }\n    if (settings.colorMask) {\n        gl.colorMask.apply(gl, settings.colorMask);\n    }\n    if (settings.depthMask != null) {\n        gl.depthMask(settings.depthMask);\n    }\n    if (settings.clearColor) {\n        gl.clearColor.apply(gl, settings.clearColor);\n    }\n    if (settings.clearDepth != null) {\n        gl.clearDepth(settings.clearDepth);\n    }\n    if (settings.clearBits != null) {\n        gl.clear(settings.clearBits);\n    }\n}\nexport function revertDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.enable(setting);\n        }\n    }\n}\n//# sourceMappingURL=render-utils.js.map","import { getGLTypeForTypedArray } from './render-utils';\nlet formCounter = 1;\nexport class Form {\n    constructor(_painter, id = 'Form' + formCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (data.drawType) {\n            this._drawType = gl[data.drawType];\n        }\n        if (data.itemCount) {\n            this._itemCount = data.itemCount;\n        }\n        this._attribs = this._attribs || {};\n        for (const id in data.attribs) {\n            const attribData = data.attribs[id];\n            if (this._attribs[id] == null) {\n                this._attribs[id] = {\n                    buffer: gl.createBuffer(),\n                };\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._attribs[id].buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, attribData.buffer, gl[(attribData.storeType || 'STATIC') + '_DRAW']);\n        }\n        if (data.elements) {\n            const buffer = data.elements.buffer;\n            if (this._elements == null) {\n                this._elements = {\n                    buffer: gl.createBuffer(),\n                    glType: null,\n                };\n            }\n            this._elements.glType = getGLTypeForTypedArray(buffer);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._elements.buffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, buffer, gl[(data.elements.storeType || 'STATIC') + '_DRAW']);\n        }\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        for (const id in this._attribs) {\n            gl.deleteBuffer(this._attribs[id].buffer);\n        }\n        this._attribs = {};\n        if (this._elements) {\n            gl.deleteBuffer(this._elements.buffer);\n            this._elements = undefined;\n        }\n    }\n}\n//# sourceMappingURL=form.js.map","import { randInt, randIntInRange } from '../math/random';\nexport function pickRandom(arr) {\n    return arr[randInt(arr.length)];\n}\nexport function doTimes(fn, count) {\n    for (let i = 0; i < count; i++) {\n        fn(i);\n    }\n}\nexport function times(fn, count, res = []) {\n    for (let i = 0; i < count; i++) {\n        res[i] = fn(i);\n    }\n    return res;\n}\nexport function repeat(count, item) {\n    return times(() => item, count);\n}\nexport function concat(arr, ...arrs) {\n    return arr.concat(...arrs);\n}\nexport function zip(fn, as, bs, res = []) {\n    const length = Math.min(as.length, bs.length);\n    for (let i = 0; i < length; i++) {\n        res[i] = fn(as[i], bs[i]);\n    }\n    return res;\n}\nexport function flatten(array, res = []) {\n    for (const subarray of array) {\n        const currentLength = res.length;\n        for (let i = 0; i < subarray.length; i++) {\n            res[i + currentLength] = subarray[i];\n        }\n    }\n    return res;\n}\nexport function mapcat(fn, array, res = []) {\n    return flatten(map(fn, array, res));\n}\nexport const flatMap = mapcat;\nexport function reverse(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        res[i] = arr[arr.length - 1 - i];\n    }\n    return res;\n}\nexport function shuffle(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        const j = randIntInRange(i, arr.length);\n        const temp = res[i] !== undefined ? res[i] : arr[i];\n        res[i] = res[j] !== undefined ? res[j] : arr[j];\n        res[j] = temp;\n    }\n    return res;\n}\nexport function map(fn, coll, res = []) {\n    for (let i = 0; i < coll.length; i++) {\n        res[i] = fn(coll[i], i);\n    }\n    return res;\n}\nexport function each(fn, coll) {\n    for (const key in coll) {\n        fn(coll[key], key);\n    }\n}\nexport function reduce(fn, start, arr) {\n    for (let i = 0; i < arr.length; i++) {\n        start = fn(start, arr[i]);\n    }\n    return start;\n}\nexport function fold(fn, arr) {\n    const [start, ...rest] = arr;\n    return reduce(fn, start, rest);\n}\nexport const last = (arr) => arr[arr.length - 1];\n//# sourceMappingURL=sequence.js.map","import { defaultTextureSettings } from './asset-lib';\nlet textureCount = 1;\nexport class Texture {\n    constructor(_painter, id = 'Texture' + textureCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this._texture = null;\n        this._data = {};\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (this._texture == null) {\n            this._texture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        if ((data.wrap && data.wrap !== this._data.wrap) ||\n            (data.wrapS && data.wrapS !== this._data.wrapS) ||\n            (data.wrapT && data.wrapT !== this._data.wrapT)) {\n            let wrapS, wrapT;\n            if (data.wrap) {\n                wrapS = wrapT = data.wrap;\n            }\n            else {\n                wrapT = data.wrapT || defaultTextureSettings.wrap;\n                wrapS = data.wrapS || defaultTextureSettings.wrap;\n            }\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n        }\n        else if (!(this._data.wrap || this._data.wrapS || this._data.wrapT)) {\n            this._data.wrap = this._data.wrapT = this._data.wrapS = defaultTextureSettings.wrap;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[this._data.wrap]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[this._data.wrap]);\n        }\n        if (data.magFilter && data.magFilter !== this._data.magFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[data.magFilter]);\n        }\n        else if (!this._data.magFilter) {\n            this._data.magFilter = defaultTextureSettings.magFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[this._data.magFilter]);\n        }\n        if (data.minFilter && data.minFilter !== this._data.minFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[data.minFilter]);\n        }\n        else if (!this._data.minFilter) {\n            this._data.minFilter = defaultTextureSettings.minFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[this._data.minFilter]);\n        }\n        if (data.asset) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data.asset);\n        }\n        if (data.data !== undefined) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, data.type === 'FLOAT' && this._painter.isWebGL2\n                ? gl.RGBA32F\n                : gl.RGBA, data.width, // width and height are required if using custom data\n            data.height, 0, gl.RGBA, gl[data.type || 'UNSIGNED_BYTE'], data.data);\n        }\n        if (data.flipY != null && data.flipY !== this._data.flipY) {\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, data.flipY);\n        }\n        if (data.minFilter && data.minFilter.indexOf('MIPMAP') > 0) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        this._painter.gl.deleteTexture(this._texture);\n        this._data = {};\n        this._texture = null;\n    }\n}\n//# sourceMappingURL=texture.js.map","import { equalObject } from 'tvs-libs/dist/utils/predicates';\nimport { Texture } from './texture';\nlet targetCount = 1;\nexport class RenderTarget {\n    constructor(_painter, id = 'Form' + targetCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.antialias = false;\n        this.frameBuffer = null;\n        this.antiAliasFrameBuffer = null;\n        this.antiAliasRenderBuffer = null;\n        this.textures = [];\n        this.depthBuffer = null;\n        this.bufferStructure = [];\n        this._data = {};\n    }\n    update(data) {\n        var _a;\n        const gl = this._painter.gl;\n        const width = data.width || this.width;\n        const height = data.height || this.height;\n        if (!(width && height)) {\n            return this;\n        }\n        else if (width === this.width && height === this.height) {\n            if (!data.bufferStructure)\n                return this;\n            if (data.bufferStructure.length === this.bufferStructure.length &&\n                this.bufferStructure.every((buf, i) => equalObject(buf, data.bufferStructure[i]))) {\n                return this;\n            }\n        }\n        if (this.frameBuffer == null) {\n            this.frameBuffer = gl.createFramebuffer();\n        }\n        if (this.depthBuffer == null) {\n            this.depthBuffer = gl.createRenderbuffer();\n        }\n        if (data.bufferStructure && data.bufferStructure.length) {\n            this.bufferStructure = data.bufferStructure;\n            if (this.bufferStructure.some(t => t.type === 'FLOAT')) {\n                if (this._painter.isWebGL2) {\n                    gl.getExtension('EXT_color_buffer_float');\n                }\n                else {\n                    gl.getExtension('OES_texture_float');\n                }\n            }\n        }\n        const texCount = this.bufferStructure.length || 1;\n        const bufferAttachments = [gl.COLOR_ATTACHMENT0];\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        if (texCount > 1) {\n            let glx;\n            if (!this._painter.isWebGL2) {\n                glx = gl.getExtension('WEBGL_draw_buffers');\n            }\n            const attachment = this._painter.isWebGL2\n                ? gl.COLOR_ATTACHMENT0\n                : glx.COLOR_ATTACHMENT0_WEBGL;\n            for (let i = 0; i < texCount; i++) {\n                bufferAttachments[i] = attachment + i;\n            }\n            this._painter.isWebGL2\n                ? gl.drawBuffers(bufferAttachments)\n                : glx.drawBuffersWEBGL(bufferAttachments);\n        }\n        this.antialias =\n            texCount === 1 &&\n                this._painter.isWebGL2 &&\n                (data.antialias || ((_a = this._data) === null || _a === void 0 ? void 0 : _a.antialias));\n        if (this.antialias) {\n            const gl2 = gl;\n            if (this.antiAliasFrameBuffer == null) {\n                this.antiAliasFrameBuffer = gl.createFramebuffer();\n            }\n            if (this.antiAliasRenderBuffer == null) {\n                this.antiAliasRenderBuffer = gl.createRenderbuffer();\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl2.RGBA8, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        else {\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n        }\n        for (let i = 0; i < texCount; i++) {\n            if (!this.textures[i]) {\n                this.textures[i] = new Texture(this._painter, this.id + '_Texture' + i);\n            }\n            const texture = this.textures[i];\n            texture.update(Object.assign(Object.assign({ minFilter: 'NEAREST', magFilter: 'NEAREST' }, this.bufferStructure[i]), { data: null, width,\n                height }));\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, bufferAttachments[i], gl.TEXTURE_2D, texture._texture, 0);\n        }\n        if (this.antialias) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n            if (err !== gl.FRAMEBUFFER_COMPLETE) {\n                console.error('antialias framebuffer error', err, data);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (err !== gl.FRAMEBUFFER_COMPLETE) {\n            console.error('framebuffer error', err, data);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        Object.assign(this._data, data);\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteFramebuffer(this.frameBuffer);\n        gl.deleteRenderbuffer(this.depthBuffer);\n        for (const texture of this.textures) {\n            gl.deleteTexture(texture);\n        }\n        if (this.antiAliasFrameBuffer) {\n            gl.deleteFramebuffer(this.antiAliasFrameBuffer);\n        }\n        if (this.antiAliasRenderBuffer) {\n            gl.deleteRenderbuffer(this.antiAliasRenderBuffer);\n        }\n        this.textures = [];\n        this.frameBuffer = null;\n        this.depthBuffer = null;\n        this._data = {};\n        this.bufferStructure = [];\n        this.width = 0;\n        this.height = 0;\n    }\n}\n//# sourceMappingURL=render-target.js.map","export const and = (p1, p2) => (a, b) => p1(a, b) && p2(a, b);\nexport const not = (p) => (...args) => !p(...args);\nexport const defined = a => a != null;\nexport const notEmpty = a => a && a.length;\nexport const unequal = (a, b) => a !== b;\nexport const equal = (a, b) => a === b;\nexport function equalArray(arr1, arr2) {\n    if (arr1 === arr2) {\n        return true;\n    }\n    if (!arr2 || !arr1) {\n        return false;\n    }\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalObject(obj1, obj2) {\n    if (obj1 === obj2) {\n        return true;\n    }\n    if (!obj2) {\n        return false;\n    }\n    const k1 = Object.keys(obj1);\n    const k2 = Object.keys(obj2);\n    if (!equalArray(k1, k2)) {\n        return false;\n    }\n    for (const key of k1) {\n        if (obj1[key] !== obj2[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=predicates.js.map","import { times } from 'tvs-libs/dist/utils/sequence';\nimport { RenderTarget } from './render-target';\nimport { Texture } from './texture';\nlet frameCount = 1;\nexport class Frame {\n    constructor(_painter, id = 'Frame' + frameCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.layers = [];\n        this._data = {};\n        this._targets = [];\n        this._textures = [];\n    }\n    image(i = 0) {\n        return ((this._targets.length &&\n            this._targets[this._targets.length - 1].textures[i]) ||\n            this._textures[i]);\n    }\n    update(data = {}) {\n        var _a, _b, _c, _d;\n        const gl = this._painter.gl;\n        const layers = Array.isArray(data.layers)\n            ? data.layers\n            : data.layers\n                ? [data.layers]\n                : this.layers;\n        const selfReferencing = data.selfReferencing || this._data.selfReferencing;\n        const layerCount = layers.reduce((count, layer) => count + (layer._uniforms.length || 1), 0);\n        const targetCount = selfReferencing || layerCount > 1 ? 2 : layerCount;\n        const width = data.width || ((_a = data.texture) === null || _a === void 0 ? void 0 : _a.width) ||\n            this._data.width || ((_b = this._data.texture) === null || _b === void 0 ? void 0 : _b.width) ||\n            gl.canvas.width;\n        const height = data.height || ((_c = data.texture) === null || _c === void 0 ? void 0 : _c.height) ||\n            this._data.height || ((_d = this._data.texture) === null || _d === void 0 ? void 0 : _d.height) ||\n            gl.canvas.height;\n        const antialias = data.antialias || this._data.antialias || true;\n        if (targetCount !== this._targets.length) {\n            this._destroyTargets();\n        }\n        const targetData = Object.assign(Object.assign({}, data), { width, height, antialias });\n        if (!this._targets.length && targetCount > 0) {\n            this._targets = times(i => new RenderTarget(this._painter, this.id + '_target' + (i + 1)).update(targetData), targetCount);\n        }\n        else if (this._targets.length) {\n            this._targets.forEach(t => {\n                t.update(targetData);\n            });\n        }\n        if (data.texture) {\n            // Hardcode to one static texture for now\n            if (!this._textures[0]) {\n                this._textures[0] = new Texture(this._painter, this.id + '_Texture0');\n            }\n            data.texture.width = width;\n            data.texture.height = height;\n            this._textures[0].update(data.texture);\n        }\n        Object.assign(this._data, data);\n        this.layers = layers;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        this._destroyTargets();\n        this._textures.forEach(tex => tex.destroy());\n        this._textures = [];\n        this._data = {};\n        this.layers = [];\n        this.width = 0;\n        this.height = 0;\n    }\n    _destroyTargets() {\n        this._targets.forEach(t => t.destroy());\n        this._targets = [];\n    }\n    _swapTargets() {\n        if (this._targets.length > 1) {\n            const tmp = this._targets[0];\n            this._targets[0] = this._targets[1];\n            this._targets[1] = tmp;\n        }\n    }\n}\n//# sourceMappingURL=frame.js.map","let layerCount = 1;\nexport class Layer {\n    constructor(id = 'DrawingLayer' + layerCount++) {\n        this.id = id;\n        this.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.sketches) {\n            this.sketches = Array.isArray(data.sketches)\n                ? data.sketches\n                : [data.sketches];\n        }\n        if (data.frag) {\n            const sketch = this.sketches && this.sketches[0];\n            if (sketch) {\n                sketch.shade.update({ frag: data.frag });\n            }\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        for (const sketch of this.sketches) {\n            sketch.destroy();\n        }\n        this._data.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=layer.js.map","import { createAttributeSetters, createUniformSetters } from './render-utils';\nlet shadeCounter = 1;\nexport class Shade {\n    constructor(_painter, id = 'Shade' + shadeCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        const fragSource = (data.frag && data.frag.trim()) || this.fragSource;\n        const vertSource = (data.vert && data.vert.trim()) || this.vertSource;\n        if (!(fragSource &&\n            vertSource &&\n            (fragSource !== this.fragSource || vertSource !== this.vertSource))) {\n            return this;\n        }\n        this.destroy();\n        if (fragSource.indexOf('GL_EXT_draw_buffers') >= 0) {\n            gl.getExtension('WEBGL_draw_buffers');\n        }\n        const program = gl.createProgram();\n        const frag = gl.createShader(gl.FRAGMENT_SHADER);\n        const vert = gl.createShader(gl.VERTEX_SHADER);\n        if (!(program && vert && frag))\n            return;\n        this._program = program;\n        this._frag = frag;\n        this._vert = vert;\n        gl.attachShader(program, vert);\n        gl.attachShader(program, frag);\n        gl.shaderSource(vert, vertSource);\n        gl.shaderSource(frag, fragSource);\n        gl.compileShader(vert);\n        gl.compileShader(frag);\n        if (!gl.getShaderParameter(vert, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Vertex Shader!\\n', gl.getShaderInfoLog(vert), addLineNumbers(vertSource));\n        }\n        if (!gl.getShaderParameter(frag, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Fragment Shader!\\n', gl.getShaderInfoLog(frag), addLineNumbers(fragSource));\n        }\n        gl.linkProgram(program);\n        const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n            const lastError = gl.getProgramInfoLog(program);\n            console.error('Error in program linking:', lastError);\n        }\n        this._uniformSetters = createUniformSetters(gl, program);\n        this._attributeSetters = createAttributeSetters(gl, program);\n        this.fragSource = fragSource;\n        this.vertSource = vertSource;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteProgram(this._program);\n        gl.deleteShader(this._frag);\n        gl.deleteShader(this._vert);\n        this.vertSource = undefined;\n        this.fragSource = undefined;\n        this._attributeSetters = {};\n        this._uniformSetters = {};\n    }\n}\nfunction addLineNumbers(src) {\n    return src\n        .trim()\n        .split('\\n')\n        .map((line, i) => i + 1 + ': ' + line)\n        .join('\\n');\n}\n//# sourceMappingURL=shade.js.map","let sketchCounter = 1;\nexport class Sketch {\n    constructor(id = 'Sketch' + sketchCounter++) {\n        this.id = id;\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.drawSettings) {\n            this._drawSettings = data.drawSettings;\n        }\n        if (data.form) {\n            this.form = data.form;\n        }\n        if (data.shade) {\n            this.shade = data.shade;\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        return this;\n    }\n    destroy() {\n        this.form && this.form.destroy();\n        this.shade && this.shade.destroy();\n        this._drawSettings = undefined;\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=sketch.js.map","import { defaultForms, defaultShaders, getDefaultLayerSettings, } from './asset-lib';\nimport { Form } from './form';\nimport { Frame } from './frame';\nimport { Layer } from './layer';\nimport { applyDrawSettings, revertDrawSettings } from './render-utils';\nimport { Shade } from './shade';\nimport { Sketch } from './sketch';\nimport { resizeCanvas } from './utils/context';\nexport class Painter {\n    constructor(canvas, opts = {}) {\n        this.canvas = canvas;\n        this.isWebGL2 = true;\n        this.maxBufferSamples = 0;\n        let gl = null;\n        if (!opts.useWebGL1) {\n            gl =\n                canvas.getContext('webgl2', opts) ||\n                    canvas.getContext('experimental-webgl2', opts);\n        }\n        if (gl == null) {\n            this.isWebGL2 = false;\n            gl =\n                canvas.getContext('webgl', opts) ||\n                    canvas.getContext('experimental-webgl', opts);\n        }\n        if (gl == null) {\n            throw Error('Cannot initialize WebGL.');\n        }\n        this.gl = gl;\n        this.sizeMultiplier = opts.sizeMultiplier || 1;\n        if (this.isWebGL2) {\n            this.maxBufferSamples = gl.getParameter(gl.MAX_SAMPLES);\n        }\n        this.resize();\n        applyDrawSettings(gl, getDefaultLayerSettings(gl));\n        this._renderQuad = this.createForm().update(defaultForms.renderQuad);\n        this._staticSketch = this.createFlatSketch();\n    }\n    resize() {\n        resizeCanvas(this.gl.canvas, this.sizeMultiplier);\n        return this;\n    }\n    destroy() {\n        this._staticSketch.destroy();\n        this._renderQuad.destroy();\n    }\n    updateDrawSettings(drawSettings) {\n        applyDrawSettings(this.gl, Object.assign({}, drawSettings));\n        return this;\n    }\n    createForm(id) {\n        return new Form(this, id);\n    }\n    createShade(id) {\n        return new Shade(this, id);\n    }\n    createSketch(id) {\n        return new Sketch(id);\n    }\n    createFlatSketch(id) {\n        const s = this.createSketch(id);\n        return s.update({\n            form: this._renderQuad,\n            shade: this.createShade(s.id + '_defaultShade').update(defaultShaders.basicEffect),\n        });\n    }\n    createFrame(id) {\n        return new Frame(this, id);\n    }\n    createLayer(id) {\n        return new Layer(id);\n    }\n    createEffect(id) {\n        const l = this.createLayer(id);\n        return l.update({\n            sketches: this.createFlatSketch(l.id + '_effectSketch'),\n        });\n    }\n    draw(sketch, globalUniforms) {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        draw(gl, sketch, globalUniforms);\n        return this;\n    }\n    compose(...frames) {\n        for (const frame of frames) {\n            renderFrame(this.gl, frame);\n        }\n        return this;\n    }\n    display(frame, idx = 0) {\n        return this.draw(this._staticSketch, { source: frame.image(idx) });\n    }\n}\nfunction draw(gl, sketch, globalUniforms, sources) {\n    const { shade: shade, form: form, _drawSettings: drawSettings, _uniforms: uniforms, } = sketch;\n    if (!(shade && form)) {\n        throw Error('cannot draw, shader or geometry are not set');\n    }\n    gl.useProgram(shade._program);\n    shadeForm(shade, form);\n    if (globalUniforms) {\n        shadeUniforms(shade, globalUniforms, sources);\n    }\n    if (drawSettings) {\n        applyDrawSettings(gl, drawSettings);\n    }\n    for (let i = 0; i < (uniforms.length || 1); i++) {\n        drawInstance(gl, sketch, uniforms[i], sources);\n    }\n    if (drawSettings) {\n        revertDrawSettings(gl, drawSettings);\n    }\n}\nfunction drawInstance(gl, sketch, uniforms, sources) {\n    if (uniforms) {\n        shadeUniforms(sketch.shade, uniforms, sources);\n    }\n    if (sketch.form._elements && sketch.form._elements.glType != null) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, sketch.form._elements.buffer);\n        gl.drawElements(sketch.form._drawType, sketch.form._itemCount, sketch.form._elements.glType, 0);\n    }\n    else {\n        gl.drawArrays(sketch.form._drawType, 0, sketch.form._itemCount);\n    }\n}\nfunction shadeForm(shade, form) {\n    for (const name in form._attribs) {\n        const setter = shade._attributeSetters[name];\n        if (setter) {\n            setter.setter(form._attribs[name]);\n        }\n    }\n}\nfunction shadeUniforms(shade, uniforms, sources) {\n    for (const name in uniforms) {\n        const setter = shade._uniformSetters[name];\n        if (setter) {\n            let value = uniforms[name];\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (typeof value === 'string' && sources) {\n                setter.setter(sources[value]);\n            }\n            else {\n                setter.setter(value);\n            }\n        }\n    }\n}\nfunction renderLayer(gl, layer, uniforms, target, source) {\n    if (target) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, target.antialias ? target.antiAliasFrameBuffer : target.frameBuffer);\n        gl.viewport(0, 0, target.width, target.height);\n    }\n    else {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    }\n    if (layer._data.drawSettings) {\n        applyDrawSettings(gl, layer._data.drawSettings);\n    }\n    for (const sketch of layer.sketches) {\n        draw(gl, sketch, uniforms, source);\n    }\n    if (target && target.antialias) {\n        const gl2 = gl;\n        // \"blit\" the cube into the color buffer, which adds antialiasing\n        gl.bindFramebuffer(gl2.READ_FRAMEBUFFER, target.antiAliasFrameBuffer);\n        gl.bindFramebuffer(gl2.DRAW_FRAMEBUFFER, target.frameBuffer);\n        gl2.clearBufferfv(gl2.COLOR, 0, [1.0, 1.0, 1.0, 1.0]);\n        gl2.blitFramebuffer(0, 0, target.width, target.height, 0, 0, target.width, target.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n    }\n    if (layer._data.drawSettings) {\n        revertDrawSettings(gl, layer._data.drawSettings);\n    }\n}\nfunction renderFrame(gl, frame) {\n    for (let i = 0; i < frame.layers.length; i++) {\n        const layer = frame.layers[i];\n        const layerPasses = layer._uniforms.length || 1;\n        for (let j = 0; j < layerPasses; j++) {\n            const target = frame._targets[0];\n            const sources = i + j === 0 && frame._textures.length\n                ? frame._textures\n                : frame._targets[1] && frame._targets[1].textures;\n            renderLayer(gl, layer, layer._uniforms[j], target, sources);\n            frame._swapTargets();\n        }\n    }\n}\n//# sourceMappingURL=painter.js.map","export function makeClear(gl, ...clearArray) {\n    return clearArray.reduce((res, item) => res | gl[item.toUpperCase() + '_BUFFER_BIT'], 0);\n}\nexport function setBlendFunc(gl, blendOpts) {\n    gl.blendFunc.apply(gl, blendOpts.map(opt => gl[opt.toUpperCase()]));\n}\n/**\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] optional `window.devicePixelRatio`.\n * @return {boolean} true if the canvas was resized.\n */\nexport function resizeCanvas(canvas, multiplier = 1) {\n    let width = canvas.width;\n    let height = canvas.height;\n    if ('clientWidth' in canvas) {\n        const rect = canvas.getBoundingClientRect();\n        width = (rect.width * multiplier) | 0;\n        height = (rect.height * multiplier) | 0;\n    }\n    if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=context.js.map","export const Buttons = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n};\nexport function pointer(opts, callback) {\n    const cb = callback || opts;\n    const { element = document, enableRightButton, holdDelay = 400, holdRadius = 5, } = opts;\n    const state = {\n        pressed: {},\n        drag: { x: 0, y: 0, dX: 0, dY: 0, xMax: 0, yMax: 0 },\n        dragging: false,\n        holding: false,\n    };\n    let x = 0, y = 0, oX = 0, oY = 0, timeout = null;\n    function onPointerDown(e) {\n        if (e.isPrimary) {\n            state.pressed[e.button] = e;\n            x = oX = e.clientX;\n            y = oY = e.clientY;\n            state.dragging = true;\n            timeout != null && clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                if (state.drag.xMax < holdRadius && state.drag.yMax < holdRadius) {\n                    state.holding = true;\n                    cb(state);\n                }\n            }, holdDelay);\n        }\n        else {\n            state.pressed[Buttons.RIGHT] = e;\n        }\n        cb(state);\n    }\n    function onPointerUp(_e) {\n        state.pressed = {};\n        delete state.drag.event;\n        state.drag.x = 0;\n        state.drag.y = 0;\n        state.drag.dX = 0;\n        state.drag.dY = 0;\n        state.drag.xMax = 0;\n        state.drag.yMax = 0;\n        state.dragging = false;\n        state.holding = false;\n        timeout != null && clearTimeout(timeout);\n        timeout = null;\n        cb(state);\n    }\n    function onPointerMove(e) {\n        if (state.dragging && e.isPrimary) {\n            state.drag.event = e;\n            state.drag.x = x - e.clientX;\n            state.drag.y = y - e.clientY;\n            state.drag.dX = oX - e.clientX;\n            state.drag.dY = oY - e.clientY;\n            state.drag.xMax = Math.max(Math.abs(state.drag.x), state.drag.xMax);\n            state.drag.yMax = Math.max(Math.abs(state.drag.y), state.drag.yMax);\n            oX = e.clientX;\n            oY = e.clientY;\n            cb(state);\n        }\n    }\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    element.addEventListener('pointerdown', onPointerDown);\n    document.addEventListener('pointermove', onPointerMove);\n    document.addEventListener('pointerup', onPointerUp);\n    document.addEventListener('pointerleave', onPointerUp);\n    document.addEventListener('pointercancel', onPointerUp);\n    if (enableRightButton) {\n        element.addEventListener('contextmenu', preventDefault);\n    }\n    cb(state);\n    return function destroy() {\n        element.removeEventListener('pointerdown', onPointerDown);\n        document.removeEventListener('pointermove', onPointerMove);\n        document.removeEventListener('pointerup', onPointerUp);\n        document.removeEventListener('pointerleave', onPointerUp);\n        document.removeEventListener('pointercancel', onPointerUp);\n        if (enableRightButton) {\n            element.removeEventListener('contextmenu', preventDefault);\n        }\n    };\n}\nexport function pointerObserver(opts = {}) {\n    const observer = {\n        Buttons,\n        state: {},\n        destroy: () => { },\n    };\n    function callback(state) {\n        observer.state = state;\n    }\n    observer.destroy = pointer(opts, callback);\n    return observer;\n}\n//# sourceMappingURL=pointer.js.map","import { once } from './scheduler'\nimport { windowSize } from 'tvs-libs/dist/events/dom'\nimport { keyboard, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { deepOverride } from 'tvs-libs/dist/utils/object'\nimport { GL, PainterOptions } from 'tvs-painter'\nimport { Form } from 'tvs-painter/dist/form'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport { Layer } from 'tvs-painter/dist/layer'\nimport { Painter } from 'tvs-painter/dist/painter'\nimport { Shade } from 'tvs-painter/dist/shade'\nimport { Sketch } from 'tvs-painter/dist/sketch'\nimport { PointerState, pointer } from 'tvs-libs/dist/events/pointer'\nimport { getPackedSettings } from 'http2'\n\n// === Painter ===\n\nlet currentCanvas: HTMLCanvasElement\nlet painter: Painter\n\nconst forms: { [id: string]: Form } = {}\nfunction getForm(id: string) {\n\treturn forms[id] || (forms[id] = painter.createForm('Form_' + id))\n}\n\nconst shades: { [id: string]: Shade } = {}\nfunction getShade(id: string) {\n\treturn shades[id] || (shades[id] = painter.createShade('Shade_' + id))\n}\n\nconst sketches: { [id: string]: Sketch } = {}\nfunction getSketch(id: string) {\n\treturn sketches[id] || (sketches[id] = painter.createSketch('Sketch_' + id))\n}\n\nconst layers: { [id: string]: Layer } = {}\nfunction getLayer(id: string) {\n\treturn layers[id] || (layers[id] = painter.createLayer('Layer_' + id))\n}\n\nconst frames: { [id: string]: Frame } = {}\nfunction getFrame(id: string) {\n\treturn frames[id] || (frames[id] = painter.createFrame('Frame_' + id))\n}\n\nconst effects: { [id: string]: Layer } = {}\nfunction getEffect(id: string) {\n\treturn effects[id] || (effects[id] = painter.createEffect('Effect_' + id))\n}\n\n// === State ===\n\nexport interface BaseState {\n\tdevice: {\n\t\ttpf: number\n\t\tcanvas: HTMLCanvasElement\n\t\tpointer: PointerState\n\t\tkeys: KeyState\n\t\tsizeMultiplier: number\n\t}\n}\n\nconst state: BaseState = {\n\tdevice: {\n\t\ttpf: 0,\n\t\tsizeMultiplier: 1,\n\t},\n} as BaseState\n;(window as any).state = state\n\n// === Events ===\n\ntype ActionHandler<S extends BaseState = BaseState> = (state: S) => void\n\nconst eventHandlers: {\n\t[event: string]: { [id: string]: ActionHandler<any> }\n} = {}\n\nexport const baseEvents = {\n\tFRAME: 'frame',\n\tRESIZE: 'resize',\n}\n\n// === Context ===\n\nlet cancelWindow: () => void\nlet cancelPointer: () => void\nlet cancelKeys: () => void\n\nexport function getPainterContext<S extends BaseState>(\n\tcanvas: HTMLCanvasElement,\n\topts?: PainterOptions,\n): PainterContext<S> {\n\tif (canvas !== currentCanvas) {\n\t\tcurrentCanvas = canvas\n\n\t\tpainter = new Painter(canvas, opts)\n\n\t\tstate.device.canvas = canvas\n\n\t\tcancelWindow && cancelWindow()\n\t\tcancelPointer && cancelPointer()\n\t\tcancelKeys && cancelKeys()\n\n\t\tcancelWindow = windowSize(() =>\n\t\t\tonce(() => {\n\t\t\t\tpainter.sizeMultiplier = state.device.sizeMultiplier\n\t\t\t\tpainter.resize()\n\t\t\t\temit(baseEvents.RESIZE)\n\t\t\t}, 'resize'),\n\t\t)\n\n\t\tcancelPointer = pointer(\n\t\t\t{\n\t\t\t\telement: canvas,\n\t\t\t\tenableRightButton: true,\n\t\t\t\tholdRadius: 7,\n\t\t\t\tholdDelay: 250,\n\t\t\t},\n\t\t\t(m) => (state.device.pointer = m),\n\t\t)\n\n\t\tcancelKeys = keyboard((k) => (state.device.keys = k))\n\t}\n\n\treturn {\n\t\tpainter,\n\t\tgl: painter.gl,\n\t\tgetForm,\n\t\tgetShade,\n\t\tgetSketch,\n\t\tgetLayer,\n\t\tgetFrame,\n\t\tgetEffect,\n\n\t\tstate: state as S,\n\n\t\tget,\n\t\tset,\n\t\tlisten,\n\t\temit,\n\t}\n\n\tfunction get<K extends keyof S = keyof S>(prop: K): S[K] {\n\t\treturn (state as S)[prop]\n\t}\n\n\tfunction set<K extends keyof S = keyof S>(\n\t\tkey: K,\n\t\tval: S[K],\n\t\topts?: { reset: any },\n\t) {\n\t\tconst s = state as S\n\t\tif (s[key]) {\n\t\t\tconst reset = opts && opts.reset\n\t\t\tif (reset !== true) {\n\t\t\t\tval = deepOverride(val, s[key], { ignore: reset })\n\t\t\t}\n\t\t}\n\t\ts[key] = val\n\t}\n\n\tfunction listen(id: string, event: string, s: ActionHandler<S>) {\n\t\tif (!eventHandlers[event]) eventHandlers[event] = {}\n\t\teventHandlers[event][id] = s\n\t}\n\n\tfunction emit(event: string) {\n\t\tconst e = eventHandlers[event]\n\t\tif (e)\n\t\t\tfor (const id in e) {\n\t\t\t\te[id](state as S)\n\t\t\t}\n\t}\n}\n\nexport interface PainterContext<S extends BaseState = BaseState> {\n\tpainter: Painter\n\tgl: GL\n\tgetForm: typeof getForm\n\tgetShade: typeof getShade\n\tgetSketch: typeof getSketch\n\tgetLayer: typeof getLayer\n\tgetFrame: typeof getFrame\n\tgetEffect: typeof getEffect\n\tstate: S\n\tget<K extends keyof S = keyof S>(prop: K): S[K]\n\tset<K extends keyof S = keyof S>(\n\t\tkey: K,\n\t\tval: S[K],\n\t\topts?: { reset: any },\n\t): void\n\tlisten(id: string, event: string, s: ActionHandler<S>): void\n\temit(event: string): void\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { baseEvents, getPainterContext } from '../shared-utils/painterState'\nimport { PerspectiveViewportState } from '../shared-utils/vr/perspectiveViewport'\nimport { Squeegee } from './state'\n\nexport interface State extends PerspectiveViewportState {\n\tsqueegee: Squeegee\n\ttime: number\n}\n\nexport const canvas = document.getElementById('canvas') as HTMLCanvasElement\n\nexport const Q = getPainterContext<State>(canvas)\n\nexport const events = {\n\t...baseEvents,\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function windowSize(callback) {\n    function resize() {\n        callback({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    }\n    window.addEventListener('resize', resize);\n    resize();\n    return function stop() {\n        window.removeEventListener('resize', resize);\n    };\n}\nexport function windowSizeObserver() {\n    const state = {\n        size: { width: 0, height: 0 },\n    };\n    const destroy = windowSize(s => (state.size = s));\n    return { state, destroy };\n}\n//# sourceMappingURL=dom.js.map","import { equalArray } from '../utils/predicates';\nexport function vec(v) {\n    if (typeof v === 'number') {\n        return new Float32Array(v);\n    }\n    return new Float32Array(v);\n}\nexport function add(vec1, vec2, res = []) {\n    for (let i = 0; i < vec1.length; i++) {\n        res[i] = vec1[i] + vec2[i];\n    }\n    return res;\n}\nexport function sub(vec1, vec2, res = []) {\n    for (let i = 0; i < vec1.length; i++) {\n        res[i] = vec1[i] - vec2[i];\n    }\n    return res;\n}\nexport function mul(scalar, vec, res = []) {\n    for (let i = 0; i < vec.length; i++) {\n        res[i] = vec[i] * scalar;\n    }\n    return res;\n}\nexport function div(scalar, vec, res = []) {\n    for (let i = 0; i < vec.length; i++) {\n        res[i] = vec[i] / scalar;\n    }\n    return res;\n}\nexport function length(vec) {\n    let sum = 0;\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < vec.length; i++) {\n        const val = vec[i];\n        sum += val * val;\n    }\n    return Math.sqrt(sum);\n}\nexport function normalize(vec, res = []) {\n    return div(length(vec), vec, res);\n}\nexport function limit(maxLength, vec) {\n    const l = length(vec);\n    if (maxLength < l) {\n        return mul(maxLength / l, vec);\n    }\n    else {\n        return vec;\n    }\n}\nexport function dot(v1, v2) {\n    let d = 0;\n    for (let i = 0; i < v1.length; i++) {\n        d += v1[i] * v2[i];\n    }\n    return d;\n}\nexport function cross(v1, v2, res = []) {\n    res[0] = v1[1] * v2[2] - v1[2] * v2[1];\n    res[1] = v1[2] * v2[0] - v1[0] * v2[2];\n    res[2] = v1[0] * v2[1] - v1[1] * v2[0];\n    return res;\n}\nexport function cross2D(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\nexport const isEqual = equalArray;\n//# sourceMappingURL=vectors.js.map","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","export function curry(fn) {\n    function curried(a, b) {\n        if (typeof b !== 'undefined')\n            return fn(a, b);\n        return (b) => fn(a, b);\n    }\n    return curried;\n}\nexport function partial(fn, ...args) {\n    return fn.bind(null, ...args);\n}\nexport function pipe(fn1, fn2, fn3, fn4, fn5, fn6) {\n    return (...args) => {\n        let res = fn2(fn1(...args));\n        if (fn3) {\n            res = fn3(res);\n        }\n        if (fn4) {\n            res = fn4(res);\n        }\n        if (fn5) {\n            res = fn5(res);\n        }\n        if (fn6) {\n            res = fn6(res);\n        }\n        return res;\n    };\n}\n//# sourceMappingURL=core.js.map","import { Vec, mul, add, cross } from 'tvs-libs/dist/math/vectors'\nimport { quat, vec3 } from 'gl-matrix'\nimport {\n\tflatMap,\n\tflatten,\n\treverse,\n\trepeat,\n\tconcat,\n\ttimes,\n} from 'tvs-libs/dist/utils/sequence'\nimport { partial, pipe } from 'tvs-libs/dist/fp/core'\nimport { FormData, FormBufferStore, FormStoreType } from 'tvs-painter'\n\nexport interface LineSegment {\n\tvertex: Vec\n\tnormal: Vec\n\tdirection: Vec\n\tlength: number\n}\n\nexport type Line = LineSegment[]\n\nexport interface LineStep {\n\tlength: number\n\tnormalAngle?: number\n\tdirectionAngle?: number\n\ttangentAngle?: number\n}\n\nexport function lineSegment({\n\tvertex = [0, 0, 0],\n\tnormal = [0, 0, 1],\n\tdirection = [0, 1, 0],\n\tlength = 1,\n}: Partial<LineSegment> = {}): LineSegment {\n\treturn { vertex, normal, direction, length }\n}\n\nconst rotQuatNormal = quat.create()\nconst rotQuatDirection = quat.create()\nconst rotQuatTangent = quat.create()\nconst rotQuat = quat.create()\nconst identityQuat = quat.identity(quat.create())\n\nconst vec3Temp = vec3.create()\nexport function walkLine(\n\t{ length, directionAngle = 0, normalAngle = 0, tangentAngle = 0 }: LineStep,\n\tsegment = lineSegment(),\n) {\n\tif (normalAngle) {\n\t\tquat.setAxisAngle(rotQuatNormal, segment.normal as vec3, normalAngle)\n\t} else {\n\t\tquat.identity(rotQuatNormal)\n\t}\n\tif (directionAngle) {\n\t\tquat.setAxisAngle(\n\t\t\trotQuatDirection,\n\t\t\tsegment.direction as vec3,\n\t\t\tdirectionAngle,\n\t\t)\n\t} else {\n\t\tquat.identity(rotQuatDirection)\n\t}\n\tif (tangentAngle) {\n\t\tquat.setAxisAngle(\n\t\t\trotQuatTangent,\n\t\t\tvec3.cross(vec3Temp, segment.direction as vec3, segment.normal as vec3),\n\t\t\ttangentAngle,\n\t\t)\n\t} else {\n\t\tquat.identity(rotQuatTangent)\n\t}\n\tquat.multiply(\n\t\trotQuat,\n\t\tquat.multiply(rotQuat, rotQuatDirection, rotQuatNormal),\n\t\trotQuatTangent,\n\t)\n\n\tconst newNormal = vec3.transformQuat(\n\t\tvec3.create(),\n\t\tsegment.normal as vec3,\n\t\trotQuat,\n\t)\n\n\tvec3.normalize(newNormal, newNormal)\n\n\tconst newDirection = vec3.transformQuat(\n\t\tvec3.create(),\n\t\tsegment.direction as vec3,\n\t\trotQuat,\n\t)\n\tvec3.normalize(newDirection, newDirection)\n\n\tconst newVertex = vec3.create()\n\tvec3.scale(newVertex, segment.direction as vec3, segment.length)\n\tvec3.add(newVertex, newVertex, segment.vertex as vec3)\n\n\treturn lineSegment({\n\t\tvertex: newVertex,\n\t\tdirection: newDirection,\n\t\tnormal: newNormal,\n\t\tlength: length,\n\t})\n}\n\nexport function lineSegmentToPoints(\n\tthickness: number | ((seg: LineSegment) => number) = 1,\n\tsegment: LineSegment,\n) {\n\tthickness = typeof thickness === 'number' ? thickness : thickness(segment)\n\tconst tangent =\n\t\tsegment.direction.length === 2\n\t\t\t? [segment.direction[1], -segment.direction[0]]\n\t\t\t: cross(segment.normal, segment.direction)\n\tconst p1 = add(mul(-thickness, tangent), segment.vertex)\n\tconst p2 = add(mul(thickness, tangent), segment.vertex)\n\treturn [p1, p2]\n}\n\n// === FormData helpers ===\n\ninterface opts {\n\twithBackFace?: boolean\n\twithNormals?: boolean\n\twithUVs?: boolean\n\tstoreType?: FormStoreType\n}\nexport function lineToTriangleStripGeometry(\n\tline: Line,\n\tlineWidth: number | ((seg: LineSegment) => number),\n\t{\n\t\twithBackFace = false,\n\t\twithNormals = false,\n\t\twithUVs = false,\n\t\tstoreType,\n\t}: opts = {},\n): FormData {\n\tconst data: FormData = {\n\t\tattribs: {\n\t\t\tposition: {\n\t\t\t\tbuffer: new Float32Array(\n\t\t\t\t\tflatten(\n\t\t\t\t\t\tconcat(\n\t\t\t\t\t\t\tflatMap(partial(lineSegmentToPoints, lineWidth), line),\n\t\t\t\t\t\t\twithBackFace\n\t\t\t\t\t\t\t\t? flatMap(\n\t\t\t\t\t\t\t\t\t\tpipe(partial(lineSegmentToPoints, lineWidth), reverse),\n\t\t\t\t\t\t\t\t\t\tline,\n\t\t\t\t\t\t\t\t  ).reverse()\n\t\t\t\t\t\t\t\t: [],\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tstoreType,\n\t\t\t},\n\t\t},\n\t\tdrawType: 'TRIANGLE_STRIP',\n\t\titemCount: line.length * (withBackFace ? 4 : 2),\n\t}\n\n\tif (withNormals) {\n\t\tdata.attribs.normal = {\n\t\t\tbuffer: new Float32Array(\n\t\t\t\tflatten(\n\t\t\t\t\tconcat(\n\t\t\t\t\t\tflatMap((s) => [s.normal, s.normal], line),\n\t\t\t\t\t\twithBackFace\n\t\t\t\t\t\t\t? flatMap((s) => repeat(2, mul(-1, s.normal)), line).reverse()\n\t\t\t\t\t\t\t: [],\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t\tstoreType,\n\t\t}\n\t}\n\n\tif (withUVs) {\n\t\tdata.attribs.uv = {\n\t\t\tbuffer: new Float32Array(\n\t\t\t\tflatten(\n\t\t\t\t\tconcat(\n\t\t\t\t\t\tflatten(\n\t\t\t\t\t\t\ttimes(\n\t\t\t\t\t\t\t\t(i) => [\n\t\t\t\t\t\t\t\t\t[0, i / line.length],\n\t\t\t\t\t\t\t\t\t[1, i / line.length],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tline.length,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\twithBackFace\n\t\t\t\t\t\t\t? flatten(\n\t\t\t\t\t\t\t\t\ttimes(\n\t\t\t\t\t\t\t\t\t\t(i) => [\n\t\t\t\t\t\t\t\t\t\t\t[1, i / line.length],\n\t\t\t\t\t\t\t\t\t\t\t[0, i / line.length],\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tline.length,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t  ).reverse()\n\t\t\t\t\t\t\t: [],\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t\tstoreType,\n\t\t}\n\t}\n\n\treturn data\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { State, events, Q } from './context'\nimport { walkLine, lineSegment, Line } from '../shared-utils/geometry/lines'\n\ninterface Step {\n\tduration: number\n\tcurrentTime: number\n\tturn: number\n}\n\nconst speed = 10\nconst segmentLength = 1.3\nlet isStraight = false\n\nfunction nextStep(): Step {\n\tisStraight = !isStraight\n\treturn {\n\t\tcurrentTime: 0,\n\t\tduration: isStraight ? segmentLength * 1000 : segmentLength * 300,\n\t\tturn: isStraight ? 0 : Math.random() >= 0.5 ? Math.PI : -Math.PI,\n\t}\n}\n\nexport class Squeegee {\n\tstep = nextStep()\n\tsegment = lineSegment({\n\t\tdirection: [0, 1, 0],\n\t\tnormal: [0, 0, 1],\n\t\tvertex: [0, -7, 0],\n\t})\n\tline: Line = [this.segment, this.segment]\n\n\tupdate(tpf: number) {\n\t\tconst part = tpf / this.step.duration\n\t\tthis.step.currentTime += tpf\n\t\tconst newSegment = walkLine(\n\t\t\t{\n\t\t\t\tlength: (speed * tpf) / 1000,\n\t\t\t\tnormalAngle: part * this.step.turn,\n\t\t\t},\n\t\t\tthis.segment,\n\t\t)\n\t\tthis.line = [this.segment, newSegment]\n\t\tthis.segment = newSegment\n\t\tif (this.step.currentTime >= this.step.duration) {\n\t\t\tthis.step = nextStep()\n\t\t}\n\t}\n}\n\nQ.set('squeegee', new Squeegee())\n\nQ.listen('Squeegee', events.FRAME, (s) => {\n\ts.squeegee.update(s.device.tpf)\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export const isBoolean = (x) => typeof x === \"boolean\";\n","export const isNumber = (x) => typeof x === \"number\";\n","export const defError = (prefix, suffix = (msg) => (msg !== undefined ? \": \" + msg : \"\")) => class extends Error {\n    constructor(msg) {\n        super(prefix(msg) + suffix(msg));\n    }\n};\n","import { defError } from \"./deferror\";\nexport const UnsupportedOperationError = defError(() => \"unsupported operation\");\nexport const unsupported = (msg) => {\n    throw new UnsupportedOperationError(msg);\n};\n","const OBJP = Object.getPrototypeOf;\n/**\n * Similar to {@link isObject}, but also checks if prototype is that of\n * `Object` (or `null`).\n *\n * @param x -\n */\nexport const isPlainObject = (x) => {\n    let p;\n    return (x != null &&\n        typeof x === \"object\" &&\n        ((p = OBJP(x)) === null || OBJP(p) === null));\n};\n","import { isPlainObject } from \"@thi.ng/checks\";\nconst RE_VEC = /^[iub]?vec[234]$/;\nconst RE_MAT = /^mat[234]$/;\n/**\n * Returns true if given `t` is a {@link Term}-like object.\n *\n * @param t\n */\nexport const isTerm = (t) => isPlainObject(t) && !!t.tag && !!t.type;\n/**\n * Returns true, if given term evaluates to a boolean value.\n */\nexport const isBool = (t) => t.type === \"bool\";\n/**\n * Returns true, if given term evaluates to a float value.\n */\nexport const isFloat = (t) => t.type === \"float\";\n/**\n * Returns true, if given term evaluates to a signed integer value.\n */\nexport const isInt = (t) => t.type === \"int\";\n/**\n * Returns true, if given term evaluates to an unsigned integer value.\n */\nexport const isUint = (t) => t.type === \"uint\";\n/**\n * Returns true, if given term is a literal.\n */\nexport const isLit = (t) => t.tag === \"lit\";\n/**\n * Returns true, if given term is a float literal.\n */\nexport const isLitFloat = (t) => isLit(t) && isFloat(t);\n/**\n * Returns true, if given term is a signed integer literal.\n */\nexport const isLitInt = (t) => isLit(t) && isInt(t);\n/**\n * Returns true, if given term is a numeric literal (float, int, uint).\n */\nexport const isLitNumeric = (t) => isLit(t) && (isFloat(t) || isInt(t) || isUint(t));\n/**\n * Returns true, if given term evaluates to a vector value (vec, ivec, bvec).\n */\nexport const isVec = (t) => RE_VEC.test(t.type);\n/**\n * Returns true, if given term evaluates to a matrix value.\n */\nexport const isMat = (t) => RE_MAT.test(t.type);\n","import { isBoolean, isNumber } from \"@thi.ng/checks\";\nimport { isVec } from \"./checks\";\nexport const lit = (type, val, info) => ({\n    tag: \"lit\",\n    type,\n    info,\n    val,\n});\nexport const bool = (x) => lit(\"bool\", isNumber(x) ? !!x : x);\nexport const float = (x) => lit(\"float\", isBoolean(x) ? x & 1 : x);\nexport const int = (x) => lit(\"int\", isBoolean(x) ? x & 1 : isNumber(x) ? x | 0 : x);\nexport const uint = (x) => lit(\"uint\", isBoolean(x) ? x & 1 : isNumber(x) ? x >>> 0 : x);\nconst wrap = (type, ctor) => (x) => isNumber(x)\n    ? ctor(x)\n    : x !== undefined && !isVec(x) && x.type !== type\n        ? ctor(x)\n        : x;\n/**\n * Takes a plain number or numeric term and wraps it as float literal if\n * needed.\n *\n * @param x -\n */\nexport const wrapFloat = wrap(\"float\", float);\n/**\n * Takes a plain number or numeric term and wraps it as signed integer\n * literal if needed.\n *\n * @param x -\n */\nexport const wrapInt = wrap(\"int\", int);\n/**\n * Takes a plain number or numeric term and wraps it as unsigned integer\n * literal if needed.\n *\n * @param x -\n */\nexport const wrapUint = wrap(\"uint\", uint);\n/**\n * Takes a plain number or numeric term and wraps it as boolean literal\n * if needed.\n *\n * @param x -\n */\nexport const wrapBool = wrap(\"bool\", bool);\nexport const TRUE = bool(true);\nexport const FALSE = bool(false);\nexport const FLOAT0 = float(0);\nexport const FLOAT1 = float(1);\nexport const FLOAT2 = float(2);\nexport const FLOAT05 = float(0.5);\nexport const INT0 = int(0);\nexport const INT1 = int(1);\nexport const UINT0 = uint(0);\nexport const UINT1 = uint(1);\nexport const PI = float(Math.PI);\nexport const TAU = float(Math.PI * 2);\nexport const HALF_PI = float(Math.PI / 2);\nexport const SQRT2 = float(Math.SQRT2);\nconst $gvec = (wrap, init) => (xs) => [xs[0] === undefined ? init : wrap(xs[0]), ...xs.slice(1).map(wrap)];\nconst $vec = $gvec(wrapFloat, FLOAT0);\nconst $ivec = $gvec(wrapInt, INT0);\nconst $uvec = $gvec(wrapUint, UINT0);\nconst $bvec = $gvec(wrapBool, FALSE);\nconst $info = (xs, info) => isVec(xs[0]) ? xs[0].type[0] : info[xs.length];\nconst $gvec2 = (type, ctor, xs) => lit(type, (xs = ctor(xs)), $info(xs, [\"n\", \"n\"]));\nconst $gvec3 = (type, ctor, xs) => lit(type, (xs = ctor(xs)), xs.length === 2 ? \"vn\" : $info(xs, [\"n\", \"n\"]));\nconst $gvec4 = (type, ctor, xs) => lit(type, (xs = ctor(xs)), xs.length === 2\n    ? isVec(xs[1])\n        ? \"vv\"\n        : \"vn\"\n    : $info(xs, [\"n\", \"n\", , \"vnn\"]));\nconst $gmat = (type, info, xs) => lit(type, (xs = $vec(xs)), info[xs.length]);\n// prettier-ignore\nexport function vec2(...xs) {\n    return $gvec2(\"vec2\", $vec, xs);\n}\nexport function vec3(...xs) {\n    return $gvec3(\"vec3\", $vec, xs);\n}\nexport function vec4(...xs) {\n    return $gvec4(\"vec4\", $vec, xs);\n}\n// prettier-ignore\nexport function ivec2(...xs) {\n    return $gvec2(\"ivec2\", $ivec, xs);\n}\nexport function ivec3(...xs) {\n    return $gvec3(\"ivec3\", $ivec, xs);\n}\nexport function ivec4(...xs) {\n    return $gvec4(\"ivec4\", $ivec, xs);\n}\n// prettier-ignore\nexport function uvec2(...xs) {\n    return $gvec2(\"uvec2\", $uvec, xs);\n}\nexport function uvec3(...xs) {\n    return $gvec3(\"uvec3\", $uvec, xs);\n}\nexport function uvec4(...xs) {\n    return $gvec4(\"uvec4\", $uvec, xs);\n}\n// prettier-ignore\nexport function bvec2(...xs) {\n    return $gvec2(\"bvec2\", $bvec, xs);\n}\nexport function bvec3(...xs) {\n    return $gvec3(\"bvec3\", $bvec, xs);\n}\nexport function bvec4(...xs) {\n    return $gvec4(\"bvec4\", $bvec, xs);\n}\nexport function mat2(...xs) {\n    return $gmat(\"mat2\", [\"n\", \"n\", \"vv\"], xs);\n}\nexport function mat3(...xs) {\n    return $gmat(\"mat3\", [\"n\", \"n\", , \"vvv\"], xs);\n}\nexport function mat4(...xs) {\n    return $gmat(\"mat4\", [\"n\", \"n\", , , \"vvvv\"], xs);\n}\n","import { bool, float, int, uint, vec2, vec3, vec4 } from \"./lit\";\n/**\n * Returns base type for given term. Used for array ops.\n *\n * @example\n * ```ts\n * itemType(\"vec2[]\") => \"vec2\"\n * ```\n */\nexport const itemType = (type) => type.replace(\"[]\", \"\");\n/**\n * Takes a numeric term and a plain number, returns number wrapped in\n * typed literal compatible with term.\n *\n * @param t -\n * @param x -\n */\nexport const numberWithMatchingType = (t, x) => {\n    const id = t.type[0];\n    return id === \"i\"\n        ? int(x)\n        : id === \"u\"\n            ? uint(x)\n            : id === \"b\"\n                ? bool(x)\n                : float(x);\n};\nexport const matchingPrimFor = (t, x) => {\n    const ctor = { vec2, vec3, vec4 }[t.type];\n    return ctor ? ctor(x) : x;\n};\nexport const matchingBoolType = (t) => ({\n    float: \"bool\",\n    int: \"bool\",\n    uint: \"bool\",\n    vec2: \"bvec2\",\n    ivec2: \"bvec2\",\n    uvec2: \"bvec2\",\n    vec3: \"bvec3\",\n    ivec3: \"bvec3\",\n    uvec3: \"bvec3\",\n    vec4: \"bvec4\",\n    ivec4: \"bvec4\",\n    uvec4: \"bvec4\",\n}[t.type]);\n","export var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"FINE\"] = 0] = \"FINE\";\n    LogLevel[LogLevel[\"DEBUG\"] = 1] = \"DEBUG\";\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n    LogLevel[LogLevel[\"SEVERE\"] = 4] = \"SEVERE\";\n    LogLevel[LogLevel[\"NONE\"] = 5] = \"NONE\";\n})(LogLevel || (LogLevel = {}));\n","import { LogLevel } from \"./api/logger\";\nexport const NULL_LOGGER = Object.freeze({\n    level: LogLevel.NONE,\n    fine() { },\n    debug() { },\n    info() { },\n    warn() { },\n    severe() { },\n});\nexport class ConsoleLogger {\n    constructor(id, level = LogLevel.FINE) {\n        this.id = id;\n        this.level = level;\n    }\n    fine(...args) {\n        this.level <= LogLevel.FINE && this.log(\"FINE\", args);\n    }\n    debug(...args) {\n        this.level <= LogLevel.DEBUG && this.log(\"DEBUG\", args);\n    }\n    info(...args) {\n        this.level <= LogLevel.INFO && this.log(\"INFO\", args);\n    }\n    warn(...args) {\n        this.level <= LogLevel.WARN && this.log(\"WARN\", args);\n    }\n    severe(...args) {\n        this.level <= LogLevel.SEVERE && this.log(\"SEVERE\", args);\n    }\n    log(level, args) {\n        console.log(`[${level}] ${this.id}:`, ...args);\n    }\n}\n","import { NULL_LOGGER } from \"@thi.ng/api\";\n/**\n * Unique symbol used for registering a default / fallback\n * implementation.\n */\nexport const DEFAULT = Symbol();\nexport let LOGGER = NULL_LOGGER;\nexport const setLogger = (logger) => (LOGGER = logger);\n","import { unsupported } from \"@thi.ng/errors\";\nimport { DEFAULT, LOGGER } from \"./constants\";\nexport function defmulti(f, ancestors) {\n    const impls = {};\n    const rels = ancestors\n        ? makeRels(ancestors)\n        : {};\n    const fn = (...args) => {\n        const id = f(...args);\n        const g = impls[id] || findImpl(impls, rels, id) || impls[DEFAULT];\n        return g\n            ? g(...args)\n            : unsupported(`missing implementation for: \"${id.toString()}\"`);\n    };\n    fn.add = (id, g) => {\n        if (impls[id]) {\n            LOGGER.warn(`overwriting '${id.toString()}' impl`);\n        }\n        impls[id] = g;\n        return true;\n    };\n    fn.addAll = (_impls) => {\n        let ok = true;\n        for (let id in _impls) {\n            ok = fn.add(id, _impls[id]) && ok;\n        }\n        return ok;\n    };\n    fn.remove = (id) => {\n        if (!impls[id])\n            return false;\n        delete impls[id];\n        return true;\n    };\n    fn.callable = (...args) => {\n        const id = f(...args);\n        return !!(impls[id] ||\n            findImpl(impls, rels, id) ||\n            impls[DEFAULT]);\n    };\n    fn.isa = (id, parent) => {\n        let val = rels[id];\n        !val && (rels[id] = val = new Set());\n        val.add(parent);\n    };\n    fn.impls = () => {\n        const res = new Set(Object.keys(impls));\n        for (let id in rels) {\n            findImpl(impls, rels, id) && res.add(id);\n        }\n        impls[DEFAULT] && res.add(DEFAULT);\n        return res;\n    };\n    fn.rels = () => rels;\n    fn.parents = (id) => rels[id];\n    fn.ancestors = (id) => new Set(findAncestors([], rels, id));\n    fn.dependencies = function* () {\n        for (let a in rels) {\n            for (let b of rels[a])\n                yield [a, b];\n        }\n        for (let id in impls) {\n            !rels[id] && (yield [id, undefined]);\n        }\n    };\n    return fn;\n}\nconst findImpl = (impls, rels, id) => {\n    const parents = rels[id];\n    if (!parents)\n        return;\n    for (let p of parents) {\n        let impl = impls[p] || findImpl(impls, rels, p);\n        if (impl)\n            return impl;\n    }\n};\nconst findAncestors = (acc, rels, id) => {\n    const parents = rels[id];\n    if (parents) {\n        for (let p of parents) {\n            acc.push(p);\n            findAncestors(acc, rels, p);\n        }\n    }\n    return acc;\n};\nconst makeRels = (spec) => {\n    const rels = {};\n    for (let k in spec) {\n        const val = spec[k];\n        rels[k] = val instanceof Set ? val : new Set(val);\n    }\n    return rels;\n};\n","import { DEFAULT, defmulti } from \"@thi.ng/defmulti\";\nimport { unsupported } from \"@thi.ng/errors\";\n/**\n * Takes an object of code generator functions and returns a new code\n * generator / compile target function which serializes a given AST\n * using the provided node type implementations.\n *\n * {@link @thi.ng/shader-ast-glsl#targetGLSL}\n *\n * @param impls -\n */\nexport const defTarget = (impls) => {\n    const emit = defmulti((x) => x.tag);\n    emit.add(DEFAULT, (t) => unsupported(`no impl for AST node type: '${t.tag}'`));\n    emit.addAll(impls);\n    return emit;\n};\n","export const isString = (x) => typeof x === \"string\";\n","import { defError } from \"./deferror\";\nexport const IllegalArgumentError = defError(() => \"illegal argument(s)\");\nexport const illegalArgs = (msg) => {\n    throw new IllegalArgumentError(msg);\n};\n","let symID = 0;\n/**\n * Helper for deterministic code generation / testing. Resets sym ID\n * counter.\n */\nexport const resetSymID = () => (symID = 0);\n/**\n * Generates a new symbol name, e.g. `_sa2`. Uses base36 for counter to\n * keep names short.\n */\nexport const gensym = () => `_s${(symID++).toString(36)}`;\n","import { assert } from \"@thi.ng/api\";\nimport { isString } from \"@thi.ng/checks\";\nimport { illegalArgs } from \"@thi.ng/errors\";\nimport { gensym } from \"./idgen\";\nexport function sym(type, ...xs) {\n    let id;\n    let opts;\n    let init;\n    switch (xs.length) {\n        case 0:\n            if (!isString(type)) {\n                init = type;\n                type = init.type;\n            }\n            break;\n        case 1:\n            if (isString(xs[0])) {\n                id = xs[0];\n            }\n            else if (xs[0].tag) {\n                init = xs[0];\n            }\n            else {\n                opts = xs[0];\n            }\n            break;\n        case 2:\n            if (isString(xs[0])) {\n                [id, opts] = xs;\n            }\n            else {\n                [opts, init] = xs;\n            }\n            break;\n        case 3:\n            [id, opts, init] = xs;\n            break;\n        default:\n            illegalArgs();\n    }\n    return {\n        tag: \"sym\",\n        type,\n        id: id || gensym(),\n        opts: opts || {},\n        init: init,\n    };\n}\nexport const constSym = (type, id, opts, init) => sym(type, id || gensym(), Object.assign({ const: true }, opts), init);\n/**\n * Defines a new symbol with optional initial array values.\n *\n * Important: Array initializers are UNSUPPORTED in GLSL ES v1 (WebGL),\n * any code using such initializers will only work under WebGL2 or other\n * targets.\n */\nexport const arraySym = (type, id, opts = {}, init) => {\n    if (init && opts.num == null) {\n        opts.num = init.length;\n    }\n    assert(opts.num != null, \"missing array length\");\n    init &&\n        assert(opts.num === init.length, `expected ${opts.num} items in array, but got ${init.length}`);\n    const atype = (type + \"[]\");\n    return {\n        tag: \"sym\",\n        type: atype,\n        id: id || gensym(),\n        opts,\n        init: init\n            ? {\n                tag: \"array_init\",\n                type: atype,\n                init,\n            }\n            : undefined,\n    };\n};\nexport const input = (type, id, opts) => sym(type, id, Object.assign({ q: \"in\", type: \"in\" }, opts));\nexport const output = (type, id, opts) => sym(type, id, Object.assign({ q: \"out\", type: \"out\" }, opts));\nexport const uniform = (type, id, opts) => sym(type, id, Object.assign({ q: \"in\", type: \"uni\" }, opts));\n","export var GLSLVersion;\n(function (GLSLVersion) {\n    GLSLVersion[\"GLES_100\"] = \"100\";\n    GLSLVersion[\"GLES_300\"] = \"300 es\";\n})(GLSLVersion || (GLSLVersion = {}));\n","import { isBoolean, isNumber } from \"@thi.ng/checks\";\nimport { unsupported } from \"@thi.ng/errors\";\nimport { defTarget, isMat, isVec, itemType, sym, } from \"@thi.ng/shader-ast\";\nimport { GLSLVersion } from \"./api\";\nconst RE_SEMI = /[};]$/;\n/**\n * GLSL code gen, targets GLSL ES 3.00 (WebGL2) by default.\n *\n * Use options object to configure shader type and GLSL version: `100`\n * for WebGL, 300 for WebGL2. Currently, the only differences in terms\n * of code generation, not correctness, are:\n *\n * - attribute, varying, uniform declarations\n * - texture lookup function naming\n *\n * Unsupported features in GLSL 100:\n *\n * - Fragment shader output vars\n *\n * @param opts -\n */\nexport const targetGLSL = (opts) => {\n    const _opts = Object.assign({ type: \"fs\", version: GLSLVersion.GLES_300, versionPragma: true, prelude: \"\" }, opts);\n    const isVS = _opts.type === \"vs\";\n    // TODO update once we have struct support\n    const $type = (t) => t;\n    const $list = (body, sep = \", \") => body.map(emit).join(sep);\n    const $fn = (t) => `${t.id}(${$list(t.args)})`;\n    const $decl = (sym, arg = false) => {\n        const { id, type, opts, init } = sym;\n        const res = [];\n        if (opts.type) {\n            let type;\n            if (_opts.version < GLSLVersion.GLES_300) {\n                if (isVS) {\n                    type = {\n                        in: \"attribute\",\n                        out: \"varying\",\n                        uni: \"uniform\",\n                    }[opts.type];\n                }\n                else {\n                    type = {\n                        in: \"varying\",\n                        out: null,\n                        uni: \"uniform\",\n                    }[opts.type];\n                    !type &&\n                        unsupported(\"GLSL 100 doesn't support fragment shader output variables\");\n                }\n            }\n            else {\n                opts.loc != null && res.push(`layout(location=${opts.loc}) `);\n                opts.smooth != null && res.push(opts.smooth + \" \");\n                type = opts.type === \"uni\" ? \"uniform\" : opts.type;\n            }\n            res.push(type + \" \");\n        }\n        else {\n            opts.const && res.push(\"const \");\n            arg && opts.q && res.push(opts.q + \" \");\n        }\n        opts.prec && res.push(opts.prec + \" \");\n        res.push($type(itemType(type)), \" \", id);\n        opts.num && res.push(`[${opts.num}]`);\n        init && res.push(\" = \", emit(init));\n        return res.join(\"\");\n    };\n    const emit = defTarget({\n        arg: (t) => $decl(t, true),\n        array_init: (t) => _opts.version >= GLSLVersion.GLES_300\n            ? `${t.type}(${$list(t.init)})`\n            : unsupported(`array initializers not available in GLSL ${_opts.version}`),\n        assign: (t) => emit(t.l) + \" = \" + emit(t.r),\n        ctrl: (t) => t.id,\n        call: $fn,\n        call_i: (t) => t.id === \"texture\" && _opts.version < GLSLVersion.GLES_300\n            ? `${t.id}${t.args[0].type.substr(7)}(${$list(t.args)})`\n            : $fn(t),\n        decl: (t) => $decl(t.id),\n        fn: (t) => `${$type(t.type)} ${t.id}(${$list(t.args)}) ${emit(t.scope)}`,\n        for: (t) => `for(${t.init ? emit(t.init) : \"\"}; ${emit(t.test)}; ${t.iter ? emit(t.iter) : \"\"}) ${emit(t.scope)}`,\n        idx: (t) => `${emit(t.val)}[${emit(t.id)}]`,\n        if: (t) => {\n            const res = `if (${emit(t.test)}) ` + emit(t.t);\n            return t.f ? res + \" else \" + emit(t.f) : res;\n        },\n        lit: (t) => {\n            const v = t.val;\n            switch (t.type) {\n                case \"bool\":\n                    return isBoolean(v) ? String(v) : `bool(${emit(v)})`;\n                case \"float\":\n                    return isNumber(v)\n                        ? v === Math.trunc(v)\n                            ? v + \".0\"\n                            : String(v)\n                        : `float(${emit(v)})`;\n                case \"int\":\n                case \"uint\":\n                    return isNumber(v) ? String(v) : `${t.type}(${emit(v)})`;\n                default: {\n                    if (isVec(t) || isMat(t)) {\n                        return `${t.type}(${$list(v)})`;\n                    }\n                    return unsupported(`unknown type: ${t.type}`);\n                }\n            }\n        },\n        op1: (t) => t.post ? `(${emit(t.val)}${t.op})` : `(${t.op}${emit(t.val)})`,\n        op2: (t) => `(${emit(t.l)} ${t.op} ${emit(t.r)})`,\n        ret: (t) => \"return\" + (t.val ? \" \" + emit(t.val) : \"\"),\n        scope: (t) => {\n            let res = t.body\n                .map(emit)\n                .reduce((acc, x) => (acc.push(RE_SEMI.test(x) ? x : x + \";\"), acc), [])\n                .join(\"\\n\");\n            res += t.body.length && !RE_SEMI.test(res) ? \";\" : \"\";\n            if (!t.global) {\n                return `{\\n${res}\\n}`;\n            }\n            if (_opts.prelude) {\n                res = _opts.prelude + \"\\n\" + res;\n            }\n            if (_opts.versionPragma) {\n                res = `#version ${_opts.version}\\n` + res;\n            }\n            return res;\n        },\n        swizzle: (t) => `${emit(t.val)}.${t.id}`,\n        sym: (t) => t.id,\n        ternary: (t) => `(${emit(t.test)} ? ${emit(t.t)} : ${emit(t.f)})`,\n        while: (t) => `while (${emit(t.test)}) ${emit(t.scope)}`,\n    });\n    Object.assign(emit, {\n        gl_FragColor: sym(\"vec4\", \"gl_FragColor\"),\n        gl_FragCoord: sym(\"vec4\", \"gl_FragCoord\", { const: true }),\n        gl_FragData: sym(\"vec4[]\", \"gl_FragData\", { num: 1 }),\n        gl_FrontFacing: sym(\"bool\", \"gl_FrontFacing\", { const: true }),\n        gl_PointCoord: sym(\"vec2\", \"gl_PointCoord\", { const: true }),\n        gl_PointSize: sym(\"float\", \"gl_PointSize\"),\n        gl_Position: sym(\"vec4\", \"gl_Position\"),\n    });\n    return emit;\n};\n","export const isArray = Array.isArray;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export const DEFAULT_EPS = 1e-6;\n/**\n * Internal use only. **Do NOT use in user land code!**\n *\n * @internal\n */\nexport const SEMAPHORE = Symbol();\n/**\n * No-effect placeholder function.\n */\nexport const NO_OP = () => { };\n/**\n * Catch-all event ID\n */\nexport const EVENT_ALL = \"*\";\nexport const EVENT_ENABLE = \"enable\";\nexport const EVENT_DISABLE = \"disable\";\n","const OBJP = Object.getPrototypeOf({});\nconst FN = \"function\";\nconst STR = \"string\";\nexport const equiv = (a, b) => {\n    let proto;\n    if (a === b) {\n        return true;\n    }\n    if (a != null) {\n        if (typeof a.equiv === FN) {\n            return a.equiv(b);\n        }\n    }\n    else {\n        return a == b;\n    }\n    if (b != null) {\n        if (typeof b.equiv === FN) {\n            return b.equiv(a);\n        }\n    }\n    else {\n        return a == b;\n    }\n    if (typeof a === STR || typeof b === STR) {\n        return false;\n    }\n    if (((proto = Object.getPrototypeOf(a)), proto == null || proto === OBJP) &&\n        ((proto = Object.getPrototypeOf(b)), proto == null || proto === OBJP)) {\n        return equivObject(a, b);\n    }\n    if (typeof a !== FN &&\n        a.length !== undefined &&\n        typeof b !== FN &&\n        b.length !== undefined) {\n        return equivArrayLike(a, b);\n    }\n    if (a instanceof Set && b instanceof Set) {\n        return equivSet(a, b);\n    }\n    if (a instanceof Map && b instanceof Map) {\n        return equivMap(a, b);\n    }\n    if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime();\n    }\n    if (a instanceof RegExp && b instanceof RegExp) {\n        return a.toString() === b.toString();\n    }\n    // NaN\n    return a !== a && b !== b;\n};\nexport const equivArrayLike = (a, b, _equiv = equiv) => {\n    let l = a.length;\n    if (l === b.length) {\n        while (--l >= 0 && _equiv(a[l], b[l]))\n            ;\n    }\n    return l < 0;\n};\nexport const equivSet = (a, b, _equiv = equiv) => a.size === b.size && _equiv([...a.keys()].sort(), [...b.keys()].sort());\nexport const equivMap = (a, b, _equiv = equiv) => a.size === b.size && _equiv([...a].sort(), [...b].sort());\nexport const equivObject = (a, b, _equiv = equiv) => {\n    if (Object.keys(a).length !== Object.keys(b).length) {\n        return false;\n    }\n    for (let k in a) {\n        if (!b.hasOwnProperty(k) || !_equiv(a[k], b[k])) {\n            return false;\n        }\n    }\n    return true;\n};\n","export function dissoc(coll, keys) {\n    for (let k of keys) {\n        coll.delete(k);\n    }\n    return coll;\n}\nexport const dissocObj = (obj, keys) => {\n    for (let k of keys) {\n        delete obj[k];\n    }\n    return obj;\n};\n","export const isIterable = (x) => x != null && typeof x[Symbol.iterator] === \"function\";\n","/**\n * Reducer composition helper, internally used by various transducers\n * during initialization. Takes existing reducer `rfn` (a 3-tuple) and a\n * reducing function `fn`. Returns a new reducer tuple.\n *\n * @remarks\n * `rfn[2]` reduces values of type `B` into an accumulator of type `A`.\n * `fn` accepts values of type `C` and produces interim results of type\n * `B`, which are then (possibly) passed to the \"inner\" `rfn[2]`\n * function. Therefore the resulting reducer takes inputs of `C` and an\n * accumulator of type `A`.\n *\n * It is assumed that `fn` internally calls `rfn[2]` to pass its own\n * results for further processing by the nested reducer `rfn`.\n *\n * @example\n * ```ts\n * compR(rfn, fn)\n * // [rfn[0], rfn[1], fn]\n * ```\n *\n * @param rfn -\n * @param fn -\n */\nexport const compR = (rfn, fn) => [rfn[0], rfn[1], fn];\n","export const implementsFunction = (x, fn) => x != null && typeof x[fn] === \"function\";\n","export class Reduced {\n    constructor(val) {\n        this.value = val;\n    }\n    deref() {\n        return this.value;\n    }\n}\nexport const reduced = (x) => new Reduced(x);\nexport const isReduced = (x) => x instanceof Reduced;\nexport const ensureReduced = (x) => x instanceof Reduced ? x : new Reduced(x);\nexport const unreduced = (x) => (x instanceof Reduced ? x.deref() : x);\n","import { NO_OP, SEMAPHORE } from \"@thi.ng/api\";\nimport { isIterable } from \"@thi.ng/checks\";\nimport { ensureTransducer } from \"./internal/ensure\";\nimport { isReduced, unreduced } from \"./reduced\";\nimport { push } from \"./rfn/push\";\n/**\n * Takes a transducer and input iterable. Returns iterator of\n * transformed results.\n *\n * @param xform -\n * @param xs -\n */\nexport function* iterator(xform, xs) {\n    const rfn = ensureTransducer(xform)(push());\n    const complete = rfn[1];\n    const reduce = rfn[2];\n    for (let x of xs) {\n        const y = reduce([], x);\n        if (isReduced(y)) {\n            yield* unreduced(complete(y.deref()));\n            return;\n        }\n        if (y.length) {\n            yield* y;\n        }\n    }\n    yield* unreduced(complete([]));\n}\n/**\n * Optimized version of {@link iterator} for transducers which are\n * guaranteed to:\n *\n * 1) Only produce none or a single result per input\n * 2) Do not require a `completion` reduction step\n *\n * @param xform -\n * @param xs -\n */\nexport function* iterator1(xform, xs) {\n    const reduce = (ensureTransducer(xform)([NO_OP, NO_OP, (_, x) => x]))[2];\n    for (let x of xs) {\n        let y = reduce(SEMAPHORE, x);\n        if (isReduced(y)) {\n            y = unreduced(y.deref());\n            if (y !== SEMAPHORE) {\n                yield y;\n            }\n            return;\n        }\n        if (y !== SEMAPHORE) {\n            yield y;\n        }\n    }\n}\n/**\n * Helper function used by various transducers to wrap themselves as\n * transforming iterators. Delegates to {@link iterator1} by default.\n *\n * @param xform -\n * @param args -\n * @param impl -\n *\n * @internal\n */\nexport const $iter = (xform, args, impl = iterator1) => {\n    const n = args.length - 1;\n    return isIterable(args[n])\n        ? args.length > 1\n            ? impl(xform.apply(null, args.slice(0, n)), args[n])\n            : impl(xform(), args[0])\n        : undefined;\n};\n","import { implementsFunction } from \"@thi.ng/checks\";\nexport const ensureTransducer = (x) => implementsFunction(x, \"xform\")\n    ? x.xform()\n    : x;\n","import { isIterable } from \"@thi.ng/checks\";\nimport { compR } from \"../func/compr\";\nimport { iterator1 } from \"../iterator\";\nexport function map(fn, src) {\n    return isIterable(src)\n        ? iterator1(map(fn), src)\n        : (rfn) => {\n            const r = rfn[2];\n            return compR(rfn, (acc, x) => r(acc, fn(x)));\n        };\n}\n","import { mixin } from \"@thi.ng/api\";\nimport { isNode } from \"@thi.ng/checks\";\nimport { map } from \"@thi.ng/transducers\";\nconst inspect = isNode() ? require(\"util\").inspect : null;\nconst inspectSet = (coll, opts) => [...map((x) => inspect(x, opts), coll)].join(\", \");\nconst inspectMap = (coll, opts) => [\n    ...map(([k, v]) => `${inspect(k, opts)} => ${inspect(v, opts)}`, coll),\n].join(\", \");\n/**\n * NodeJS inspection mixin\n *\n * @remarks\n * Reference:\n * https://nodejs.org/api/util.html#util_custom_inspection_functions_on_objects\n *\n * @internal\n */\nexport const inspectable = mixin({\n    [Symbol.for(\"nodejs.util.inspect.custom\")](depth, opts) {\n        const name = this[Symbol.toStringTag];\n        const childOpts = Object.assign(Object.assign({}, opts), { depth: opts.depth === null ? null : opts.depth - 1 });\n        return depth >= 0\n            ? [\n                `${name}(${this.size || 0}) {`,\n                inspect\n                    ? this instanceof Set\n                        ? inspectSet(this, childOpts)\n                        : this instanceof Map\n                            ? inspectMap(this, childOpts)\n                            : \"\"\n                    : \"\",\n                \"}\",\n            ].join(\" \")\n            : opts.stylize(`[${name}]`, \"special\");\n    },\n});\n","export const isNode = () => typeof process === \"object\" &&\n    typeof process.versions === \"object\" &&\n    typeof process.versions.node !== \"undefined\";\n","/**\n * Class behavior mixin based on:\n * {@link http://raganwald.com/2015/06/26/decorators-in-es7.html}\n *\n * Additionally only injects/overwrites properties in target, which are\n * NOT marked with `@nomixin` (i.e. haven't set their `configurable`\n * property descriptor flag to `false`)\n *\n * @param behaviour - to mixin\n * @param sharedBehaviour -\n * @returns decorator function\n */\nexport const mixin = (behaviour, sharedBehaviour = {}) => {\n    const instanceKeys = Reflect.ownKeys(behaviour);\n    const sharedKeys = Reflect.ownKeys(sharedBehaviour);\n    const typeTag = Symbol(\"isa\");\n    function _mixin(clazz) {\n        for (let key of instanceKeys) {\n            const existing = Object.getOwnPropertyDescriptor(clazz.prototype, key);\n            if (!existing || existing.configurable) {\n                Object.defineProperty(clazz.prototype, key, {\n                    value: behaviour[key],\n                    writable: true,\n                });\n            }\n            else {\n                console.log(`not patching: ${clazz.name}.${key.toString()}`);\n            }\n        }\n        Object.defineProperty(clazz.prototype, typeTag, { value: true });\n        return clazz;\n    }\n    for (let key of sharedKeys) {\n        Object.defineProperty(_mixin, key, {\n            value: sharedBehaviour[key],\n            enumerable: sharedBehaviour.propertyIsEnumerable(key),\n        });\n    }\n    Object.defineProperty(_mixin, Symbol.hasInstance, {\n        value: (x) => !!x[typeTag],\n    });\n    return _mixin;\n};\n","import { isMap } from \"@thi.ng/checks\";\nexport function into(dest, src) {\n    if (isMap(dest)) {\n        for (let x of src) {\n            dest.set(x[0], x[1]);\n        }\n    }\n    else {\n        for (let x of src) {\n            dest.add(x);\n        }\n    }\n    return dest;\n}\n","export const isMap = (x) => x instanceof Map;\n","var ArraySet_1;\nimport { __decorate } from \"tslib\";\nimport { SEMAPHORE } from \"@thi.ng/api\";\nimport { equiv } from \"@thi.ng/equiv\";\nimport { dissoc } from \"./dissoc\";\nimport { equivSet } from \"./internal/equiv\";\nimport { inspectable } from \"./internal/inspect\";\nimport { into } from \"./into\";\nconst __private = new WeakMap();\nconst __vals = (inst) => __private.get(inst).vals;\n/**\n * An alternative set implementation to the native ES6 Set type. Uses\n * customizable equality/equivalence predicate and so is more useful\n * when dealing with structured data. Implements full API of native Set\n * and by the default uses {@link @thi.ng/equiv#equiv} for equivalence\n * checking.\n *\n * Additionally, the type also implements the {@link @thi.ng/api#ICopy},\n * {@link @thi.ng/api#IEmpty} and {@link @thi.ng/api#IEquiv} interfaces\n * itself.\n */\nlet ArraySet = ArraySet_1 = class ArraySet extends Set {\n    constructor(vals, opts = {}) {\n        super();\n        __private.set(this, { equiv: opts.equiv || equiv, vals: [] });\n        vals && this.into(vals);\n    }\n    *[Symbol.iterator]() {\n        yield* __vals(this);\n    }\n    get [Symbol.species]() {\n        return ArraySet_1;\n    }\n    get [Symbol.toStringTag]() {\n        return \"ArraySet\";\n    }\n    get size() {\n        return __vals(this).length;\n    }\n    copy() {\n        const $this = __private.get(this);\n        const s = new ArraySet_1(null, { equiv: $this.equiv });\n        __private.get(s).vals = $this.vals.slice();\n        return s;\n    }\n    empty() {\n        return new ArraySet_1(null, this.opts());\n    }\n    clear() {\n        __vals(this).length = 0;\n    }\n    first() {\n        if (this.size) {\n            return __vals(this)[0];\n        }\n    }\n    add(key) {\n        !this.has(key) && __vals(this).push(key);\n        return this;\n    }\n    into(keys) {\n        return into(this, keys);\n    }\n    has(key) {\n        return this.get(key, SEMAPHORE) !== SEMAPHORE;\n    }\n    /**\n     * Returns the canonical value for `x`, if present. If the set\n     * contains no equivalent for `x`, returns `notFound`.\n     *\n     * @param key - search key\n     * @param notFound - default value\n     */\n    get(key, notFound) {\n        const $this = __private.get(this);\n        const eq = $this.equiv;\n        const vals = $this.vals;\n        for (let i = vals.length; --i >= 0;) {\n            if (eq(vals[i], key)) {\n                return vals[i];\n            }\n        }\n        return notFound;\n    }\n    delete(key) {\n        const $this = __private.get(this);\n        const eq = $this.equiv;\n        const vals = $this.vals;\n        for (let i = vals.length; --i >= 0;) {\n            if (eq(vals[i], key)) {\n                vals.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n    disj(keys) {\n        return dissoc(this, keys);\n    }\n    equiv(o) {\n        return equivSet(this, o);\n    }\n    /**\n     * The value args given to the callback `fn` MUST be treated as\n     * readonly/immutable. This could be enforced via TS, but would\n     * break ES6 Set interface contract.\n     *\n     * @param fn\n     * @param thisArg\n     */\n    forEach(fn, thisArg) {\n        const vals = __vals(this);\n        for (let i = vals.length; --i >= 0;) {\n            const v = vals[i];\n            fn.call(thisArg, v, v, this);\n        }\n    }\n    *entries() {\n        for (let v of __vals(this)) {\n            yield [v, v];\n        }\n    }\n    *keys() {\n        yield* __vals(this);\n    }\n    *values() {\n        yield* __vals(this);\n    }\n    opts() {\n        return { equiv: __private.get(this).equiv };\n    }\n};\nArraySet = ArraySet_1 = __decorate([\n    inspectable\n], ArraySet);\nexport { ArraySet };\nexport const defArraySet = (vals, opts) => new ArraySet(vals, opts);\n","import { equiv } from \"@thi.ng/equiv\";\nexport const equivMap = (a, b) => {\n    if (a === b) {\n        return true;\n    }\n    if (!(b instanceof Map) || a.size !== b.size) {\n        return false;\n    }\n    for (let p of a.entries()) {\n        if (!equiv(b.get(p[0]), p[1])) {\n            return false;\n        }\n    }\n    return true;\n};\nexport const equivSet = (a, b) => {\n    if (a === b) {\n        return true;\n    }\n    if (!(b instanceof Set) || a.size !== b.size) {\n        return false;\n    }\n    for (let k of a.keys()) {\n        if (!b.has(k)) {\n            return false;\n        }\n    }\n    return true;\n};\n","var EquivMap_1;\nimport { __decorate } from \"tslib\";\nimport { SEMAPHORE, } from \"@thi.ng/api\";\nimport { isPlainObject } from \"@thi.ng/checks\";\nimport { equiv } from \"@thi.ng/equiv\";\nimport { pairs } from \"@thi.ng/transducers\";\nimport { ArraySet } from \"./array-set\";\nimport { dissoc } from \"./dissoc\";\nimport { equivMap } from \"./internal/equiv\";\nimport { inspectable } from \"./internal/inspect\";\nimport { into } from \"./into\";\nconst __private = new WeakMap();\nconst __map = (map) => __private.get(map).map;\nlet EquivMap = EquivMap_1 = class EquivMap extends Map {\n    /**\n     * Creates a new instance with optional initial key-value pairs and\n     * provided options. If no `opts` are given, uses `ArraySet` for\n     * storing canonical keys and {@link @thi.ng/equiv#equiv} for\n     * checking key equivalence.\n     *\n     * @param pairs - key-value pairs\n     * @param opts - config options\n     */\n    constructor(pairs, opts) {\n        super();\n        const _opts = Object.assign({ equiv, keys: ArraySet }, opts);\n        __private.set(this, {\n            keys: new _opts.keys(null, { equiv: _opts.equiv }),\n            map: new Map(),\n            opts: _opts,\n        });\n        if (pairs) {\n            this.into(pairs);\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    get [Symbol.species]() {\n        return EquivMap_1;\n    }\n    get [Symbol.toStringTag]() {\n        return \"EquivMap\";\n    }\n    get size() {\n        return __private.get(this).keys.size;\n    }\n    clear() {\n        const $this = __private.get(this);\n        $this.keys.clear();\n        $this.map.clear();\n    }\n    empty() {\n        return new EquivMap_1(null, __private.get(this).opts);\n    }\n    copy() {\n        const $this = __private.get(this);\n        const m = new EquivMap_1();\n        __private.set(m, {\n            keys: $this.keys.copy(),\n            map: new Map($this.map),\n            opts: $this.opts,\n        });\n        return m;\n    }\n    equiv(o) {\n        return equivMap(this, o);\n    }\n    delete(key) {\n        const $this = __private.get(this);\n        key = $this.keys.get(key, SEMAPHORE);\n        if (key !== SEMAPHORE) {\n            $this.map.delete(key);\n            $this.keys.delete(key);\n            return true;\n        }\n        return false;\n    }\n    dissoc(keys) {\n        return dissoc(this, keys);\n    }\n    /**\n     * The key & value args given the callback `fn` MUST be treated as\n     * readonly/immutable. This could be enforced via TS, but would\n     * break ES6 Map interface contract.\n     *\n     * @param fn\n     * @param thisArg\n     */\n    forEach(fn, thisArg) {\n        for (let pair of __map(this)) {\n            fn.call(thisArg, pair[1], pair[0], this);\n        }\n    }\n    get(key, notFound) {\n        const $this = __private.get(this);\n        key = $this.keys.get(key, SEMAPHORE);\n        if (key !== SEMAPHORE) {\n            return $this.map.get(key);\n        }\n        return notFound;\n    }\n    has(key) {\n        return __private.get(this).keys.has(key);\n    }\n    set(key, value) {\n        const $this = __private.get(this);\n        const k = $this.keys.get(key, SEMAPHORE);\n        if (k !== SEMAPHORE) {\n            $this.map.set(k, value);\n        }\n        else {\n            $this.keys.add(key);\n            $this.map.set(key, value);\n        }\n        return this;\n    }\n    into(pairs) {\n        return into(this, pairs);\n    }\n    entries() {\n        return __map(this).entries();\n    }\n    keys() {\n        return __map(this).keys();\n    }\n    values() {\n        return __map(this).values();\n    }\n    opts() {\n        return __private.get(this).opts;\n    }\n};\nEquivMap = EquivMap_1 = __decorate([\n    inspectable\n], EquivMap);\nexport { EquivMap };\nexport function defEquivMap(src, opts) {\n    return new EquivMap(isPlainObject(src) ? pairs(src) : src, opts);\n}\n","import { implementsFunction, isMap, isSet } from \"@thi.ng/checks\";\nexport const empty = (x, ctor) => implementsFunction(x, \"empty\")\n    ? x.empty()\n    : new (x[Symbol.species] || ctor)();\nexport const copy = (x, ctor) => implementsFunction(x, \"copy\")\n    ? x.copy()\n    : new (x[Symbol.species] || ctor)(x);\nexport const first = (x) => x[Symbol.iterator]().next().value;\nexport const objValues = (src) => {\n    const vals = [];\n    for (let k in src) {\n        src.hasOwnProperty(k) && vals.push(src[k]);\n    }\n    return vals;\n};\nexport const ensureMap = (x) => isMap(x) ? x : new Map(x);\nexport const ensureSet = (x) => isSet(x) ? x : new Set(x);\n","import { xformSetOp } from \"./internal/xform-setop\";\nimport { into } from \"./into\";\nimport { copy } from \"./utils\";\n/**\n * Computes union of sets `a` and `b` and writes results to new set or\n * optionally given set `out` (assumed to be empty for correct results).\n *\n * @param a - first set\n * @param b - other set\n * @param out - result set\n */\nexport const union = (a, b, out) => {\n    if (a.size < b.size) {\n        const t = a;\n        a = b;\n        b = t;\n    }\n    out = out ? into(out, a) : copy(a, Set);\n    return a === b ? out : into(out, b);\n};\nexport function unionR(src) {\n    return xformSetOp(unionR, union, src);\n}\n","import { isIterable } from \"@thi.ng/checks\";\nimport { compR } from \"../func/compr\";\nimport { iterator1 } from \"../iterator\";\nexport function filter(pred, src) {\n    return isIterable(src)\n        ? iterator1(filter(pred), src)\n        : (rfn) => {\n            const r = rfn[2];\n            return compR(rfn, (acc, x) => (pred(x) ? r(acc, x) : acc));\n        };\n}\n","export const isArrayLike = (x) => x != null && typeof x !== \"function\" && x.length !== undefined;\n","import { defError } from \"./deferror\";\nexport const IllegalArityError = defError(() => \"illegal arity\");\nexport const illegalArity = (n) => {\n    throw new IllegalArityError(n);\n};\n","import { implementsFunction, isArrayLike, isIterable } from \"@thi.ng/checks\";\nimport { illegalArity } from \"@thi.ng/errors\";\nimport { isReduced, unreduced } from \"./reduced\";\nconst parseArgs = (args) => args.length === 2\n    ? [undefined, args[1]]\n    : args.length === 3\n        ? [args[1], args[2]]\n        : illegalArity(args.length);\nexport function reduce(...args) {\n    const rfn = args[0];\n    const init = rfn[0];\n    const complete = rfn[1];\n    const reduce = rfn[2];\n    args = parseArgs(args);\n    const acc = args[0] == null ? init() : args[0];\n    const xs = args[1];\n    return unreduced(complete(implementsFunction(xs, \"$reduce\")\n        ? xs.$reduce(reduce, acc)\n        : isArrayLike(xs)\n            ? reduceArray(reduce, acc, xs)\n            : reduceIterable(reduce, acc, xs)));\n}\nexport function reduceRight(...args) {\n    const rfn = args[0];\n    const init = rfn[0];\n    const complete = rfn[1];\n    const reduce = rfn[2];\n    args = parseArgs(args);\n    let acc = args[0] == null ? init() : args[0];\n    const xs = args[1];\n    for (let i = xs.length; --i >= 0;) {\n        acc = reduce(acc, xs[i]);\n        if (isReduced(acc)) {\n            acc = acc.deref();\n            break;\n        }\n    }\n    return unreduced(complete(acc));\n}\nconst reduceArray = (rfn, acc, xs) => {\n    for (let i = 0, n = xs.length; i < n; i++) {\n        acc = rfn(acc, xs[i]);\n        if (isReduced(acc)) {\n            acc = acc.deref();\n            break;\n        }\n    }\n    return acc;\n};\nconst reduceIterable = (rfn, acc, xs) => {\n    for (let x of xs) {\n        acc = rfn(acc, x);\n        if (isReduced(acc)) {\n            acc = acc.deref();\n            break;\n        }\n    }\n    return acc;\n};\n/**\n * Convenience helper for building a full {@link Reducer} using the identity\n * function (i.e. `(x) => x`) as completion step (true for 90% of all\n * bundled transducers).\n *\n * @param init - init step of reducer\n * @param rfn - reduction step of reducer\n */\nexport const reducer = (init, rfn) => [init, (acc) => acc, rfn];\nexport const $$reduce = (rfn, args) => {\n    const n = args.length - 1;\n    return isIterable(args[n])\n        ? args.length > 1\n            ? reduce(rfn.apply(null, args.slice(0, n)), args[n])\n            : reduce(rfn(), args[0])\n        : undefined;\n};\n","import { ArraySet, EquivMap, union } from \"@thi.ng/associative\";\nimport { equiv } from \"@thi.ng/equiv\";\nimport { illegalArgs } from \"@thi.ng/errors\";\nimport { filter, reduce, reducer } from \"@thi.ng/transducers\";\n/**\n * {@link DGraph} factory function using optional provided edge pairs. If given,\n * each pair is a `[node, parent]` tuple, or using `[node, null]` to merely\n * register a node in the graph (without dependencies).\n *\n * @param edges\n */\nexport const defDGraph = (edges) => new DGraph(edges);\nexport class DGraph {\n    constructor(edges) {\n        this.dependencies = new EquivMap();\n        this.dependents = new EquivMap();\n        if (edges) {\n            for (let [a, b] of edges) {\n                b != null ? this.addDependency(a, b) : this.addNode(a);\n            }\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this.sort();\n    }\n    get [Symbol.species]() {\n        return DGraph;\n    }\n    copy() {\n        const g = new DGraph();\n        for (let e of this.dependencies) {\n            g.dependencies.set(e[0], e[1].copy());\n        }\n        for (let e of this.dependents) {\n            g.dependents.set(e[0], e[1].copy());\n        }\n        return g;\n    }\n    addNode(node) {\n        !this.dependencies.has(node) &&\n            this.dependencies.set(node, new ArraySet());\n        return this;\n    }\n    addDependency(node, dep) {\n        if (equiv(node, dep) || this.depends(dep, node)) {\n            illegalArgs(`Circular dependency between: ${node} & ${dep}`);\n        }\n        let deps = this.dependencies.get(node);\n        this.dependencies.set(node, deps ? deps.add(dep) : new ArraySet([dep]));\n        deps = this.dependents.get(dep);\n        this.dependents.set(dep, deps ? deps.add(node) : new ArraySet([node]));\n        return this;\n    }\n    addDependencies(node, deps) {\n        for (let d of deps) {\n            this.addDependency(node, d);\n        }\n    }\n    removeEdge(node, dep) {\n        let deps = this.dependencies.get(node);\n        if (deps) {\n            deps.delete(dep);\n        }\n        deps = this.dependents.get(dep);\n        if (deps) {\n            deps.delete(node);\n        }\n        return this;\n    }\n    removeNode(x) {\n        this.dependencies.delete(x);\n        return this;\n    }\n    depends(x, y) {\n        return this.transitiveDependencies(x).has(y);\n    }\n    dependent(x, y) {\n        return this.transitiveDependents(x).has(y);\n    }\n    immediateDependencies(x) {\n        return this.dependencies.get(x) || new ArraySet();\n    }\n    immediateDependents(x) {\n        return this.dependents.get(x) || new ArraySet();\n    }\n    isLeaf(x) {\n        return this.immediateDependents(x).size === 0;\n    }\n    isRoot(x) {\n        return this.immediateDependencies(x).size === 0;\n    }\n    nodes() {\n        return union(new ArraySet(this.dependencies.keys()), new ArraySet(this.dependents.keys()));\n    }\n    leaves() {\n        return filter((node) => this.isLeaf(node), this.nodes());\n    }\n    roots() {\n        return filter((node) => this.isRoot(node), this.nodes());\n    }\n    transitiveDependencies(x) {\n        return transitive(this.dependencies, x);\n    }\n    transitiveDependents(x) {\n        return transitive(this.dependents, x);\n    }\n    sort() {\n        const sorted = [];\n        const g = this.copy();\n        let queue = new ArraySet(g.leaves());\n        while (true) {\n            if (!queue.size) {\n                return sorted.reverse();\n            }\n            const node = queue.first();\n            queue.delete(node);\n            for (let d of [...g.immediateDependencies(node)]) {\n                g.removeEdge(node, d);\n                if (g.isLeaf(d)) {\n                    queue.add(d);\n                }\n            }\n            sorted.push(node);\n            g.removeNode(node);\n        }\n    }\n}\nconst transitive = (nodes, x) => {\n    const deps = nodes.get(x);\n    if (deps) {\n        return reduce(reducer(null, (acc, k) => union(acc, transitive(nodes, k))), deps, deps);\n    }\n    return new ArraySet();\n};\n","import { isArray } from \"@thi.ng/checks\";\nimport { DGraph } from \"@thi.ng/dgraph\";\nimport { isMat, isTerm, isVec } from \"./checks\";\n/**\n * Helper function for {@link walk}. Returns child nodes for any control\n * flow nodes containing a child scope.\n *\n * {@link allChildren}\n */\nexport const scopedChildren = (t) => t.tag === \"fn\" || t.tag === \"for\" || t.tag == \"while\"\n    ? t.scope.body\n    : t.tag === \"if\"\n        ? t.f\n            ? t.t.body.concat(t.f.body)\n            : t.t.body\n        : undefined;\n/**\n * Helper function for {@link walk}. Returns an array of all child nodes for\n * a given term (if any).\n *\n * {@link scopedChildren}\n */\nexport const allChildren = (t) => scopedChildren(t) ||\n    (t.tag === \"scope\"\n        ? t.body\n        : t.tag === \"ternary\"\n            ? [t.t, t.f]\n            : t.tag === \"ret\"\n                ? [t.val]\n                : t.tag === \"call\" || t.tag === \"call_i\"\n                    ? t.args\n                    : t.tag === \"sym\" && t.init\n                        ? [t.init]\n                        : t.tag === \"decl\"\n                            ? [t.id]\n                            : t.tag === \"op1\" || t.tag === \"swizzle\"\n                                ? [t.val]\n                                : t.tag === \"op2\"\n                                    ? [t.l, t.r]\n                                    : t.tag === \"assign\"\n                                        ? [t.r]\n                                        : isVec(t) || isMat(t)\n                                            ? t.val\n                                            : isTerm(t.val)\n                                                ? t.val\n                                                : undefined);\n/**\n * Traverses given AST in depth-first order and applies `visit` and\n * `children` fns to each node. Descends only further if `children`\n * returns an array of child nodes. The `visit` function must accept 2\n * args: the accumulator (`acc`) given to {@link walk} and a tree node. The\n * return value of `visit` becomes the new `acc` value, much like in a\n * reduce operation. {@link walk} itself returns the final `acc`.\n *\n * If `pre` is true (default), the `visit` function will be called prior\n * to visiting a node's children. If false, the visitor is called on the\n * way back up.\n *\n * @param visit -\n * @param children -\n * @param acc -\n * @param tree -\n * @param pre -\n */\nexport const walk = (visit, children, acc, tree, pre = true) => {\n    if (isArray(tree)) {\n        tree.forEach((x) => (acc = walk(visit, children, acc, x, pre)));\n    }\n    else {\n        pre && (acc = visit(acc, tree));\n        const c = children(tree);\n        c && (acc = walk(visit, children, acc, c, pre));\n        !pre && (acc = visit(acc, tree));\n    }\n    return acc;\n};\n/**\n * Builds dependency graph of given function, by recursively adding all\n * function dependencies. Returns graph.\n *\n * @param fn -\n * @param graph -\n */\nexport const buildCallGraph = (fn, graph = new DGraph()) => fn.deps && fn.deps.length\n    ? fn.deps.reduce((graph, d) => buildCallGraph(d, graph.addDependency(fn, d)), graph)\n    : graph.addNode(fn);\nexport const decl = (id) => ({\n    tag: \"decl\",\n    type: id.type,\n    id,\n});\n/**\n * Wraps the given AST node array in `scope` node, optionally as global\n * scope (default false). The interpretation of the global flag is\n * dependent on the target code gen. I.e. for GLSL / JS, the flag\n * disables wrapping the scope's body in `{}`, but else has no\n * difference. In general this node type only serves as internal\n * mechanism for various control flow AST nodes and should not need to\n * be used directly from user land code (though might be useful to\n * create custom / higher level control flow nodes).\n *\n * @param body -\n * @param global -\n */\nexport const scope = (body, global = false) => ({\n    tag: \"scope\",\n    type: \"void\",\n    body: (body\n        .filter((x) => x != null)\n        .map((x) => (x.tag === \"sym\" ? decl(x) : x))),\n    global,\n});\n/**\n * Takes an array of global sym/var definitions ({@link input},\n * {@link output}, {@link uniform}) and functions defined via\n * {@link (defn:1)}. Constructs the call graph of all transitively used\n * functions and bundles everything in topological order within a global\n * scope object, which is then returned to the user and can be passed to\n * a target codegen for full program output.\n *\n * - {@link scope}\n * - {@link input}\n * - {@link output}\n * - {@link uniform}\n *\n * @param body -\n */\nexport const program = (body) => {\n    const syms = body.filter((x) => x.tag !== \"fn\");\n    const g = body.reduce((acc, x) => (x.tag === \"fn\" ? buildCallGraph(x, acc) : acc), new DGraph());\n    return scope(syms.concat(g.sort()), true);\n};\n","import { NO_OP } from \"./constants\";\n/**\n * Takes a `test` result or predicate function without args and throws\n * error with given `msg` if test failed (i.e. is falsy).\n *\n * @remarks\n * The function is only enabled if `process.env.NODE_ENV != \"production\"`\n * or if the `UMBRELLA_ASSERTS` env var is set to 1.\n */\nexport const assert = (() => {\n    try {\n        return (process.env.NODE_ENV !== \"production\" ||\n            process.env.UMBRELLA_ASSERTS === \"1\");\n    }\n    catch (e) { }\n    return false;\n})()\n    ? (test, msg = \"assertion failed\") => {\n        if ((typeof test === \"function\" && !test()) || !test) {\n            throw new Error(typeof msg === \"function\" ? msg() : msg);\n        }\n    }\n    : NO_OP;\n","import { assert } from \"@thi.ng/api\";\nimport { isString } from \"@thi.ng/checks\";\nimport { gensym } from \"./idgen\";\nimport { allChildren, scope, scopedChildren, walk } from \"./scope\";\nimport { sym } from \"./sym\";\nconst defArg = (a) => {\n    const [type, id, opts] = isString(a) ? [a] : a;\n    return {\n        tag: \"arg\",\n        type,\n        id: id || gensym(),\n        opts: Object.assign({ q: \"in\" }, opts),\n    };\n};\n// prettier-ignore\nexport function defn(type, id, _args, _body) {\n    id = id || gensym();\n    const args = _args.map(defArg);\n    const body = (_body(...args.map((x) => sym(x.type, x.id, x.opts))).filter((x) => x != null));\n    // count & check returns\n    const returns = walk((n, t) => {\n        if (t.tag === \"ret\") {\n            assert(t.type === type, `wrong return type for function '${id}', expected ${type}, got ${t.type}`);\n            n++;\n        }\n        return n;\n    }, scopedChildren, 0, body);\n    if (type !== \"void\" && !returns) {\n        throw new Error(`function '${id}' must return a value of type ${type}`);\n    }\n    // verify all non-builtin functions called are also\n    // provided as deps to ensure complete call graph later\n    const deps = walk((acc, t) => {\n        if (t.tag === \"call\" && t.fn) {\n            acc.push(t.fn);\n        }\n        return acc;\n    }, allChildren, [], body);\n    const $ = (...xs) => funcall($, ...xs);\n    return Object.assign($, {\n        tag: \"fn\",\n        type,\n        id,\n        args,\n        deps,\n        scope: scope(body)\n    });\n}\n/**\n * Syntax sugar for defining `void main()` functions.\n *\n * @param body -\n */\nexport const defMain = (body) => defn(\"void\", \"main\", [], body);\nexport function ret(val) {\n    return {\n        tag: \"ret\",\n        type: val ? val.type : \"void\",\n        val,\n    };\n}\n// prettier-ignore\nexport function funcall(fn, ...args) {\n    return isString(fn)\n        ? {\n            tag: \"call\",\n            type: args[0],\n            id: fn,\n            args: args.slice(1)\n        }\n        : {\n            tag: \"call\",\n            type: fn.type,\n            id: fn.id,\n            args,\n            fn\n        };\n}\nexport const builtinCall = (id, type, ...args) => ({\n    tag: \"call_i\",\n    type,\n    id,\n    args,\n});\n","import { assert } from \"@thi.ng/api\";\nexport const assign = (l, r) => {\n    assert(l.tag !== \"swizzle\" || l.val.tag === \"sym\", \"can't assign to non-symbol swizzle\");\n    return {\n        tag: \"assign\",\n        type: l.type,\n        l,\n        r,\n    };\n};\n","import { isNumber } from \"@thi.ng/checks\";\nimport { isMat, isVec } from \"./checks\";\nimport { numberWithMatchingType } from \"./item\";\nimport { float } from \"./lit\";\nexport const op1 = (op, val, post = false) => ({\n    tag: \"op1\",\n    type: val.type,\n    op,\n    val,\n    post,\n});\nconst OP_INFO = {\n    mave: \"mv\",\n    vema: \"vm\",\n    vefl: \"vn\",\n    mafl: \"vn\",\n    flve: \"nv\",\n    flma: \"nv\",\n    ivin: \"vn\",\n    iniv: \"nv\",\n    uvui: \"vn\",\n    uiuv: \"nv\",\n};\nexport const op2 = (op, _l, _r, rtype, info) => {\n    const nl = isNumber(_l);\n    const nr = isNumber(_r);\n    let type;\n    let l;\n    let r;\n    if (nl) {\n        if (nr) {\n            // (number, number)\n            l = float(_l);\n            r = float(_r);\n            type = \"float\";\n        }\n        else {\n            // (number, term)\n            r = _r;\n            l = numberWithMatchingType(r, _l);\n            type = r.type;\n        }\n    }\n    else if (nr) {\n        // (term, number)\n        l = _l;\n        r = numberWithMatchingType(l, _r);\n        type = l.type;\n    }\n    else {\n        // (term, term)\n        l = _l;\n        r = _r;\n        type =\n            rtype ||\n                (isVec(l)\n                    ? l.type\n                    : isVec(r)\n                        ? r.type\n                        : isMat(r)\n                            ? r.type\n                            : l.type);\n    }\n    return {\n        tag: \"op2\",\n        type: rtype || type,\n        info: info || OP_INFO[l.type.substr(0, 2) + r.type.substr(0, 2)],\n        op,\n        l: l,\n        r: r,\n    };\n};\nexport const inc = (t) => op1(\"++\", t, true);\nexport const dec = (t) => op1(\"--\", t, true);\n// prettier-ignore\nexport function add(l, r) {\n    return op2(\"+\", l, r);\n}\nexport function sub(l, r) {\n    return op2(\"-\", l, r);\n}\nexport function mul(l, r) {\n    return op2(\"*\", l, r, !isNumber(l) && !isNumber(r) && isMat(l) && isVec(r)\n        ? r.type\n        : undefined);\n}\nexport function div(l, r) {\n    return op2(\"/\", l, r);\n}\nexport function modi(l, r) {\n    return op2(\"%\", isNumber(l) ? numberWithMatchingType(r, l) : l, isNumber(r) ? numberWithMatchingType(l, r) : r);\n}\nexport const neg = (val) => op1(\"-\", val);\n// prettier-ignore\nexport function madd(a, b, c) {\n    return add(mul(a, b), c);\n}\n// prettier-ignore\nexport function addm(a, b, c) {\n    return mul(add(a, b), c);\n}\nexport const not = (val) => op1(\"!\", val);\nexport const or = (a, b) => op2(\"||\", a, b);\nexport const and = (a, b) => op2(\"&&\", a, b);\nconst cmp = (op) => (a, b) => op2(op, a, b, \"bool\");\nexport const eq = cmp(\"==\");\nexport const neq = cmp(\"!=\");\nexport const lt = cmp(\"<\");\nexport const lte = cmp(\"<=\");\nexport const gt = cmp(\">\");\nexport const gte = cmp(\">=\");\nexport const bitnot = (val) => op1(\"~\", val);\n// prettier-ignore\nexport function bitand(l, r) {\n    return op2(\"&\", l, r, undefined);\n}\n// prettier-ignore\nexport function bitor(l, r) {\n    return op2(\"|\", l, r, undefined);\n}\n// prettier-ignore\nexport function bitxor(l, r) {\n    return op2(\"^\", l, r, undefined);\n}\n","import { illegalArgs } from \"@thi.ng/errors\";\nimport { isVec } from \"../ast/checks\";\nimport { builtinCall } from \"../ast/function\";\nconst texRetType = (sampler) => {\n    const t = sampler.type[0];\n    const shadow = sampler.type.indexOf(\"Shadow\") > 0;\n    return t === \"s\"\n        ? shadow\n            ? \"float\"\n            : \"vec4\"\n        : t === \"i\"\n            ? shadow\n                ? \"int\"\n                : \"ivec4\"\n            : t === \"u\"\n                ? shadow\n                    ? \"uint\"\n                    : \"uvec4\"\n                : illegalArgs(`unknown sampler type ${sampler.type}`);\n};\nconst $call = (name, sampler, args, bias) => {\n    const f = bias\n        ? builtinCall(name, texRetType(sampler), sampler, ...args, bias)\n        : builtinCall(name, texRetType(sampler), sampler, ...args);\n    !isVec(f) && (f.info = \"n\");\n    return f;\n};\n// prettier-ignore\nexport function textureSize(sampler, lod) {\n    return builtinCall(\"textureSize\", /(3D|Array)/.test(sampler.type) ? \"ivec3\" : \"ivec2\", sampler, lod);\n}\n// prettier-ignore\nexport function texture(sampler, uv, bias) {\n    return $call(\"texture\", sampler, [uv], bias);\n}\n// prettier-ignore\nexport function textureProj(sampler, uv, bias) {\n    return $call(\"textureProj\", sampler, [uv], bias);\n}\n// prettier-ignore\nexport function textureLod(sampler, uv, lod) {\n    return $call(\"textureLod\", sampler, [uv, lod]);\n}\n// prettier-ignore\nexport function textureOffset(sampler, uv, off, bias) {\n    return $call(\"textureOffset\", sampler, [uv, off], bias);\n}\n// prettier-ignore\nexport function texelFetch(sampler, uv, lod) {\n    return $call(\"texelFetch\", sampler, [uv, lod]);\n}\n// prettier-ignore\nexport function texelFetchOffset(sampler, uv, lod, offset) {\n    return $call(\"texelFetchOffset\", sampler, [uv, lod, offset]);\n}\n// prettier-ignore\nexport function textureProjOffset(sampler, uv, off, bias) {\n    return $call(\"textureProjOffset\", sampler, [uv, off], bias);\n}\n// prettier-ignore\nexport function texelLodOffset(sampler, uv, lod, offset) {\n    return $call(\"texelLodOffset\", sampler, [uv, lod, offset]);\n}\n// prettier-ignore\nexport function textureProjLod(sampler, uv, lod) {\n    return $call(\"textureProjLod\", sampler, [uv, lod]);\n}\n// prettier-ignore\nexport function texelProjLodOffset(sampler, uv, lod, offset) {\n    return $call(\"texelProjLodOffset\", sampler, [uv, lod, offset]);\n}\n// prettier-ignore\nexport function textureGrad(sampler, uvw, dx, dy) {\n    return $call(\"textureGrad\", sampler, [uvw, dx, dy]);\n}\n// prettier-ignore\nexport function textureGradOffset(sampler, uvw, dx, dy, offset) {\n    return $call(\"textureGradOffset\", sampler, [uvw, dx, dy, offset]);\n}\n// prettier-ignore\nexport function textureProjGrad(sampler, uvw, dx, dy) {\n    return $call(\"textureProjGrad\", sampler, [uvw, dx, dy]);\n}\n// prettier-ignore\nexport function textureProjGradOffset(sampler, uvw, dx, dy, offset) {\n    return $call(\"textureProjGradOffset\", sampler, [uvw, dx, dy, offset]);\n}\nexport const dFdx = (sym) => builtinCall(\"dFdx\", sym.type, sym);\nexport const dFdy = (sym) => builtinCall(\"dFdy\", sym.type, sym);\nexport const fwidth = (sym) => builtinCall(\"fwidth\", sym.type, sym);\n","export function $(val, id) {\n    const type = val.type[0];\n    const rtype = (a, b) => id.length === 1 ? a : (b + id.length);\n    return {\n        tag: \"swizzle\",\n        type: type === \"i\"\n            ? rtype(\"int\", \"ivec\")\n            : type === \"u\"\n                ? rtype(\"uint\", \"uvec\")\n                : type === \"b\"\n                    ? rtype(\"bool\", \"bvec\")\n                    : rtype(\"float\", \"vec\"),\n        val,\n        id,\n    };\n}\nexport const $x = (val) => $(val, \"x\");\nexport const $y = (val) => $(val, \"y\");\nexport const $z = (val) => $(val, \"z\");\nexport const $w = (val) => $(val, \"w\");\nexport function $xy(val) {\n    return $(val, \"xy\");\n}\nexport function $xyz(val) {\n    return $(val, \"xyz\");\n}\n","import { builtinCall } from \"../ast/function\";\nimport { matchingBoolType, matchingPrimFor } from \"../ast/item\";\nconst primOp1 = (name) => (a) => builtinCall(name, a.type, a);\nconst primOp2 = (name) => (a, b) => builtinCall(name, a.type, a, b);\nconst primOp3 = (name) => (a, b, c) => builtinCall(name, a.type, a, b, c);\n/**\n * Returns normalized version of given vector.\n *\n * @param v -\n */\nexport const normalize = (v) => builtinCall(\"normalize\", v.type, v);\n/**\n * Returns length / magnitude of given vector.\n *\n * @param v -\n */\nexport const length = (v) => builtinCall(\"length\", \"float\", v);\nexport const distance = (a, b) => builtinCall(\"distance\", \"float\", a, b);\n/**\n * Returns dot product of given vectors.\n *\n * @param a -\n * @param b -\n */\nexport const dot = (a, b) => builtinCall(\"dot\", \"float\", a, b);\n/**\n * Returns cross product of given 3D vectors.\n *\n * @param a -\n * @param b -\n */\nexport const cross = (a, b) => builtinCall(\"cross\", a.type, a, b);\nexport const reflect = (i, n) => builtinCall(\"reflect\", i.type, i, n);\nexport const refract = (i, n, ior) => builtinCall(\"refract\", i.type, i, n, ior);\nexport const faceForward = (i, n, nref) => builtinCall(\"faceForward\", i.type, i, n, nref);\nexport const min = primOp2(\"min\");\nexport const max = primOp2(\"max\");\nexport const clamp = primOp3(\"clamp\");\nexport const step = primOp2(\"step\");\nexport const smoothstep = primOp3(\"smoothstep\");\nexport const radians = primOp1(\"radians\");\nexport const degrees = primOp1(\"degrees\");\nexport const cos = primOp1(\"cos\");\nexport const sin = primOp1(\"sin\");\nexport const tan = primOp1(\"tan\");\nexport const acos = primOp1(\"acos\");\nexport const asin = primOp1(\"asin\");\nexport function atan(a, b) {\n    const f = b\n        ? builtinCall(\"atan\", a.type, a, b)\n        : builtinCall(\"atan\", a.type, a);\n    b && (f.info = \"nn\");\n    return f;\n}\nexport const pow = primOp2(\"pow\");\nexport const exp = primOp1(\"exp\");\nexport const log = primOp1(\"log\");\nexport const exp2 = primOp1(\"exp2\");\nexport const log2 = primOp1(\"log2\");\nexport const sqrt = primOp1(\"sqrt\");\nexport const inversesqrt = primOp1(\"inversesqrt\");\nexport const abs = primOp1(\"abs\");\nexport const sign = primOp1(\"sign\");\nexport const floor = primOp1(\"floor\");\nexport const ceil = primOp1(\"ceil\");\nexport const fract = primOp1(\"fract\");\nexport const powf = (x, y) => pow(x, matchingPrimFor(x, y));\nexport function mod(a, b) {\n    const f = builtinCall(\"mod\", a.type, a, b);\n    b.type === \"float\" && (f.info = \"n\");\n    return f;\n}\n/**\n * Important: Currently unsupported by JS target.\n *\n * TODO add additional metadata for JS (`b` is an output var), issue #96\n *\n * @param a -\n * @param b -\n */\n// prettier-ignore\nexport const modf = (a, b) => builtinCall(\"modf\", a.type, a, b);\nexport function mix(a, b, c) {\n    const f = builtinCall(\"mix\", a.type, a, b, c);\n    c.type === \"float\" && (f.info = \"n\");\n    return f;\n}\n// prettier-ignore\nexport const matrixCompMult = (a, b) => builtinCall(\"matrixCompMult\", a.type, a, b);\nexport function isnan(a) {\n    return builtinCall(\"isnan\", matchingBoolType(a), a);\n}\nexport function isinf(a) {\n    return builtinCall(\"isinf\", matchingBoolType(a), a);\n}\n","import { decl, scope } from \"./scope\";\nexport const ifThen = (test, truthy, falsey) => ({\n    tag: \"if\",\n    type: \"void\",\n    test,\n    t: scope(truthy),\n    f: falsey ? scope(falsey) : undefined,\n});\nexport const ternary = (test, t, f) => ({\n    tag: \"ternary\",\n    type: t.type,\n    test,\n    t,\n    f,\n});\nexport function forLoop(...xs) {\n    const [init, test, iter, body] = xs.length === 2\n        ? [, xs[0], , xs[1]]\n        : xs.length === 3\n            ? [xs[0], xs[1], , xs[2]]\n            : xs;\n    return {\n        tag: \"for\",\n        type: \"void\",\n        init: init ? decl(init) : undefined,\n        test: test(init),\n        iter: iter ? iter(init) : undefined,\n        scope: scope(body(init)),\n    };\n}\nexport const whileLoop = (test, body) => ({\n    tag: \"while\",\n    type: \"void\",\n    test,\n    scope: scope(body),\n});\nconst ctrl = (id) => ({\n    tag: \"ctrl\",\n    type: \"void\",\n    id,\n});\nexport const brk = ctrl(\"break\");\nexport const cont = ctrl(\"continue\");\nexport const discard = ctrl(\"discard\");\n","import { add, defn, div, FLOAT0, FLOAT05, FLOAT1, FLOAT2, mix, mul, neq, ret, sub, ternary, } from \"@thi.ng/shader-ast\";\nimport { clamp01 } from \"./clamp\";\n/**\n * Returns normalized value of `x` WRT to interval [a,b]. Returns 0, if\n * `a` equals `b`.\n *\n * @param x -\n * @param a -\n * @param b -\n */\nexport const fitNorm1 = defn(\"float\", \"fitNorm1\", [\"float\", \"float\", \"float\"], (x, a, b) => [ret(ternary(neq(a, b), div(sub(x, a), sub(b, a)), FLOAT0))]);\n/**\n * Fits value `x` from closed interval [a,b] to closed interval [c,d]. No\n * clamping performed.\n *\n * @param x\n * @param a\n * @param b\n * @param c\n * @param d\n */\nexport const fit = (x, a, b, c, d) => mix(c, d, div(sub(x, a), sub(b, a)));\n/**\n * Same as {@link fit}, but first clamps `x` to closed [a,b] interval.\n *\n * @param x\n * @param a\n * @param b\n * @param c\n * @param d\n */\nexport const fitClamped = (x, a, b, c, d) => mix(c, d, clamp01(div(sub(x, a), sub(b, a))));\n/**\n * Inline function. Fits value `a` in [0..1] interval to new interval\n * [b..c]. No clamping performed. Same as `mix(b, c, a)`\n *\n * @param a -\n * @param b -\n * @param c -\n */\nexport const fit01 = (a, b, c) => mix(b, c, a);\n/**\n * Inline function. Fits value `x` in [-1..+1] interval to [0..1]\n * interval. No clamping performed.\n *\n * @param x -\n */\nexport const fit1101 = (x) => add(mul(x, FLOAT05), FLOAT05);\n/**\n * Inline function. Fits value `x` in [0..1] interval to [-1..+1]\n * interval. No clamping performed.\n *\n * @param x -\n */\nexport const fit0111 = (x) => sub(mul(x, FLOAT2), FLOAT1);\n","import {\n\tgetFragmentGenerator,\n\tgetVertexGenerator,\n} from '../shared-utils/shaders/ast'\nimport {\n\tprogram,\n\tdefMain,\n\tassign,\n\tvec4,\n\tMat4Sym,\n\tVec3Sym,\n\tinput,\n\tuniform,\n\toutput,\n\tmul,\n\t$xyz,\n\tnormalize,\n\tvec3,\n\tVec2Sym,\n\t$y,\n\t$x,\n\tSampler2DSym,\n\tVec4Sym,\n\ttexture,\n\tsym,\n\tFloatSym,\n\tadd,\n\t$w,\n\t$z,\n\tpow,\n\tfloat,\n\tmix,\n\tvec2,\n\tsub,\n\tabs,\n} from '@thi.ng/shader-ast'\nimport { halfLambert, fit0111, fit1101 } from '@thi.ng/shader-ast-stdlib'\n\nconst fs = getFragmentGenerator()\nconst vs = getVertexGenerator()\n\n// varyings\n\nlet vNormal: Vec3Sym\nlet vUv: Vec2Sym\n\n// Vertex\n\nlet aPosition: Vec3Sym\nlet aUV: Vec2Sym\nlet projectionMat: Mat4Sym\nlet viewMat: Mat4Sym\nexport const lineVert = vs(\n\t// prettier-ignore\n\tprogram([\n\t\t(viewMat = uniform('mat4', 'view')),\n\t\t(projectionMat = uniform('mat4', 'projection')),\n\t\t(aPosition = input('vec3', 'position')),\n\t\t(aUV = input('vec2', 'uv')),\n\t\t(vUv = output('vec2', 'vUv')),\n\n\t\tdefMain(() => [\n\t\t\tassign(vUv, aUV),\n\t\t\tassign(vs.gl_Position, mul(projectionMat, mul(viewMat, vec4(aPosition, 1)))),\n\t\t]),\n\t]),\n)\n\n// Fragment\n\nlet uNoiseTex: Sampler2DSym\nlet noise: Vec4Sym\nlet noiseVal: FloatSym\nexport const lineFrag = fs(\n\t// prettier-ignore\n\tprogram([\n\t\t(uNoiseTex = uniform('sampler2D', 'noiseTex')),\n\t\t(vNormal = input('vec3', 'vNormal')),\n\t\t(vUv = input('vec2', 'vUv')),\n\t\tdefMain(() => [\n\t\t\tnoise = sym(texture(uNoiseTex, mul(vUv, vec2(1.0, 10)))),\n\t\t\t// noiseVal = sym(($x(noise))),\n\t\t\tnoiseVal = sym(\n\t\t\t\tfit1101(add(\n\t\t\t\t\tadd(\n\t\t\t\t\t\tadd(fit0111($x(noise)), fit0111($y(noise))),\n\t\t\t\t\t\tfit0111($z(noise))),\n\t\t\t\t\tfit0111($w(noise))))\n\t\t\t),\n\t\t\tassign(noiseVal, pow(noiseVal, float(0.15))),\n\t\t\tassign(noiseVal ,\n\t\t\t\tmul(\n\t\t\t\t\tmul(\n\t\t\t\t\t\tnoiseVal,\n\t\t\t\t\t\tmul(\n\t\t\t\t\t\t\tsub(add(float(1), noiseVal), pow($y(vUv), float(4))),\n\t\t\t\t\t\t\t0.5\n\t\t\t\t\t\t)\n\t\t\t\t\t\t// 1\n\t\t\t\t\t),\n\t\t\t\t\t// sub(1, pow(abs(fit0111($x(vUv))), float(8)))\n\t\t\t\t\t1\n\t\t\t\t)),\n\t\t\tassign(fs.gl_FragColor, vec4(\n\t\t\t\t// mix(vec3(0.4, 1, 0.6), vec3(0, 0.6, 0.2), noiseVal),\n\t\t\t\t// noiseVal\n\t\t\t\t1, 0, 0,$x(vUv)\n\t\t\t)),\n\t\t]),\n\t]),\n)\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { targetGLSL, GLSLVersion } from '@thi.ng/shader-ast-glsl'\n\nexport const getVertexGenerator = () =>\n\ttargetGLSL({\n\t\tversion: GLSLVersion.GLES_100,\n\t\ttype: 'vs',\n\t})\n\nexport const getFragmentGenerator = (prelude = 'precision mediump float;') =>\n\ttargetGLSL({\n\t\tversion: GLSLVersion.GLES_100,\n\t\ttype: 'fs',\n\t\tprelude,\n\t})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export function sign(num) {\n    if (num > 0) {\n        return 1;\n    }\n    else if (num < 0) {\n        return -1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function lerp(step, start, end) {\n    return start + step * (end - start);\n}\nexport function clamp(min, max, value) {\n    return Math.max(min, Math.min(value, max));\n}\nexport const DEG_TO_RAD_FACTOR = Math.PI / 180;\nexport function degToRad(degrees) {\n    return degrees * DEG_TO_RAD_FACTOR;\n}\n//# sourceMappingURL=core.js.map","import { lerp } from './core';\nconst p1 = [\n    151,\n    160,\n    137,\n    91,\n    90,\n    15,\n    131,\n    13,\n    201,\n    95,\n    96,\n    53,\n    194,\n    233,\n    7,\n    225,\n    140,\n    36,\n    103,\n    30,\n    69,\n    142,\n    8,\n    99,\n    37,\n    240,\n    21,\n    10,\n    23,\n    190,\n    6,\n    148,\n    247,\n    120,\n    234,\n    75,\n    0,\n    26,\n    197,\n    62,\n    94,\n    252,\n    219,\n    203,\n    117,\n    35,\n    11,\n    32,\n    57,\n    177,\n    33,\n    88,\n    237,\n    149,\n    56,\n    87,\n    174,\n    20,\n    125,\n    136,\n    171,\n    168,\n    68,\n    175,\n    74,\n    165,\n    71,\n    134,\n    139,\n    48,\n    27,\n    166,\n    77,\n    146,\n    158,\n    231,\n    83,\n    111,\n    229,\n    122,\n    60,\n    211,\n    133,\n    230,\n    220,\n    105,\n    92,\n    41,\n    55,\n    46,\n    245,\n    40,\n    244,\n    102,\n    143,\n    54,\n    65,\n    25,\n    63,\n    161,\n    1,\n    216,\n    80,\n    73,\n    209,\n    76,\n    132,\n    187,\n    208,\n    89,\n    18,\n    169,\n    200,\n    196,\n    135,\n    130,\n    116,\n    188,\n    159,\n    86,\n    164,\n    100,\n    109,\n    198,\n    173,\n    186,\n    3,\n    64,\n    52,\n    217,\n    226,\n    250,\n    124,\n    123,\n    5,\n    202,\n    38,\n    147,\n    118,\n    126,\n    255,\n    82,\n    85,\n    212,\n    207,\n    206,\n    59,\n    227,\n    47,\n    16,\n    58,\n    17,\n    182,\n    189,\n    28,\n    42,\n    223,\n    183,\n    170,\n    213,\n    119,\n    248,\n    152,\n    2,\n    44,\n    154,\n    163,\n    70,\n    221,\n    153,\n    101,\n    155,\n    167,\n    43,\n    172,\n    9,\n    129,\n    22,\n    39,\n    253,\n    19,\n    98,\n    108,\n    110,\n    79,\n    113,\n    224,\n    232,\n    178,\n    185,\n    112,\n    104,\n    218,\n    246,\n    97,\n    228,\n    251,\n    34,\n    242,\n    193,\n    238,\n    210,\n    144,\n    12,\n    191,\n    179,\n    162,\n    241,\n    81,\n    51,\n    145,\n    235,\n    249,\n    14,\n    239,\n    107,\n    49,\n    192,\n    214,\n    31,\n    181,\n    199,\n    106,\n    157,\n    184,\n    84,\n    204,\n    176,\n    115,\n    121,\n    50,\n    45,\n    127,\n    4,\n    150,\n    254,\n    138,\n    236,\n    205,\n    93,\n    222,\n    114,\n    67,\n    29,\n    24,\n    72,\n    243,\n    141,\n    128,\n    195,\n    78,\n    66,\n    215,\n    61,\n    156,\n    180,\n];\nfor (let i = 0; i <= 256; i++) {\n    p1[256 + i] = p1[i];\n}\nfunction fade(t) {\n    return t * t * t * (t * (t * 6 - 15) + 10);\n}\nfunction grad(hash, x) {\n    if ((hash & 1) === 0) {\n        return x;\n    }\n    else {\n        return -x;\n    }\n}\nexport function noise1d(x) {\n    let X, floorX, u;\n    floorX = ~~x;\n    X = floorX & 255;\n    x -= floorX;\n    u = fade(x);\n    return lerp(u, grad(p1[X], x), grad(p1[X + 1], x - 1));\n}\n/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n *\n *\n * Copyright (C) 2012 Jonas Wagner\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\nconst F2 = 0.5 * (Math.sqrt(3.0) - 1.0), G2 = (3.0 - Math.sqrt(3.0)) / 6.0, F3 = 1.0 / 3.0, G3 = 1.0 / 6.0, F4 = (Math.sqrt(5.0) - 1.0) / 4.0, G4 = (5.0 - Math.sqrt(5.0)) / 20.0, p = new Uint8Array(256), perm = new Uint8Array(512), permMod12 = new Uint8Array(512);\nfor (let i = 0; i < 256; i++) {\n    p[i] = Math.random() * 256;\n}\nfor (let i = 0; i < 512; i++) {\n    perm[i] = p[i & 255];\n    permMod12[i] = perm[i] % 12;\n}\nconst grad3 = new Float32Array([\n    1,\n    1,\n    0,\n    -1,\n    1,\n    0,\n    1,\n    -1,\n    0,\n    -1,\n    -1,\n    0,\n    1,\n    0,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    0,\n    -1,\n    -1,\n    0,\n    -1,\n    0,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    0,\n    1,\n    -1,\n    0,\n    -1,\n    -1,\n]);\nconst grad4 = new Float32Array([\n    0,\n    1,\n    1,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    -1,\n    -1,\n    0,\n    -1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    -1,\n    0,\n    -1,\n    -1,\n    1,\n    0,\n    -1,\n    -1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    1,\n    0,\n    -1,\n    1,\n    1,\n    0,\n    -1,\n    -1,\n    -1,\n    0,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    -1,\n    -1,\n    0,\n    -1,\n    1,\n    -1,\n    0,\n    -1,\n    -1,\n    1,\n    1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    -1,\n    0,\n    -1,\n    -1,\n    1,\n    0,\n    1,\n    -1,\n    1,\n    0,\n    -1,\n    -1,\n    -1,\n    0,\n    1,\n    -1,\n    -1,\n    0,\n    -1,\n    1,\n    1,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    -1,\n    -1,\n    0,\n    -1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    -1,\n    0,\n    -1,\n    -1,\n    1,\n    0,\n    -1,\n    -1,\n    -1,\n    0,\n]);\nexport function noise2d(xin, yin) {\n    let n0 = 0, n1 = 0, n2 = 0; // Noise contributions from the three corners\n    // Skew the input space to determine which simplex cell we're in\n    const s = (xin + yin) * F2; // Hairy factor for 2D\n    const i = Math.floor(xin + s);\n    const j = Math.floor(yin + s);\n    const t = (i + j) * G2;\n    const X0 = i - t; // Unskew the cell origin back to (x,y) space\n    const Y0 = j - t;\n    const x0 = xin - X0; // The x,y distances from the cell origin\n    const y0 = yin - Y0;\n    // For the 2D case, the simplex shape is an equilateral triangle.\n    // Determine which simplex we are in.\n    let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n    if (x0 > y0) {\n        i1 = 1;\n        j1 = 0;\n    } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n    else {\n        i1 = 0;\n        j1 = 1;\n    } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n    // c = (3-sqrt(3))/6\n    const x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n    const y1 = y0 - j1 + G2;\n    const x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n    const y2 = y0 - 1.0 + 2.0 * G2;\n    // Work out the hashed gradient indices of the three simplex corners\n    const ii = i & 255;\n    const jj = j & 255;\n    // Calculate the contribution from the three corners\n    let t0 = 0.5 - x0 * x0 - y0 * y0;\n    if (t0 >= 0) {\n        const gi0 = permMod12[ii + perm[jj]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n    }\n    let t1 = 0.5 - x1 * x1 - y1 * y1;\n    if (t1 >= 0) {\n        const gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);\n    }\n    let t2 = 0.5 - x2 * x2 - y2 * y2;\n    if (t2 >= 0) {\n        const gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 70.0 * (n0 + n1 + n2);\n}\n// 3D simplex noise\nexport function noise3d(xin, yin, zin) {\n    let n0, n1, n2, n3; // Noise contributions from the four corners\n    // Skew the input space to determine which simplex cell we're in\n    const s = (xin + yin + zin) * F3; // Very nice and simple skew factor for 3D\n    const i = Math.floor(xin + s);\n    const j = Math.floor(yin + s);\n    const k = Math.floor(zin + s);\n    const t = (i + j + k) * G3;\n    const X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n    const Y0 = j - t;\n    const Z0 = k - t;\n    const x0 = xin - X0; // The x,y,z distances from the cell origin\n    const y0 = yin - Y0;\n    const z0 = zin - Z0;\n    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n    // Determine which simplex we are in.\n    let i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n    let i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n    if (x0 >= y0) {\n        if (y0 >= z0) {\n            i1 = 1;\n            j1 = 0;\n            k1 = 0;\n            i2 = 1;\n            j2 = 1;\n            k2 = 0;\n        } // X Y Z order\n        else if (x0 >= z0) {\n            i1 = 1;\n            j1 = 0;\n            k1 = 0;\n            i2 = 1;\n            j2 = 0;\n            k2 = 1;\n        } // X Z Y order\n        else {\n            i1 = 0;\n            j1 = 0;\n            k1 = 1;\n            i2 = 1;\n            j2 = 0;\n            k2 = 1;\n        } // Z X Y order\n    }\n    else {\n        // x0<y0\n        if (y0 < z0) {\n            i1 = 0;\n            j1 = 0;\n            k1 = 1;\n            i2 = 0;\n            j2 = 1;\n            k2 = 1;\n        } // Z Y X order\n        else if (x0 < z0) {\n            i1 = 0;\n            j1 = 1;\n            k1 = 0;\n            i2 = 0;\n            j2 = 1;\n            k2 = 1;\n        } // Y Z X order\n        else {\n            i1 = 0;\n            j1 = 1;\n            k1 = 0;\n            i2 = 1;\n            j2 = 1;\n            k2 = 0;\n        } // Y X Z order\n    }\n    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n    // c = 1/6.\n    const x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n    const y1 = y0 - j1 + G3;\n    const z1 = z0 - k1 + G3;\n    const x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n    const y2 = y0 - j2 + 2.0 * G3;\n    const z2 = z0 - k2 + 2.0 * G3;\n    const x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n    const y3 = y0 - 1.0 + 3.0 * G3;\n    const z3 = z0 - 1.0 + 3.0 * G3;\n    // Work out the hashed gradient indices of the four simplex corners\n    const ii = i & 255;\n    const jj = j & 255;\n    const kk = k & 255;\n    // Calculate the contribution from the four corners\n    let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n    if (t0 < 0)\n        n0 = 0.0;\n    else {\n        const gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n    }\n    let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n    if (t1 < 0)\n        n1 = 0.0;\n    else {\n        const gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n    }\n    let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n    if (t2 < 0)\n        n2 = 0.0;\n    else {\n        const gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n    }\n    let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n    if (t3 < 0)\n        n3 = 0.0;\n    else {\n        const gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to stay just inside [-1,1]\n    return 32.0 * (n0 + n1 + n2 + n3);\n}\n// 4D simplex noise, better simplex rank ordering method 2012-03-09\nexport function noise4d(x, y, z, w) {\n    let n0, n1, n2, n3, n4; // Noise contributions from the five corners\n    // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n    const s = (x + y + z + w) * F4; // Factor for 4D skewing\n    const i = Math.floor(x + s);\n    const j = Math.floor(y + s);\n    const k = Math.floor(z + s);\n    const l = Math.floor(w + s);\n    const t = (i + j + k + l) * G4; // Factor for 4D unskewing\n    const X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n    const Y0 = j - t;\n    const Z0 = k - t;\n    const W0 = l - t;\n    const x0 = x - X0; // The x,y,z,w distances from the cell origin\n    const y0 = y - Y0;\n    const z0 = z - Z0;\n    const w0 = w - W0;\n    // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n    // To find out which of the 24 possible simplices we're in, we need to\n    // determine the magnitude ordering of x0, y0, z0 and w0.\n    // Six pair-wise comparisons are performed between each possible pair\n    // of the four coordinates, and the results are used to rank the numbers.\n    let rankx = 0;\n    let ranky = 0;\n    let rankz = 0;\n    let rankw = 0;\n    if (x0 > y0)\n        rankx++;\n    else\n        ranky++;\n    if (x0 > z0)\n        rankx++;\n    else\n        rankz++;\n    if (x0 > w0)\n        rankx++;\n    else\n        rankw++;\n    if (y0 > z0)\n        ranky++;\n    else\n        rankz++;\n    if (y0 > w0)\n        ranky++;\n    else\n        rankw++;\n    if (z0 > w0)\n        rankz++;\n    else\n        rankw++;\n    let i1, j1, k1, l1; // The integer offsets for the second simplex corner\n    let i2, j2, k2, l2; // The integer offsets for the third simplex corner\n    let i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n    // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n    // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n    // impossible. Only the 24 indices which have non-zero entries make any sense.\n    // We use a thresholding to set the coordinates in turn from the largest magnitude.\n    // Rank 3 denotes the largest coordinate.\n    i1 = rankx >= 3 ? 1 : 0;\n    j1 = ranky >= 3 ? 1 : 0;\n    k1 = rankz >= 3 ? 1 : 0;\n    l1 = rankw >= 3 ? 1 : 0;\n    // Rank 2 denotes the second largest coordinate.\n    i2 = rankx >= 2 ? 1 : 0;\n    j2 = ranky >= 2 ? 1 : 0;\n    k2 = rankz >= 2 ? 1 : 0;\n    l2 = rankw >= 2 ? 1 : 0;\n    // Rank 1 denotes the second smallest coordinate.\n    i3 = rankx >= 1 ? 1 : 0;\n    j3 = ranky >= 1 ? 1 : 0;\n    k3 = rankz >= 1 ? 1 : 0;\n    l3 = rankw >= 1 ? 1 : 0;\n    // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n    const x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n    const y1 = y0 - j1 + G4;\n    const z1 = z0 - k1 + G4;\n    const w1 = w0 - l1 + G4;\n    const x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n    const y2 = y0 - j2 + 2.0 * G4;\n    const z2 = z0 - k2 + 2.0 * G4;\n    const w2 = w0 - l2 + 2.0 * G4;\n    const x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n    const y3 = y0 - j3 + 3.0 * G4;\n    const z3 = z0 - k3 + 3.0 * G4;\n    const w3 = w0 - l3 + 3.0 * G4;\n    const x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n    const y4 = y0 - 1.0 + 4.0 * G4;\n    const z4 = z0 - 1.0 + 4.0 * G4;\n    const w4 = w0 - 1.0 + 4.0 * G4;\n    // Work out the hashed gradient indices of the five simplex corners\n    const ii = i & 255;\n    const jj = j & 255;\n    const kk = k & 255;\n    const ll = l & 255;\n    // Calculate the contribution from the five corners\n    let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n    if (t0 < 0)\n        n0 = 0.0;\n    else {\n        const gi0 = (perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32) * 4;\n        t0 *= t0;\n        n0 =\n            t0 *\n                t0 *\n                (grad4[gi0] * x0 +\n                    grad4[gi0 + 1] * y0 +\n                    grad4[gi0 + 2] * z0 +\n                    grad4[gi0 + 3] * w0);\n    }\n    let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n    if (t1 < 0)\n        n1 = 0.0;\n    else {\n        const gi1 = (perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32) * 4;\n        t1 *= t1;\n        n1 =\n            t1 *\n                t1 *\n                (grad4[gi1] * x1 +\n                    grad4[gi1 + 1] * y1 +\n                    grad4[gi1 + 2] * z1 +\n                    grad4[gi1 + 3] * w1);\n    }\n    let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n    if (t2 < 0)\n        n2 = 0.0;\n    else {\n        const gi2 = (perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32) * 4;\n        t2 *= t2;\n        n2 =\n            t2 *\n                t2 *\n                (grad4[gi2] * x2 +\n                    grad4[gi2 + 1] * y2 +\n                    grad4[gi2 + 2] * z2 +\n                    grad4[gi2 + 3] * w2);\n    }\n    let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n    if (t3 < 0)\n        n3 = 0.0;\n    else {\n        const gi3 = (perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32) * 4;\n        t3 *= t3;\n        n3 =\n            t3 *\n                t3 *\n                (grad4[gi3] * x3 +\n                    grad4[gi3 + 1] * y3 +\n                    grad4[gi3 + 2] * z3 +\n                    grad4[gi3 + 3] * w3);\n    }\n    let t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n    if (t4 < 0)\n        n4 = 0.0;\n    else {\n        const gi4 = (perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32) * 4;\n        t4 *= t4;\n        n4 =\n            t4 *\n                t4 *\n                (grad4[gi4] * x4 +\n                    grad4[gi4 + 1] * y4 +\n                    grad4[gi4 + 2] * z4 +\n                    grad4[gi4 + 3] * w4);\n    }\n    // Sum up and scale the result to cover the range [-1,1]\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n}\nexport function tileNoise(width, height, dx, dy) {\n    const noise = [];\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            const s = x / width, t = y / height, nx = (Math.cos(s * 2 * Math.PI) * dx) / (2 * Math.PI), ny = (Math.cos(t * 2 * Math.PI) * dy) / (2 * Math.PI), nz = (Math.sin(s * 2 * Math.PI) * dx) / (2 * Math.PI), nw = (Math.sin(t * 2 * Math.PI) * dy) / (2 * Math.PI);\n            noise.push(noise4d(nx, ny, nz, nw));\n        }\n    }\n    return noise;\n}\n//# sourceMappingURL=noise.js.map","import { TextureData } from 'tvs-painter'\nimport { tileNoise } from 'tvs-libs/dist/math/noise'\n\nfunction to8Bit(noise: number) {\n\treturn Math.floor((noise + 1) * 127)\n}\n\nexport function getNoiseTextureData({\n\tstartX = 1,\n\tstartY = 1,\n\twidth,\n\theight,\n\tdata = {},\n}: {\n\tstartX?: number\n\tstartY?: number\n\twidth: number\n\theight: number\n\tdata?: TextureData\n}) {\n\tconst buffer = new Uint8Array(width * height * 4)\n\tconst noise1 = tileNoise(width, height, startX, startY)\n\tconst noise2 = tileNoise(width, height, startX * 2.1, startY * 2.1)\n\tconst noise3 = tileNoise(width, height, startX * 4.2, startY * 4.2)\n\tconst noise4 = tileNoise(width, height, startX * 8.3, startY * 8.3)\n\n\tfor (let i = 0; i < noise1.length; i++) {\n\t\tconst i4 = i * 4\n\t\tbuffer[i4] = to8Bit(noise1[i])\n\t\tbuffer[i4 + 1] = to8Bit(noise2[i])\n\t\tbuffer[i4 + 2] = to8Bit(noise3[i])\n\t\tbuffer[i4 + 3] = to8Bit(noise4[i])\n\t}\n\tdata.data = buffer as any\n\tdata.width = width\n\tdata.height = height\n\treturn data\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import { mat4, vec3 } from 'gl-matrix'\nimport { Keys, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { Constructor } from 'tvs-libs/lib/oop/mixins'\nimport { PointerState, Buttons } from 'tvs-libs/dist/events/pointer'\n\nexport class Camera {\n\tposition: vec3 = [0, 0, 0]\n\trotationX = 0\n\trotationY = 0\n\trotationXMat = mat4.create()\n\trotationYMat = mat4.create()\n\tprojectionMat = mat4.create()\n\tviewMat = mat4.create()\n\tneedsUpdateView = true\n\n\tconstructor(props?: Partial<Camera>) {\n\t\tObject.assign(this, props)\n\t\tthis.updateRotationX()\n\t\tthis.updateRotationY()\n\t}\n\n\tupdateRotationX(amount: number = 0) {\n\t\tthis.rotationX += amount\n\t\tmat4.fromXRotation(this.rotationXMat, this.rotationX)\n\t\tthis.needsUpdateView = true\n\t}\n\n\tupdateRotationY(amount: number = 0) {\n\t\tthis.rotationY += amount\n\t\tmat4.fromYRotation(this.rotationYMat, this.rotationY)\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveForward(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[8],\n\t\t\tthis.rotationYMat[9],\n\t\t\tthis.rotationYMat[10],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, -dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveLeft(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[0],\n\t\t\tthis.rotationYMat[1],\n\t\t\tthis.rotationYMat[2],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, -dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tmoveUp(dist: number) {\n\t\tconst v = vec3.fromValues(\n\t\t\tthis.rotationYMat[4],\n\t\t\tthis.rotationYMat[5],\n\t\t\tthis.rotationYMat[6],\n\t\t)\n\t\tvec3.add(this.position as any, this.position, vec3.scale(v, v, dist))\n\t\tthis.needsUpdateView = true\n\t}\n\n\tupdate() {\n\t\tif (this.needsUpdateView) {\n\t\t\tmat4.fromTranslation(this.viewMat, this.position)\n\t\t\tmat4.multiply(this.viewMat, this.viewMat, this.rotationYMat)\n\t\t\tmat4.multiply(this.viewMat, this.viewMat, this.rotationXMat)\n\t\t\tmat4.invert(this.viewMat, this.viewMat)\n\t\t\tthis.needsUpdateView = false\n\t\t}\n\t}\n}\n\nexport class PerspectiveCamera extends Camera {\n\tfovy = Math.PI * 0.6\n\taspect = 1\n\tnear = 0.1\n\tfar = 1000\n\tneedsUpdateProjection = true\n\n\tconstructor(props?: Partial<PerspectiveCamera>) {\n\t\tsuper(props)\n\t\tObject.assign(this, props)\n\t\tthis.update()\n\t}\n\n\tupdate() {\n\t\tsuper.update()\n\n\t\tif (this.needsUpdateProjection) {\n\t\t\tmat4.perspective(\n\t\t\t\tthis.projectionMat,\n\t\t\t\tthis.fovy,\n\t\t\t\tthis.aspect,\n\t\t\t\tthis.near,\n\t\t\t\tthis.far,\n\t\t\t)\n\t\t\tthis.needsUpdateProjection = false\n\t\t}\n\t}\n}\n\nexport function WithInputNavigation<T extends Constructor<Camera>>(Cam: T) {\n\treturn class extends Cam {\n\t\tupdatePosFromInput(speed: number, keys?: KeyState, pointer?: PointerState) {\n\t\t\tif (!(keys || pointer)) return\n\t\t\tif (\n\t\t\t\tkeys?.[Keys.UP] ||\n\t\t\t\tkeys?.[Keys.W] ||\n\t\t\t\t(pointer?.holding && !pointer.pressed[Buttons.RIGHT])\n\t\t\t) {\n\t\t\t\tthis.moveForward(speed)\n\t\t\t}\n\t\t\tif (\n\t\t\t\tkeys?.[Keys.DOWN] ||\n\t\t\t\tkeys?.[Keys.S] ||\n\t\t\t\tpointer?.pressed[Buttons.RIGHT]\n\t\t\t) {\n\t\t\t\tthis.moveForward(-speed)\n\t\t\t}\n\t\t\tif (keys?.[Keys.LEFT] || keys?.[Keys.A]) {\n\t\t\t\tthis.moveLeft(speed)\n\t\t\t}\n\t\t\tif (keys?.[Keys.RIGHT] || keys?.[Keys.D]) {\n\t\t\t\tthis.moveLeft(-speed)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function WithInputRotation<T extends Constructor<Camera>>(Cam: T) {\n\treturn class extends Cam {\n\t\t_oldMouse = { x: 0, y: 0 }\n\n\t\tupdateRotFromPointer(\n\t\t\tspeed: number,\n\t\t\tm: { dragging: boolean; drag: { x: number; y: number } },\n\t\t) {\n\t\t\tif (m.dragging) {\n\t\t\t\tconst deltaX = this._oldMouse.x - m.drag.x\n\t\t\t\tconst deltaY = this._oldMouse.y - m.drag.y\n\t\t\t\tthis._oldMouse.x = m.drag.x\n\t\t\t\tthis._oldMouse.y = m.drag.y\n\t\t\t\tdeltaY && this.updateRotationX(deltaY * speed)\n\t\t\t\tdeltaX && this.updateRotationY(deltaX * speed)\n\t\t\t} else {\n\t\t\t\tthis._oldMouse.x && (this._oldMouse.x = 0)\n\t\t\t\tthis._oldMouse.y && (this._oldMouse.y = 0)\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { BaseState, baseEvents, PainterContext } from '../painterState'\nimport {\n\tPerspectiveCamera,\n\tWithInputNavigation,\n\tWithInputRotation,\n} from './camera'\n\nexport interface PerspectiveViewportState extends BaseState {\n\tviewPort: ViewPort\n}\n\nexport class ViewPort {\n\tmoveSpeed = 2\n\tlookSpeed = 2\n\tcamera = new (WithInputNavigation(WithInputRotation(PerspectiveCamera)))({\n\t\tfovy: Math.PI * 0.3,\n\t\tposition: [0, 0, 5],\n\t})\n}\n\ninterface InitOpts {\n\tmoveSpeed?: number\n\tlookSpeed?: number\n\tfovy?: number\n\tposition?: [number, number, number]\n\trotationY?: number\n\trotationX?: number\n}\n\nexport function initPerspectiveViewport(\n\tctx: PainterContext<PerspectiveViewportState>,\n\t{ lookSpeed, moveSpeed, position, rotationY, rotationX, fovy }: InitOpts = {},\n) {\n\tconst v = new ViewPort()\n\tif (lookSpeed) {\n\t\tv.lookSpeed = lookSpeed\n\t}\n\tif (moveSpeed) {\n\t\tv.moveSpeed = moveSpeed\n\t}\n\tif (fovy) {\n\t\tv.camera.fovy = fovy\n\t\tv.camera.needsUpdateProjection = true\n\t}\n\tif (position) {\n\t\tv.camera.position = position\n\t\tv.camera.needsUpdateView = true\n\t}\n\tif (rotationX) {\n\t\tv.camera.rotationX = rotationX\n\t\tv.camera.updateRotationX()\n\t}\n\tif (rotationY) {\n\t\tv.camera.rotationY = rotationY\n\t\tv.camera.updateRotationY()\n\t}\n\n\tctx.set('viewPort', v, {\n\t\treset: { moveSpeed: true, lookSpeed: true },\n\t})\n\n\tctx.listen('viewPort', baseEvents.FRAME, ({ device: d, viewPort: v }) => {\n\t\tconst tpf = d.tpf / 1000\n\n\t\tv.camera.updatePosFromInput(v.moveSpeed * tpf, d.keys, d.pointer)\n\n\t\tconst p = d.pointer\n\t\tconst dragInfo = {\n\t\t\tdragging: p.dragging,\n\t\t\tdrag: {\n\t\t\t\tx: (d.sizeMultiplier * p.drag.x) / d.canvas.width,\n\t\t\t\ty: (d.sizeMultiplier * p.drag.y) / d.canvas.height,\n\t\t\t},\n\t\t}\n\t\tv.camera.updateRotFromPointer(v.lookSpeed, dragInfo)\n\t\tv.camera.update()\n\t\treturn\n\t})\n\n\tctx.listen('viewPort', baseEvents.RESIZE, ({ device: d, viewPort: v }) => {\n\t\tv.camera.aspect = d.canvas.width / d.canvas.height\n\t\tv.camera.needsUpdateProjection = true\n\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { events, Q } from './context'\nimport { lineFrag, lineVert } from './shaders'\nimport { lineToTriangleStripGeometry } from '../shared-utils/geometry/lines'\nimport { getNoiseTextureData } from '../shared-utils/texture-helpers'\nimport { initPerspectiveViewport } from '../shared-utils/vr/perspectiveViewport'\n\ninitPerspectiveViewport(Q, { position: [0, 0, 15] })\n\nconst shade = Q.getShade('line').update({\n\tvert: lineVert,\n\tfrag: lineFrag,\n})\n\nconst form = Q.getForm('line')\n\nexport const noiseTexFrame = Q.getFrame('noiseTex').update({\n\ttexture: getNoiseTextureData({\n\t\twidth: 256,\n\t\theight: 256,\n\t\tstartX: 3,\n\t\tstartY: 3,\n\t\tdata: {\n\t\t\tmagFilter: 'LINEAR',\n\t\t\tminFilter: 'LINEAR',\n\t\t\twrap: 'REPEAT',\n\t\t},\n\t}),\n})\n\nconst sketch = Q.getSketch('line').update({\n\tform: form,\n\tshade,\n\tuniforms: {\n\t\tnoiseTex: noiseTexFrame.image(),\n\t},\n})\n\n// === scene ===\n\nexport const scene = Q.getFrame('scene').update({\n\tlayers: Q.getLayer('scene').update({\n\t\tsketches: [sketch],\n\t\tuniforms: {\n\t\t\tview: () => Q.state.viewPort.camera.viewMat,\n\t\t\tprojection: () => Q.state.viewPort.camera.projectionMat,\n\t\t},\n\t\tdrawSettings: {\n\t\t\tclearColor: [1, 1, 1, 1],\n\t\t\t// clearBits: painter.gl.COLOR_BUFFER_BIT,\n\t\t\tenable: [Q.gl.BLEND],\n\t\t},\n\t}),\n})\n\nQ.listen('renderer', events.FRAME, ({ squeegee }) => {\n\tform.update(\n\t\tlineToTriangleStripGeometry(squeegee.line, 1, {\n\t\t\tstoreType: 'DYNAMIC',\n\t\t\twithUVs: true,\n\t\t}),\n\t)\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import './state'\nimport { repeat } from '../shared-utils/scheduler'\nimport { events, Q } from './context'\nimport { scene } from './renderer'\n\nQ.state.device.sizeMultiplier = window.devicePixelRatio\n\nrepeat((tpf) => {\n\tQ.state.device.tpf = Math.min(tpf, 60)\n\tQ.emit(events.FRAME)\n\tQ.painter.compose(scene).display(scene)\n}, 'loop')\n\nQ.listen('index', events.RESIZE, () => {\n\tscene.update()\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n"],"sourceRoot":""}