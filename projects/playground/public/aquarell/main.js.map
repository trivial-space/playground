{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/contants.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/pointer.js","webpack:///./shared-utils/scheduler.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/predicates.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/utils/context.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/object.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/dom.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/asset-lib.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/render-utils.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/form.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/texture.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/render-target.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/frame.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/layer.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/shade.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/sketch.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/painter/dist/painter.js","webpack:///./shared-utils/painterState.ts","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/utils/sequence.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/events/keyboard.js","webpack:////Users/trival/projects/personal/trivialspace/playground/projects/libs/dist/math/random.js","webpack:///./aquarell/context.ts","webpack:///./aquarell/paint.ts","webpack:///./aquarell/renderer.ts","webpack:///./aquarell/glsl/base.frag","webpack:///./aquarell/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GEOMETRY_PROP_POSITION","GEOMETRY_PROP_NORMAL","GEOMETRY_PROP_UV","UNIFORM_SOURCE_TEXTURE","VARYING_UV_COORDS","GL_TYPE","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","FLOAT_MAT2X3","FLOAT_MAT2X4","FLOAT_MAT3X2","FLOAT_MAT3X4","FLOAT_MAT4X2","FLOAT_MAT4X3","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_3D","TEXTURE_2D_ARRAY","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","FLOAT_32_UNSIGNED_INT_24_8_REV","UNSIGNED_INT_24_8","TEXTURE_FORMAT","TEXTURE_FORMAT_INTERNAL","Buttons","LEFT","MIDDLE","RIGHT","pointer","opts","callback","cb","element","document","enableRightButton","holdDelay","holdRadius","state","pressed","drag","x","y","dX","dY","xMax","yMax","dragging","holding","oX","oY","timeout","onPointerDown","e","isPrimary","button","clientX","clientY","clearTimeout","setTimeout","onPointerUp","_e","event","onPointerMove","Math","max","abs","preventDefault","addEventListener","removeEventListener","updateOnce","updateRepeat","willUpdate","uidCounter","oldTime","processUpdates","time","tpf","id","updates","requestAnimationFrame","once","fn","repeat","stop","equalArray","arr1","arr2","length","equalObject","obj1","obj2","k1","keys","makeClear","gl","clearArray","reduce","res","item","toUpperCase","resizeCanvas","canvas","multiplier","width","height","rect","getBoundingClientRect","deepOverride","opt","ignore","Array","isArray","val1","val2","undefined","mapObj","coll","windowSize","resize","window","innerWidth","innerHeight","defaultTextureSettings","defaultForms","renderQuad","attribs","buffer","Float32Array","storeType","drawType","itemCount","defaultShaders","basicEffect","vert","frag","getBindPointForSamplerType","type","typeMap","bindPoint","intSetter","location","v","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","texture","activeTexture","TEXTURE0","bindTexture","_texture","samplerArraySetter","size","units","Int32Array","textures","index","Type","setter","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Uint32Array","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","floatAttribSetter","typeInfo","b","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","itemSize","normalize","stride","offset","intAttribSetter","vertexAttribIPointer","matAttribSetter","defaultSize","count","numComponents","rowOffset","attrTypeMap","Int8Array","Uint8Array","Int16Array","Uint16Array","applyDrawSettings","settings","enable","setting","disable","blendFunc","apply","depthFunc","cullFace","frontFace","lineWidth","colorMask","depthMask","clearColor","clearDepth","clearBits","clear","revertDrawSettings","formCounter","_painter","this","data","_drawType","_itemCount","_attribs","attribData","createBuffer","bufferData","elements","_elements","glType","typedArray","Uint8ClampedArray","Error","getGLTypeForTypedArray","ELEMENT_ARRAY_BUFFER","deleteBuffer","textureCount","_data","createTexture","wrap","wrapS","wrapT","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","magFilter","TEXTURE_MAG_FILTER","minFilter","TEXTURE_MIN_FILTER","asset","texImage2D","RGBA","isWebGL2","RGBA32F","flipY","pixelStorei","UNPACK_FLIP_Y_WEBGL","indexOf","generateMipmap","assign","deleteTexture","antialias","frameBuffer","antiAliasFrameBuffer","antiAliasRenderBuffer","depthBuffer","bufferStructure","_a","every","buf","createFramebuffer","createRenderbuffer","some","getExtension","texCount","bufferAttachments","COLOR_ATTACHMENT0","bindFramebuffer","FRAMEBUFFER","glx","attachment","COLOR_ATTACHMENT0_WEBGL","drawBuffers","drawBuffersWEBGL","gl2","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","min","getParameter","MAX_SAMPLES","RGBA8","framebufferRenderbuffer","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","renderbufferStorage","update","framebufferTexture2D","err","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","console","error","deleteFramebuffer","deleteRenderbuffer","frameCount","layers","_targets","_textures","_b","_c","_d","selfReferencing","layerCount","layer","_uniforms","targetCount","_destroyTargets","targetData","forEach","tex","destroy","tmp","Layer","sketches","sketch","shade","uniforms","shadeCounter","fragSource","trim","vertSource","program","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","_program","_frag","_vert","attachShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","addLineNumbers","linkProgram","getProgramParameter","LINK_STATUS","lastError","getProgramInfoLog","_uniformSetters","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","substr","toString","uniformSetters","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","createUniformSetters","_attributeSetters","attribSetters","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","createAttributeSetters","deleteProgram","deleteShader","src","split","map","line","join","sketchCounter","Sketch","drawSettings","_drawSettings","form","maxBufferSamples","useWebGL1","getContext","sizeMultiplier","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","getDefaultLayerSettings","_renderQuad","createForm","_staticSketch","createFlatSketch","createSketch","createShade","createLayer","globalUniforms","viewport","draw","frames","frame","renderFrame","idx","source","image","sources","useProgram","shadeForm","shadeUniforms","drawInstance","drawElements","drawArrays","renderLayer","target","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","clearBufferfv","COLOR","blitFramebuffer","COLOR_BUFFER_BIT","LINEAR","layerPasses","j","_swapTargets","currentCanvas","painter","getPainter","device","cancelWindow","cancelPointer","cancelKeys","dispatch","baseEvents","RESIZE","keyboard","k","init","getForm","shades","getShade","getSketch","getLayer","getFrame","createFrame","effects","getEffect","createEffect","prop","set","val","reset","getState","systems","addSystem","FRAME","pickRandom","arr","doTimes","times","concat","arrs","zip","as","bs","flatten","array","subarray","currentLength","mapcat","flatMap","reverse","each","Keys","onKeydown","keyCode","Date","now","onKeyup","randInt","int","floor","random","randIntInRange","from","to","normalRand","getElementById","paint","events","PROCESS_PAINT","CLEANUP_PAINT","ctx","getImageData","putImageData","fillStyle","fillRect","paintLayer","previous","automaton","compose","display"],"mappings":"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","file":"aquarell/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 71);\n","export const GEOMETRY_PROP_POSITION = 'position';\nexport const GEOMETRY_PROP_NORMAL = 'normal';\nexport const GEOMETRY_PROP_UV = 'uv';\nexport const UNIFORM_SOURCE_TEXTURE = 'source';\nexport const VARYING_UV_COORDS = 'coords';\nexport const GL_TYPE = {\n    FLOAT: 0x1406,\n    FLOAT_VEC2: 0x8b50,\n    FLOAT_VEC3: 0x8b51,\n    FLOAT_VEC4: 0x8b52,\n    INT: 0x1404,\n    INT_VEC2: 0x8b53,\n    INT_VEC3: 0x8b54,\n    INT_VEC4: 0x8b55,\n    BOOL: 0x8b56,\n    BOOL_VEC2: 0x8b57,\n    BOOL_VEC3: 0x8b58,\n    BOOL_VEC4: 0x8b59,\n    FLOAT_MAT2: 0x8b5a,\n    FLOAT_MAT3: 0x8b5b,\n    FLOAT_MAT4: 0x8b5c,\n    SAMPLER_2D: 0x8b5e,\n    SAMPLER_CUBE: 0x8b60,\n    SAMPLER_3D: 0x8b5f,\n    SAMPLER_2D_SHADOW: 0x8b62,\n    FLOAT_MAT2X3: 0x8b65,\n    FLOAT_MAT2X4: 0x8b66,\n    FLOAT_MAT3X2: 0x8b67,\n    FLOAT_MAT3X4: 0x8b68,\n    FLOAT_MAT4X2: 0x8b69,\n    FLOAT_MAT4X3: 0x8b6a,\n    SAMPLER_2D_ARRAY: 0x8dc1,\n    SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n    SAMPLER_CUBE_SHADOW: 0x8dc5,\n    UNSIGNED_INT: 0x1405,\n    UNSIGNED_INT_VEC2: 0x8dc6,\n    UNSIGNED_INT_VEC3: 0x8dc7,\n    UNSIGNED_INT_VEC4: 0x8dc8,\n    INT_SAMPLER_2D: 0x8dca,\n    INT_SAMPLER_3D: 0x8dcb,\n    INT_SAMPLER_CUBE: 0x8dcc,\n    INT_SAMPLER_2D_ARRAY: 0x8dcf,\n    UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n    UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n    UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n    TEXTURE_2D: 0x0de1,\n    TEXTURE_CUBE_MAP: 0x8513,\n    TEXTURE_3D: 0x806f,\n    TEXTURE_2D_ARRAY: 0x8c1a,\n    BYTE: 0x1400,\n    UNSIGNED_BYTE: 0x1401,\n    SHORT: 0x1402,\n    UNSIGNED_SHORT: 0x1403,\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\n    UNSIGNED_SHORT_5_6_5: 0x8363,\n    HALF_FLOAT: 0x140b,\n    UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n    UNSIGNED_INT_10F_11F_11F_REV: 0x8c3b,\n    UNSIGNED_INT_5_9_9_9_REV: 0x8c3e,\n    FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8dad,\n    UNSIGNED_INT_24_8: 0x84fa,\n};\nexport const TEXTURE_FORMAT = {\n    RED: 0x1903,\n    RG: 0x8227,\n    RGB: 0x1907,\n    RGBA: 0x1908,\n    RED_INTEGER: 0x8d94,\n    RG_INTEGER: 0x8228,\n    RGB_INTEGER: 0x8d98,\n    RGBA_INTEGER: 0x8d99,\n    DEPTH_COMPONENT: 0x1902,\n};\nexport const TEXTURE_FORMAT_INTERNAL = {\n    R8: 0x8229,\n    RG8: 0x822b,\n    RGB8: 0x8051,\n    RGBA8: 0x8058,\n    R16F: 0x822d,\n    RG16F: 0x822f,\n    RGB16F: 0x881b,\n    RGBA16F: 0x881a,\n    R32F: 0x822e,\n    RG32F: 0x8230,\n    RGB32F: 0x8815,\n    RGBA32F: 0x8814,\n    R8I: 0x8231,\n    RG8I: 0x8237,\n    RGB8I: 0x8d8f,\n    RGBA8I: 0x8d8e,\n    R8UI: 0x8232,\n    RG8UI: 0x8238,\n    RGB8UI: 0x8d7d,\n    RGBA8UI: 0x8d7c,\n    R16I: 0x8233,\n    RG16I: 0x8239,\n    RGB16I: 0x8d89,\n    RGBA16I: 0x8d88,\n    R16UI: 0x8234,\n    RG16UI: 0x823a,\n    RGB16UI: 0x8d77,\n    RGBA16UI: 0x8d76,\n    R32I: 0x8235,\n    RG32I: 0x823b,\n    RGB32I: 0x8d83,\n    RGBA32I: 0x8d82,\n    R32UI: 0x8236,\n    RG32UI: 0x823c,\n    RGB32UI: 0x8d71,\n    RGBA32UI: 0x8d70,\n    RGB10_A2: 0x8059,\n    RGB10_A2UI: 0x906f,\n    SRGB: 0x8c40,\n    SRGB8: 0x8c41,\n    SRGB8_ALPHA8: 0x8c43,\n    R8_SNORM: 0x8f94,\n    RG8_SNORM: 0x8f95,\n    RGB8_SNORM: 0x8f96,\n    RGBA8_SNORM: 0x8f97,\n    DEPTH_COMPONENT16: 0x81a5,\n    DEPTH_COMPONENT24: 0x81a6,\n    DEPTH_COMPONENT32F: 0x8cac,\n};\nexport const TEXTURE_FORMAT_DEFAULTS = {\n    [GL_TYPE.UNSIGNED_BYTE]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R8,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG8,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB8,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA8,\n    },\n    [GL_TYPE.UNSIGNED_SHORT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT16,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16UI,\n    },\n    [GL_TYPE.UNSIGNED_INT]: {\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT24,\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R32UI,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG32UI,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB32UI,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA32UI,\n    },\n    [GL_TYPE.FLOAT]: {\n        [TEXTURE_FORMAT.RED]: TEXTURE_FORMAT_INTERNAL.R16F,\n        [TEXTURE_FORMAT.RG]: TEXTURE_FORMAT_INTERNAL.RG16F,\n        [TEXTURE_FORMAT.RGB]: TEXTURE_FORMAT_INTERNAL.RGB16F,\n        [TEXTURE_FORMAT.RGBA]: TEXTURE_FORMAT_INTERNAL.RGBA16F,\n        [TEXTURE_FORMAT.DEPTH_COMPONENT]: TEXTURE_FORMAT_INTERNAL.DEPTH_COMPONENT32F,\n    },\n    COMPRESSED_TYPES: {},\n};\n//# sourceMappingURL=contants.js.map","export const Buttons = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n};\nexport function pointer(opts, callback) {\n    const cb = callback || opts;\n    const { element = document, enableRightButton, holdDelay = 400, holdRadius = 5, } = opts;\n    const state = {\n        pressed: {},\n        drag: { x: 0, y: 0, dX: 0, dY: 0, xMax: 0, yMax: 0 },\n        dragging: false,\n        holding: false,\n    };\n    let x = 0, y = 0, oX = 0, oY = 0, timeout = null;\n    function onPointerDown(e) {\n        if (e.isPrimary) {\n            state.pressed[e.button] = e;\n            x = oX = e.clientX;\n            y = oY = e.clientY;\n            state.dragging = true;\n            timeout != null && clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                if (state.drag.xMax < holdRadius && state.drag.yMax < holdRadius) {\n                    state.holding = true;\n                    cb(state);\n                }\n            }, holdDelay);\n        }\n        else {\n            state.pressed[Buttons.RIGHT] = e;\n        }\n        cb(state);\n    }\n    function onPointerUp(_e) {\n        state.pressed = {};\n        delete state.drag.event;\n        state.drag.x = 0;\n        state.drag.y = 0;\n        state.drag.dX = 0;\n        state.drag.dY = 0;\n        state.drag.xMax = 0;\n        state.drag.yMax = 0;\n        state.dragging = false;\n        state.holding = false;\n        timeout != null && clearTimeout(timeout);\n        timeout = null;\n        cb(state);\n    }\n    function onPointerMove(e) {\n        if (state.dragging && e.isPrimary) {\n            state.drag.event = e;\n            state.drag.x = x - e.clientX;\n            state.drag.y = y - e.clientY;\n            state.drag.dX = oX - e.clientX;\n            state.drag.dY = oY - e.clientY;\n            state.drag.xMax = Math.max(Math.abs(state.drag.x), state.drag.xMax);\n            state.drag.yMax = Math.max(Math.abs(state.drag.y), state.drag.yMax);\n            oX = e.clientX;\n            oY = e.clientY;\n            cb(state);\n        }\n    }\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    element.addEventListener('pointerdown', onPointerDown);\n    document.addEventListener('pointermove', onPointerMove);\n    document.addEventListener('pointerup', onPointerUp);\n    document.addEventListener('pointerleave', onPointerUp);\n    document.addEventListener('pointercancel', onPointerUp);\n    if (enableRightButton) {\n        element.addEventListener('contextmenu', preventDefault);\n    }\n    cb(state);\n    return function destroy() {\n        element.removeEventListener('pointerdown', onPointerDown);\n        document.removeEventListener('pointermove', onPointerMove);\n        document.removeEventListener('pointerup', onPointerUp);\n        document.removeEventListener('pointerleave', onPointerUp);\n        document.removeEventListener('pointercancel', onPointerUp);\n        if (enableRightButton) {\n            element.removeEventListener('contextmenu', preventDefault);\n        }\n    };\n}\nexport function pointerObserver(opts = {}) {\n    const observer = {\n        Buttons,\n        state: {},\n        destroy: () => { },\n    };\n    function callback(state) {\n        observer.state = state;\n    }\n    observer.destroy = pointer(opts, callback);\n    return observer;\n}\n//# sourceMappingURL=pointer.js.map","// onNextTick\n// schedule actions on next animation frame\n\ntype Callback = (n: number) => void\n\nlet updateOnce: { [id: string]: Callback } | null = null\nconst updateRepeat: { [id: string]: Callback } = {}\n\nlet willUpdate = false\n\nlet uidCounter = 0\n\nlet oldTime = 0\n\nfunction processUpdates(time: number) {\n\tconst tpf = oldTime ? time - oldTime : oldTime\n\toldTime = time\n\n\tif (updateOnce) {\n\t\tfor (const id in updateOnce) {\n\t\t\tupdateOnce[id](tpf)\n\t\t}\n\t\tupdateOnce = null\n\t}\n\n\tlet updates = 0\n\tfor (const id in updateRepeat) {\n\t\tupdates++\n\t\tupdateRepeat[id](tpf)\n\t}\n\n\tif (!updates) {\n\t\twillUpdate = false\n\t\toldTime = 0\n\t} else {\n\t\trequestAnimationFrame(processUpdates)\n\t}\n}\n\nexport function once(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateOnce = updateOnce || {}\n\tupdateOnce[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n}\n\nexport function repeat(fn: Callback, id?: string | number) {\n\tid = id || fn.name || uidCounter++\n\tupdateRepeat[id] = fn\n\n\tif (!willUpdate) {\n\t\trequestAnimationFrame(processUpdates)\n\t\twillUpdate = true\n\t}\n\n\treturn id\n}\n\nexport function stop(id: Callback | string | number) {\n\tif (typeof id === 'function') {\n\t\tid = id.name\n\t}\n\tdelete updateRepeat[id]\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export const and = (p1, p2) => (a, b) => p1(a, b) && p2(a, b);\nexport const not = (p) => (...args) => !p(...args);\nexport const defined = a => a != null;\nexport const notEmpty = a => a && a.length;\nexport const unequal = (a, b) => a !== b;\nexport const equal = (a, b) => a === b;\nexport function equalArray(arr1, arr2) {\n    if (arr1 === arr2) {\n        return true;\n    }\n    if (!arr2 || !arr1) {\n        return false;\n    }\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalObject(obj1, obj2) {\n    if (obj1 === obj2) {\n        return true;\n    }\n    if (!obj2) {\n        return false;\n    }\n    const k1 = Object.keys(obj1);\n    const k2 = Object.keys(obj2);\n    if (!equalArray(k1, k2)) {\n        return false;\n    }\n    for (const key of k1) {\n        if (obj1[key] !== obj2[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=predicates.js.map","export function makeClear(gl, ...clearArray) {\n    return clearArray.reduce((res, item) => res | gl[item.toUpperCase() + '_BUFFER_BIT'], 0);\n}\nexport function setBlendFunc(gl, blendOpts) {\n    gl.blendFunc.apply(gl, blendOpts.map(opt => gl[opt.toUpperCase()]));\n}\n/**\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] optional `window.devicePixelRatio`.\n * @return {boolean} true if the canvas was resized.\n */\nexport function resizeCanvas(canvas, multiplier = 1) {\n    let width = canvas.width;\n    let height = canvas.height;\n    if ('clientWidth' in canvas) {\n        const rect = canvas.getBoundingClientRect();\n        width = (rect.width * multiplier) | 0;\n        height = (rect.height * multiplier) | 0;\n    }\n    if (canvas.width !== width || canvas.height !== height) {\n        canvas.width = width;\n        canvas.height = height;\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=context.js.map","export function deepmerge(obj1, obj2) {\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        const result = Object.assign({}, obj1);\n        for (const key in obj2) {\n            const val1 = obj1[key];\n            const val2 = obj2[key];\n            if (typeof val2 !== 'undefined') {\n                result[key] = deepmerge(val1, val2);\n            }\n            else {\n                delete result[key];\n            }\n        }\n        return result;\n    }\n    return obj2;\n}\nexport function deepOverride(obj1, obj2, opt) {\n    const ignore = opt && opt.ignore;\n    if (typeof obj1 === 'object' &&\n        typeof obj2 === 'object' &&\n        !Array.isArray(obj1) &&\n        !Array.isArray(obj2) &&\n        obj1 !== obj2) {\n        for (const key in obj1) {\n            if (obj1.hasOwnProperty(key) &&\n                !(ignore && key in ignore && ignore[key] === true)) {\n                const val1 = obj1[key];\n                const val2 = obj2[key];\n                if (val2 !== undefined) {\n                    obj1[key] = deepOverride(val1, val2, {\n                        ignore: ignore && ignore[key],\n                    });\n                }\n            }\n        }\n        return obj1;\n    }\n    return obj2;\n}\nexport function mapObj(fn, coll, res = {}) {\n    for (const key in coll) {\n        res[key] = fn(coll[key], key);\n    }\n    return res;\n}\n//# sourceMappingURL=object.js.map","export function windowSize(callback) {\n    function resize() {\n        callback({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    }\n    window.addEventListener('resize', resize);\n    resize();\n    return function stop() {\n        window.removeEventListener('resize', resize);\n    };\n}\nexport function windowSizeObserver() {\n    const state = {\n        size: { width: 0, height: 0 },\n    };\n    const destroy = windowSize(s => (state.size = s));\n    return { state, destroy };\n}\n//# sourceMappingURL=dom.js.map","import * as constants from './contants';\nexport const defaultTextureSettings = {\n    wrap: 'CLAMP_TO_EDGE',\n    minFilter: 'LINEAR',\n    magFilter: 'NEAREST',\n};\nexport function getDefaultLayerSettings(gl) {\n    return {\n        clearColor: [0.0, 0.0, 0.0, 1.0],\n        blendFunc: [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA],\n    };\n}\nexport const defaultForms = {\n    renderQuad: {\n        attribs: {\n            [constants.GEOMETRY_PROP_POSITION]: {\n                buffer: new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1]),\n                storeType: 'STATIC',\n            },\n            [constants.GEOMETRY_PROP_UV]: {\n                buffer: new Float32Array([0, 1, 0, 0, 1, 1, 1, 0]),\n                storeType: 'STATIC',\n            },\n        },\n        drawType: 'TRIANGLE_STRIP',\n        itemCount: 4,\n    },\n};\nexport const defaultShaders = {\n    basicEffect: {\n        vert: `\nattribute vec2 ${constants.GEOMETRY_PROP_POSITION};\nattribute vec2 ${constants.GEOMETRY_PROP_UV};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\t${constants.VARYING_UV_COORDS} = ${constants.GEOMETRY_PROP_UV};\n\tgl_Position = vec4(${constants.GEOMETRY_PROP_POSITION}, 0.0, 1.0);\n}`,\n        frag: `precision mediump float;\nuniform sampler2D ${constants.UNIFORM_SOURCE_TEXTURE};\nvarying vec2 ${constants.VARYING_UV_COORDS};\nvoid main() {\n\tgl_FragColor = texture2D(${constants.UNIFORM_SOURCE_TEXTURE}, ${constants.VARYING_UV_COORDS});\n}`,\n    },\n};\n//# sourceMappingURL=asset-lib.js.map","import { GL_TYPE } from './contants';\n// Attrib and Uniform Setters\nfunction getBindPointForSamplerType(type) {\n    return typeMap[type].bindPoint;\n}\nfunction floatSetter(gl, location) {\n    return (v) => {\n        gl.uniform1f(location, v);\n    };\n}\nfunction floatArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1fv(location, v);\n    };\n}\nfunction floatVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2fv(location, v);\n    };\n}\nfunction floatVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3fv(location, v);\n    };\n}\nfunction floatVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4fv(location, v);\n    };\n}\nfunction intSetter(gl, location) {\n    return (v) => {\n        gl.uniform1i(location, v);\n    };\n}\nfunction intArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1iv(location, v);\n    };\n}\nfunction intVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2iv(location, v);\n    };\n}\nfunction intVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3iv(location, v);\n    };\n}\nfunction intVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4iv(location, v);\n    };\n}\nfunction uintSetter(gl, location) {\n    return (v) => {\n        gl.uniform1ui(location, v);\n    };\n}\nfunction uintArraySetter(gl, location) {\n    return (v) => {\n        gl.uniform1uiv(location, v);\n    };\n}\nfunction uintVec2Setter(gl, location) {\n    return (v) => {\n        gl.uniform2uiv(location, v);\n    };\n}\nfunction uintVec3Setter(gl, location) {\n    return (v) => {\n        gl.uniform3uiv(location, v);\n    };\n}\nfunction uintVec4Setter(gl, location) {\n    return (v) => {\n        gl.uniform4uiv(location, v);\n    };\n}\nfunction floatMat2Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2fv(location, false, v);\n    };\n}\nfunction floatMat3Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3fv(location, false, v);\n    };\n}\nfunction floatMat4Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4fv(location, false, v);\n    };\n}\nfunction floatMat23Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x3fv(location, false, v);\n    };\n}\nfunction floatMat32Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x2fv(location, false, v);\n    };\n}\nfunction floatMat24Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix2x4fv(location, false, v);\n    };\n}\nfunction floatMat42Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x2fv(location, false, v);\n    };\n}\nfunction floatMat34Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix3x4fv(location, false, v);\n    };\n}\nfunction floatMat43Setter(gl, location) {\n    return (v) => {\n        gl.uniformMatrix4x3fv(location, false, v);\n    };\n}\nfunction samplerSetter(gl, type, unit, location) {\n    const bindPoint = getBindPointForSamplerType(type);\n    return (texture) => {\n        gl.uniform1i(location, unit);\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(bindPoint, texture._texture);\n    };\n}\nfunction samplerArraySetter(gl, type, unit, location, size) {\n    const bindPoint = getBindPointForSamplerType(type);\n    const units = new Int32Array(size);\n    for (let i = 0; i < size; ++i) {\n        units[i] = unit + i;\n    }\n    return (textures) => {\n        gl.uniform1iv(location, units);\n        for (const index in textures) {\n            gl.activeTexture(gl.TEXTURE0 + units[index]);\n            gl.bindTexture(bindPoint, textures[index]._texture);\n        }\n    };\n}\nfunction isSamplerInfo(info) {\n    return info.Type === null;\n}\nconst typeMap = {\n    [GL_TYPE.FLOAT]: {\n        Type: Float32Array,\n        size: 4,\n        setter: floatSetter,\n        arraySetter: floatArraySetter,\n    },\n    [GL_TYPE.FLOAT_VEC2]: {\n        Type: Float32Array,\n        size: 8,\n        setter: floatVec2Setter,\n    },\n    [GL_TYPE.FLOAT_VEC3]: {\n        Type: Float32Array,\n        size: 12,\n        setter: floatVec3Setter,\n    },\n    [GL_TYPE.FLOAT_VEC4]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatVec4Setter,\n    },\n    [GL_TYPE.INT]: {\n        Type: Int32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.INT_VEC2]: { Type: Int32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.INT_VEC3]: { Type: Int32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.INT_VEC4]: { Type: Int32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.UNSIGNED_INT]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: uintSetter,\n        arraySetter: uintArraySetter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        Type: Uint32Array,\n        size: 8,\n        setter: uintVec2Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        Type: Uint32Array,\n        size: 12,\n        setter: uintVec3Setter,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        Type: Uint32Array,\n        size: 16,\n        setter: uintVec4Setter,\n    },\n    [GL_TYPE.BOOL]: {\n        Type: Uint32Array,\n        size: 4,\n        setter: intSetter,\n        arraySetter: intArraySetter,\n    },\n    [GL_TYPE.BOOL_VEC2]: { Type: Uint32Array, size: 8, setter: intVec2Setter },\n    [GL_TYPE.BOOL_VEC3]: { Type: Uint32Array, size: 12, setter: intVec3Setter },\n    [GL_TYPE.BOOL_VEC4]: { Type: Uint32Array, size: 16, setter: intVec4Setter },\n    [GL_TYPE.FLOAT_MAT2]: {\n        Type: Float32Array,\n        size: 16,\n        setter: floatMat2Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3]: {\n        Type: Float32Array,\n        size: 36,\n        setter: floatMat3Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4]: {\n        Type: Float32Array,\n        size: 64,\n        setter: floatMat4Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X3]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat23Setter,\n    },\n    [GL_TYPE.FLOAT_MAT2X4]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat24Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X2]: {\n        Type: Float32Array,\n        size: 24,\n        setter: floatMat32Setter,\n    },\n    [GL_TYPE.FLOAT_MAT3X4]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat34Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X2]: {\n        Type: Float32Array,\n        size: 32,\n        setter: floatMat42Setter,\n    },\n    [GL_TYPE.FLOAT_MAT4X3]: {\n        Type: Float32Array,\n        size: 48,\n        setter: floatMat43Setter,\n    },\n    [GL_TYPE.SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.SAMPLER_2D_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_2D_ARRAY_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.SAMPLER_CUBE_SHADOW]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_3D]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_3D,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_CUBE]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_CUBE_MAP,\n    },\n    [GL_TYPE.UNSIGNED_INT_SAMPLER_2D_ARRAY]: {\n        Type: null,\n        size: 0,\n        setter: samplerSetter,\n        arraySetter: samplerArraySetter,\n        bindPoint: GL_TYPE.TEXTURE_2D_ARRAY,\n    },\n};\nfunction floatAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribPointer(location, typeInfo.itemSize, GL_TYPE.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n    };\n}\nfunction intAttribSetter(gl, location, typeInfo) {\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribIPointer(location, typeInfo.itemSize, GL_TYPE.INT, b.stride || 0, b.offset || 0);\n    };\n}\nfunction matAttribSetter(gl, location, typeInfo) {\n    const defaultSize = typeInfo.size;\n    const count = typeInfo.count;\n    return (b) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        const numComponents = defaultSize;\n        const size = numComponents / count;\n        const typeInfo = typeMap[GL_TYPE.FLOAT];\n        const stride = typeInfo.size * numComponents;\n        const normalize = b.normalize || false;\n        const offset = b.offset || 0;\n        const rowOffset = stride / count;\n        for (let i = 0; i < count; ++i) {\n            gl.enableVertexAttribArray(location + i);\n            gl.vertexAttribPointer(location + i, size, GL_TYPE.FLOAT, normalize, stride, offset + rowOffset * i);\n        }\n    };\n}\nconst attrTypeMap = {\n    [GL_TYPE.FLOAT]: { size: 4, setter: floatAttribSetter, itemSize: 1 },\n    [GL_TYPE.FLOAT_VEC2]: { size: 8, setter: floatAttribSetter, itemSize: 2 },\n    [GL_TYPE.FLOAT_VEC3]: { size: 12, setter: floatAttribSetter, itemSize: 3 },\n    [GL_TYPE.FLOAT_VEC4]: { size: 16, setter: floatAttribSetter, itemSize: 4 },\n    [GL_TYPE.INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.INT_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.INT_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.INT_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.UNSIGNED_INT]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.UNSIGNED_INT_VEC2]: {\n        size: 8,\n        setter: intAttribSetter,\n        itemSize: 2,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC3]: {\n        size: 12,\n        setter: intAttribSetter,\n        itemSize: 3,\n    },\n    [GL_TYPE.UNSIGNED_INT_VEC4]: {\n        size: 16,\n        setter: intAttribSetter,\n        itemSize: 4,\n    },\n    [GL_TYPE.BOOL]: { size: 4, setter: intAttribSetter, itemSize: 1 },\n    [GL_TYPE.BOOL_VEC2]: { size: 8, setter: intAttribSetter, itemSize: 2 },\n    [GL_TYPE.BOOL_VEC3]: { size: 12, setter: intAttribSetter, itemSize: 3 },\n    [GL_TYPE.BOOL_VEC4]: { size: 16, setter: intAttribSetter, itemSize: 4 },\n    [GL_TYPE.FLOAT_MAT2]: { size: 4, setter: matAttribSetter, count: 2 },\n    [GL_TYPE.FLOAT_MAT3]: { size: 9, setter: matAttribSetter, count: 3 },\n    [GL_TYPE.FLOAT_MAT4]: { size: 16, setter: matAttribSetter, count: 4 },\n};\nexport function createUniformSetters(gl, program) {\n    let textureUnit = 0;\n    function createUniformSetter(program, uniformInfo) {\n        const location = gl.getUniformLocation(program, uniformInfo.name);\n        const isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]';\n        const type = uniformInfo.type;\n        const typeInfo = typeMap[type];\n        if (!typeInfo) {\n            throw new Error('unknown type: 0x' + type.toString(16)); // we should never get here.\n        }\n        if (location == null) {\n            return;\n        }\n        let setter;\n        if (isSamplerInfo(typeInfo)) {\n            // it's a sampler\n            const unit = textureUnit;\n            textureUnit += uniformInfo.size;\n            if (isArray) {\n                setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n            }\n            else {\n                setter = typeInfo.setter(gl, type, unit, location);\n            }\n        }\n        else {\n            if (typeInfo.arraySetter && isArray) {\n                setter = typeInfo.arraySetter(gl, location);\n            }\n            else {\n                setter = typeInfo.setter(gl, location);\n            }\n        }\n        return { setter, location };\n    }\n    const uniformSetters = {};\n    const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < numUniforms; ++i) {\n        const uniformInfo = gl.getActiveUniform(program, i);\n        if (!uniformInfo) {\n            continue;\n        }\n        let name = uniformInfo.name;\n        // remove the array suffix.\n        if (name.substr(-3) === '[0]') {\n            name = name.substr(0, name.length - 3);\n        }\n        if (program) {\n            const setter = createUniformSetter(program, uniformInfo);\n            if (setter) {\n                uniformSetters[name] = setter;\n            }\n        }\n    }\n    return uniformSetters;\n}\nexport function createAttributeSetters(gl, program) {\n    const attribSetters = {};\n    const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < numAttribs; i++) {\n        const attribInfo = gl.getActiveAttrib(program, i);\n        if (!attribInfo) {\n            break;\n        }\n        const location = gl.getAttribLocation(program, attribInfo.name);\n        const typeInfo = attrTypeMap[attribInfo.type];\n        const setter = typeInfo.setter(gl, location, typeInfo);\n        attribSetters[attribInfo.name] = { setter, location };\n    }\n    return attribSetters;\n}\n// Type helpers\nexport const glTypeToTypedArray = {\n    [GL_TYPE.BYTE]: Int8Array,\n    [GL_TYPE.UNSIGNED_BYTE]: Uint8Array,\n    [GL_TYPE.SHORT]: Int16Array,\n    [GL_TYPE.UNSIGNED_SHORT]: Uint16Array,\n    [GL_TYPE.INT]: Int32Array,\n    [GL_TYPE.UNSIGNED_INT]: Uint32Array,\n    [GL_TYPE.FLOAT]: Float32Array,\n    [GL_TYPE.UNSIGNED_SHORT_4_4_4_4]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_5_5_1]: Uint16Array,\n    [GL_TYPE.UNSIGNED_SHORT_5_6_5]: Uint16Array,\n    [GL_TYPE.HALF_FLOAT]: Uint16Array,\n    [GL_TYPE.UNSIGNED_INT_2_10_10_10_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_10F_11F_11F_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_5_9_9_9_REV]: Uint32Array,\n    [GL_TYPE.FLOAT_32_UNSIGNED_INT_24_8_REV]: Uint32Array,\n    [GL_TYPE.UNSIGNED_INT_24_8]: Uint32Array,\n};\nexport function getGLTypeForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArray instanceof Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArray instanceof Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArray instanceof Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArray instanceof Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArray instanceof Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArray instanceof Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\nexport function getGLTypeForTypedArrayType(typedArrayType) {\n    if (typedArrayType === Int8Array) {\n        return GL_TYPE.BYTE;\n    }\n    if (typedArrayType === Uint8Array) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Uint8ClampedArray) {\n        return GL_TYPE.UNSIGNED_BYTE;\n    }\n    if (typedArrayType === Int16Array) {\n        return GL_TYPE.SHORT;\n    }\n    if (typedArrayType === Uint16Array) {\n        return GL_TYPE.UNSIGNED_SHORT;\n    }\n    if (typedArrayType === Int32Array) {\n        return GL_TYPE.INT;\n    }\n    if (typedArrayType === Uint32Array) {\n        return GL_TYPE.UNSIGNED_INT;\n    }\n    if (typedArrayType === Float32Array) {\n        return GL_TYPE.FLOAT;\n    }\n    throw new Error('unsupported typed array type');\n}\n// Settings\nexport function applyDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.enable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.blendFunc) {\n        gl.blendFunc.apply(gl, settings.blendFunc);\n    }\n    if (settings.depthFunc != null) {\n        gl.depthFunc(settings.depthFunc);\n    }\n    if (settings.cullFace != null) {\n        gl.cullFace(settings.cullFace);\n    }\n    if (settings.frontFace != null) {\n        gl.frontFace(settings.frontFace);\n    }\n    if (settings.lineWidth != null) {\n        gl.lineWidth(settings.lineWidth);\n    }\n    if (settings.colorMask) {\n        gl.colorMask.apply(gl, settings.colorMask);\n    }\n    if (settings.depthMask != null) {\n        gl.depthMask(settings.depthMask);\n    }\n    if (settings.clearColor) {\n        gl.clearColor.apply(gl, settings.clearColor);\n    }\n    if (settings.clearDepth != null) {\n        gl.clearDepth(settings.clearDepth);\n    }\n    if (settings.clearBits != null) {\n        gl.clear(settings.clearBits);\n    }\n}\nexport function revertDrawSettings(gl, settings) {\n    if (settings.enable) {\n        for (const setting of settings.enable) {\n            gl.disable(setting);\n        }\n    }\n    if (settings.disable) {\n        for (const setting of settings.disable) {\n            gl.enable(setting);\n        }\n    }\n}\n//# sourceMappingURL=render-utils.js.map","import { getGLTypeForTypedArray } from './render-utils';\nlet formCounter = 1;\nexport class Form {\n    constructor(_painter, id = 'Form' + formCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (data.drawType) {\n            this._drawType = gl[data.drawType];\n        }\n        if (data.itemCount) {\n            this._itemCount = data.itemCount;\n        }\n        this._attribs = this._attribs || {};\n        for (const id in data.attribs) {\n            const attribData = data.attribs[id];\n            if (this._attribs[id] == null) {\n                this._attribs[id] = {\n                    buffer: gl.createBuffer(),\n                };\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._attribs[id].buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, attribData.buffer, gl[(attribData.storeType || 'STATIC') + '_DRAW']);\n        }\n        if (data.elements) {\n            const buffer = data.elements.buffer;\n            if (this._elements == null) {\n                this._elements = {\n                    buffer: gl.createBuffer(),\n                    glType: null,\n                };\n            }\n            this._elements.glType = getGLTypeForTypedArray(buffer);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._elements.buffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, buffer, gl[(data.elements.storeType || 'STATIC') + '_DRAW']);\n        }\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        for (const id in this._attribs) {\n            gl.deleteBuffer(this._attribs[id].buffer);\n        }\n        this._attribs = {};\n        if (this._elements) {\n            gl.deleteBuffer(this._elements.buffer);\n            this._elements = undefined;\n        }\n    }\n}\n//# sourceMappingURL=form.js.map","import { defaultTextureSettings } from './asset-lib';\nlet textureCount = 1;\nexport class Texture {\n    constructor(_painter, id = 'Texture' + textureCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this._texture = null;\n        this._data = {};\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        if (this._texture == null) {\n            this._texture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        if ((data.wrap && data.wrap !== this._data.wrap) ||\n            (data.wrapS && data.wrapS !== this._data.wrapS) ||\n            (data.wrapT && data.wrapT !== this._data.wrapT)) {\n            let wrapS, wrapT;\n            if (data.wrap) {\n                wrapS = wrapT = data.wrap;\n            }\n            else {\n                wrapT = data.wrapT || defaultTextureSettings.wrap;\n                wrapS = data.wrapS || defaultTextureSettings.wrap;\n            }\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n        }\n        else if (!(this._data.wrap || this._data.wrapS || this._data.wrapT)) {\n            this._data.wrap = this._data.wrapT = this._data.wrapS = defaultTextureSettings.wrap;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[this._data.wrap]);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[this._data.wrap]);\n        }\n        if (data.magFilter && data.magFilter !== this._data.magFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[data.magFilter]);\n        }\n        else if (!this._data.magFilter) {\n            this._data.magFilter = defaultTextureSettings.magFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[this._data.magFilter]);\n        }\n        if (data.minFilter && data.minFilter !== this._data.minFilter) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[data.minFilter]);\n        }\n        else if (!this._data.minFilter) {\n            this._data.minFilter = defaultTextureSettings.minFilter;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[this._data.minFilter]);\n        }\n        if (data.asset) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data.asset);\n        }\n        if (data.data !== undefined) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, data.type === 'FLOAT' && this._painter.isWebGL2\n                ? gl.RGBA32F\n                : gl.RGBA, data.width, // width and height are required if using custom data\n            data.height, 0, gl.RGBA, gl[data.type || 'UNSIGNED_BYTE'], data.data);\n        }\n        if (data.flipY != null && data.flipY !== this._data.flipY) {\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, data.flipY);\n        }\n        if (data.minFilter && data.minFilter.indexOf('MIPMAP') > 0) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        this._painter.gl.deleteTexture(this._texture);\n        this._data = {};\n        this._texture = null;\n    }\n}\n//# sourceMappingURL=texture.js.map","import { equalObject } from 'tvs-libs/dist/utils/predicates';\nimport { Texture } from './texture';\nlet targetCount = 1;\nexport class RenderTarget {\n    constructor(_painter, id = 'Form' + targetCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.antialias = false;\n        this.frameBuffer = null;\n        this.antiAliasFrameBuffer = null;\n        this.antiAliasRenderBuffer = null;\n        this.textures = [];\n        this.depthBuffer = null;\n        this.bufferStructure = [];\n        this._data = {};\n    }\n    update(data) {\n        var _a;\n        const gl = this._painter.gl;\n        const width = data.width || this.width;\n        const height = data.height || this.height;\n        if (!(width && height)) {\n            return this;\n        }\n        else if (width === this.width && height === this.height) {\n            if (!data.bufferStructure)\n                return this;\n            if (data.bufferStructure.length === this.bufferStructure.length &&\n                this.bufferStructure.every((buf, i) => equalObject(buf, data.bufferStructure[i]))) {\n                return this;\n            }\n        }\n        if (this.frameBuffer == null) {\n            this.frameBuffer = gl.createFramebuffer();\n        }\n        if (this.depthBuffer == null) {\n            this.depthBuffer = gl.createRenderbuffer();\n        }\n        if (data.bufferStructure && data.bufferStructure.length) {\n            this.bufferStructure = data.bufferStructure;\n            if (this.bufferStructure.some(t => t.type === 'FLOAT')) {\n                if (this._painter.isWebGL2) {\n                    gl.getExtension('EXT_color_buffer_float');\n                }\n                else {\n                    gl.getExtension('OES_texture_float');\n                }\n            }\n        }\n        const texCount = this.bufferStructure.length || 1;\n        const bufferAttachments = [gl.COLOR_ATTACHMENT0];\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        if (texCount > 1) {\n            let glx;\n            if (!this._painter.isWebGL2) {\n                glx = gl.getExtension('WEBGL_draw_buffers');\n            }\n            const attachment = this._painter.isWebGL2\n                ? gl.COLOR_ATTACHMENT0\n                : glx.COLOR_ATTACHMENT0_WEBGL;\n            for (let i = 0; i < texCount; i++) {\n                bufferAttachments[i] = attachment + i;\n            }\n            this._painter.isWebGL2\n                ? gl.drawBuffers(bufferAttachments)\n                : glx.drawBuffersWEBGL(bufferAttachments);\n        }\n        this.antialias =\n            texCount === 1 &&\n                this._painter.isWebGL2 &&\n                (data.antialias || ((_a = this._data) === null || _a === void 0 ? void 0 : _a.antialias));\n        if (this.antialias) {\n            const gl2 = gl;\n            if (this.antiAliasFrameBuffer == null) {\n                this.antiAliasFrameBuffer = gl.createFramebuffer();\n            }\n            if (this.antiAliasRenderBuffer == null) {\n                this.antiAliasRenderBuffer = gl.createRenderbuffer();\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl2.RGBA8, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, this.antiAliasRenderBuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl2.renderbufferStorageMultisample(gl.RENDERBUFFER, Math.min(4, gl.getParameter(gl2.MAX_SAMPLES)), gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        else {\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);\n        }\n        for (let i = 0; i < texCount; i++) {\n            if (!this.textures[i]) {\n                this.textures[i] = new Texture(this._painter, this.id + '_Texture' + i);\n            }\n            const texture = this.textures[i];\n            texture.update(Object.assign(Object.assign({ minFilter: 'NEAREST', magFilter: 'NEAREST' }, this.bufferStructure[i]), { data: null, width,\n                height }));\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, bufferAttachments[i], gl.TEXTURE_2D, texture._texture, 0);\n        }\n        if (this.antialias) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.antiAliasFrameBuffer);\n            const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n            if (err !== gl.FRAMEBUFFER_COMPLETE) {\n                console.error('antialias framebuffer error', err, data);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        }\n        const err = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (err !== gl.FRAMEBUFFER_COMPLETE) {\n            console.error('framebuffer error', err, data);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        Object.assign(this._data, data);\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteFramebuffer(this.frameBuffer);\n        gl.deleteRenderbuffer(this.depthBuffer);\n        for (const texture of this.textures) {\n            gl.deleteTexture(texture);\n        }\n        if (this.antiAliasFrameBuffer) {\n            gl.deleteFramebuffer(this.antiAliasFrameBuffer);\n        }\n        if (this.antiAliasRenderBuffer) {\n            gl.deleteRenderbuffer(this.antiAliasRenderBuffer);\n        }\n        this.textures = [];\n        this.frameBuffer = null;\n        this.depthBuffer = null;\n        this._data = {};\n        this.bufferStructure = [];\n        this.width = 0;\n        this.height = 0;\n    }\n}\n//# sourceMappingURL=render-target.js.map","import { times } from 'tvs-libs/dist/utils/sequence';\nimport { RenderTarget } from './render-target';\nimport { Texture } from './texture';\nlet frameCount = 1;\nexport class Frame {\n    constructor(_painter, id = 'Frame' + frameCount++) {\n        this._painter = _painter;\n        this.id = id;\n        this.width = 0;\n        this.height = 0;\n        this.layers = [];\n        this._data = {};\n        this._targets = [];\n        this._textures = [];\n    }\n    image(i = 0) {\n        return ((this._targets.length &&\n            this._targets[this._targets.length - 1].textures[i]) ||\n            this._textures[i]);\n    }\n    update(data = {}) {\n        var _a, _b, _c, _d;\n        const gl = this._painter.gl;\n        const layers = Array.isArray(data.layers)\n            ? data.layers\n            : data.layers\n                ? [data.layers]\n                : this.layers;\n        const selfReferencing = data.selfReferencing || this._data.selfReferencing;\n        const layerCount = layers.reduce((count, layer) => count + (layer._uniforms.length || 1), 0);\n        const targetCount = selfReferencing || layerCount > 1 ? 2 : layerCount;\n        const width = data.width || ((_a = data.texture) === null || _a === void 0 ? void 0 : _a.width) ||\n            this._data.width || ((_b = this._data.texture) === null || _b === void 0 ? void 0 : _b.width) ||\n            gl.canvas.width;\n        const height = data.height || ((_c = data.texture) === null || _c === void 0 ? void 0 : _c.height) ||\n            this._data.height || ((_d = this._data.texture) === null || _d === void 0 ? void 0 : _d.height) ||\n            gl.canvas.height;\n        const antialias = data.antialias || this._data.antialias || true;\n        if (targetCount !== this._targets.length) {\n            this._destroyTargets();\n        }\n        const targetData = Object.assign(Object.assign({}, data), { width, height, antialias });\n        if (!this._targets.length && targetCount > 0) {\n            this._targets = times(i => new RenderTarget(this._painter, this.id + '_target' + (i + 1)).update(targetData), targetCount);\n        }\n        else if (this._targets.length) {\n            this._targets.forEach(t => {\n                t.update(targetData);\n            });\n        }\n        if (data.texture) {\n            // Hardcode to one static texture for now\n            if (!this._textures[0]) {\n                this._textures[0] = new Texture(this._painter, this.id + '_Texture0');\n            }\n            data.texture.width = width;\n            data.texture.height = height;\n            this._textures[0].update(data.texture);\n        }\n        Object.assign(this._data, data);\n        this.layers = layers;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    destroy() {\n        this._destroyTargets();\n        this._textures.forEach(tex => tex.destroy());\n        this._textures = [];\n        this._data = {};\n        this.layers = [];\n        this.width = 0;\n        this.height = 0;\n    }\n    _destroyTargets() {\n        this._targets.forEach(t => t.destroy());\n        this._targets = [];\n    }\n    _swapTargets() {\n        if (this._targets.length > 1) {\n            const tmp = this._targets[0];\n            this._targets[0] = this._targets[1];\n            this._targets[1] = tmp;\n        }\n    }\n}\n//# sourceMappingURL=frame.js.map","let layerCount = 1;\nexport class Layer {\n    constructor(id = 'DrawingLayer' + layerCount++) {\n        this.id = id;\n        this.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.sketches) {\n            this.sketches = Array.isArray(data.sketches)\n                ? data.sketches\n                : [data.sketches];\n        }\n        if (data.frag) {\n            const sketch = this.sketches && this.sketches[0];\n            if (sketch) {\n                sketch.shade.update({ frag: data.frag });\n            }\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        Object.assign(this._data, data);\n        return this;\n    }\n    destroy() {\n        for (const sketch of this.sketches) {\n            sketch.destroy();\n        }\n        this._data.sketches = [];\n        this._data = {};\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=layer.js.map","import { createAttributeSetters, createUniformSetters } from './render-utils';\nlet shadeCounter = 1;\nexport class Shade {\n    constructor(_painter, id = 'Shade' + shadeCounter++) {\n        this._painter = _painter;\n        this.id = id;\n    }\n    update(data) {\n        const gl = this._painter.gl;\n        const fragSource = (data.frag && data.frag.trim()) || this.fragSource;\n        const vertSource = (data.vert && data.vert.trim()) || this.vertSource;\n        if (!(fragSource &&\n            vertSource &&\n            (fragSource !== this.fragSource || vertSource !== this.vertSource))) {\n            return this;\n        }\n        this.destroy();\n        if (fragSource.indexOf('GL_EXT_draw_buffers') >= 0) {\n            gl.getExtension('WEBGL_draw_buffers');\n        }\n        const program = gl.createProgram();\n        const frag = gl.createShader(gl.FRAGMENT_SHADER);\n        const vert = gl.createShader(gl.VERTEX_SHADER);\n        if (!(program && vert && frag))\n            return;\n        this._program = program;\n        this._frag = frag;\n        this._vert = vert;\n        gl.attachShader(program, vert);\n        gl.attachShader(program, frag);\n        gl.shaderSource(vert, vertSource);\n        gl.shaderSource(frag, fragSource);\n        gl.compileShader(vert);\n        gl.compileShader(frag);\n        if (!gl.getShaderParameter(vert, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Vertex Shader!\\n', gl.getShaderInfoLog(vert), addLineNumbers(vertSource));\n        }\n        if (!gl.getShaderParameter(frag, gl.COMPILE_STATUS)) {\n            console.error('Error Compiling Fragment Shader!\\n', gl.getShaderInfoLog(frag), addLineNumbers(fragSource));\n        }\n        gl.linkProgram(program);\n        const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n            const lastError = gl.getProgramInfoLog(program);\n            console.error('Error in program linking:', lastError);\n        }\n        this._uniformSetters = createUniformSetters(gl, program);\n        this._attributeSetters = createAttributeSetters(gl, program);\n        this.fragSource = fragSource;\n        this.vertSource = vertSource;\n        return this;\n    }\n    destroy() {\n        const gl = this._painter.gl;\n        gl.deleteProgram(this._program);\n        gl.deleteShader(this._frag);\n        gl.deleteShader(this._vert);\n        this.vertSource = undefined;\n        this.fragSource = undefined;\n        this._attributeSetters = {};\n        this._uniformSetters = {};\n    }\n}\nfunction addLineNumbers(src) {\n    return src\n        .trim()\n        .split('\\n')\n        .map((line, i) => i + 1 + ': ' + line)\n        .join('\\n');\n}\n//# sourceMappingURL=shade.js.map","let sketchCounter = 1;\nexport class Sketch {\n    constructor(id = 'Sketch' + sketchCounter++) {\n        this.id = id;\n        this._uniforms = [];\n    }\n    update(data) {\n        if (data.drawSettings) {\n            this._drawSettings = data.drawSettings;\n        }\n        if (data.form) {\n            this.form = data.form;\n        }\n        if (data.shade) {\n            this.shade = data.shade;\n        }\n        if (data.uniforms) {\n            this._uniforms = Array.isArray(data.uniforms)\n                ? data.uniforms\n                : [data.uniforms];\n        }\n        return this;\n    }\n    destroy() {\n        this.form && this.form.destroy();\n        this.shade && this.shade.destroy();\n        this._drawSettings = undefined;\n        this._uniforms = [];\n    }\n}\n//# sourceMappingURL=sketch.js.map","import { defaultForms, defaultShaders, getDefaultLayerSettings, } from './asset-lib';\nimport { Form } from './form';\nimport { Frame } from './frame';\nimport { Layer } from './layer';\nimport { applyDrawSettings, revertDrawSettings } from './render-utils';\nimport { Shade } from './shade';\nimport { Sketch } from './sketch';\nimport { resizeCanvas } from './utils/context';\nexport class Painter {\n    constructor(canvas, opts = {}) {\n        this.canvas = canvas;\n        this.isWebGL2 = true;\n        this.maxBufferSamples = 0;\n        let gl = null;\n        if (!opts.useWebGL1) {\n            gl =\n                canvas.getContext('webgl2', opts) ||\n                    canvas.getContext('experimental-webgl2', opts);\n        }\n        if (gl == null) {\n            this.isWebGL2 = false;\n            gl =\n                canvas.getContext('webgl', opts) ||\n                    canvas.getContext('experimental-webgl', opts);\n        }\n        if (gl == null) {\n            throw Error('Cannot initialize WebGL.');\n        }\n        this.gl = gl;\n        this.sizeMultiplier = opts.sizeMultiplier || 1;\n        if (this.isWebGL2) {\n            this.maxBufferSamples = gl.getParameter(gl.MAX_SAMPLES);\n        }\n        this.resize();\n        applyDrawSettings(gl, getDefaultLayerSettings(gl));\n        this._renderQuad = this.createForm().update(defaultForms.renderQuad);\n        this._staticSketch = this.createFlatSketch();\n    }\n    resize() {\n        resizeCanvas(this.gl.canvas, this.sizeMultiplier);\n        return this;\n    }\n    destroy() {\n        this._staticSketch.destroy();\n        this._renderQuad.destroy();\n    }\n    updateDrawSettings(drawSettings) {\n        applyDrawSettings(this.gl, Object.assign({}, drawSettings));\n        return this;\n    }\n    createForm(id) {\n        return new Form(this, id);\n    }\n    createShade(id) {\n        return new Shade(this, id);\n    }\n    createSketch(id) {\n        return new Sketch(id);\n    }\n    createFlatSketch(id) {\n        const s = this.createSketch(id);\n        return s.update({\n            form: this._renderQuad,\n            shade: this.createShade(s.id + '_defaultShade').update(defaultShaders.basicEffect),\n        });\n    }\n    createFrame(id) {\n        return new Frame(this, id);\n    }\n    createLayer(id) {\n        return new Layer(id);\n    }\n    createEffect(id) {\n        const l = this.createLayer(id);\n        return l.update({\n            sketches: this.createFlatSketch(l.id + '_effectSketch'),\n        });\n    }\n    draw(sketch, globalUniforms) {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        draw(gl, sketch, globalUniforms);\n        return this;\n    }\n    compose(...frames) {\n        for (const frame of frames) {\n            renderFrame(this.gl, frame);\n        }\n        return this;\n    }\n    display(frame, idx = 0) {\n        return this.draw(this._staticSketch, { source: frame.image(idx) });\n    }\n}\nfunction draw(gl, sketch, globalUniforms, sources) {\n    const { shade: shade, form: form, _drawSettings: drawSettings, _uniforms: uniforms, } = sketch;\n    if (!(shade && form)) {\n        throw Error('cannot draw, shader or geometry are not set');\n    }\n    gl.useProgram(shade._program);\n    shadeForm(shade, form);\n    if (globalUniforms) {\n        shadeUniforms(shade, globalUniforms, sources);\n    }\n    if (drawSettings) {\n        applyDrawSettings(gl, drawSettings);\n    }\n    for (let i = 0; i < (uniforms.length || 1); i++) {\n        drawInstance(gl, sketch, uniforms[i], sources);\n    }\n    if (drawSettings) {\n        revertDrawSettings(gl, drawSettings);\n    }\n}\nfunction drawInstance(gl, sketch, uniforms, sources) {\n    if (uniforms) {\n        shadeUniforms(sketch.shade, uniforms, sources);\n    }\n    if (sketch.form._elements && sketch.form._elements.glType != null) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, sketch.form._elements.buffer);\n        gl.drawElements(sketch.form._drawType, sketch.form._itemCount, sketch.form._elements.glType, 0);\n    }\n    else {\n        gl.drawArrays(sketch.form._drawType, 0, sketch.form._itemCount);\n    }\n}\nfunction shadeForm(shade, form) {\n    for (const name in form._attribs) {\n        const setter = shade._attributeSetters[name];\n        if (setter) {\n            setter.setter(form._attribs[name]);\n        }\n    }\n}\nfunction shadeUniforms(shade, uniforms, sources) {\n    for (const name in uniforms) {\n        const setter = shade._uniformSetters[name];\n        if (setter) {\n            let value = uniforms[name];\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (typeof value === 'string' && sources) {\n                setter.setter(sources[value]);\n            }\n            else {\n                setter.setter(value);\n            }\n        }\n    }\n}\nfunction renderLayer(gl, layer, uniforms, target, source) {\n    if (target) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, target.antialias ? target.antiAliasFrameBuffer : target.frameBuffer);\n        gl.viewport(0, 0, target.width, target.height);\n    }\n    else {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    }\n    if (layer._data.drawSettings) {\n        applyDrawSettings(gl, layer._data.drawSettings);\n    }\n    for (const sketch of layer.sketches) {\n        draw(gl, sketch, uniforms, source);\n    }\n    if (target && target.antialias) {\n        const gl2 = gl;\n        // \"blit\" the cube into the color buffer, which adds antialiasing\n        gl.bindFramebuffer(gl2.READ_FRAMEBUFFER, target.antiAliasFrameBuffer);\n        gl.bindFramebuffer(gl2.DRAW_FRAMEBUFFER, target.frameBuffer);\n        gl2.clearBufferfv(gl2.COLOR, 0, [1.0, 1.0, 1.0, 1.0]);\n        gl2.blitFramebuffer(0, 0, target.width, target.height, 0, 0, target.width, target.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n    }\n    if (layer._data.drawSettings) {\n        revertDrawSettings(gl, layer._data.drawSettings);\n    }\n}\nfunction renderFrame(gl, frame) {\n    for (let i = 0; i < frame.layers.length; i++) {\n        const layer = frame.layers[i];\n        const layerPasses = layer._uniforms.length || 1;\n        for (let j = 0; j < layerPasses; j++) {\n            const target = frame._targets[0];\n            const sources = i + j === 0 && frame._textures.length\n                ? frame._textures\n                : frame._targets[1] && frame._targets[1].textures;\n            renderLayer(gl, layer, layer._uniforms[j], target, sources);\n            frame._swapTargets();\n        }\n    }\n}\n//# sourceMappingURL=painter.js.map","import { once } from './scheduler'\nimport { windowSize } from 'tvs-libs/dist/events/dom'\nimport { keyboard, KeyState } from 'tvs-libs/dist/events/keyboard'\nimport { deepOverride } from 'tvs-libs/dist/utils/object'\nimport { PainterOptions } from 'tvs-painter'\nimport { Form } from 'tvs-painter/dist/form'\nimport { Frame } from 'tvs-painter/dist/frame'\nimport { Layer } from 'tvs-painter/dist/layer'\nimport { Painter } from 'tvs-painter/dist/painter'\nimport { Shade } from 'tvs-painter/dist/shade'\nimport { Sketch } from 'tvs-painter/dist/sketch'\nimport { PointerState, pointer } from 'tvs-libs/dist/events/pointer'\n\n// === Painter ===\n\nlet currentCanvas: HTMLCanvasElement\nlet painter: Painter\n\nexport function getPainter(canvas: HTMLCanvasElement, opts?: PainterOptions) {\n\tinit(canvas, opts)\n\treturn painter\n}\n\nconst forms: { [id: string]: Form } = {}\nexport function getForm(painter: Painter, id: string) {\n\treturn forms[id] || (forms[id] = painter.createForm('Form_' + id))\n}\n\nconst shades: { [id: string]: Shade } = {}\nexport function getShade(painter: Painter, id: string) {\n\treturn shades[id] || (shades[id] = painter.createShade('Shade_' + id))\n}\n\nconst sketches: { [id: string]: Sketch } = {}\nexport function getSketch(painter: Painter, id: string) {\n\treturn sketches[id] || (sketches[id] = painter.createSketch('Sketch_' + id))\n}\n\nconst layers: { [id: string]: Layer } = {}\nexport function getLayer(painter: Painter, id: string) {\n\treturn layers[id] || (layers[id] = painter.createLayer('Layer_' + id))\n}\n\nconst frames: { [id: string]: Frame } = {}\nexport function getFrame(painter: Painter, id: string) {\n\treturn frames[id] || (frames[id] = painter.createFrame('Frame_' + id))\n}\n\nconst effects: { [id: string]: Layer } = {}\nexport function getEffect(painter: Painter, id: string) {\n\treturn effects[id] || (effects[id] = painter.createEffect('Effect_' + id))\n}\n\n// === State ===\n\nexport interface BaseState {\n\tdevice: {\n\t\ttpf: number\n\t\tcanvas: HTMLCanvasElement\n\t\tpointer: PointerState\n\t\tkeys: KeyState\n\t\tsizeMultiplier: number\n\t\tkeepCanvasSize?: boolean\n\t}\n}\n\nexport const state: BaseState = {\n\tdevice: {\n\t\ttpf: 0,\n\t\tsizeMultiplier: 1,\n\t},\n} as BaseState\n;(window as any).state = state\n\nexport function get<\n\tS extends BaseState = BaseState,\n\tK extends keyof S = keyof S\n>(prop: K): S[K] {\n\treturn (state as S)[prop]\n}\n\nexport function set<\n\tS extends BaseState = BaseState,\n\tK extends keyof S = keyof S\n>(key: K, val: S[K], opts?: { reset: any }) {\n\tconst s = state as S\n\tif (s[key]) {\n\t\tconst reset = opts && opts.reset\n\t\tif (reset !== true) {\n\t\t\tval = deepOverride(val, s[key], { ignore: reset })\n\t\t}\n\t}\n\ts[key] = val\n}\n\nexport function getState<S extends BaseState>() {\n\treturn state as S\n}\n\n// === Systems ===\n\ntype ActionHandler<S extends BaseState = BaseState> = (\n\tevent: string,\n\tstate: S,\n) => void\n\nconst systems: { [id: string]: ActionHandler<any> } = {}\n\nexport function addSystem<S extends BaseState = BaseState>(\n\tid: string,\n\ts: ActionHandler<S>,\n) {\n\tsystems[id] = s\n}\n\nexport function dispatch(event: string) {\n\tfor (const k in systems) {\n\t\tsystems[k](event, state)\n\t}\n}\n\nexport const baseEvents = {\n\tFRAME: 'frame',\n\tRESIZE: 'resize',\n}\n\n// === Init ===\n\nlet cancelWindow: () => void\nlet cancelPointer: () => void\nlet cancelKeys: () => void\n\nexport function init(canvas: HTMLCanvasElement, opts?: PainterOptions) {\n\tif (canvas !== currentCanvas) {\n\t\tcurrentCanvas = canvas\n\n\t\tpainter = new Painter(canvas, opts)\n\n\t\tstate.device.canvas = canvas\n\n\t\tcancelWindow && cancelWindow()\n\t\tcancelPointer && cancelPointer()\n\t\tcancelKeys && cancelKeys()\n\n\t\tcancelWindow = windowSize(() =>\n\t\t\tonce(() => {\n\t\t\t\tpainter.sizeMultiplier = state.device.sizeMultiplier\n\t\t\t\tpainter.resize()\n\t\t\t\tdispatch(baseEvents.RESIZE)\n\t\t\t}, 'resize'),\n\t\t)\n\n\t\tcancelPointer = pointer(\n\t\t\t{\n\t\t\t\telement: canvas,\n\t\t\t\tenableRightButton: true,\n\t\t\t\tholdRadius: 7,\n\t\t\t\tholdDelay: 250,\n\t\t\t},\n\t\t\tm => (state.device.pointer = m),\n\t\t)\n\n\t\tcancelKeys = keyboard(k => (state.device.keys = k))\n\t}\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { randInt, randIntInRange } from '../math/random';\nexport function pickRandom(arr) {\n    return arr[randInt(arr.length)];\n}\nexport function doTimes(fn, count) {\n    for (let i = 0; i < count; i++) {\n        fn(i);\n    }\n}\nexport function times(fn, count, res = []) {\n    for (let i = 0; i < count; i++) {\n        res[i] = fn(i);\n    }\n    return res;\n}\nexport function repeat(count, item) {\n    return times(() => item, count);\n}\nexport function concat(arr, ...arrs) {\n    return arr.concat(...arrs);\n}\nexport function zip(fn, as, bs, res = []) {\n    const length = Math.min(as.length, bs.length);\n    for (let i = 0; i < length; i++) {\n        res[i] = fn(as[i], bs[i]);\n    }\n    return res;\n}\nexport function flatten(array, res = []) {\n    for (const subarray of array) {\n        const currentLength = res.length;\n        for (let i = 0; i < subarray.length; i++) {\n            res[i + currentLength] = subarray[i];\n        }\n    }\n    return res;\n}\nexport function mapcat(fn, array, res = []) {\n    return flatten(map(fn, array, res));\n}\nexport const flatMap = mapcat;\nexport function reverse(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        res[i] = arr[arr.length - 1 - i];\n    }\n    return res;\n}\nexport function shuffle(arr, res = []) {\n    for (let i = 0; i < arr.length; i++) {\n        const j = randIntInRange(i, arr.length);\n        const temp = res[i] !== undefined ? res[i] : arr[i];\n        res[i] = res[j] !== undefined ? res[j] : arr[j];\n        res[j] = temp;\n    }\n    return res;\n}\nexport function map(fn, coll, res = []) {\n    for (let i = 0; i < coll.length; i++) {\n        res[i] = fn(coll[i], i);\n    }\n    return res;\n}\nexport function each(fn, coll) {\n    for (const key in coll) {\n        fn(coll[key], key);\n    }\n}\nexport function reduce(fn, start, arr) {\n    for (let i = 0; i < arr.length; i++) {\n        start = fn(start, arr[i]);\n    }\n    return start;\n}\nexport function fold(fn, arr) {\n    const [start, ...rest] = arr;\n    return reduce(fn, start, rest);\n}\nexport const last = (arr) => arr[arr.length - 1];\n//# sourceMappingURL=sequence.js.map","export var Keys;\n(function (Keys) {\n    Keys[Keys[\"CANCEL\"] = 3] = \"CANCEL\";\n    Keys[Keys[\"HELP\"] = 6] = \"HELP\";\n    Keys[Keys[\"BACK_SPACE\"] = 8] = \"BACK_SPACE\";\n    Keys[Keys[\"TAB\"] = 9] = \"TAB\";\n    Keys[Keys[\"CLEAR\"] = 12] = \"CLEAR\";\n    Keys[Keys[\"RETURN\"] = 13] = \"RETURN\";\n    Keys[Keys[\"ENTER\"] = 14] = \"ENTER\";\n    Keys[Keys[\"SHIFT\"] = 16] = \"SHIFT\";\n    Keys[Keys[\"CONTROL\"] = 17] = \"CONTROL\";\n    Keys[Keys[\"ALT\"] = 18] = \"ALT\";\n    Keys[Keys[\"PAUSE\"] = 19] = \"PAUSE\";\n    Keys[Keys[\"CAPS_LOCK\"] = 20] = \"CAPS_LOCK\";\n    Keys[Keys[\"ESCAPE\"] = 27] = \"ESCAPE\";\n    Keys[Keys[\"SPACE\"] = 32] = \"SPACE\";\n    Keys[Keys[\"PAGE_UP\"] = 33] = \"PAGE_UP\";\n    Keys[Keys[\"PAGE_DOWN\"] = 34] = \"PAGE_DOWN\";\n    Keys[Keys[\"END\"] = 35] = \"END\";\n    Keys[Keys[\"HOME\"] = 36] = \"HOME\";\n    Keys[Keys[\"LEFT\"] = 37] = \"LEFT\";\n    Keys[Keys[\"UP\"] = 38] = \"UP\";\n    Keys[Keys[\"RIGHT\"] = 39] = \"RIGHT\";\n    Keys[Keys[\"DOWN\"] = 40] = \"DOWN\";\n    Keys[Keys[\"PRINTSCREEN\"] = 44] = \"PRINTSCREEN\";\n    Keys[Keys[\"INSERT\"] = 45] = \"INSERT\";\n    Keys[Keys[\"DELETE\"] = 46] = \"DELETE\";\n    Keys[Keys[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    Keys[Keys[\"DIGIT_1\"] = 49] = \"DIGIT_1\";\n    Keys[Keys[\"DIGIT_2\"] = 50] = \"DIGIT_2\";\n    Keys[Keys[\"DIGIT_3\"] = 51] = \"DIGIT_3\";\n    Keys[Keys[\"DIGIT_4\"] = 52] = \"DIGIT_4\";\n    Keys[Keys[\"DIGIT_5\"] = 53] = \"DIGIT_5\";\n    Keys[Keys[\"DIGIT_6\"] = 54] = \"DIGIT_6\";\n    Keys[Keys[\"DIGIT_7\"] = 55] = \"DIGIT_7\";\n    Keys[Keys[\"DIGIT_8\"] = 56] = \"DIGIT_8\";\n    Keys[Keys[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    Keys[Keys[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    Keys[Keys[\"EQUALS\"] = 61] = \"EQUALS\";\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    Keys[Keys[\"CONTEXT_MENU\"] = 93] = \"CONTEXT_MENU\";\n    Keys[Keys[\"NUMPAD0\"] = 96] = \"NUMPAD0\";\n    Keys[Keys[\"NUMPAD1\"] = 97] = \"NUMPAD1\";\n    Keys[Keys[\"NUMPAD2\"] = 98] = \"NUMPAD2\";\n    Keys[Keys[\"NUMPAD3\"] = 99] = \"NUMPAD3\";\n    Keys[Keys[\"NUMPAD4\"] = 100] = \"NUMPAD4\";\n    Keys[Keys[\"NUMPAD5\"] = 101] = \"NUMPAD5\";\n    Keys[Keys[\"NUMPAD6\"] = 102] = \"NUMPAD6\";\n    Keys[Keys[\"NUMPAD7\"] = 103] = \"NUMPAD7\";\n    Keys[Keys[\"NUMPAD8\"] = 104] = \"NUMPAD8\";\n    Keys[Keys[\"NUMPAD9\"] = 105] = \"NUMPAD9\";\n    Keys[Keys[\"MULTIPLY\"] = 106] = \"MULTIPLY\";\n    Keys[Keys[\"ADD\"] = 107] = \"ADD\";\n    Keys[Keys[\"SEPARATOR\"] = 108] = \"SEPARATOR\";\n    Keys[Keys[\"SUBTRACT\"] = 109] = \"SUBTRACT\";\n    Keys[Keys[\"DECIMAL\"] = 110] = \"DECIMAL\";\n    Keys[Keys[\"DIVIDE\"] = 111] = \"DIVIDE\";\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    Keys[Keys[\"F13\"] = 124] = \"F13\";\n    Keys[Keys[\"F14\"] = 125] = \"F14\";\n    Keys[Keys[\"F15\"] = 126] = \"F15\";\n    Keys[Keys[\"F16\"] = 127] = \"F16\";\n    Keys[Keys[\"F17\"] = 128] = \"F17\";\n    Keys[Keys[\"F18\"] = 129] = \"F18\";\n    Keys[Keys[\"F19\"] = 130] = \"F19\";\n    Keys[Keys[\"F20\"] = 131] = \"F20\";\n    Keys[Keys[\"F21\"] = 132] = \"F21\";\n    Keys[Keys[\"F22\"] = 133] = \"F22\";\n    Keys[Keys[\"F23\"] = 134] = \"F23\";\n    Keys[Keys[\"F24\"] = 135] = \"F24\";\n    Keys[Keys[\"NUM_LOCK\"] = 144] = \"NUM_LOCK\";\n    Keys[Keys[\"SCROLL_LOCK\"] = 145] = \"SCROLL_LOCK\";\n    Keys[Keys[\"COMMA\"] = 188] = \"COMMA\";\n    Keys[Keys[\"PERIOD\"] = 190] = \"PERIOD\";\n    Keys[Keys[\"SLASH\"] = 191] = \"SLASH\";\n    Keys[Keys[\"BACK_QUOTE\"] = 192] = \"BACK_QUOTE\";\n    Keys[Keys[\"OPEN_BRACKET\"] = 219] = \"OPEN_BRACKET\";\n    Keys[Keys[\"BACK_SLASH\"] = 220] = \"BACK_SLASH\";\n    Keys[Keys[\"CLOSE_BRACKET\"] = 221] = \"CLOSE_BRACKET\";\n    Keys[Keys[\"QUOTE\"] = 222] = \"QUOTE\";\n    Keys[Keys[\"META\"] = 224] = \"META\";\n})(Keys || (Keys = {}));\nexport function keyboard(opts, callback) {\n    const cb = callback || opts;\n    const { element = window } = opts;\n    const pressed = {};\n    function onKeydown(event) {\n        pressed[event.keyCode] = Date.now();\n        cb(pressed);\n    }\n    function onKeyup(event) {\n        delete pressed[event.keyCode];\n        cb(pressed);\n    }\n    element.addEventListener('keyup', onKeyup, false);\n    element.addEventListener('keydown', onKeydown, false);\n    cb(pressed);\n    return function stop() {\n        element.removeEventListener('keyup', onKeyup);\n        element.removeEventListener('keydown', onKeydown);\n    };\n}\nexport function keyboardObserver(opts) {\n    const observer = {\n        Keys,\n        state: { pressed: {} },\n        destroy: () => { },\n    };\n    function callback(pressed) {\n        observer.state.pressed = pressed;\n    }\n    observer.destroy = keyboard(callback, opts);\n    return observer;\n}\n//# sourceMappingURL=keyboard.js.map","export function randInt(int) {\n    return Math.floor(Math.random() * int);\n}\nexport function randIntInRange(from, to) {\n    return randInt(to - from) + from;\n}\nexport function normalRand() {\n    return (Math.random() + Math.random() + Math.random()) / 3;\n}\n//# sourceMappingURL=random.js.map","import {\n\tbaseEvents,\n\tBaseState,\n\tgetPainter,\n\tgetState,\n} from '../shared-utils/painterState'\n\nexport type State = BaseState\n\nexport const canvas = document.getElementById('canvas') as HTMLCanvasElement\nexport const paint = document.getElementById('paint') as HTMLCanvasElement\n\nexport const painter = getPainter(canvas)\n\nexport const gl = painter.gl\n\nexport const state = getState<State>()\n\nexport const events = {\n\t...baseEvents,\n\tPROCESS_PAINT: 'process_paint',\n\tCLEANUP_PAINT: 'cleanup_paint',\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { addSystem } from '../shared-utils/painterState'\nimport { events, paint, State } from './context'\n\nconst ctx = paint.getContext('2d')\nif (!ctx) throw Error('unable to initialize 2d context')\n\nconst data = ctx.getImageData(0, 0, paint.width, paint.height)\n\nfor (let i = 0; i < data.data.length; i += 4) {\n\tdata.data[i] = Math.random() > 0.5 ? 255 : 0\n\tdata.data[i + 3] = 255\n}\n\nctx.putImageData(data, 0, 0)\n\naddSystem<State>('paint', (e, s) => {\n\tif (e === events.CLEANUP_PAINT) {\n\t\tctx.fillStyle = 'black'\n\t\tctx.fillRect(0, 0, paint.width, paint.height)\n\t}\n\n\tconst d = s.device\n\tif (\n\t\te === events.PROCESS_PAINT &&\n\t\td.pointer.dragging &&\n\t\td.pointer.drag.event\n\t) {\n\t\tconst { clientX, clientY } = d.pointer.drag.event\n\t\tconst x = Math.floor((clientX / window.innerWidth) * paint.width)\n\t\tconst y = Math.floor((clientY / window.innerHeight) * paint.height)\n\t\tctx.fillStyle = 'white'\n\t\tctx.fillRect(x, y, 1, 1)\n\t}\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { addSystem, getEffect, getFrame } from '../shared-utils/painterState'\nimport { events, paint, painter } from './context'\nimport base from './glsl/base.frag'\n\n// ===== layers =====\n\nconst paintLayer = getFrame(painter, 'paint')\n\nconst bufferSize = 256\n\nconst layer = getEffect(painter, 'layer').update({\n\tfrag: base,\n\tuniforms: {\n\t\tsize: bufferSize,\n\t\tpaint: () => paintLayer.image(),\n\t\tprevious: () => '0',\n\t},\n})\n\nexport const automaton = getFrame(painter, 'automaton').update({\n\tlayers: layer,\n\twidth: bufferSize,\n\theight: bufferSize,\n\tselfReferencing: true,\n\tbufferStructure: [\n\t\t{\n\t\t\tflipY: true,\n\t\t},\n\t],\n})\n\n// ===== state =====\n\naddSystem('renderer', e => {\n\tif (e === events.FRAME) {\n\t\tpaintLayer.update({ texture: { asset: paint } })\n\t}\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D paint;\\nuniform sampler2D previous;\\nuniform float size;\\nvarying vec2 coords;\\n\\nint getCell(vec2 uv) {\\n\\tvec4 paintTex = texture2D(paint, uv);\\n\\tvec4 prevTex = texture2D(previous, uv);\\n\\tif (paintTex.r > 0.0 || prevTex.r > 0.0) {\\n\\t\\treturn 1;\\n\\t} else {\\n\\t\\treturn 0;\\n\\t}\\n}\\n\\nvoid main() {\\n\\tfloat one = 1.0 / size;\\n\\tvec2 uvR = vec2(coords.x + one, coords.y);\\n\\tvec2 uvL = vec2(coords.x - one, coords.y);\\n\\tvec2 uvRT = vec2(coords.x + one, coords.y - one);\\n\\tvec2 uvLT = vec2(coords.x - one, coords.y - one);\\n\\tvec2 uvRB = vec2(coords.x + one, coords.y + one);\\n\\tvec2 uvLB = vec2(coords.x - one, coords.y + one);\\n\\tvec2 uvT = vec2(coords.x, coords.y - one);\\n\\tvec2 uvB = vec2(coords.x, coords.y + one);\\n\\n\\tvec4 paintTex = texture2D(paint, coords);\\n\\tvec4 prevTex = texture2D(previous, coords);\\n\\n\\tint cellL = getCell(uvL);\\n\\tint cellR = getCell(uvR);\\n\\tint cellT = getCell(uvT);\\n\\tint cellB = getCell(uvB);\\n\\tint cellTL = getCell(uvLT);\\n\\tint cellTR = getCell(uvRT);\\n\\tint cellBL = getCell(uvLB);\\n\\tint cellBR = getCell(uvRB);\\n\\n\\tint neighbours = cellL + cellR + cellT + cellB + cellTL + cellTR + cellBL + cellBR;\\n\\n\\tvec4 color = vec4(vec3(0.0), 1.0);\\n\\tif (neighbours == 3 || (neighbours == 2 && prevTex.r > 0.0) || paintTex.r > 0.0) {\\n\\t\\tcolor = vec4(1.0, 1.0, 0.0, 1.0);\\n\\t}\\n\\n\\tgl_FragColor = color;\\n}\\n\";","import { dispatch, get } from '../shared-utils/painterState'\nimport { repeat } from '../shared-utils/scheduler'\nimport { events, painter } from './context'\nimport './paint'\nimport { automaton } from './renderer'\n\nrepeat(tpf => {\n\tget('device').tpf = tpf\n\tdispatch(events.PROCESS_PAINT)\n\tdispatch(events.FRAME)\n\tpainter.compose(automaton).display(automaton)\n\tdispatch(events.CLEANUP_PAINT)\n}, 'loop')\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n"],"sourceRoot":""}