webpackJsonp([1],{118:function(t,n,e){t.exports=e(119)},119:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=e(120),o=e(18),i=e(122);r.a.setDebug(!0),Object(o.a)(r.a,i),r.b.updateFlow(r.a),setTimeout(function(){r.a.setDebug(!1)},1e3)},120:function(t,n,e){"use strict";e.d(n,"a",function(){return u}),e.d(n,"b",function(){return c});var r=e(16),o=e(17),i=(e.n(o),e(121)),a=e.n(i),u=r.a(),c=o.ui.start("area light",{graph:a.a});window.flow=u,window.tools=c},121:function(t,n){t.exports={}},122:function(t,n,e){function r(t){return e(o(t))}function o(t){var n=i[t];if(!(n+1))throw new Error("Cannot find module '"+t+"'.");return n}var i={"./camera.ts":65,"./events.ts":15,"./geometries/box.ts":66,"./geometries/plane.ts":67,"./painter.ts":39,"./renderer.ts":123,"./shaders/shaders.ts":69,"./state.ts":68};r.keys=function(){return Object.keys(i)},r.resolve=o,t.exports=r,r.id=122},123:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),e.d(n,"boxForm",function(){return d}),e.d(n,"planeForm",function(){return p}),e.d(n,"geoShade",function(){return m}),e.d(n,"groundSketch",function(){return g}),e.d(n,"lightSketch",function(){return O}),e.d(n,"drawSettings",function(){return b}),e.d(n,"sceneLayer",function(){return y}),e.d(n,"lightLayer",function(){return h});var r=e(0),o=e(33),i=e(39),a=e(15),u=e(65),c=e(66),s=e(67),f=e(35),l=e(68),v=e(69),d=Object(o.c)(i.painter,c.geometry),p=Object(o.c)(i.painter,s.geometry),m=Object(o.d)(i.painter,v.geoSpec),g=Object(o.e)(i.painter).react([l.groundTransform.HOT,l.groundColor.HOT,m.HOT,p.HOT],function(t,n,e,r,o){return t.update({form:o,shade:r,uniforms:{transform:n,color:e}})}),O=Object(o.e)(i.painter).react([l.lightTransform.HOT,l.lightColor.HOT,m.HOT,p.HOT],function(t,n,e,r,o){return t.update({form:o,shade:r,uniforms:{transform:n,color:e}})}),b=Object(r.d)([i.gl.HOT],function(t){return{clearBits:Object(f.a)(t,"color","depth")}}),y=Object(o.a)(i.painter).react([i.gl.HOT,O.HOT,g.HOT,u.view.COLD,u.perspective.COLD,b.HOT],function(t,n,e,r,o,i,a){return t.update({buffered:!0,textureConfig:{count:4,type:n.FLOAT},sketches:[e,r],drawSettings:a,uniforms:{view:o,projection:i},wrap:"CLAMP_TO_EDGE",minFilter:"NEAREST",magFilter:"NEAREST"})}),h=Object(o.b)(i.painter).react([u.position.HOT,l.lightTransform.HOT,y.HOT,u.view.COLD,i.gl.HOT,v.lightFrag.HOT],function(t,n,e,r,o,i,a){return t.update({frag:a,uniforms:{eyePosition:n,lightMat:e,view:o,positions:r.texture(0),normals:r.texture(1),uvs:r.texture(2),colors:r.texture(3)},drawSettings:{disable:[i.DEPTH_TEST],enable:[i.BLEND],clearBits:Object(f.a)(i,"color")}})});i.painter.react([y.COLD,h.COLD,a.tick.HOT],function(t,n,e){return t.compose(n,e)})},124:function(t,n){t.exports="#define GLSLIFY 1\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n\nuniform mat4 transform;\nuniform mat4 projection;\nuniform mat4 view;\n\nvarying vec4 vPosition;\nvarying vec4 vNormal;\nvarying vec4 vUv;\n\nvoid main() {\n\tvPosition = transform * vec4(position, 1.0);\n\tvNormal = transform * vec4(normal, 0.0);\n\tvUv = vec4(uv, 0.0, 0.0);\n\tgl_Position = projection * view * vPosition;\n}\n"},125:function(t,n){t.exports="#extension GL_EXT_draw_buffers : require\nprecision highp float;\n#define GLSLIFY 1\n\nuniform vec4 color;\n\nvarying vec4 vPosition;\nvarying vec4 vNormal;\nvarying vec4 vUv;\n\nvoid main() {\n\tgl_FragData[0] = vPosition;\n\tgl_FragData[1] = vNormal;\n\tgl_FragData[2] = vUv;\n\tgl_FragData[3] = color;\n}\n"},126:function(t,n){t.exports="precision mediump float;\n#define GLSLIFY 1\n\nuniform sampler2D colors;\nuniform sampler2D positions;\nuniform sampler2D normals;\nuniform sampler2D uvs;\n\nuniform vec3 eyePosition;\nuniform mat4 lightMat;\nuniform mat4 view;\n\nvarying vec2 coords;\n\n\nfloat areaLampEnergy(mat4 lampMat, vec3 V, vec3 N, vec3 lampPos, vec2 areaSize) {\n\tfloat width = areaSize.x / 2.0;\n\tfloat height = areaSize.y / 2.0;\n\n\tvec3 right = normalize(vec3(lampMat * vec4(1.0, 0.0, 0.0, 0.0))); //lamp right axis\n\tvec3 up = normalize(vec3(lampMat * vec4(0.0, 1.0, 0.0, 0.0))); //lamp up axis\n\tvec3 lampv = normalize(vec3(lampMat * vec4(0.0, 0.0, -1.0, 0.0))); //lamp projection axis\n\n\t/*project onto plane and calculate direction from center to the projection*/\n\tfloat dis = dot(lampv, V - lampPos);\n\tvec3 projection = V - dis * lampv;\n\tvec3 dir = projection - lampPos;\n\n\t/*calculate distance from area*/\n\tvec2 diagonal = vec2(dot(dir, right), dot(dir, up));\n\tvec2 nearest2D = vec2(clamp(diagonal.x, -width, width), clamp(diagonal.y, -height, height));\n\tvec3 nearestPointInside = lampPos + (right * nearest2D.x + up * nearest2D.y);\n\n\tfloat d = distance(V, nearestPointInside); //real distance to area rectangle\n\n\tvec3 L = normalize(nearestPointInside - V);\n\n\tfloat nDotL = clamp(dot(-lampv, L), 0.0, 1.0);\n\t//nDotL *= clamp(dot(-N,L),0.0,1.0); //how blender internal works, but too hard falloff\n\tnDotL *= clamp(dot(-N, L) * 0.5 + 0.5, 0.0, 1.0); //distribute over hemisphere, looks better. Should be dependant of area size.\n\n\tfloat attenuation = 1.0 / (1.0 + d);\n\n\treturn max(nDotL, 0.0) * attenuation;\n}\n\nvoid areaDiff(vec3 V, vec3 lampPos, vec3 lampVec, vec3 N, mat4 lampMat, float areaSizeX, float areaSizeY, float dist, float k, out float inp) {\n\tvec3 vec = V - lampPos;\n\tvec2 asize = vec2(areaSizeX, areaSizeY);\n\n\tfloat strength = dist * dist / 4.0;\n\n\tif (dot(vec, lampVec) < 0.0) {\n\t\tinp = 0.0;\n\t} else {\n\t\tfloat intens = areaLampEnergy(lampMat, V, N, lampPos, asize);\n\t\tinp = pow(intens * strength, k);\n\t}\n}\n\nvoid main() {\n\n\tvec4 position = texture2D(positions, coords);\n\tvec4 normal = texture2D(normals, coords);\n\tvec4 uv = texture2D(uvs, coords);\n\tvec4 color = texture2D(colors, coords);\n\n\tvec3 lightPosition = lightMat[3].xyz;\n\tvec3 lightNormal = normalize(lightMat[2].xyz);\n\tfloat dist = abs(length(eyePosition - position.xyz));\n\n\tfloat diff = 1.0;\n\n\tareaDiff(position.xyz, lightPosition, lightNormal, normalize(normal.xyz), lightMat, 10.0, 10.0, dist, 1.0, diff);\n\t//gl_FragColor = texture2D(colors, coords);\n\t//gl_FragColor = vec4((texture2D(normals, coords).xyz + 1.0) / 2.0, 1.0);\n\t//gl_FragColor = vec4(color.xyz * diff, 1.0);\n\tgl_FragColor = vec4(color.xyz * (lightPosition / 5.0), 1.0);\n}\n"},15:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),e.d(n,"tick",function(){return c}),e.d(n,"windowSize",function(){return s}),e.d(n,"mouse",function(){return f}),e.d(n,"keys",function(){return l});var r=e(0),o=e(5),i=e(19),a=e(20),u=e(21),c=Object(r.b)(null,u.a),s=Object(r.b)(null,a.a),f=Object(r.b)(null,i.a),l=Object(r.b)(null,o.b)},29:function(t,n){function e(t){var n={size:[1,1,1],segments:[1,1,1]};return t&&(Array.isArray(t.size)?n.size=t.size:"number"==typeof t.size&&(n.size=[t.size,t.size,t.size]),Array.isArray(t.segments)?n.segments=t.segments:"number"==typeof t.segments&&(n.segments=[t.segments,t.segments,t.segments])),n}function r(t){for(var n=[],e=0;e<t.length;e++)for(var r=t[e],o=0;o<r.length;o++)n.push(r[o]);return n}function o(t){var n=a(t),e=c(t),o=r(n);return{positions:o,cells:e,uvs:i(t,o),vertexCount:(t.sx+1)*(t.sy+1)}}function i(t,n){return n.map(function(n){return[n[0]/t.wx+.5,n[1]/t.wy+.5]})}function a(t){for(var n=t.wy/t.sy,e=t.wy/2,r=t.sy+1,o=Array(r),i=0;i<r;i++)o[i]=u(t,n*i-e);return o}function u(t,n){for(var e=t.wx/2,r=t.wx/t.sx,o=t.sx+1,i=Array(o),a=0;a<o;a++)i[a]=[r*a-e,n];return i}function c(t){function n(n,e){return(t.sx+1)*e+n}for(var e=[],r=0;r<t.sx;r++)for(var o=0;o<t.sy;o++){var i=n(r+0,o+0),a=n(r+1,o+0),u=n(r+1,o+1),c=n(r+0,o+1);e.push([i,a,u]),e.push([u,c,i])}return e}function s(t){return{positions:t.positions,cells:t.cells,uvs:t.uvs,vertexCount:t.vertexCount}}function f(t){var n=t.size,e=t.segments,r=o({wx:n[0],wy:n[1],sx:e[0],sy:e[1]}),i=o({wx:n[2],wy:n[1],sx:e[2],sy:e[1]}),a=o({wx:n[0],wy:n[2],sx:e[0],sy:e[2]}),u=s(r),c=s(i),f=s(a);return r.positions=r.positions.map(function(t){return[t[0],t[1],n[2]/2]}),u.positions=u.positions.map(function(t){return[t[0],-t[1],-n[2]/2]}),i.positions=i.positions.map(function(t){return[n[0]/2,-t[1],t[0]]}),c.positions=c.positions.map(function(t){return[-n[0]/2,t[1],t[0]]}),a.positions=a.positions.map(function(t){return[t[0],n[1]/2,-t[1]]}),f.positions=f.positions.map(function(t){return[t[0],-n[1]/2,t[1]]}),r.normals=l([0,0,1],r.positions.length),u.normals=l([0,0,-1],u.positions.length),i.normals=l([1,0,0],i.positions.length),c.normals=l([-1,0,0],c.positions.length),a.normals=l([0,1,0],a.positions.length),f.normals=l([0,-1,0],f.positions.length),[r,u,i,c,a,f]}function l(t,n){for(var e=Array(n),r=0;r<n;r++)e[r]=t.slice();return e}function v(t){var n=f(t),e=n.map(function(t){return t.positions}),o=n.map(function(t){return t.uvs}),i=n.map(function(t){return t.normals}),a=d(n);return{positions:r(e),uvs:r(o),cells:r(a),normals:r(i)}}function d(t){var n=0;return t.map(function(t){var e=t.cells.map(function(t){return t.map(function(t){return t+n})});return n+=t.vertexCount,e})}t.exports=function(t){return v(e(t))}},30:function(t,n,e){"use strict";function r(t){for(var n=[],e=0,r=t;e<r.length;e++)for(var o=r[e],i=0,a=o;i<a.length;i++){var u=a[i];n.push(u)}return n}function o(t){var n={drawType:"TRIANGLES",attribs:{},itemCount:0};for(var e in t){var o=t[e];if(e===s){var f=new(o.length>65535?Uint32Array:Uint16Array)(r(o));Object.assign(n,{elements:{buffer:f},itemCount:f.length})}else e===a?n.attribs[i.b]={buffer:new Float32Array(r(o))}:e===u?n.attribs[i.a]={buffer:new Float32Array(r(o))}:e===c?n.attribs[i.c]={buffer:new Float32Array(r(o))}:n.attribs[e]={buffer:new Float32Array(r(o))}}return n}n.a=o;var i=e(31),a="positions",u="normals",c="uvs",s="cells"},31:function(t,n,e){"use strict";e.d(n,"b",function(){return r}),e.d(n,"a",function(){return o}),e.d(n,"c",function(){return i});var r="position",o="normal",i="uv"},33:function(t,n,e){"use strict";function r(t,n){var e=Object(c.a)([t.HOT],function(t,n){var e=n.createShade();return t(e),e.destroy});return n&&e.react([n.HOT],function(t,n){return t.update(n)}),e}function o(t,n){var e=Object(c.a)([t.HOT],function(t,n){var e=n.createForm();return t(e),e.destroy});return n&&e.react([n.HOT],function(t,n){return t.update(n)}),e}function i(t,n){var e=Object(c.a)([t.HOT],function(t,n){var e=n.createSketch();return t(e),e.destroy});return n&&e.react([n.HOT],function(t,n){return t.update(n)}),e}function a(t,n){var e=Object(c.a)([t.HOT],function(t,n){var e=n.createDrawingLayer();return t(e),e.destroy});return n&&e.react([n.HOT],function(t,n){return t.update(n)}),e}function u(t,n){var e=Object(c.a)([t.HOT],function(t,n){var e=n.createEffectLayer();return t(e),e.destroy});return n&&e.react([n.HOT],function(t,n){return t.update(n)}),e}n.d=r,n.c=o,n.e=i,n.a=a,n.b=u;var c=e(10);e(28),e(13),e(34)},34:function(t,n,e){"use strict";e.d(n,"a",function(){return r});var r=function(t,n){return t!==n}},35:function(t,n,e){"use strict";function r(t){for(var n=[],e=1;e<arguments.length;e++)n[e-1]=arguments[e];return n.reduce(function(n,e){return n|t[e.toUpperCase()+"_BUFFER_BIT"]},0)}n.a=r},39:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),e.d(n,"canvas",function(){return a}),e.d(n,"painter",function(){return u}),e.d(n,"gl",function(){return c}),e.d(n,"canvasSize",function(){return s}),e.d(n,"settings",function(){return f});var r=e(0),o=e(11),i=e(15),a=(l=Object(o.c)(i.windowSize),l.canvas),u=l.painter,c=l.gl,s=l.canvasSize,f=Object(r.f)({clearColor:[0,0,0,1]}).reset();u.react([f.HOT],function(t,n){return t.updateDrawSettings(n)});var l},65:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),e.d(n,"position",function(){return f}),e.d(n,"rotX",function(){return l}),e.d(n,"rotY",function(){return v}),e.d(n,"rotation",function(){return d}),e.d(n,"view",function(){return p}),e.d(n,"perspectiveSettings",function(){return m}),e.d(n,"perspective",function(){return g}),e.d(n,"moveSpeed",function(){return O}),e.d(n,"lookSpeed",function(){return b}),e.d(n,"moveForward",function(){return y}),e.d(n,"moveLeft",function(){return h}),e.d(n,"mouseDrag",function(){return j}),e.d(n,"dragDeltas",function(){return x});var r=e(0),o=e(26),i=e(39),a=e(5),u=e(3),c=(e.n(u),e(15)),s=this&&this.__assign||Object.assign||function(t){for(var n,e=1,r=arguments.length;e<r;e++){n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t},f=(T=o.a(),T.position),l=T.rotX,v=T.rotY,d=T.rotation,p=T.view;f.val(u.vec3.fromValues(0,2,10));var m=(w=o.b(i.canvasSize),w.perspectiveSettings),g=w.perspective;m.updateVal(function(t){return s({},t,{fovy:.4*Math.PI})});var O=Object(r.f)(.05),b=Object(r.f)(.002),y=Object(r.a)([c.keys.COLD,O.COLD,c.tick.HOT],function(t,n,e,r){n&&((n[a.a.UP]||n[a.a.W])&&t(e),(n[a.a.DOWN]||n[a.a.S])&&t(-e))}),h=Object(r.a)([c.keys.COLD,O.COLD,c.tick.HOT],function(t,n,e){n&&((n[a.a.LEFT]||n[a.a.A])&&t(e),(n[a.a.RIGHT]||n[a.a.D])&&t(-e))}),j=Object(r.d)([c.mouse.HOT],function(t){return{x:t.drag.x,y:t.drag.y}}),x=Object(r.c)(j,function(t,n){return{x:0===t.x?t.x:n.x-t.x,y:0===t.y?t.y:n.y-t.y}}).accept(function(t){return!(!t||!t.x&&!t.y)});l.react([x.HOT,b.COLD],function(t,n,e){return t+n.y*e}),v.react([x.HOT,b.COLD],function(t,n,e){return t+n.x*e}),f.react([h.HOT,d.COLD],function(t,n,e){var r=u.vec3.fromValues(e.rotY[0],e.rotY[1],e.rotY[2]);return u.vec3.add(t,t,u.vec3.scale(r,r,-n))}),f.react([y.HOT,d.COLD],function(t,n,e){var r=u.vec3.fromValues(e.rotY[8],e.rotY[9],e.rotY[10]);return u.vec3.add(t,t,u.vec3.scale(r,r,-n))});var T,w},66:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),e.d(n,"size",function(){return u}),e.d(n,"segments",function(){return c}),e.d(n,"geometry",function(){return s});var r=e(0),o=e(29),i=e.n(o),a=e(30),u=Object(r.f)([10,10,10]),c=Object(r.f)([5,5,5]),s=Object(r.d)([u.HOT,c.HOT],function(t,n){return Object(a.a)(i()({size:t,segments:n}))})},67:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),e.d(n,"props",function(){return i}),e.d(n,"geometry",function(){return a});var r=e(32),o=e(0),i=Object(o.f)({width:10,height:10,segX:5,segY:5}),a=Object(o.d)([i.HOT],function(t){return Object(r.a)(t.width,t.height,t.segX,t.segY)})},68:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),e.d(n,"groundColor",function(){return i}),e.d(n,"groundTransform",function(){return a}),e.d(n,"lightRotation",function(){return u}),e.d(n,"lightPosition",function(){return c}),e.d(n,"lightColor",function(){return s}),e.d(n,"lightTransform",function(){return f});var r=e(0),o=e(3),i=(e.n(o),Object(r.f)([.5,.5,.5,1])),a=Object(r.e)(null,function(){var t=o.mat4.create();return o.mat4.rotateX(t,t,Math.PI/2),o.mat4.scale(t,t,[10,10,10]),t}),u=Object(r.f)(Math.PI/6),c=Object(r.f)([0,5,0]),s=Object(r.f)([1,1,1,1]),f=Object(r.d)([u.HOT,c.HOT],function(t,n){var e=o.mat4.fromTranslation(o.mat4.create(),n);return o.mat4.rotateX(e,e,t),e})},69:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),e.d(n,"geoSpec",function(){return f}),e.d(n,"lightFrag",function(){return l});var r=e(0),o=e(124),i=e.n(o),a=e(125),u=e.n(a),c=e(126),s=e.n(c),f=Object(r.f)({vert:i.a,frag:u.a}).reset(),l=Object(r.f)(s.a).reset()}},[118]);
//# sourceMappingURL=main.js.map